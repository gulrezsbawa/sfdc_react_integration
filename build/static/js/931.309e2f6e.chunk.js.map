{"version":3,"file":"static/js/931.309e2f6e.chunk.js","mappings":"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","sources":["components/Common/overrides.ts","components/Common/Footer.tsx","components/EventMainHeader/styled-components.ts","components/EventMainHeader/EventMainHeader.tsx","components/Miscellaneous/styled-components.ts","components/Miscellaneous/overrides.ts","components/Miscellaneous/SettingsToggle.tsx","components/Miscellaneous/messages.ts","components/Miscellaneous/settings.ts","components/Miscellaneous/SettingsField.tsx","components/Miscellaneous/Actions.tsx","components/Miscellaneous/FormField.tsx","components/Miscellaneous/MiscellaneousLoader.tsx","components/Miscellaneous/CustomLablesLoader.tsx","components/Miscellaneous/Miscellaneous.tsx","components/Miscellaneous/useSettingsLoader.ts","utils/useBeforeUnload.ts"],"sourcesContent":["import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const successButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n","import { useState, VFC } from 'react'\nimport { FormSpy, useForm } from 'react-final-form'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { successButtonOverrides } from './overrides'\nimport { FooterContainer, FooterButton } from './styled-components'\n\nconst modalLabels = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Your changes will be lost.',\n    description: 'Modal heading',\n  },\n  modalMessage: {\n    defaultMessage: 'Keep changes?',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Keep',\n    description: 'Button label',\n  },\n})\n\nexport const Footer: VFC = () => {\n  const { formatMessage } = useIntl()\n  const { reset } = useForm()\n\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const handleDiscard = () => setShowConfirmation(true)\n\n  const handleDialogClose = () => setShowConfirmation(false)\n\n  const handleFormReset = () => {\n    setShowConfirmation(false)\n    reset()\n  }\n\n  return (\n    <>\n      {showConfirmation && (\n        <ConfirmationDialog\n          heading={formatMessage(modalLabels.modalHeader)}\n          message={formatMessage(modalLabels.modalMessage)}\n          cancelLabel={formatMessage(modalLabels.cancelButtonLabel)}\n          successLabel={formatMessage(modalLabels.successButtonLabel)}\n          onClose={handleDialogClose}\n          onCancel={handleFormReset}\n          onSuccess={handleDialogClose}\n        />\n      )}\n      <FormSpy\n        subscription={{\n          validating: true,\n          submitting: true,\n          dirty: true,\n        }}\n      >\n        {({ validating, submitting, dirty }) =>\n          dirty && (\n            <FooterContainer>\n              <FooterButton\n                type=\"button\"\n                kind={KIND.tertiary}\n                onClick={() => handleDiscard()}\n                data-pendo=\"settings/discard-changes\"\n              >\n                <FormattedMessage\n                  defaultMessage=\"Discard Changes\"\n                  description=\"Button label\"\n                />\n              </FooterButton>\n              <FooterButton\n                type=\"submit\"\n                disabled={submitting || validating}\n                overrides={successButtonOverrides}\n                data-pendo=\"settings/save-changes\"\n              >\n                <FormattedMessage\n                  defaultMessage=\"Save Changes\"\n                  description=\"Button label\"\n                />\n              </FooterButton>\n            </FooterContainer>\n          )\n        }\n      </FormSpy>\n    </>\n  )\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\n\nexport const Root = styled('div', ({ $theme: { sizing, mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flexShrink: 0,\n  justifyContent: 'center',\n  marginBottom: sizing.scale100,\n  minHeight: '70px',\n  paddingLeft: sizing.scale1200,\n  paddingRight: sizing.scale600,\n  [mediaQuery.medium]: {\n    paddingLeft: sizing.scale700,\n    paddingRight: sizing.scale500,\n  },\n}))\n\nconst FlexContainer = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport const Wrapper = styled('div', ({ $theme: { colors } }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderBottomWidth: '1px',\n  borderBottomStyle: 'solid',\n  borderBottomColor: colors.mono300,\n}))\n\nexport const EventDetails = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: sizing.scale600,\n}))\n\nexport const StatusWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale400,\n}))\n\nexport const EventName = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.HeadingSmall,\n    color: colors.mono900,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  })\n)\n\nexport const LocationDetails = withStyle(\n  FlexContainer,\n  ({ $theme: { sizing } }) => ({\n    justifyContent: 'space-between',\n    paddingBottom: sizing.scale0,\n  })\n)\n\nexport const EventInfo = withStyle(FlexContainer, {})\n\nconst StyledText = styled('div', ({ $theme: { typography, colors } }) => ({\n  ...typography.font400,\n  color: colors.mono700,\n}))\n\nexport const EventDates = withStyle(StyledText, ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale600,\n}))\n\nexport const TimeIconWrapper = withStyle(FlexContainer, {\n  marginRight: '7px',\n})\n\nexport const TimeZone = withStyle(StyledText, {})\n\nexport const LogoWrapper = styled('div', {\n  display: 'flex',\n})\n\nexport const SandboxWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale300,\n  marginRight: sizing.scale600,\n  marginTop: sizing.scale700,\n}))\n\nexport const SandboxText = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Caption2,\n    backgroundColor: colors.warning50,\n    borderColor: colors.warning,\n    borderRadius: sizing.scale100,\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    fontSize: sizing.scale400,\n    paddingBottom: sizing.scale100,\n    paddingLeft: sizing.scale300,\n    paddingRight: sizing.scale300,\n    paddingTop: sizing.scale100,\n  })\n)\n","import { VFC, useMemo } from 'react'\nimport { DateTime } from 'luxon'\nimport { FormattedMessage } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { EventStatus } from 'components/Events'\nimport { formatDateRange, formatToStartOfTheDay } from 'utils/dates'\nimport { TimeZoneOutlined } from '@jifflenow/brightui/icon'\nimport { Logo } from 'components/Common/Logo'\nimport {\n  Root,\n  EventDetails,\n  LocationDetails,\n  EventName,\n  StatusWrapper,\n  TimeZone,\n  EventDates,\n  TimeIconWrapper,\n  EventInfo,\n  Wrapper,\n  LogoWrapper,\n  SandboxText,\n  SandboxWrapper,\n} from './styled-components'\n\nexport const EventMainHeader: VFC = () => {\n  const {\n    attributes: {\n      displayName,\n      filterStatus,\n      mode,\n      timeZone,\n      startDate,\n      endDate,\n      address,\n    },\n  } = useEventLocation().location!\n\n  const eventTimeZone = useMemo(\n    () => (timeZone ? DateTime.local().setZone(timeZone).offsetNameLong : ''),\n    [timeZone]\n  )\n\n  const urlPath = window.location.pathname\n  const sandboxInstance =\n    urlPath.includes('sandbox-') || urlPath.includes('staging-')\n\n  return (\n    <Wrapper>\n      <Root>\n        <EventDetails>\n          <StatusWrapper>\n            <EventStatus status={filterStatus} mode={mode} />\n          </StatusWrapper>\n          <EventName>{displayName}</EventName>\n        </EventDetails>\n        <LocationDetails>\n          <EventInfo>\n            <EventDates>\n              {`${formatDateRange(\n                formatToStartOfTheDay(startDate),\n                formatToStartOfTheDay(endDate)\n              )} | ${address}`}\n            </EventDates>\n            <TimeIconWrapper>\n              <TimeZoneOutlined />\n            </TimeIconWrapper>\n            <TimeZone>{eventTimeZone}</TimeZone>\n          </EventInfo>\n        </LocationDetails>\n      </Root>\n      <LogoWrapper>\n        {sandboxInstance && (\n          <SandboxWrapper>\n            <SandboxText>\n              <FormattedMessage\n                defaultMessage=\"You are currently using the sandbox instance.{br}Intended for use with Test Data only.\"\n                description=\"Warning text\"\n                values={{\n                  br: <br />,\n                }}\n              />\n            </SandboxText>\n          </SandboxWrapper>\n        )}\n        <Logo />\n      </LogoWrapper>\n    </Wrapper>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const Section = styled('div', ({ $theme: { sizing } }) => ({\n  overflow: 'auto',\n  marginBottom: sizing.scale1000,\n}))\n\nexport const Title = styled('div', ({ $theme: { sizing, typography } }) => ({\n  ...typography.HeadingSmall,\n  marginBottom: sizing.scale900,\n}))\n\nexport const FieldSeparator = styled('div', ({ $theme: { colors } }) => ({\n  borderBottomColor: colors.mono300,\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1px',\n}))\n\nexport const SectionTitle = styled(\n  'h4',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.Subtitle1,\n    marginBottom: sizing.scale400,\n    color: colors.mono800,\n    marginTop: sizing.scale700,\n  })\n)\n\nexport const StyledForm = styled('form', {\n  display: 'flex',\n  flexDirection: 'column',\n  height: 'calc(100vh - 86px)',\n  overflow: 'auto',\n})\n\nexport const Body = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n})\n\nexport const Container = styled(\n  'div',\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    width: '100%',\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    paddingTop: sizing.scale2400,\n    flexGrow: 1,\n    [mediaQuery.medium]: {\n      paddingLeft: '40px',\n      paddingRight: '112px',\n      paddingTop: sizing.scale800,\n    },\n  })\n)\n\nexport const FieldLabelContainer = styled('span', {})\n\nexport const FieldLabel = styled<{ $bold?: boolean }, 'span'>(\n  'span',\n  ({ $theme: { colors, typography }, $bold }) => ({\n    ...($bold ? typography.Subtitle1 : typography.Paragraph1),\n    color: colors.mono900,\n  })\n)\n\nexport const FieldToggleWrapper = styled<{ $error: boolean }, 'div'>(\n  'div',\n  ({ $error, $theme: { sizing } }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingTop: $error ? sizing.scale100 : sizing.scale650,\n    paddingBottom: sizing.scale650,\n  })\n)\n\nexport const GenericError = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.LabelSmall,\n    color: colors.negative700,\n    marginTop: sizing.scale100,\n  })\n)\n\nexport const ToggleContainer = styled('div', ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale400,\n  marginLeft: sizing.scale400,\n}))\n\nexport const InfoTooltipContainer = styled(\n  'span',\n  ({ $theme: { sizing } }) => ({\n    verticalAlign: 'middle',\n    display: 'inline-block',\n    marginLeft: sizing.scale100,\n  })\n)\n\nexport const SettingsFieldWrapper = styled<{ customLabel: boolean }, 'div'>(\n  'div',\n  ({ customLabel }) => ({\n    width: customLabel ? '280px' : '100%',\n  })\n)\n\nexport const FormControlStyled = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale500,\n  })\n)\n","import { InputOverrides } from '@jifflenow/brightui/input'\nimport { PopoverOverrides } from '@jifflenow/brightui/popover'\nimport { IconOverrides } from '@jifflenow/brightui/icon'\n\nexport const overviewTooltipOverride: PopoverOverrides = {\n  Inner: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingTop: sizing.scale500,\n      paddingLeft: sizing.scale500,\n      paddingRight: sizing.scale500,\n      paddingBottom: sizing.scale500,\n      maxWidth: '800px',\n    }),\n  },\n}\n\nexport const InfoIconOverride: IconOverrides = {\n  Svg: {\n    style: ({ $theme: { colors } }) => ({\n      color: colors.mono600,\n    }),\n  },\n}\n\nexport const SettingFieldOverride: InputOverrides = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      width: '280px',\n      height: sizing.scale900,\n    }),\n  },\n}\n","import { ChangeEvent, VFC } from 'react'\nimport { Field } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { StatefulTooltip } from '@jifflenow/brightui/tooltip'\nimport { InfoOutlined } from '@jifflenow/brightui/icon'\nimport {\n  FieldLabel,\n  FieldLabelContainer,\n  FieldToggleWrapper,\n  InfoTooltipContainer,\n  GenericError,\n  ToggleContainer,\n} from './styled-components'\nimport { InfoIconOverride, overviewTooltipOverride } from './overrides'\nimport { InfoTooltipProps, SettingToggleProps } from './types'\n\nconst InfoTooltip: VFC<InfoTooltipProps> = ({ content }) => (\n  <StatefulTooltip\n    content={content}\n    showArrow\n    overrides={overviewTooltipOverride}\n  >\n    <InfoTooltipContainer>\n      <InfoOutlined size={16} overrides={InfoIconOverride} />\n    </InfoTooltipContainer>\n  </StatefulTooltip>\n)\n\nconst positive = {\n  on: 'true',\n  off: 'false',\n}\n\nconst negative = {\n  on: 'false',\n  off: 'true',\n}\n\nexport const SettingsToggle: VFC<SettingToggleProps> = ({\n  label,\n  name,\n  children,\n  bold,\n  infoTooltip,\n  disabled,\n  inverted,\n}) => {\n  const { on, off } = inverted ? negative : positive\n\n  return (\n    <Field<string>\n      name={name}\n      render={({\n        input: { value, onChange },\n        meta: { error, submitError },\n      }) => (\n        <>\n          {(submitError || error) && (\n            <GenericError>{submitError || error}</GenericError>\n          )}\n          <FieldToggleWrapper $error={submitError || error}>\n            <FieldLabelContainer>\n              <FieldLabel $bold={bold}>{label}</FieldLabel>\n              {infoTooltip ? <InfoTooltip content={infoTooltip} /> : null}\n            </FieldLabelContainer>\n\n            <ToggleContainer>\n              <Toggle\n                name={name}\n                ariaLabel={label}\n                checked={value === on}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  onChange(e.target.checked ? on : off)\n                }\n                disabled={disabled}\n              />\n            </ToggleContainer>\n          </FieldToggleWrapper>\n          {value === on && children}\n        </>\n      )}\n    />\n  )\n}\n","import { defineMessages } from 'react-intl'\n\nexport const messages = defineMessages({\n  flagMeetingsAsNeedAttention: {\n    defaultMessage: \"Flag meetings as 'Needs Attention'\",\n    description: 'Section title',\n  },\n  messageForNeedAttentionSecondaryConfig: {\n    defaultMessage:\n      \"Choose the criteria for flagging a meeting as 'needs attention':\",\n    description: 'Section title',\n  },\n  meetingIsRescheduled: {\n    defaultMessage: 'Meeting is rescheduled',\n    description: 'Section title',\n  },\n  meetingDoesNotHaveAnyInternalAttendeeAsParticipant: {\n    defaultMessage: 'Meeting does not have an internal attendee as participant',\n    description: 'Section title',\n  },\n  anInternalAttendeeNeedsToBeEndorsed: {\n    defaultMessage: 'An internal attendee needs to be endorsed',\n    description: 'Section title',\n  },\n  internalAttendeeDeclinedTheirMeetingInvite: {\n    defaultMessage: 'An internal attendee declined his/her meeting invite',\n    description: 'Section title',\n  },\n  internalAttendeeHasNotYetAcceptedTheirMeetingInvite: {\n    defaultMessage: \"An internal attendee's invite is pending\",\n    description: 'Section title',\n  },\n  meetingConflictWithExternalBlock: {\n    defaultMessage: 'Meeting conflicts with an external block',\n    description: 'Section title',\n  },\n  allMeetingHostsDeclinedMeetingInvite: {\n    defaultMessage: 'All meeting hosts have declined meeting invite',\n    description: 'Section title',\n  },\n  noneMeetingHostAcceptedMeetingInvite: {\n    defaultMessage: 'None of the meeting hosts have accepted the invite',\n    description: 'Section title',\n  },\n  noExternalAttendeeFlagging: {\n    defaultMessage:\n      'Meeting does not have an external attendees as participant',\n    description: 'Section title',\n  },\n  allExternalAttendeeDeclineFlagging: {\n    defaultMessage:\n      'All external attendees have declined their meeting invites',\n    description: 'Section title',\n  },\n  externalAttendeeInvitePendingFlagging: {\n    defaultMessage: \"An external attendee's invite is pending\",\n    description: 'Section title',\n  },\n  meetingNeedsOnsiteLocationAssigned: {\n    defaultMessage: 'Meetings needs onsite location assigned',\n    description: 'Section title',\n  },\n  meetingsToBeApproved: {\n    defaultMessage: 'Meetings to be approved',\n    description: 'Section title',\n  },\n  atleastOneInternalAttendeeAccepted: {\n    defaultMessage:\n      'At least one internal attendee of “attendee role” has accepted the meeting',\n    description: 'Section title',\n  },\n  allInternalAttendeeDeclineFlagging: {\n    defaultMessage:\n      'All internal attendees have declined their meeting invites',\n    description: 'Section title',\n  },\n  meetingTypeChangeFlagging: {\n    defaultMessage: 'Meeting Type Changed',\n    description: 'Section title',\n  },\n  unregisteredAttendeeFlagging: {\n    defaultMessage: 'Meeting has an unregistered attendee as a participant',\n    description: 'Section title',\n  },\n  enableShowInMeetingForExternalAttendee: {\n    defaultMessage:\n      \"By default, External Attendees from Company level are marked 'Show as external attendee' for this event\",\n    description: 'Section title',\n  },\n  enableUserDoubleBookingDefault: {\n    defaultMessage:\n      'Users newly mapped to this event are enabled for Double Booking by default',\n    description: 'Section title',\n  },\n  enableExtUserDoubleBookingDefault: {\n    defaultMessage:\n      'External Attendees added to this event are enabled for Double Booking by default',\n    description: 'Section title',\n  },\n  sessionsCustomLabel: {\n    defaultMessage: 'Sessions Custom Label',\n    description: 'Section title',\n  },\n  boothTourCustomLabel: {\n    defaultMessage: 'Booth Tour Custom Label',\n    description: 'Section title',\n  },\n  meetingWithCustomLabel: {\n    defaultMessage: 'Meeting With Custom Label',\n    description: 'Section title',\n  },\n  nominationCustomLabel: {\n    defaultMessage: 'Nomination Custom Label',\n    description: 'Section title',\n  },\n  meetingTypeCustomLabel: {\n    defaultMessage: 'Meeting Type Custom Label',\n    description: 'Section title',\n  },\n  meetingHostCustomLabel: {\n    defaultMessage: 'Meeting Host Custom Label',\n    description: 'Section title',\n  },\n  topicCustomLabel: {\n    defaultMessage: 'Topic Custom Label',\n    description: 'Section title',\n  },\n})\n","export const getSettings = (type: string) => {\n  switch (type) {\n    case 'ExternalAttendee':\n      return [\n        {\n          name: 'enable_show_in_meeting_for_external_attendee',\n          description: 'enableShowInMeetingForExternalAttendee',\n        },\n      ]\n    case 'CustomLabels':\n      return [\n        {\n          name: 'sessions_custom_label',\n          description: 'sessionsCustomLabel',\n        },\n        {\n          name: 'booth_tour_custom_label',\n          description: 'boothTourCustomLabel',\n        },\n        {\n          name: 'meeting_with_custom_label',\n          description: 'meetingWithCustomLabel',\n        },\n        {\n          name: 'nomination_custom_label',\n          description: 'nominationCustomLabel',\n        },\n        {\n          name: 'meeting_type_custom_label',\n          description: 'meetingTypeCustomLabel',\n        },\n        {\n          name: 'meeting_host_custom_label',\n          description: 'meetingHostCustomLabel',\n        },\n        {\n          name: 'topic_custom_label',\n          description: 'topicCustomLabel',\n        },\n      ]\n    case 'DoubleBooking':\n      return [\n        {\n          name: 'enable_user_double_booking_deafult',\n          description: 'enableUserDoubleBookingDefault',\n        },\n        {\n          name: 'enable_ext_user_double_booking_default',\n          description: 'enableExtUserDoubleBookingDefault',\n        },\n      ]\n    case 'MeetingFilters':\n      return [\n        {\n          name: 'rescheduled_flagging',\n          description: 'meetingIsRescheduled',\n        },\n        {\n          name: 'no_internal_attendee_flagging',\n          description: 'meetingDoesNotHaveAnyInternalAttendeeAsParticipant',\n        },\n        {\n          name: 'endorsement_flagging',\n          description: 'anInternalAttendeeNeedsToBeEndorsed',\n        },\n        {\n          name: 'declined_invite_flagging',\n          description: 'internalAttendeeDeclinedTheirMeetingInvite',\n        },\n        {\n          name: 'not_accepted_invite_flagging',\n          description: 'internalAttendeeHasNotYetAcceptedTheirMeetingInvite',\n        },\n        {\n          name: 'conflict_with_external_block_flagging',\n          description: 'meetingConflictWithExternalBlock',\n        },\n        {\n          name: 'all_meeting_hosts_declined_flagging',\n          description: 'allMeetingHostsDeclinedMeetingInvite',\n        },\n        {\n          name: 'none_meeting_host_accepted_flagging',\n          description: 'noneMeetingHostAcceptedMeetingInvite',\n        },\n        {\n          name: 'no_external_attendee_flagging',\n          description: 'noExternalAttendeeFlagging',\n        },\n        {\n          name: 'all_external_attendee_decline_flagging',\n          description: 'allExternalAttendeeDeclineFlagging',\n        },\n        {\n          name: 'external_attendee_invite_pending_flagging',\n          description: 'externalAttendeeInvitePendingFlagging',\n        },\n        {\n          name: 'meeting_needs_onsite_location_assigned',\n          description: 'meetingNeedsOnsiteLocationAssigned',\n        },\n        {\n          name: 'meetings_to_be_approved',\n          description: 'meetingsToBeApproved',\n        },\n        {\n          name: 'atleast_one_internal_attendee_accepted',\n          description: 'atleastOneInternalAttendeeAccepted',\n        },\n        {\n          name: 'all_internal_attendee_decline_flagging',\n          description: 'allInternalAttendeeDeclineFlagging',\n        },\n        {\n          name: 'meeting_type_change_flagging',\n          description: 'meetingTypeChangeFlagging',\n        },\n        {\n          name: 'unregistered_attendee_flagging',\n          description: 'unregisteredAttendeeFlagging',\n        },\n      ]\n    default:\n      return []\n  }\n}\n","import { VFC } from 'react'\nimport { FieldValidator } from 'final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Input } from '@jifflenow/brightui/input'\nimport { Field } from 'ui-components/Field'\nimport { asyncValidatorReducer } from 'utils/asyncValidatorReducer'\nimport { FormControlStyled } from './styled-components'\nimport { SettingsFieldProps } from './types'\nimport { SettingFieldOverride } from './overrides'\n\nconst errors = defineMessages({\n  required: {\n    defaultMessage: 'Required',\n    description: 'Field validation error message',\n  },\n})\n\nexport const SettingsField: VFC<SettingsFieldProps> = ({ label, name }) => {\n  const { formatMessage } = useIntl()\n\n  const required: FieldValidator<string> = async value =>\n    value?.trim() ? undefined : formatMessage(errors.required)\n\n  const validate = asyncValidatorReducer([required])\n\n  return (\n    <Field<string>\n      name={name}\n      type=\"text\"\n      formatOnBlur\n      format={value => value?.trim() ?? value}\n      validate={validate}\n      render={({ input, meta: { error, touched, dirty } }) => (\n        <FormControlStyled label={label} error={(dirty || touched) && error}>\n          <Input\n            {...input}\n            autoComplete=\"off\"\n            overrides={SettingFieldOverride}\n          />\n        </FormControlStyled>\n      )}\n    />\n  )\n}\n","import { VFC } from 'react'\nimport { useIntl } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { getSettings } from './settings'\nimport { SettingsToggle } from './SettingsToggle'\nimport { FieldSeparator, SettingsFieldWrapper } from './styled-components'\nimport { Setting, MiscellaneousType } from './types'\nimport { messages } from './messages'\nimport { SettingsField } from './SettingsField'\n\nexport const Actions: VFC<{ type: MiscellaneousType }> = ({ type }) => {\n  const { formatMessage } = useIntl()\n  const { configs } = useEventLocation()\n  const { endorsements_enabled } = configs!\n\n  return (\n    <SettingsFieldWrapper customLabel={type === 'CustomLabels'}>\n      {getSettings(type)\n        .filter(i =>\n          endorsements_enabled === 'true'\n            ? i.name\n            : i.name !== 'endorsement_flagging'\n        )\n        .map((item: Setting) => (\n          <div key={item.name}>\n            {type === 'CustomLabels' ? (\n              <SettingsField\n                label={formatMessage(\n                  messages[item.description as keyof typeof messages]\n                )}\n                name={item.name}\n              />\n            ) : (\n              <>\n                <SettingsToggle\n                  label={formatMessage(\n                    messages[item.description as keyof typeof messages]\n                  )}\n                  name={item.name}\n                />\n                <FieldSeparator />\n              </>\n            )}\n          </div>\n        ))}\n    </SettingsFieldWrapper>\n  )\n}\n","import { VFC } from 'react'\nimport { useIntl } from 'react-intl'\nimport { SettingsToggle } from './SettingsToggle'\nimport { FieldSeparator, Section, SectionTitle } from './styled-components'\nimport { FormFieldProps } from './types'\nimport { messages } from './messages'\nimport { Actions } from './Actions'\n\nexport const FormField: VFC<FormFieldProps> = ({ type }) => {\n  const { formatMessage } = useIntl()\n\n  return type === 'MeetingFilters' ? (\n    <Section>\n      <SettingsToggle\n        label={formatMessage(messages.flagMeetingsAsNeedAttention)}\n        name=\"flagging\"\n      >\n        <FieldSeparator />\n        <SectionTitle>\n          {formatMessage(messages.messageForNeedAttentionSecondaryConfig)}\n        </SectionTitle>\n        <Actions type={type} />\n      </SettingsToggle>\n    </Section>\n  ) : (\n    <Section>\n      <Actions type={type} />\n    </Section>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\nimport { VFC } from 'react'\n\nconst Shape: VFC<{ y: number }> = ({ y }) => (\n  <>\n    <rect y={y} x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n    <rect y={5 + y} x=\"0\" width=\"230\" height=\"13\" />\n    <rect y={y + 49} x=\"0\" width=\"1000\" height=\"1\" />\n  </>\n)\n\nexport const MiscellaneousLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"610\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"12\" x=\"0\" width=\"350\" height=\"32\" />\n      <Shape y={100} />\n      <Shape y={173} />\n      <Shape y={242} />\n    </ContentLoader>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\nimport { VFC } from 'react'\n\nconst Shape: VFC<{ y: number }> = ({ y }) => (\n  <>\n    <rect y={y} x=\"0\" width=\"160\" height=\"18\" />\n    <rect y={y + 24} x=\"0\" width=\"340\" height=\"32\" />\n  </>\n)\n\nexport const CustomLablesLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"610\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"12\" x=\"0\" width=\"140\" height=\"32\" />\n      {[80, 154, 228, 302, 376, 450, 524].map(y => (\n        <Shape key={y} y={y} />\n      ))}\n    </ContentLoader>\n  )\n}\n","import { useEffect, useMemo, useState, VFC } from 'react'\nimport { Form as FinalForm } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Prompt } from 'react-router-dom'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { bulkFetchLocationConfigsByName_bulkFetchLocationConfigsByName_configValue_CustomNameValue as CustomNameValue } from 'gql/types/bulkFetchLocationConfigsByName'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport {\n  mutateBulkUpsertLocationConfigsSettings,\n  useApolloClient,\n  useEventConfigQuery,\n} from 'gql'\nimport { Config, FORM_ERROR } from 'final-form'\nimport {\n  bulkUpsertLocationConfigsVariables,\n  bulkUpsertLocationConfigs_bulkUpsertLocationConfigs_locationConfigs_configValue_CustomNameValue,\n} from 'gql/types/bulkUpsertLocationConfigs'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { BulkLocationConfigUpdateInput } from 'gql/types/globalTypes'\nimport { EventMainHeader } from 'components/EventMainHeader'\nimport { Footer } from '../Common/Footer'\nimport { useSettingsLoader } from './useSettingsLoader'\nimport { Title, Body, StyledForm, Container } from './styled-components'\nimport { FormField } from './FormField'\nimport {\n  FormProps,\n  FormValues,\n  MiscellaneousProps,\n  MiscellaneousType,\n} from './types'\nimport { getSettings } from './settings'\nimport { MiscellaneousLoader } from './MiscellaneousLoader'\nimport { CustomLablesLoader } from './CustomLablesLoader'\n\nconst LoadingShimmer: VFC<{ type: MiscellaneousType }> = ({ type }) => (\n  <Body>\n    <Container>\n      {type === 'CustomLabels' ? (\n        <CustomLablesLoader />\n      ) : (\n        <MiscellaneousLoader />\n      )}\n    </Container>\n  </Body>\n)\n\nconst messages = defineMessages({\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {option} other {options}} failed to save',\n    description: 'Error message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  fieldErrorMessage: {\n    defaultMessage: 'Error saving changes',\n    description: 'field error message',\n  },\n})\n\nconst miscTypes = defineMessages<MiscellaneousType>({\n  ExternalAttendee: {\n    defaultMessage: 'External Attendee Setting',\n    description: 'Section title',\n  },\n  MeetingFilters: {\n    defaultMessage: 'Meeting Needs Attention Filter',\n    description: 'Section title',\n  },\n  DoubleBooking: {\n    defaultMessage: 'Double Booking Setting',\n    description: 'Section title',\n  },\n  CustomLabels: {\n    defaultMessage: 'Custom Labels',\n    description: 'Section title',\n  },\n})\n\nconst Form: VFC<FormProps> = ({ handleSubmit, dirty, loading, type }) => {\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n  const showLoading = useSettingsLoader(loading)\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      {showLoading ? (\n        <LoadingShimmer type={type} />\n      ) : (\n        <Body>\n          <Container>\n            <Title>{formatMessage(miscTypes[type])}</Title>\n            <FormField type={type} />\n          </Container>\n          <Footer />\n        </Body>\n      )}\n    </StyledForm>\n  )\n}\n\nexport const Miscellaneous: VFC<MiscellaneousProps> = ({ type }) => {\n  const [showLoader, setShowLoader] = useState(false)\n  const client = useApolloClient()\n  const { formatMessage } = useIntl()\n\n  const { id: currentLocationUuid } = useEventLocation().location!\n\n  const {\n    bulkFetchLocationConfigsByName = [],\n    refetch: refetchGetEngagementTypeSettings,\n    loading,\n  } = useEventConfigQuery({\n    variables: {\n      names: [\n        ...(type === 'MeetingFilters' ? ['flagging'] : []),\n        ...getSettings(type).map(item => item.name),\n      ],\n    },\n    context: {\n      headers: { 'X-Location-Uuid': currentLocationUuid },\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const initialValues = useMemo(\n    () =>\n      bulkFetchLocationConfigsByName.reduce(\n        (acc, { configName, configValue }) => ({\n          ...acc,\n          [configName]: (configValue as CustomNameValue).value,\n        }),\n        {}\n      ),\n    [bulkFetchLocationConfigsByName]\n  )\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change }\n  ) => {\n    try {\n      setShowLoader(true)\n\n      const configsToUpdate = bulkFetchLocationConfigsByName.reduce<\n        BulkLocationConfigUpdateInput[]\n      >((acc, { configName, configValue }) => {\n        const {\n          display_name,\n          value,\n        } = configValue as bulkUpsertLocationConfigs_bulkUpsertLocationConfigs_locationConfigs_configValue_CustomNameValue\n\n        const data: BulkLocationConfigUpdateInput[] =\n          value !== values[configName as keyof FormValues]\n            ? [\n                ...acc,\n                {\n                  configName,\n                  configValue: {\n                    display_name,\n                    value: values[configName as keyof FormValues],\n                  },\n                },\n              ]\n            : acc\n\n        return data\n      }, [])\n\n      const variables: bulkUpsertLocationConfigsVariables = {\n        configsToUpdate,\n      }\n      const { failureCount, totalCount, locationConfigs, successCount } = (\n        await mutateBulkUpsertLocationConfigsSettings(client, {\n          variables,\n        })\n      ).data!.bulkUpsertLocationConfigs\n      setShowLoader(false)\n      if (failureCount) {\n        showErrorToast(\n          formatMessage(messages.updateError, { totalCount, failureCount })\n        )\n        locationConfigs.forEach(\n          ({ success, configName, configValue }) =>\n            !success &&\n            change(\n              configName as keyof FormValues,\n              (configValue as bulkUpsertLocationConfigs_bulkUpsertLocationConfigs_locationConfigs_configValue_CustomNameValue)\n                .value ?? undefined\n            )\n        )\n        const errors = locationConfigs.reduce(\n          (acc, { success, configName }) =>\n            success\n              ? acc\n              : {\n                  ...acc,\n                  [configName]: formatMessage(messages.fieldErrorMessage),\n                },\n          {}\n        )\n        if (successCount) {\n          refetchGetEngagementTypeSettings()\n        }\n\n        return errors\n      }\n      showSuccessToast(formatMessage(messages.successMessage))\n      refetchGetEngagementTypeSettings()\n\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <EventMainHeader />\n      <FinalForm<FormValues>\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        render={props => <Form {...props} loading={loading} type={type} />}\n      />\n    </>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nexport const useSettingsLoader = (loading: boolean) => {\n  const shown = useRef(false)\n\n  useEffect(() => {\n    if (!loading && !shown.current) {\n      shown.current = true\n    }\n  }, [loading])\n\n  return loading && !shown.current\n}\n","import { useState, useEffect } from 'react'\n\nexport const useBeforeUnload = () => {\n  const [showBeforeUnloadPopup, setShowBeforeUnloadPopup] = useState(false)\n\n  useEffect(() => {\n    const handler = (event: BeforeUnloadEvent) => {\n      event.preventDefault()\n      event.returnValue = ''\n    }\n\n    if (showBeforeUnloadPopup) {\n      window.addEventListener('beforeunload', handler)\n    } else {\n      window.removeEventListener('beforeunload', handler)\n    }\n\n    return () => {\n      window.removeEventListener('beforeunload', handler)\n    }\n  }, [showBeforeUnloadPopup])\n\n  return setShowBeforeUnloadPopup\n}\n"],"names":["successButtonOverrides","BaseButton","style","marginLeft","$theme","sizing","scale600","modalLabels","defineMessages","modalHeader","defaultMessage","modalMessage","cancelButtonLabel","successButtonLabel","Footer","formatMessage","useIntl","reset","useForm","useState","showConfirmation","setShowConfirmation","handleDialogClose","ConfirmationDialog","heading","message","cancelLabel","successLabel","onClose","onCancel","onSuccess","subscription","validating","submitting","dirty","type","kind","KIND","onClick","disabled","overrides","Root","styled","mediaQuery","display","flexDirection","flexShrink","justifyContent","marginBottom","scale100","minHeight","paddingLeft","scale1200","paddingRight","medium","scale700","scale500","FlexContainer","alignItems","Wrapper","borderBottomWidth","borderBottomStyle","borderBottomColor","colors","mono300","EventDetails","marginTop","StatusWrapper","marginRight","scale400","EventName","typography","HeadingSmall","color","mono900","textOverflow","whiteSpace","LocationDetails","withStyle","paddingBottom","scale0","EventInfo","StyledText","font400","mono700","EventDates","TimeIconWrapper","TimeZone","LogoWrapper","SandboxWrapper","scale300","SandboxText","Caption2","backgroundColor","warning50","borderColor","warning","borderRadius","borderStyle","borderWidth","fontSize","paddingTop","EventMainHeader","useEventLocation","location","attributes","displayName","filterStatus","mode","timeZone","startDate","endDate","address","eventTimeZone","useMemo","DateTime","setZone","offsetNameLong","urlPath","window","pathname","sandboxInstance","includes","status","formatDateRange","formatToStartOfTheDay","values","br","Logo","Section","overflow","scale1000","Title","scale900","FieldSeparator","SectionTitle","Subtitle1","mono800","StyledForm","height","Body","flexGrow","Container","width","scale2400","scale800","FieldLabelContainer","FieldLabel","$bold","Paragraph1","FieldToggleWrapper","$error","scale650","GenericError","LabelSmall","negative700","ToggleContainer","InfoTooltipContainer","verticalAlign","SettingsFieldWrapper","customLabel","FormControlStyled","FormControl","overviewTooltipOverride","Inner","maxWidth","InfoIconOverride","Svg","mono600","SettingFieldOverride","InfoTooltip","content","showArrow","size","positive","on","off","negative","SettingsToggle","label","name","children","bold","infoTooltip","inverted","render","input","value","onChange","meta","error","submitError","ariaLabel","checked","e","target","messages","flagMeetingsAsNeedAttention","messageForNeedAttentionSecondaryConfig","meetingIsRescheduled","meetingDoesNotHaveAnyInternalAttendeeAsParticipant","anInternalAttendeeNeedsToBeEndorsed","internalAttendeeDeclinedTheirMeetingInvite","internalAttendeeHasNotYetAcceptedTheirMeetingInvite","meetingConflictWithExternalBlock","allMeetingHostsDeclinedMeetingInvite","noneMeetingHostAcceptedMeetingInvite","noExternalAttendeeFlagging","allExternalAttendeeDeclineFlagging","externalAttendeeInvitePendingFlagging","meetingNeedsOnsiteLocationAssigned","meetingsToBeApproved","atleastOneInternalAttendeeAccepted","allInternalAttendeeDeclineFlagging","meetingTypeChangeFlagging","unregisteredAttendeeFlagging","enableShowInMeetingForExternalAttendee","enableUserDoubleBookingDefault","enableExtUserDoubleBookingDefault","sessionsCustomLabel","boothTourCustomLabel","meetingWithCustomLabel","nominationCustomLabel","meetingTypeCustomLabel","meetingHostCustomLabel","topicCustomLabel","getSettings","description","errors","required","SettingsField","trim","undefined","validate","asyncValidatorReducer","Field","formatOnBlur","format","touched","autoComplete","Actions","endorsements_enabled","configs","filter","i","map","item","FormField","Shape","y","x","rx","ry","MiscellaneousLoader","useStyletron","theme","loaderOptions","speed","primaryColor","mono200","secondaryColor","viewBox","CustomLablesLoader","LoadingShimmer","promptMessage","updateError","genericError","successMessage","fieldErrorMessage","miscTypes","ExternalAttendee","MeetingFilters","DoubleBooking","CustomLabels","Form","handleSubmit","loading","unload","useBeforeUnload","showLoading","useSettingsLoader","useEffect","onSubmit","noValidate","when","Miscellaneous","showLoader","setShowLoader","client","useApolloClient","currentLocationUuid","id","useEventConfigQuery","variables","names","context","headers","fetchPolicy","onError","showErrorToast","bulkFetchLocationConfigsByName","refetchGetEngagementTypeSettings","refetch","initialValues","reduce","acc","configName","configValue","change","configsToUpdate","display_name","mutateBulkUpsertLocationConfigsSettings","data","bulkUpsertLocationConfigs","failureCount","totalCount","locationConfigs","successCount","forEach","success","showSuccessToast","FORM_ERROR","code","props","shown","useRef","current","showBeforeUnloadPopup","setShowBeforeUnloadPopup","handler","event","preventDefault","returnValue","addEventListener","removeEventListener"],"sourceRoot":""}