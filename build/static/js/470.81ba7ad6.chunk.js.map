{"version":3,"file":"static/js/470.81ba7ad6.chunk.js","mappings":"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","sources":["components/CustomFormFields/Fields/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/EngagementTypeProvider.tsx","components/EngagementTypes/EngagementTypeEdit/common/GenerateRedirectLink.tsx","components/EngagementTypes/EngagementTypeEdit/common/EngagementModal.tsx","components/EngagementTypes/EngagementTypeEdit/ReasonForCancellationDialog/styled-components.tsx","components/EngagementTypes/EngagementTypeEdit/ReasonForCancellationDialog/overrides.ts","components/EngagementTypes/EngagementTypeEdit/ReasonForCancellationDialog/ReasonForCancellationDialog.tsx","components/EngagementTypes/EngagementTypeEdit/common/EngagementTypeToggle.tsx","components/EngagementTypes/EngagementTypeEdit/common/EngagementTypeToggleWithDesc.tsx","components/EngagementTypes/EngagementTypeEdit/common/EngagementTypeInput.tsx","components/EngagementTypes/EngagementTypeEdit/common/Footer.tsx","components/EngagementTypes/EngagementTypeEdit/CopySettings/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/CopySettings/overrides.ts","components/EngagementTypes/EngagementTypeEdit/CopySettings/EngagementCheckBoxField.tsx","components/EngagementTypes/EngagementTypeEdit/CopySettings/CopyEngagementType.tsx","components/EngagementTypes/EngagementTypeEdit/CopySettings/CopyEngagementTypeSettings.tsx","components/EngagementTypes/EngagementTypeEdit/CopySettings/CopySettings.tsx","components/EngagementTypes/EngagementTypeEdit/common/Header.tsx","components/EngagementTypes/EngagementTypeEdit/common/usePageTitle.tsx","components/EngagementTypes/EngagementTypeEdit/common/overrides.tsx","components/EngagementTypes/EngagementTypeEdit/common/styled-components.ts","components/EngagementTypes/EngagementTypePreferencesProvider.tsx","../../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","components/EngagementTypes/EngagementTypeEdit/Paths.ts","components/EngagementTypes/EngagementTypeEdit/LocationTypes/types.ts","components/EngagementTypes/EngagementTypeEdit/Irp/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/Irp/EnableIRPField.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/EngagementLinkField.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/GetCopiedContent.ts","components/EngagementTypes/EngagementTypeEdit/Irp/IrpUrlField.tsx","components/EngagementTypes/EngagementTypeEdit/common/TimeDurationSelect.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/SchedulingLogicField.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/overrides.ts","components/EngagementTypes/EngagementTypeEdit/Irp/MethodRequest/MethodRequestManualField.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/MethodRequest/MethodRequestMappedField.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/MethodRequest/MethodRequestUnMappedField.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/MethodRequest/MethodRequestField.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/EngagementInputField.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/EngagementTypeToggle.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/MeetNowField.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/WidgetFormFields.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/FormFields.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/IrpContentLoader.tsx","components/EngagementTypes/EngagementTypeEdit/Irp/Irp.tsx","components/EngagementTypes/EngagementTypeEdit/Notifications/Loader.tsx","components/EngagementTypes/EngagementTypeEdit/Notifications/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/Notifications/overrides.ts","components/EngagementTypes/EngagementTypeEdit/Notifications/ActionsBlocks.tsx","components/EngagementTypes/EngagementTypeEdit/Notifications/Sections.tsx","components/EngagementTypes/EngagementTypeEdit/Notifications/utils.ts","components/EngagementTypes/EngagementTypeEdit/Notifications/Survey.tsx","components/EngagementTypes/EngagementTypeEdit/Notifications/NotificationsForm.tsx","components/EngagementTypes/EngagementTypeEdit/Notifications/Notifications.tsx","components/EngagementTypes/EngagementTypeEdit/NotificationsDetails/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/NotificationsDetails/NotificationsDetails.tsx","components/EngagementTypes/EngagementTypeEdit/Forms/common/useFormsDirty.ts","components/EngagementTypes/EngagementTypeEdit/Forms/common/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/Forms/common/FormBuilder.tsx","components/EngagementTypes/EngagementTypeEdit/Forms/OutboundMeeting/OutboundMeeting.tsx","components/EngagementTypes/EngagementTypeEdit/Forms/InboundMeeting/InboundMeeting.tsx","components/EngagementTypes/EngagementTypeEdit/Forms/Survey/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/Forms/Survey/overrides.ts","components/EngagementTypes/EngagementTypeEdit/Forms/Survey/Survey.tsx","components/EngagementTypes/common/styled-components.ts","components/EngagementTypes/common/RolesField.tsx","components/EngagementTypes/common/EngagementNameField.tsx","components/EngagementTypes/common/overrides.tsx","components/EngagementTypes/common/EngagementDescriptionField.tsx","components/EngagementTypes/common/DisplayOrderField.tsx","components/EngagementTypes/EngagementTypeEdit/EngagementBasics/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/EngagementBasics/EngagementTemplateField.tsx","components/EngagementTypes/EngagementTypeEdit/EngagementBasics/EngagementBasics.tsx","components/EngagementTypes/EngagementTypeEdit/common/useSettingsLoader.ts","components/EngagementTypes/EngagementTypeEdit/common/utils.ts","components/EngagementTypes/EngagementTypeEdit/TopicOptions/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/TopicOptions/FormFields.tsx","components/EngagementTypes/EngagementTypeEdit/TopicOptions/TopicOptionsLoader.tsx","components/EngagementTypes/EngagementTypeEdit/TopicOptions/TopicOptions.tsx","components/EngagementTypes/EngagementTypeEdit/common/filterEngagementSettings.ts","components/EngagementTypes/EngagementTypeEdit/ApprovalProcess/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/ApprovalProcess/overrides.tsx","components/EngagementTypes/EngagementTypeEdit/ApprovalProcess/FormFields.tsx","components/EngagementTypes/EngagementTypeEdit/ApprovalProcess/ApprovalProcessContentLoader.tsx","components/EngagementTypes/EngagementTypeEdit/ApprovalProcess/ApprovalProcess.tsx","components/EngagementTypes/EngagementTypeEdit/LocationTypes/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/LocationTypes/TimeIncrement.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/types.ts","components/EngagementTypes/EngagementTypeEdit/LocationTypes/OnSiteFormField.tsx","components/EngagementTypes/EngagementTypeEdit/LocationTypes/EngagementInputField.tsx","components/EngagementTypes/EngagementTypeEdit/LocationTypes/OffSitesFormField.tsx","components/EngagementTypes/EngagementTypeEdit/LocationTypes/BoothTour/BoothTourSettings.tsx","components/EngagementTypes/EngagementTypeEdit/LocationTypes/BoothTour/BoothTour.tsx","components/EngagementTypes/EngagementTypeEdit/LocationTypes/DefaultLocationField.tsx","components/EngagementTypes/EngagementTypeEdit/LocationTypes/FormFields.tsx","components/EngagementTypes/EngagementTypeEdit/LocationTypes/LocationTypesContentLoader.tsx","components/EngagementTypes/EngagementTypeEdit/LocationTypes/LocationTypes.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/common/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/common/overrides.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/common/ConfirmationDialog.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/overrides.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/common/CopyModalFooter.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/common/DateTimeConversions.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Availability/CopyDaySlotsTo.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Availability/overrides.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Availability/CopyAvailability.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Availability/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Availability/AvailabilityDay.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Availability/Availability.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Availability/transform.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Footer.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/AvailabilitySelect.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/CopyRoomAvailability/CopyDaySlotsToRoom.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/CopyRoomAvailability/CopyRoomAvailability.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/transformExceptionDates.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/AddEditException/overrides.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/AddEditException/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/AddEditException/ExceptionModalBody.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/AddEditException/Footer.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/AddEditException/AddEditException.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/AddExceptionButton.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/ListExceptions/groupExceptionDates.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/ListExceptions/overrides.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/ListExceptions/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/ListExceptions/ListExceptions.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/Exceptions/Exceptions.tsx","components/EngagementTypes/EngagementTypeEdit/SetAvailability/SetAvailability.tsx","components/EngagementTypes/EngagementTypeEdit/common/EngagementSettingErrors.ts","components/EngagementTypes/EngagementTypeEdit/Participants/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/Participants/ParticipantsLoader.tsx","components/EngagementTypes/EngagementTypeEdit/Participants/InternalAttendee.tsx","components/EngagementTypes/EngagementTypeEdit/Participants/ExternalAttendee.tsx","components/EngagementTypes/EngagementTypeEdit/Participants/MeetingHost.tsx","components/EngagementTypes/EngagementTypeEdit/Participants/overrides.ts","components/EngagementTypes/EngagementTypeEdit/Participants/AttendeeMode.tsx","components/EngagementTypes/EngagementTypeEdit/Participants/OptionalParticipant.tsx","components/EngagementTypes/EngagementTypeEdit/Participants/FormField.tsx","components/EngagementTypes/EngagementTypeEdit/Participants/Participants.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/AdvancedSettingsLoader.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/AreYouAttendingToggle.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/AdvancedSettingsTextArea.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/overrides.ts","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/CommentsListField.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/CopyNotifications.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/AttachDocument.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/VideoConference.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/InstructionsModal.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/ChangeMeetingType.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/FormField.tsx","components/EngagementTypes/EngagementTypeEdit/AdvancedSettings/AdvancedSettings.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/Loader.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/CsmOnly/MeetingBreakDurationSelect.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/MeetingSummitHookSelect.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/BreakDurationInput.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/Mappings.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/GuidedTour/DemoSubTopicsFields.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/GuidedTour/DemoTopicField.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/GuidedTour/FieldLoader.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/GuidedTour/CustomFields.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/GuidedTour/GuidedTour.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/ManualScheduling.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/FormField.tsx","components/EngagementTypes/EngagementTypeEdit/CsmOnly/CsmOnly.tsx","components/EngagementTypes/EngagementTypeEdit/LinkSettings/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/LinkSettings/SchedulingLogicField.tsx","components/EngagementTypes/EngagementTypeEdit/LinkSettings/overrides.ts","components/EngagementTypes/EngagementTypeEdit/LinkSettings/FormFields.tsx","components/EngagementTypes/EngagementTypeEdit/LinkSettings/LinkSettingsContentLoader.tsx","components/EngagementTypes/EngagementTypeEdit/LinkSettings/LinkSettings.tsx","components/EngagementTypes/EngagementTypeEdit/Surveys/SurveyStatusField.tsx","components/EngagementTypes/EngagementTypeEdit/Surveys/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/Surveys/overrides.ts","components/EngagementTypes/EngagementTypeEdit/Surveys/SelectField.tsx","components/EngagementTypes/EngagementTypeEdit/Surveys/RolesAndPermissionSettings.tsx","components/EngagementTypes/EngagementTypeEdit/Surveys/SurveyTab.tsx","components/EngagementTypes/EngagementTypeEdit/Surveys/Form.tsx","components/EngagementTypes/EngagementTypeEdit/Surveys/SurveyFormField.tsx","components/EngagementTypes/EngagementTypeEdit/Surveys/Surveys.tsx","components/EngagementTypes/EngagementTypeEdit/Routes.tsx","components/EngagementTypes/EngagementTypeEdit/LayoutsV1.tsx","components/EngagementTypes/EngagementTypeEdit/LayoutsV2.ts","components/EngagementTypes/EngagementTypeEdit/EngagementTypeEditDrawer.tsx","components/EngagementTypes/EngagementTypeEdit/styled-components.ts","components/EngagementTypes/EngagementTypeEdit/Nav.tsx","components/EngagementTypes/EngagementTypeEdit/EngagementTypeEdit.tsx","components/EngagementTypes/CreateEngagementDrawer/Form/Header.tsx","components/EngagementTypes/CreateEngagementDrawer/Form/overrides.tsx","components/EngagementTypes/CreateEngagementDrawer/Form/styled-components.ts","components/EngagementTypes/CreateEngagementDrawer/Form/Footer.tsx","components/EngagementTypes/EngagementTypesList/List/constants.ts","components/EngagementTypes/CreateEngagementDrawer/Form/EngagementTemplates/styled-components.ts","components/EngagementTypes/CreateEngagementDrawer/Form/EngagementTemplates/overrides.tsx","components/EngagementTypes/CreateEngagementDrawer/Form/EngagementTemplates/Error.tsx","components/EngagementTypes/CreateEngagementDrawer/Form/EngagementTemplates/LoadingShimmer.tsx","components/EngagementTypes/CreateEngagementDrawer/Form/EngagementTemplates/EngagementTemplates.tsx","components/EngagementTypes/CreateEngagementDrawer/Form/FormError.tsx","components/EngagementTypes/CreateEngagementDrawer/Form/Form.tsx","components/EngagementTypes/CreateEngagementDrawer/CreateSuccess/styled-components.ts","components/EngagementTypes/CreateEngagementDrawer/CreateSuccess/overrides.tsx","components/EngagementTypes/CreateEngagementDrawer/CreateSuccess/CreateSuccess.tsx","components/EngagementTypes/CreateEngagementDrawer/CreateEngagementDrawer.tsx","components/EngagementTypes/EngagementTypesList/NewEngagementButton.tsx","components/EngagementTypes/EngagementTypesList/List/NoRowsAndError.tsx","components/EngagementTypes/EngagementTypesList/DeleteConfirmationDialog.tsx","components/EngagementTypes/EngagementTypesList/List/ActionCell.tsx","components/EngagementTypes/EngagementTypesList/List/overrides.ts","components/EngagementTypes/EngagementTypesList/List/StatusCell.tsx","components/EngagementTypes/EngagementTypesList/List/DisplayOrderCell.tsx","components/EngagementTypes/EngagementTypesList/List/EngagementTemplate.tsx","components/EngagementTypes/EngagementTypesList/List/List.tsx","components/EngagementTypes/EngagementTypesList/Header/styled-components.ts","components/EngagementTypes/EngagementTypesList/Header/Header.tsx","components/EngagementTypes/EngagementTypesList/Filters/UsersFilter.tsx","components/EngagementTypes/EngagementTypesList/Filters/TemplatesFilter.tsx","components/EngagementTypes/EngagementTypesList/Filters/Filters.tsx","components/EngagementTypes/EngagementTypesList/BulkActions/modalOverrides.ts","components/EngagementTypes/EngagementTypesList/BulkActions/styled-components.ts","components/EngagementTypes/EngagementTypesList/BulkActions/Message.tsx","components/EngagementTypes/EngagementTypesList/BulkActions/MakeActiveButton.tsx","components/EngagementTypes/EngagementTypesList/BulkActions/MakeInactiveButton.tsx","components/EngagementTypes/EngagementTypesList/BulkActions/DeleteButton.tsx","components/EngagementTypes/EngagementTypesList/BulkActions/BulkActions.tsx","components/EngagementTypes/EngagementTypesList/styled-components.ts","components/EngagementTypes/EngagementTypesList/EngagementListTitle.tsx","components/EngagementTypes/EngagementTypesList/EngagementTypesList.tsx","components/EngagementTypes/EngagementTypes.tsx","components/EventMainHeader/styled-components.ts","components/EventMainHeader/EventMainHeader.tsx","queries/hooks.ts","ui-components/CopyEmbedSourceCode/styled-components.ts","ui-components/CopyEmbedSourceCode/overrides.ts","ui-components/CopyEmbedSourceCode/CopyEmbedSourceCode.tsx","ui-components/RangeTimeSlot/timePickerOverrides.ts","ui-components/RangeTimeSlot/styled-components.ts","ui-components/RangeTimeSlot/buttonOverrides.ts","ui-components/RangeTimeSlot/RangeTimeSlot.tsx","ui-components/icons/SuccessIcon.tsx","utils/messages.ts","utils/useBeforeUnload.ts","utils/usePageSizes.ts"],"sourcesContent":["import { styled } from '@jifflenow/brightui'\nimport { FormControl as Control } from '@jifflenow/brightui/form-control'\n\nexport const FormControl = styled(Control, ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale700,\n}))\n\nexport const StyledHeader = styled<{ $isHidden?: boolean }, 'header'>(\n  'header',\n  ({ $theme: { typography, sizing, breakpoints }, $isHidden }) => ({\n    marginTop: 0,\n    display: $isHidden ? 'none' : 'block',\n    marginBottom: sizing.scale800,\n    maxWidth: '282px',\n    ...typography.font350,\n    fontWeight: 400,\n    [breakpoints.medium]: {\n      marginBottom: sizing.scale600,\n      flexBasis: '100%',\n    },\n  })\n)\n\nexport const Hr = styled<{ $isHidden?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { colors, sizing }, $isHidden }) => ({\n    flexBasis: '100%',\n    borderBottomColor: colors.mono400,\n    borderBottomStyle: 'solid',\n    borderBottomWidth: '1px',\n    marginTop: sizing.scale600,\n    marginBottom: sizing.scale600,\n    display: $isHidden ? 'none' : 'block',\n  })\n)\n\nexport const StyledPageBreak = styled<{ $isHidden?: boolean }, 'header'>(\n  'header',\n  ({ $theme: { typography, sizing, breakpoints }, $isHidden }) => ({\n    marginTop: 0,\n    marginBottom: sizing.scale800,\n    ...typography.font650,\n    display: $isHidden ? 'none' : 'block',\n    flexBasis: '100%',\n    maxWidth: '282px',\n    [breakpoints.medium]: {\n      ...typography.font550,\n      marginBottom: sizing.scale600,\n    },\n  })\n)\n","import { createContext, FC, useContext, useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { useEngagementTypeDetails, useEngagementTypeQuery } from 'gql'\nimport {\n  getEngagementTypeDetails_getEngagementTypeSettings,\n  getEngagementTypeDetails_getEngagementTypeSettings_value_CustomNameValue as CustomNameValue,\n  getEngagementTypeDetails_getEngagementTypeSurveys,\n} from 'gql/types/getEngagementTypeDetails'\nimport { getEngagementType_getEngagementType } from 'gql/types/getEngagementType'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useQuery } from 'react-query'\nimport {\n  fetchEngagementType,\n  fetchEngagementTypeSettingsRestQuery,\n  fetchSurveys,\n} from 'rest'\nimport { components } from 'types/openapi'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\n\ntype EngagementTypeSettings = Record<'enable_external_widget', string>\ntype SurverysListType = components['schemas']['SurveyListResponse']['data']\n\ntype EngagementTypeDetails = {\n  engagementType: getEngagementType_getEngagementType\n  engagementTypeSurveys: getEngagementTypeDetails_getEngagementTypeSurveys[]\n  engagementTypeSettings: EngagementTypeSettings\n}\n\ntype EngagementTypeDetailsV1 = {\n  engagementType: Omit<\n    getEngagementType_getEngagementType,\n    '__typename' | 'defaultRoles'\n  > & {\n    templateEngagementType: MasterEngagementTypes\n  }\n  engagementTypeSettings: EngagementTypeSettings\n  engagementTypeSurveys: SurverysListType\n}\n\nconst EngagementTypeContext = createContext<\n  EngagementTypeDetails | EngagementTypeDetailsV1 | undefined\n>(undefined)\n\nconst useEngagementTypeQueryHelper = (version: string) =>\n  useEngagementTypeQuery({\n    variables: { uuid: useParams<{ engagementId: string }>().engagementId },\n    notifyOnNetworkStatusChange: true,\n    skip: version === '1',\n  })\n\nconst mapEngagementTypeSettings = (\n  settings: getEngagementTypeDetails_getEngagementTypeSettings[]\n) =>\n  settings.reduce<Partial<EngagementTypeSettings>>((acc, { name, value }) => {\n    acc[name as keyof EngagementTypeSettings] = (value as CustomNameValue).value\n\n    return acc\n  }, {})\n\nconst useEngagementTypeDetailsHelper = (\n  engagementType: getEngagementType_getEngagementType | undefined\n) => {\n  const {\n    loading,\n    error,\n    refetch,\n    getEngagementTypeSurveys: engagementTypeSurveys,\n    getEngagementTypeSettings: engagementTypeSettings,\n  } = useEngagementTypeDetails({\n    variables: {\n      engagementTypeId: engagementType?.id!,\n      names: ['enable_external_widget'],\n    },\n    skip: !engagementType,\n    notifyOnNetworkStatusChange: true,\n  })\n\n  return {\n    loading,\n    error,\n    refetch,\n    engagementTypeDetails:\n      engagementType &&\n      engagementTypeSurveys &&\n      engagementTypeSettings &&\n      ({\n        engagementType,\n        engagementTypeSurveys,\n        engagementTypeSettings: mapEngagementTypeSettings(\n          engagementTypeSettings\n        ),\n      } as EngagementTypeDetails),\n  }\n}\n\nconst resetMasterMeetingTypeName = (\n  name: components['schemas']['EngagementTypeMaster']\n): MasterEngagementTypes => {\n  if (name === 'Consecutive Meetings') {\n    return MasterEngagementTypes.ConsecutiveMeeting\n  } else if (name === 'Tracks and Sessions') {\n    return MasterEngagementTypes.TracksAndSession\n  } else {\n    return MasterEngagementTypes.General\n  }\n}\n\n// eslint-disable-next-line complexity\nexport const EngagementTypeProvider: FC = ({ children }) => {\n  const { systemName, version } = useEventLocation().location!.attributes\n\n  const engagementRes = useEngagementTypeQueryHelper(version)\n\n  const detailRes = useEngagementTypeDetailsHelper(\n    engagementRes.getEngagementType\n  )\n\n  const engagementResV1 = useQuery(\n    [\n      'getEngagementTypeResponse',\n      {\n        path: {\n          eventName: systemName,\n          engagementTypeUuid: useParams<{ engagementId: string }>()\n            .engagementId,\n        },\n      },\n    ],\n    fetchEngagementType,\n    {\n      enabled: version === '1',\n    }\n  )\n\n  const detailResV1 = useQuery(\n    [\n      'getEngagementTypeSettingsResponse',\n      {\n        path: {\n          eventName: systemName,\n          engagementTypeUuid: useParams<{ engagementId: string }>()\n            .engagementId,\n        },\n        query: { 'names[]': ['enable_external_widget'] },\n      },\n    ],\n    fetchEngagementTypeSettingsRestQuery,\n    {\n      enabled: version === '1',\n    }\n  )\n\n  const surveysResV1 = useQuery(\n    [\n      'fetchSurveys',\n      {\n        path: {\n          eventName: systemName,\n          engagementTypeUuid: useParams<{ engagementId: string }>()\n            .engagementId,\n        },\n      },\n    ],\n    fetchSurveys,\n    {\n      enabled: version === '1',\n    }\n  )\n\n  const engagementTypeSettings = detailResV1.data?.data.reduce(\n    (acc, { name, value }) => {\n      const tval = value === 'yes' ? 'true' : value === 'no' ? 'false' : value\n\n      return { ...acc, [name]: tval }\n    },\n    {}\n  )\n\n  const getEngagementTypeV1 = useMemo(() => {\n    const { data } = engagementResV1\n    const { data: surveysData } = surveysResV1\n\n    return (\n      data && {\n        engagementType: {\n          id: data.id,\n          uuid: data.id,\n          name: data.name,\n          description: data.description,\n          displayOrder: data.displayOrder,\n          status: data.status,\n          templateEngagementType: {\n            masterEngagementType: resetMasterMeetingTypeName(\n              data.meetingTypeMasterName\n            ),\n          },\n        },\n        engagementTypeSettings,\n        engagementTypeSurveys: surveysData?.data,\n      }\n    )\n  }, [engagementResV1, engagementTypeSettings, surveysResV1])\n\n  if (version === '1') {\n    if (detailResV1.error || engagementResV1.error || surveysResV1.error) {\n      return (\n        <ErrorPage\n          onButtonClick={() =>\n            (detailResV1.error\n              ? detailResV1.refetch\n              : engagementResV1.error\n              ? engagementResV1.refetch\n              : surveysResV1.refetch)()\n          }\n        />\n      )\n    }\n\n    return (\n      <>\n        {!detailResV1.data &&\n          (detailResV1.isLoading ||\n            engagementResV1.isLoading ||\n            surveysResV1.isLoading) && <ModalSpinner />}\n        {detailResV1.data && surveysResV1.data && (\n          <EngagementTypeContext.Provider\n            value={getEngagementTypeV1 as EngagementTypeDetailsV1}\n          >\n            {children}\n          </EngagementTypeContext.Provider>\n        )}\n      </>\n    )\n  } else {\n    if (detailRes.error || engagementRes.error) {\n      return (\n        <ErrorPage\n          onButtonClick={() =>\n            (detailRes.error ? detailRes.refetch : engagementRes.refetch)()\n          }\n        />\n      )\n    }\n\n    return (\n      <>\n        {!detailRes.engagementTypeDetails &&\n          (detailRes.loading || engagementRes.loading) && <ModalSpinner />}\n        {detailRes.engagementTypeDetails && (\n          <EngagementTypeContext.Provider\n            value={detailRes.engagementTypeDetails}\n          >\n            {children}\n          </EngagementTypeContext.Provider>\n        )}\n      </>\n    )\n  }\n}\n\nexport const useEngagementType = () => {\n  const context = useContext(EngagementTypeContext) as EngagementTypeDetails\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error(\n      'useEngagementType must be used within a EngagementTypeProvider'\n    )\n  }\n\n  return context\n}\n","import { FC } from 'react'\nimport { RightLongArrow } from '@jifflenow/brightui/icon'\nimport { generatePath, useLocation, useParams } from 'react-router-dom'\nimport { Paths as BasePaths } from 'components/Routes/Paths'\nimport { Anchor, StyledRightArrow } from './styled-components'\nimport { RedirectLinkProps } from './types'\n\nconst urlPrefix = process.env.NODE_ENV === 'production' ? '/app' : ''\n\nexport const GenerateRedirectLink: FC<RedirectLinkProps> = ({\n  label,\n  path,\n}) => {\n  const { search } = useLocation()\n  const { eventName, engagementId } = useParams<{\n    engagementId: string\n    eventName: string\n  }>()\n\n  const isAbsoluteUrl =\n    path.startsWith('http://') || path.startsWith('https://')\n\n  const url = isAbsoluteUrl\n    ? path\n    : `${urlPrefix}${generatePath(BasePaths.ENGAGEMENT_TYPE.path, {\n        eventName,\n        engagementId,\n      })}${path}${search}`\n\n  return (\n    <Anchor rel=\"noopener noreferrer\" target=\"_blank\" href={url}>\n      {label}\n      <StyledRightArrow>\n        <RightLongArrow />\n      </StyledRightArrow>\n    </Anchor>\n  )\n}\n","import {\n  Modal,\n  ModalBody,\n  ModalButton,\n  ModalFooter,\n  ModalHeader,\n} from '@jifflenow/brightui/modal'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { FC } from 'react'\nimport { Paragraph2 } from '@jifflenow/brightui/typography'\nimport { GenerateRedirectLink } from './GenerateRedirectLink'\nimport { DependentLinks } from './types'\nimport {\n  IrpReqPageLink,\n  List,\n  ListItem,\n  StyledWarningTitle,\n} from './styled-components'\n\nconst messages = defineMessages({\n  warningLabel: {\n    defaultMessage: 'Warning',\n    description: 'Field label',\n  },\n  confirmLabel: {\n    defaultMessage: 'Confirm',\n    description: 'Button label',\n  },\n})\n\nconst groupBy = (array: DependentLinks[]) =>\n  array.reduce<Record<string, DependentLinks[]>>(\n    (result, currentValue) => ({\n      ...result,\n      [currentValue.group]: [\n        ...(result[currentValue.group] ?? []),\n        currentValue,\n      ],\n    }),\n    {}\n  )\n\nexport const EngagementModal: FC<{\n  onClose: () => void\n  onConfirm: () => void\n  dependentLinks: DependentLinks[]\n  title: string\n  version?: string\n}> = ({ title, dependentLinks, onClose, onConfirm, version }) => {\n  const { formatMessage } = useIntl()\n\n  const group = groupBy(dependentLinks)\n\n  return (\n    <Modal onClose={onClose} isOpen size={'medium'}>\n      <ModalHeader>{formatMessage(messages.warningLabel)}</ModalHeader>\n      <ModalBody>\n        <StyledWarningTitle>{title}</StyledWarningTitle>\n        {Object.keys(group).map((key, index) => (\n          <StyledWarningTitle key={index}>\n            {key}\n            <IrpReqPageLink>\n              <List $version={version}>\n                {group[key].map((link, index) => (\n                  <ListItem key={index}>\n                    {version === '1' ? (\n                      <Paragraph2>{link.label}</Paragraph2>\n                    ) : (\n                      <GenerateRedirectLink {...link} />\n                    )}\n                  </ListItem>\n                ))}\n              </List>\n            </IrpReqPageLink>\n          </StyledWarningTitle>\n        ))}\n      </ModalBody>\n      <ModalFooter>\n        <ModalButton onClick={onConfirm}>\n          {formatMessage(messages.confirmLabel)}\n        </ModalButton>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\nimport { Anchor } from 'ui-components/Anchor'\n\nexport const WarningMessage = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.Paragraph1,\n    marginTop: sizing.scale300,\n    marginBottom: sizing.scale800,\n  })\n)\n\nexport const FooterButton = styled(Button, {\n  minWidth: '99px',\n})\n\nexport const WarningList = styled('ol', ({ $theme: { sizing, colors } }) => ({\n  paddingLeft: sizing.scale600,\n  color: colors.primaryA,\n}))\n\nexport const ListItem = styled('li', ({ $theme: { typography } }) => ({\n  ...typography.Paragraph2,\n}))\n\nexport const StyledListItemAnchor = styled(Anchor, {\n  ':hover': {\n    textDecoration: 'underline',\n  },\n})\n\nexport const StyledRightArrow = styled('div', () => ({\n  transform: 'rotate(322deg) translate(2px, 7px)',\n  display: 'inline-block',\n}))\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const okButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n","import { VFC } from 'react'\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  SIZE,\n} from '@jifflenow/brightui/modal'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { basename } from 'components/Routes'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useEngagementType } from 'components/EngagementTypes/EngagementTypeEdit/EngagementTypeProvider'\nimport { RightLongArrow } from '@jifflenow/brightui/icon'\nimport {\n  WarningMessage,\n  FooterButton,\n  WarningList,\n  ListItem,\n  StyledListItemAnchor,\n  StyledRightArrow,\n} from './styled-components'\nimport { ReasonForCancellationProps } from './types'\nimport { okButtonOverrides } from './overrides'\n\nconst messages = defineMessages({\n  cancelled_calendar_to_internal_attendee: {\n    defaultMessage: 'Meeting Cancelled ICS to Internal Attendee',\n    description: 'warning message',\n  },\n  cancelled_calendar_to_external_attendee: {\n    defaultMessage: 'Meeting Cancelled ICS to External Attendee',\n    description: 'warning message',\n  },\n  cancel_email_int_attendee_mst: {\n    defaultMessage: 'Meeting Cancelled Email to Internal Attendee',\n    description: 'warning message',\n  },\n  email_to_mm_on_meeting_cancellation: {\n    defaultMessage: 'Meeting Cancelled Email to MM',\n    description: 'warning message',\n  },\n  email_to_req_on_meeting_cancellation: {\n    defaultMessage: 'Meeting Cancelled Email to Requestor',\n    description: 'warning message',\n  },\n})\n\nconst mail_actions = [\n  'cancelled_calendar_to_internal_attendee',\n  'cancelled_calendar_to_external_attendee',\n  'cancel_email_int_attendee_mst',\n  'email_to_mm_on_meeting_cancellation',\n  'email_to_req_on_meeting_cancellation',\n]\n\nexport const ReasonForCancellationDialog: VFC<ReasonForCancellationProps> = ({\n  pendoName = 'ReasonForCancellation-dialog',\n  heading,\n  message,\n  buttonLabel,\n  onClose,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const origin = window.location.origin\n  const baseUrl = `${origin}${basename}`\n  const {\n    attributes: { systemName: eventName },\n  } = useEventLocation().location!\n  const { uuid: activity_uuid } = useEngagementType().engagementType\n  const location = new URLSearchParams(window.location.search).get('location')\n\n  return (\n    <Modal size={SIZE.medium} closeable={false} onClose={onClose} isOpen>\n      <ModalHeader>{heading}</ModalHeader>\n      <ModalBody>\n        <WarningMessage>{message}</WarningMessage>\n        <WarningList>\n          {mail_actions.map(item => (\n            <ListItem key={item}>\n              <StyledListItemAnchor\n                href={`${baseUrl}/events/${eventName}/engagement-types/${activity_uuid}/meeting-type-notifications-details?location=${location}&mail_actions=${item}`}\n                target=\"_blank\"\n              >\n                {formatMessage(messages[item as keyof typeof messages])}\n                <StyledRightArrow>\n                  <RightLongArrow />\n                </StyledRightArrow>\n              </StyledListItemAnchor>\n            </ListItem>\n          ))}\n        </WarningList>\n      </ModalBody>\n      <ModalFooter>\n        <FooterButton\n          type=\"button\"\n          overrides={okButtonOverrides}\n          onClick={onClose}\n          data-pendo={`${pendoName}/submit`}\n        >\n          {buttonLabel}\n        </FooterButton>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import { ChangeEvent, useState, VFC } from 'react'\nimport { Field } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { StatefulTooltip } from '@jifflenow/brightui/tooltip'\nimport { InfoOutlined } from '@jifflenow/brightui/icon'\nimport { ReasonForCancellationDialog } from 'components/EngagementTypes/EngagementTypeEdit/ReasonForCancellationDialog'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  FieldLabel,\n  FieldLabelContainer,\n  FieldToggleWrapper,\n  InfoTooltipContainer,\n  GenericError,\n  ToggleContainer,\n} from './styled-components'\nimport { InfoIconOverride, overviewTooltipOverride } from './overrides'\nimport { EngagementTypeToggleProps, InfoTooltipProps } from './types'\n\nconst InfoTooltip: VFC<InfoTooltipProps> = ({ content }) => (\n  <StatefulTooltip\n    content={content}\n    showArrow\n    overrides={overviewTooltipOverride}\n  >\n    <InfoTooltipContainer>\n      <InfoOutlined size={16} overrides={InfoIconOverride} />\n    </InfoTooltipContainer>\n  </StatefulTooltip>\n)\n\nconst positive = {\n  on: 'true',\n  off: 'false',\n}\n\nconst negative = {\n  on: 'false',\n  off: 'true',\n}\n\nexport const EngagementTypeToggle: VFC<EngagementTypeToggleProps> = ({\n  label,\n  name,\n  children,\n  bold,\n  infoTooltip,\n  disabled,\n  inverted,\n}) => {\n  const { on, off } = inverted ? negative : positive\n  const [showConfirmation, setShowConfirmation] = useState(false)\n  const messages = defineMessages({\n    warningHeader: {\n      defaultMessage: 'Warning',\n      description: 'Modal heading',\n    },\n    warningMessage: {\n      defaultMessage:\n        'Please ensure following cancellation notifications are updated as per cancel comment changes.',\n      description: 'Confirmation message',\n    },\n    buttonLabel: {\n      defaultMessage: 'OK',\n      description: 'Button label',\n    },\n  })\n  const { formatMessage } = useIntl()\n\n  return (\n    <Field<string>\n      name={name}\n      render={({\n        input: { value, onChange },\n        meta: { error, submitError },\n      }) => (\n        <>\n          {(submitError || error) && (\n            <GenericError>{submitError || error}</GenericError>\n          )}\n          <FieldToggleWrapper $error={submitError || error}>\n            <FieldLabelContainer>\n              <FieldLabel $bold={bold}>{label}</FieldLabel>\n              {infoTooltip ? <InfoTooltip content={infoTooltip} /> : null}\n            </FieldLabelContainer>\n\n            <ToggleContainer>\n              <Toggle\n                name={name}\n                ariaLabel={label}\n                checked={value === on}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                  if (name === 'cancel_comments_enabled') {\n                    setShowConfirmation(true)\n                  }\n\n                  return onChange(e.target.checked ? on : off)\n                }}\n                disabled={disabled}\n              />\n            </ToggleContainer>\n          </FieldToggleWrapper>\n          {value === on && children}\n          {showConfirmation && (\n            <ReasonForCancellationDialog\n              onClose={() => setShowConfirmation(false)}\n              heading={formatMessage(messages.warningHeader)}\n              message={formatMessage(messages.warningMessage)}\n              buttonLabel={formatMessage(messages.buttonLabel)}\n            />\n          )}\n        </>\n      )}\n    />\n  )\n}\n","import { ReactNode, VFC } from 'react'\nimport { Field } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport {\n  FieldToggleLabel,\n  FieldToggleWithDescWrapper,\n  GenericError,\n  ToggleContainerWithDesc,\n  EngagementToggleDesc,\n  FieldToggleDescWrapper,\n  EngagementToggleHint,\n} from './styled-components'\n\ntype ToggleProps = {\n  label: string\n  name: string\n  desc: string\n  hint?: boolean\n  children?: ReactNode\n  disabled?: boolean\n}\n\nexport const EngagementTypeToggleWithDesc: VFC<ToggleProps> = ({\n  label,\n  name,\n  desc,\n  hint,\n  children,\n  disabled,\n}) => (\n  <Field<string>\n    name={name}\n    render={({ input: { value, onChange }, meta: { error, submitError } }) => (\n      <>\n        {(submitError || error) && (\n          <GenericError>{submitError || error}</GenericError>\n        )}\n        <FieldToggleWithDescWrapper $error={submitError || error}>\n          <FieldToggleDescWrapper>\n            <FieldToggleLabel>{label}</FieldToggleLabel>\n            {desc && hint ? (\n              <EngagementToggleHint>{desc}</EngagementToggleHint>\n            ) : desc ? (\n              <EngagementToggleDesc>{desc}</EngagementToggleDesc>\n            ) : null}\n          </FieldToggleDescWrapper>\n\n          <ToggleContainerWithDesc>\n            <Toggle\n              name={name}\n              ariaLabel={label}\n              checked={value === 'true'}\n              onChange={(e: any) =>\n                onChange(e.target.checked ? 'true' : 'false')\n              }\n              disabled={!!disabled}\n            />\n          </ToggleContainerWithDesc>\n        </FieldToggleWithDescWrapper>\n        {value === 'true' && children}\n      </>\n    )}\n  />\n)\n","import { VFC } from 'react'\nimport { Field, Validation } from 'ui-components/Field'\nimport { Input } from '@jifflenow/brightui/input'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\ntype InputProps = {\n  label: string\n  name: string\n  placeholder: string\n  min?: number\n  type?: 'number' | 'text'\n  required?: boolean\n}\n\nexport const EngagementTypeInput: VFC<InputProps> = ({\n  label,\n  name,\n  placeholder,\n  type,\n  min,\n  required = false,\n}) => (\n  <Field<string>\n    name={name}\n    parse={value => value}\n    validations={required ? [Validation.REQUIRED] : undefined}\n    render={({ input: { value, onChange }, meta: { error, submitError } }) => (\n      <FormControl label={label} error={submitError || error}>\n        <Input\n          name={name}\n          type={type ? type : 'text'}\n          value={value}\n          min={min}\n          placeholder={placeholder}\n          onChange={(e: any) => onChange(e.target.value)}\n        />\n      </FormControl>\n    )}\n  />\n)\n","import { useState, VFC } from 'react'\nimport { FormSpy, useForm } from 'react-final-form'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { successButtonOverrides } from './overrides'\nimport { FooterContainer, FooterButton } from './styled-components'\n\nconst modalLabels = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Your changes will be lost.',\n    description: 'Modal heading',\n  },\n  modalMessage: {\n    defaultMessage: 'Keep changes?',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Keep',\n    description: 'Button label',\n  },\n})\n\nexport const Footer: VFC = () => {\n  const { formatMessage } = useIntl()\n  const { reset } = useForm()\n\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const handleDiscard = () => setShowConfirmation(true)\n\n  const handleDialogClose = () => setShowConfirmation(false)\n\n  const handleFormReset = () => {\n    setShowConfirmation(false)\n    reset()\n  }\n\n  return (\n    <>\n      {showConfirmation && (\n        <ConfirmationDialog\n          heading={formatMessage(modalLabels.modalHeader)}\n          message={formatMessage(modalLabels.modalMessage)}\n          cancelLabel={formatMessage(modalLabels.cancelButtonLabel)}\n          successLabel={formatMessage(modalLabels.successButtonLabel)}\n          onClose={handleDialogClose}\n          onCancel={handleFormReset}\n          onSuccess={handleDialogClose}\n        />\n      )}\n      <FormSpy\n        subscription={{\n          validating: true,\n          submitting: true,\n          dirty: true,\n        }}\n      >\n        {({ validating, submitting, dirty }) =>\n          dirty && (\n            <FooterContainer>\n              <FooterButton\n                type=\"button\"\n                kind={KIND.tertiary}\n                onClick={() => handleDiscard()}\n                data-pendo=\"engagement-type/discard-changes\"\n              >\n                <FormattedMessage\n                  defaultMessage=\"Discard Changes\"\n                  description=\"Button label\"\n                />\n              </FooterButton>\n              <FooterButton\n                type=\"submit\"\n                disabled={submitting || validating}\n                overrides={successButtonOverrides}\n                data-pendo=\"engagement-type/save-changes\"\n              >\n                <FormattedMessage\n                  defaultMessage=\"Save Changes\"\n                  description=\"Button label\"\n                />\n              </FooterButton>\n            </FooterContainer>\n          )\n        }\n      </FormSpy>\n    </>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const ModalDesc = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.font200,\n    color: colors.mono700,\n    marginLeft: sizing.scale800,\n    marginRight: sizing.scale800,\n  })\n)\n\nexport const CopyEngagementTypeRoot = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    display: 'flex',\n    marginBottom: sizing.scale700,\n  })\n)\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const modalButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n      width: '99px',\n    }),\n  },\n}\n","import { VFC, ChangeEvent } from 'react'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { FormattedMessage } from 'react-intl'\nimport { CopyEngagementTypeRoot } from './styled-components'\nimport { CopyEngagementTypeToProps } from './types'\n\nexport const EngagementCheckBoxField: VFC<CopyEngagementTypeToProps> = ({\n  label,\n  isActive,\n  uuid,\n  handleChange,\n}) => (\n  <CopyEngagementTypeRoot data-pendo={uuid}>\n    <Checkbox\n      checked={isActive}\n      name={uuid}\n      onChange={({ target }: ChangeEvent<HTMLInputElement>) => {\n        handleChange(target.checked, target.name)\n      }}\n    >\n      <FormattedMessage\n        defaultMessage=\"{label}\"\n        description=\"Engagement Type title\"\n        values={{ label }}\n      />\n    </Checkbox>\n  </CopyEngagementTypeRoot>\n)\n","import { defineMessages, useIntl } from 'react-intl'\nimport { VFC, useState, useEffect } from 'react'\nimport { useFetchByMasterEngagementTypeAndLocation } from 'gql'\nimport { showErrorToast } from 'utils/toast'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { EngagementCheckBoxField } from './EngagementCheckBoxField'\nimport { CopyEngagementTypeProps, EngagementTypeOptions } from './types'\n\nconst messages = defineMessages({\n  modalTitle: {\n    defaultMessage: 'Copy to following engagement types',\n    description: 'Header title',\n  },\n  modalDesc: {\n    defaultMessage:\n      'There maybe some conflicts/dependencies in copying the settings.',\n    description: 'Description title',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  all: {\n    defaultMessage: 'All',\n    description: 'Options label',\n  },\n})\n\nexport const CopyEngagementType: VFC<CopyEngagementTypeProps> = ({\n  setIsSelectAll,\n  isSelectAll,\n  setExcludeEngagementUuids,\n  setToEngagementUuids,\n}) => {\n  const { formatMessage } = useIntl()\n  const { id: engagementTypeId } = useEngagementType().engagementType\n\n  const [engagementType, setEngagementType] = useState<EngagementTypeOptions[]>(\n    []\n  )\n\n  const {\n    loading,\n    fetchByMasterEngagementTypeAndLocation = [],\n  } = useFetchByMasterEngagementTypeAndLocation({\n    variables: {\n      engagementId: parseInt(engagementTypeId),\n    },\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  useEffect(() => {\n    setEngagementType([\n      {\n        __typename: 'EngagementType',\n        id: 'all',\n        isActive: false,\n        name: formatMessage(messages.all),\n        uuid: 'all',\n      },\n      ...fetchByMasterEngagementTypeAndLocation\n        .filter(engagement => engagement.id !== engagementTypeId)\n        .map(engagement => ({\n          ...engagement,\n          isActive: false,\n        })),\n    ])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchByMasterEngagementTypeAndLocation.length])\n\n  useEffect(() => {\n    if (isSelectAll) {\n      setExcludeEngagementUuids(\n        engagementType\n          .filter(item => item.uuid !== 'all' && item.isActive === false)\n          .map(item => item.uuid)\n      )\n    } else {\n      setToEngagementUuids(\n        engagementType\n          .filter(item => item.uuid !== 'all' && item.isActive === true)\n          .map(item => item.uuid)\n      )\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [engagementType])\n\n  const handleChange = (checked: boolean, uuid: string) => {\n    if (uuid === 'all') {\n      setEngagementType([\n        ...engagementType.map(engagement => ({\n          ...engagement,\n          isActive: checked,\n        })),\n      ])\n      setIsSelectAll(checked)\n    } else {\n      const engagementOptions = [\n        {\n          __typename: 'EngagementType',\n          id: 'all',\n          isActive: false,\n          name: formatMessage(messages.all),\n          uuid: 'all',\n        },\n        ...engagementType.filter(item => item.uuid !== 'all'),\n      ]\n      const index = engagementType.findIndex(element => element.uuid === uuid)\n      const activeEngagement = engagementType\n        .filter(item => item.uuid === uuid)\n        .map(item =>\n          item.uuid === uuid ? { ...item, isActive: checked } : item\n        )\n      engagementOptions.splice(index, 1, ...activeEngagement)\n      setEngagementType(engagementOptions)\n    }\n  }\n\n  return (\n    <>\n      {loading && <ModalSpinner />}\n      {engagementType.map((engagement, index) => (\n        <EngagementCheckBoxField\n          key={index}\n          label={engagement.name}\n          isActive={engagement.isActive}\n          uuid={engagement.uuid}\n          handleChange={handleChange}\n        />\n      ))}\n    </>\n  )\n}\n","import { defineMessages, useIntl } from 'react-intl'\nimport { useState, VFC, useEffect } from 'react'\nimport { useMe } from 'providers/MeProvider'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { EngagementSettingsGroupNames } from 'gql/types/globalTypes'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { useEngagementType } from '../../EngagementTypeEdit/EngagementTypeProvider'\nimport { EngagementCheckBoxField } from './EngagementCheckBoxField'\nimport { EngagementTypeOptions } from './types'\n\nconst messages = defineMessages({\n  modalTitle: {\n    defaultMessage: 'Copy to following engagement types',\n    description: 'Header title',\n  },\n  modalDesc: {\n    defaultMessage:\n      'There maybe some conflicts/dependencies in copying the settings.',\n    description: 'Description title',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  all: {\n    defaultMessage: 'All',\n    description: 'Options label',\n  },\n})\n\nconst engagementTypeSettingsLabels = defineMessages({\n  locationTypes: {\n    defaultMessage: 'Location Types',\n    description: 'Navigation icon label',\n  },\n  setting: {\n    defaultMessage: 'Setting',\n    description: 'Navigation icon label',\n  },\n  setTimeAvailability: {\n    defaultMessage: 'Set Availability',\n    description: 'Navigation icon label',\n  },\n  participants: {\n    defaultMessage: 'Participants Options',\n    description: 'Navigation icon label',\n  },\n  approvalProcess: {\n    defaultMessage: 'Approval Process',\n    description: 'Navigation icon label',\n  },\n  topicOptions: {\n    defaultMessage: 'Topic Options',\n    description: 'Navigation icon label',\n  },\n  topicTrackOptions: {\n    defaultMessage: 'Topic & Track Options',\n    description: 'Navigation icon label',\n  },\n  forms: {\n    defaultMessage: 'Forms',\n    description: 'Navigation icon label',\n  },\n  inboundRequestForm: {\n    defaultMessage: 'Inbound Request Page',\n    description: 'Navigation icon label',\n  },\n  survey: {\n    defaultMessage: 'Surveys',\n    description: 'Navigation icon label',\n  },\n  advancedSettings: {\n    defaultMessage: 'Advanced Settings',\n    description: 'Navigation icon label',\n  },\n  csmOnly: {\n    defaultMessage: 'CSM Only',\n    description: 'Navigation icon label',\n  },\n  linkSettings: {\n    defaultMessage: 'Link Settings',\n    description: 'Navigation icon label',\n  },\n  notifications: {\n    defaultMessage: 'Notifications',\n    description: 'Navigation icon label',\n  },\n  outboundMeetingRequestForm: {\n    defaultMessage: 'Outbound Meeting Request Form',\n    description: 'Navigation icon label',\n  },\n  inboundMeetingRequestForm: {\n    defaultMessage: 'Inbound Meeting Request Form',\n    description: 'Navigation icon label',\n  },\n  surveyForms: {\n    defaultMessage: 'Survey Forms',\n    description: 'Navigation icon label',\n  },\n})\n\ninterface EngagementTypeSettingsItems {\n  labelKey: keyof typeof engagementTypeSettingsLabels\n  uuid: EngagementSettingsGroupNames\n}\n\ninterface EngagementTypeSettingsMenuItems {\n  labelKey: string\n  uuid: EngagementSettingsGroupNames\n}\n\nconst useEngagementTypeSettingsItems: () => EngagementTypeSettingsItems[] = () => {\n  const { eventRole } = useMe().data.attributes\n  const { engagementTypeSurveys } = useEngagementType()\n  const { configs, privileges } = useEventLocation()\n  const { enable_external_widget } = configs!\n\n  const engagementTypeSettingsItems: EngagementTypeSettingsItems[] = [\n    enable_external_widget === 'true' && {\n      labelKey: 'inboundRequestForm',\n      uuid: EngagementSettingsGroupNames.INBOUND_REQUEST_FORM,\n    },\n    privileges?.canManageSurvey &&\n      !!engagementTypeSurveys.length && {\n        labelKey: 'survey',\n        uuid: EngagementSettingsGroupNames.SURVEYS,\n      },\n    {\n      labelKey: 'advancedSettings',\n      uuid: EngagementSettingsGroupNames.ADVANCED_SETTINGS,\n    },\n    eventRole === 'CSM' && {\n      labelKey: 'csmOnly',\n      uuid: EngagementSettingsGroupNames.CSM_ONLY,\n    },\n  ].filter(Boolean) as EngagementTypeSettingsItems[]\n\n  return engagementTypeSettingsItems\n}\n\nexport const CopyEngagementTypeSettings: VFC<{\n  setSettingsToCopy: (settings: string[]) => void\n}> = ({ setSettingsToCopy }) => {\n  const { formatMessage } = useIntl()\n  const {\n    engagementTypeSurveys,\n    engagementTypeSettings: {\n      enable_external_widget: enable_external_widget_setting,\n    },\n    engagementType: {\n      templateEngagementType: { masterEngagementType },\n    },\n  } = useEngagementType()\n\n  const isGeneralMeeting =\n    masterEngagementType === MasterEngagementTypes.General\n\n  const { location, configs, privileges } = useEventLocation()\n  const {\n    attributes: { subType },\n  } = location!\n\n  const {\n    enable_topic,\n    enable_topic_to_activity,\n    enable_room_to_topic,\n    enable_user_to_topic,\n    enable_external_widget,\n  } = configs!\n\n  const engagementTypeSettingsOptions = useEngagementTypeSettingsItems()\n\n  const engagementTypeSettingsItems: EngagementTypeSettingsItems[] = [\n    {\n      labelKey: 'approvalProcess',\n      uuid: EngagementSettingsGroupNames.APPROVAL_PROCESS,\n    },\n    {\n      labelKey: 'locationTypes',\n      uuid: EngagementSettingsGroupNames.LOCATION_TYPES,\n    },\n    subType === 'Emeet' && {\n      labelKey: 'linkSettings',\n      uuid: EngagementSettingsGroupNames.LINK_SETTINGS,\n    },\n    privileges?.canManageForms &&\n      privileges.canManageSelfServeSettings && {\n        labelKey: 'outboundMeetingRequestForm',\n        uuid: EngagementSettingsGroupNames.OUTBOUND_FORM,\n      },\n    enable_external_widget === 'true' &&\n      enable_external_widget_setting === 'true' && {\n        labelKey: 'inboundMeetingRequestForm',\n        uuid: EngagementSettingsGroupNames.INBOUND_FORM,\n      },\n    privileges?.canManageForms &&\n      privileges.canManageSelfServeSettings &&\n      !!engagementTypeSurveys.length && {\n        labelKey: 'surveyForms',\n        uuid: EngagementSettingsGroupNames.SURVEY_FORM,\n      },\n    privileges?.canManageNotifications && {\n      labelKey: 'notifications',\n      uuid: EngagementSettingsGroupNames.NOTIFICATIONS,\n    },\n    {\n      labelKey: 'participants',\n      uuid: EngagementSettingsGroupNames.PARTICIPANTS,\n    },\n    isGeneralMeeting\n      ? enable_topic === 'true' &&\n        enable_topic_to_activity === 'true' &&\n        (enable_room_to_topic === 'true' ||\n          enable_user_to_topic === 'true') && {\n          labelKey: 'topicOptions',\n          uuid: EngagementSettingsGroupNames.TOPIC_OPTIONS,\n        }\n      : {\n          labelKey: 'topicTrackOptions',\n          uuid: EngagementSettingsGroupNames.TOPIC_OPTIONS,\n        },\n    // TODO: Un-comment when feature is developed\n    // { labelKey: 'forms', uuid: EngagementSettingsGroupNames.FORMS },\n    ...engagementTypeSettingsOptions,\n  ].filter(Boolean) as EngagementTypeSettingsItems[]\n\n  const [engagementTypeSettings, setEngagementTypeSettings] = useState<\n    EngagementTypeOptions[]\n  >([])\n\n  const itemMapper = () => (\n    item: EngagementTypeSettingsItems\n  ): EngagementTypeSettingsMenuItems => {\n    const { labelKey, uuid } = item\n\n    return {\n      labelKey: formatMessage(engagementTypeSettingsLabels[labelKey]),\n      uuid,\n    }\n  }\n  const engagementMenuSettings = engagementTypeSettingsItems.map(itemMapper())\n\n  useEffect(() => {\n    setEngagementTypeSettings([\n      {\n        __typename: 'EngagementType',\n        id: 'all',\n        isActive: false,\n        name: formatMessage(messages.all),\n        uuid: 'all',\n      },\n      ...engagementMenuSettings.map(engagementSettings => ({\n        __typename: 'EngagementType',\n        name: engagementSettings.labelKey,\n        uuid: engagementSettings.uuid,\n        isActive: false,\n      })),\n    ])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [engagementMenuSettings.length])\n\n  const handleChange = (checked: boolean, uuid: string) => {\n    if (uuid === 'all') {\n      setEngagementTypeSettings([\n        ...engagementTypeSettings.map(engagement => ({\n          ...engagement,\n          isActive: checked,\n        })),\n      ])\n    } else {\n      const engagementSettingsOptions = [\n        {\n          __typename: 'EngagementType',\n          id: 'all',\n          isActive: false,\n          name: formatMessage(messages.all),\n          uuid: 'all',\n        },\n        ...engagementTypeSettings.filter(item => item.uuid !== 'all'),\n      ]\n      const index = engagementTypeSettings.findIndex(\n        element => element.uuid === uuid\n      )\n      const activeEngagement = engagementTypeSettings\n        .filter(item => item.uuid === uuid)\n        .map(item =>\n          item.uuid === uuid ? { ...item, isActive: checked } : item\n        )\n      engagementSettingsOptions.splice(index, 1, ...activeEngagement)\n      setEngagementTypeSettings(engagementSettingsOptions)\n    }\n  }\n\n  useEffect(() => {\n    setSettingsToCopy(\n      engagementTypeSettings\n        .filter(item => item.uuid !== 'all' && item.isActive === true)\n        .map(item => item.uuid)\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [engagementTypeSettings])\n\n  return (\n    <>\n      {engagementTypeSettings.map((engagementTypeSettings, index) => (\n        <EngagementCheckBoxField\n          key={index}\n          label={engagementTypeSettings.name}\n          isActive={engagementTypeSettings.isActive}\n          uuid={engagementTypeSettings.uuid}\n          handleChange={handleChange}\n        />\n      ))}\n    </>\n  )\n}\n","import { VFC, useState } from 'react'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl'\nimport { useApolloClient, mutateCopyEngagementSettingToEngagements } from 'gql'\nimport { copyEngagementSettingToEngagementsVariables } from 'gql/types/copyEngagementSettingToEngagements'\nimport {\n  Modal,\n  ModalBody,\n  ModalButton,\n  ModalFooter,\n  ModalHeader,\n} from '@jifflenow/brightui/modal'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { EngagementSettingsGroupNames } from 'gql/types/globalTypes'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { ModalDesc } from './styled-components'\nimport { modalButtonOverrides } from './overrides'\nimport { CopyEngagementType } from './CopyEngagementType'\nimport { CopyEngagementTypeSettings } from './CopyEngagementTypeSettings'\n\nconst messages = defineMessages({\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  modalTitle: {\n    defaultMessage: 'Copy to following engagement types',\n    description: 'Header title',\n  },\n  modalTitle2: {\n    defaultMessage: 'Copy the following settings',\n    description: 'Header title',\n  },\n  modalDesc: {\n    defaultMessage:\n      'There maybe some conflicts/dependencies in copying the settings.',\n    description: 'Description title',\n  },\n})\n\nexport const CopySettings: VFC<{\n  onClose: () => void\n}> = ({ onClose }) => {\n  const client = useApolloClient()\n  const [toEngagementUuids, setToEngagementUuids] = useState<string[]>([])\n  const [isSelectAll, setIsSelectAll] = useState<boolean>(false)\n  const [excludeEngagementUuids, setExcludeEngagementUuids] = useState<\n    string[]\n  >([])\n  const [settingsToCopyStatus, setSettingsToCopyStatus] = useState<boolean>(\n    false\n  )\n  const [settingsToCopy, setSettingsToCopy] = useState<string[]>([])\n  const [showLoader, setShowLoader] = useState(false)\n  const { formatMessage } = useIntl()\n  const { uuid: engagementTypeUuid } = useEngagementType().engagementType\n\n  const handleSubmit = async () => {\n    try {\n      setShowLoader(true)\n      const configsToUpdate = settingsToCopy.reduce<\n        EngagementSettingsGroupNames[]\n      >(\n        (acc, label) =>\n          label ===\n          EngagementSettingsGroupNames[\n            label as keyof typeof EngagementSettingsGroupNames\n          ]\n            ? [...acc, label]\n            : acc,\n        []\n      )\n      const variables: copyEngagementSettingToEngagementsVariables = {\n        excludeEngagementUuids,\n        fromEngagementUuid: engagementTypeUuid,\n        isSelectAll,\n        settingsToCopy: configsToUpdate,\n        toEngagementUuids,\n      }\n\n      await mutateCopyEngagementSettingToEngagements(client, {\n        variables,\n      })\n      setShowLoader(false)\n      showSuccessToast(formatMessage(messages.successMessage))\n      onClose()\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <Modal onClose={onClose} isOpen size={'small'}>\n        <ModalHeader>\n          {formatMessage(\n            settingsToCopyStatus ? messages.modalTitle2 : messages.modalTitle\n          )}\n        </ModalHeader>\n        <ModalDesc>{formatMessage(messages.modalDesc)}</ModalDesc>\n        <ModalBody>\n          {settingsToCopyStatus ? (\n            <CopyEngagementTypeSettings\n              setSettingsToCopy={(settings: string[]) =>\n                setSettingsToCopy(settings)\n              }\n            />\n          ) : (\n            <CopyEngagementType\n              setToEngagementUuids={(data: string[]) =>\n                setToEngagementUuids(data)\n              }\n              setIsSelectAll={(status: boolean) => setIsSelectAll(status)}\n              setExcludeEngagementUuids={(data: string[]) =>\n                setExcludeEngagementUuids(data)\n              }\n              isSelectAll={isSelectAll}\n            />\n          )}\n        </ModalBody>\n\n        <ModalFooter>\n          <ModalButton\n            kind={KIND.tertiary}\n            overrides={modalButtonOverrides}\n            onClick={() => onClose()}\n          >\n            <FormattedMessage\n              defaultMessage=\"Cancel\"\n              description=\"Button label\"\n            />\n          </ModalButton>\n          {settingsToCopyStatus ? (\n            <ModalButton\n              kind={KIND.primary}\n              overrides={modalButtonOverrides}\n              disabled={settingsToCopy.length > 0 ? false : true}\n              onClick={() => handleSubmit()}\n            >\n              <FormattedMessage\n                defaultMessage=\"Copy\"\n                description=\"Button label\"\n              />\n            </ModalButton>\n          ) : (\n            <ModalButton\n              kind={KIND.primary}\n              overrides={modalButtonOverrides}\n              disabled={\n                isSelectAll ||\n                toEngagementUuids.length > 0 ||\n                excludeEngagementUuids.length > 0\n                  ? false\n                  : true\n              }\n              onClick={() => setSettingsToCopyStatus(true)}\n            >\n              <FormattedMessage\n                defaultMessage=\"Next\"\n                description=\"Button label\"\n              />\n            </ModalButton>\n          )}\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n","import { useEffect, useMemo, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  generatePath,\n  useHistory,\n  useLocation,\n  useRouteMatch,\n} from 'react-router-dom'\nimport { DrawerCloseButton, DrawerTitle, useDrawer } from 'ui-components/Drawer'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { Paths } from 'components/Routes'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useEngagementTypesQuery } from 'queries'\nimport { Select, Value, filterOptions } from '@jifflenow/brightui/select'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { CopySettings } from '../CopySettings'\nimport { CopyBtn, CopyBtnWrapper, HeaderContainer } from './styled-components'\nimport { selectOverrides } from './overrides'\n\nconst messages = defineMessages({\n  settingsLabel: {\n    defaultMessage: 'Settings for',\n    description: 'Label',\n  },\n  searchPlaceholder: {\n    defaultMessage: 'Search by engagement type',\n    description: 'Search placeholder',\n  },\n  buttonLabel: {\n    defaultMessage: 'Copy To',\n    description: 'Button label',\n  },\n})\n\nexport const Header: VFC = () => {\n  const {\n    name,\n    templateEngagementType: { masterEngagementType },\n  } = useEngagementType().engagementType\n  const { closeDrawer } = useDrawer()\n  const { formatMessage } = useIntl()\n  const [value, setValue] = useState<Value>([])\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n\n  const history = useHistory()\n  const { search } = useLocation()\n  const {\n    params: { engagementId, route },\n  } = useRouteMatch<{\n    eventName: string\n    route: string\n    engagementId: string\n  }>({\n    exact: true,\n    path: Paths.ENGAGEMENT_TYPE_SUB_ROUTES.path,\n  })!\n\n  useEffect(() => {\n    setValue([{ id: engagementId, label: name }])\n  }, [engagementId, name])\n\n  const {\n    systemName: eventName,\n    version,\n  } = useEventLocation().location!.attributes\n\n  const { isLoading, data: fetchEngagementTypes } = useEngagementTypesQuery({\n    version,\n    eventName,\n    showIrpEnabled: true,\n    ...(version === '1' && { showOnlyNonConsecutiveEngagementTypes: true }),\n  })\n\n  const options = useMemo(\n    () =>\n      fetchEngagementTypes\n        ?.slice()\n        .sort((a, b) => a.displayOrder - b.displayOrder)\n        .map(({ uuid, id, name }) => ({\n          label: name,\n          id: uuid ?? id,\n        })) ?? [],\n    [fetchEngagementTypes]\n  )\n\n  const handleOnChange = (value: Value) => {\n    setValue(value)\n    value.length &&\n      history.push(\n        `${generatePath(Paths.ENGAGEMENT_TYPE_SUB_ROUTES.path, {\n          eventName,\n          engagementId: value[0].id as string,\n          route,\n        })}${search}`\n      )\n  }\n\n  const showCopyTo =\n    version === '2' &&\n    masterEngagementType !== MasterEngagementTypes.ConsecutiveMeeting &&\n    (fetchEngagementTypes?.filter(\n      ({ templateEngagementType }) =>\n        templateEngagementType.masterEngagementType === masterEngagementType\n    ).length ?? 0) > 1\n\n  return (\n    <>\n      {isOpen && <CopySettings onClose={() => setIsOpen(false)} />}\n      <HeaderContainer $hasMenu>\n        <DrawerCloseButton onClick={() => closeDrawer()} />\n        <DrawerTitle>{formatMessage(messages.settingsLabel)}</DrawerTitle>\n        <Select\n          isLoading={isLoading}\n          options={options}\n          // TODO: Move filterOptions to brightui\n          filterOptions={(\n            options: Value,\n            filterValue: string,\n            excludeOptions?: Value\n          ) =>\n            // @ts-expect-error: filterOptions is also exported as function\n            filterOptions(options, filterValue, excludeOptions, {\n              matchProp: 'label',\n            })\n          }\n          value={value}\n          onChange={({ value }: { value: Value }) => handleOnChange(value)}\n          searchable\n          placeholder={formatMessage(messages.searchPlaceholder)}\n          clearable={false}\n          overrides={selectOverrides}\n          onBlur={() => {\n            !value.length && setValue([{ id: engagementId, label: name }])\n          }}\n        />\n        {showCopyTo && (\n          <CopyBtnWrapper>\n            <CopyBtn\n              type=\"button\"\n              kind={KIND.tertiary}\n              onClick={() => setIsOpen(true)}\n              data-pendo=\"engagement-copyto-button\"\n            >\n              {formatMessage(messages.buttonLabel)}\n            </CopyBtn>\n          </CopyBtnWrapper>\n        )}\n      </HeaderContainer>\n    </>\n  )\n}\n","import { useEventLocation } from 'providers/LocationProvider'\nimport { useMe } from 'providers/MeProvider'\nimport { useDocumentTitle } from 'ui-components/DocumentTitle'\nimport { useEngagementType } from '../EngagementTypeProvider'\n\nexport const usePageTitle = (title: string) => {\n  const { name: engagementTypeName } = useEngagementType().engagementType\n  const { displayName: eventName } =\n    useEventLocation().location?.attributes ?? {}\n  const { companyName } = useMe().meta\n  useDocumentTitle(\n    `${title} - ${engagementTypeName} - ${eventName} - ${companyName}`\n  )\n}\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\nimport { PopoverOverrides } from '@jifflenow/brightui/popover'\nimport { IconOverrides } from '@jifflenow/brightui/icon'\nimport { SelectOverrides, StyledSingleValue } from '@jifflenow/brightui/select'\nimport { AutoTooltip } from 'ui-components/AutoTooltip'\n\nexport const successButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n\nexport const overviewTooltipOverride: PopoverOverrides = {\n  Inner: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingTop: sizing.scale500,\n      paddingLeft: sizing.scale500,\n      paddingRight: sizing.scale500,\n      paddingBottom: sizing.scale500,\n      maxWidth: '800px',\n    }),\n  },\n}\n\nexport const InfoIconOverride: IconOverrides = {\n  Svg: {\n    style: ({ $theme: { colors } }) => ({\n      color: colors.mono600,\n    }),\n  },\n}\n\nexport const selectOverrides: SelectOverrides = {\n  Root: {\n    style: {\n      maxWidth: '280px',\n      width: '100%',\n      marginLeft: '14px',\n    },\n  },\n  SingleValue: {\n    component: (props: any) => (\n      <AutoTooltip content={props.children} showArrow>\n        <StyledSingleValue {...props} />\n      </AutoTooltip>\n    ),\n  },\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\nimport {\n  HeaderContainer as DrawerHeaderContainer,\n  FooterContainer as DrawerFooterContainer,\n} from 'ui-components/Drawer'\n\nexport const Root = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n  overflow: 'auto',\n})\n\nexport const StyledForm = styled('form', {\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n  overflow: 'auto',\n})\n\nexport const StyledFormSurvey = styled('form', {\n  display: 'flex',\n  flexDirection: 'column',\n  height: 'calc(100vh - 64px)',\n  overflow: 'auto',\n})\n\nexport const Body = styled('div', ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  [mediaQuery.medium]: {\n    paddingLeft: '223px',\n  },\n}))\n\nexport const Container = styled(\n  'div',\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    width: '100%',\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    paddingTop: sizing.scale2400,\n    flexGrow: 1,\n    [mediaQuery.medium]: {\n      paddingLeft: '112px',\n      paddingRight: '112px',\n      paddingTop: sizing.scale800,\n    },\n  })\n)\n\nexport const NotificationLoaderContainer = styled('div', {\n  width: '100%',\n  flexGrow: 1,\n})\n\nexport const HeaderContainer = withStyle<\n  typeof DrawerHeaderContainer,\n  { $hasMenu?: boolean }\n>(DrawerHeaderContainer, ({ $hasMenu }) => ({\n  boxShadow: $hasMenu ? 'none' : '0 10px 20px rgba(216, 216, 216, 0.4)',\n  flexShrink: 0,\n}))\n\nexport const FooterContainer = withStyle(\n  DrawerFooterContainer,\n  ({ $theme: { mediaQuery } }) => ({\n    [mediaQuery.medium]: {\n      paddingLeft: '112px',\n    },\n  })\n)\n\nexport const FooterButton = styled(Button, ({ $theme: { mediaQuery } }) => ({\n  minWidth: '133px',\n  flex: 1,\n  [mediaQuery.medium]: {\n    flex: 0,\n  },\n}))\n\nexport const FieldLabelContainer = styled('span', {})\n\nexport const FieldLabel = styled<{ $bold?: boolean }, 'span'>(\n  'span',\n  ({ $theme: { colors, typography }, $bold }) => ({\n    ...($bold ? typography.Subtitle1 : typography.Paragraph1),\n    color: colors.mono900,\n  })\n)\n\nexport const FieldToggleLabel = styled(\n  'span',\n  ({ $theme: { colors, typography } }) => ({\n    ...typography.Subtitle1,\n    color: colors.mono800,\n  })\n)\n\nexport const FieldToggleWrapper = styled<{ $error: boolean }, 'div'>(\n  'div',\n  ({ $error, $theme: { sizing } }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingTop: $error ? sizing.scale100 : sizing.scale650,\n    paddingBottom: sizing.scale650,\n  })\n)\n\nexport const FieldToggleWithDescWrapper = styled<{ $error: boolean }, 'div'>(\n  'div',\n  ({ $error, $theme: { sizing } }) => ({\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    paddingTop: $error ? sizing.scale100 : sizing.scale650,\n    paddingBottom: sizing.scale500,\n  })\n)\n\nexport const FieldToggleDescWrapper = styled('div', () => ({\n  flexBasis: 0,\n  flexGrow: 1,\n  maxWidth: '100%',\n}))\n\nexport const GenericError = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.LabelSmall,\n    color: colors.negative700,\n    marginTop: sizing.scale100,\n  })\n)\n\nexport const DurationLabel = styled(\n  'div',\n  ({ $theme: { sizing, typography } }) => ({\n    ...typography.Paragraph2,\n    marginBottom: sizing.scale200,\n  })\n)\n\nexport const DurationFieldRoot = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale800,\n  maxWidth: '490px',\n}))\n\nexport const DurationError = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.LabelSmall,\n    color: colors.negative700,\n    marginTop: sizing.scale100,\n    marginBottom: sizing.scale200,\n  })\n)\n\nexport const ToggleContainer = styled('div', ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale400,\n  marginLeft: sizing.scale400,\n}))\n\nexport const EngagementToggleDesc = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    marginBottom: sizing.scale600,\n  })\n)\nexport const EngagementToggleHint = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Caption2,\n    color: colors.mono700,\n    marginBottom: sizing.scale600,\n  })\n)\n\nexport const ToggleContainerWithDesc = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginRight: sizing.scale400,\n    marginLeft: sizing.scale400,\n  })\n)\n\nexport const DurationHoursContainer = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    alignItems: 'center',\n    marginRight: sizing.scale1000,\n    width: '140px',\n  })\n)\n\nexport const Flex = styled('div', {\n  display: 'flex',\n})\n\nexport const MeetingDurationInput = styled('div', {\n  alignItems: 'center',\n  width: '200px',\n  display: 'flex',\n})\n\nexport const DurationMinsContainer = styled('div', {\n  alignItems: 'center',\n  width: '200px',\n  display: 'flex',\n})\n\nexport const MeetingBreakDurationLabel = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.Paragraph2,\n    marginBottom: sizing.scale500,\n  })\n)\n\nexport const MinsLabel = styled(\n  'div',\n  ({ $theme: { typography, sizing, colors } }) => ({\n    ...typography.Paragraph2,\n    color: colors.mono700,\n    marginLeft: sizing.scale700,\n  })\n)\n\nexport const IrpReqPageLink = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Paragraph2,\n    color: colors.mono700,\n    paddingTop: sizing.scale100,\n  })\n)\n\nexport const List = styled<{ $version?: string }, 'ol'>(\n  'ol',\n  ({ $theme: { sizing, colors }, $version }) => ({\n    marginTop: 0,\n    marginBottom: 0,\n    paddingLeft: sizing.scale650,\n    color: $version === '1' ? colors.mono900 : colors.primaryA,\n  })\n)\n\nexport const ListItem = styled('li', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale0,\n}))\n\nexport const StyledRightArrow = styled('div', () => ({\n  transform: 'rotate(322deg) translate(2px, 7px)',\n  display: 'inline-block',\n}))\n\nexport const StyledWarningTitle = styled(\n  'div',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.font300,\n    marginBottom: sizing.scale600,\n    color: colors.mono800,\n  })\n)\n\nexport const Anchor = styled('a', ({ $theme: { colors, sizing } }) => ({\n  color: colors.primaryA,\n  cursor: 'pointer',\n  fontSize: sizing.scale550,\n  lineHeight: sizing.scale700,\n  outline: '0px',\n}))\n\nexport const InfoTooltipContainer = styled(\n  'span',\n  ({ $theme: { sizing } }) => ({\n    verticalAlign: 'middle',\n    display: 'inline-block',\n    marginLeft: sizing.scale100,\n  })\n)\n\nexport const CopyBtn = styled(Button, ({ $theme: { mediaQuery } }) => ({\n  minWidth: '133px',\n  flex: 1,\n  [mediaQuery.medium]: {\n    flex: 0,\n  },\n}))\n\nexport const CopyBtnWrapper = styled('div', {\n  marginLeft: 'auto',\n})\n","import {\n  useContext,\n  FC,\n  useMemo,\n  useState,\n  useEffect,\n  createContext,\n} from 'react'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router-dom'\nimport merge from 'deepmerge'\nimport {\n  patchEngagementTypesPreferences as patch,\n  engagementTypesPreferencesQueryFn,\n} from 'rest'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { Spinner } from 'ui-components/Spinner'\nimport { components } from 'types/openapi'\n\ntype EngagementPreferences = components['schemas']['EngagementPreferences']\ntype preferencesT = EngagementPreferences['data']\ntype ContextT = {\n  preferences: preferencesT\n  patchPreferences: (preferences: preferencesT) => void\n}\n\nconst INITIAL_STATE: {\n  sortBy: preferencesT['sortBy']\n  sortOrder: preferencesT['sortOrder']\n} = {\n  sortBy: 'displayOrder',\n  sortOrder: 'ASC',\n}\nconst Context = createContext<ContextT | null>(null)\nconst ENGAGEMENT_TYPES_PREFERENCES = 'engagementTypesPreferences'\n\nconst Provider: FC<ContextT> = ({\n  children,\n  preferences,\n  patchPreferences,\n}) => {\n  const value = useMemo<ContextT>(() => ({ preferences, patchPreferences }), [\n    preferences,\n    patchPreferences,\n  ])\n\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n\nconst usePreferences = () => {\n  const { eventName } = useParams<{ eventName: string }>()\n  const [preferences, setPreferences] = useState<preferencesT>({})\n\n  useEffect(() => {\n    const handleLocalStorageChange = (e: StorageEvent) => {\n      if (e.key === ENGAGEMENT_TYPES_PREFERENCES) {\n        setPreferences(JSON.parse(e.newValue || '{}'))\n      }\n    }\n    window.addEventListener('storage', handleLocalStorageChange)\n    return () => {\n      window.removeEventListener('storage', handleLocalStorageChange)\n    }\n  }, [setPreferences])\n\n  const initPreferences = (data: EngagementPreferences) => {\n    const initialPreferences = { ...INITIAL_STATE, ...data.data }\n    setPreferences(initialPreferences)\n    window.localStorage.setItem(\n      ENGAGEMENT_TYPES_PREFERENCES,\n      JSON.stringify(initialPreferences)\n    )\n  }\n\n  const patchPreferences = (payload: preferencesT) => {\n    const pref = merge(preferences, payload, { arrayMerge: (_, s) => s })\n    setPreferences(pref)\n    patch({ payload: { data: payload }, subSystem: eventName }).then(() =>\n      window.localStorage.setItem(\n        ENGAGEMENT_TYPES_PREFERENCES,\n        JSON.stringify(pref)\n      )\n    )\n  }\n\n  return { preferences, initPreferences, patchPreferences }\n}\n\nconst EngagementTypesPreferencesFetcher: FC<{\n  onResolve: (data: EngagementPreferences) => void\n}> = ({ onResolve }) => {\n  const { eventName } = useParams<{ eventName: string }>()\n  const location_uuid = useEventLocation().location?.id!\n\n  const { error, refetch } = useQuery(\n    [\n      'engagementTypesPreferences',\n      { path: { eventName }, query: { location_uuid } },\n    ],\n    engagementTypesPreferencesQueryFn,\n    {\n      onSuccess: res => onResolve(res),\n    }\n  )\n\n  if (error) {\n    return <ErrorPage onButtonClick={() => refetch()} />\n  }\n\n  return <Spinner />\n}\n\nexport const EngagementTypePreferencesProvider: FC = ({ children }) => {\n  const { preferences, initPreferences, patchPreferences } = usePreferences()\n\n  return Object.keys(preferences).length === 0 ? (\n    <EngagementTypesPreferencesFetcher onResolve={initPreferences} />\n  ) : (\n    <Provider preferences={preferences} patchPreferences={patchPreferences}>\n      {children}\n    </Provider>\n  )\n}\n\nexport const useEngagementTypePreferences = () => {\n  const context = useContext(Context)!\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error(\n      'useEngagementTypePreferences must be used within a EngagementTypePreferencesProvider'\n    )\n  }\n\n  return context\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","export enum Paths {\n  BASICS = '/basics',\n  SETTING = '/settings',\n  SET_AVAILABILITY = '/set-availability',\n  PARTICIPANTS = '/participants',\n  APPROVAL_PROCESS = '/approval-process',\n  TOPIC_OPTIONS = '/topic-options',\n  REQUEST_FORM = '/request-form',\n  INBOUND_REQUEST_FORM = '/inbound-request-form',\n  SURVEY = '/survey',\n  ADVANCED_SETTINGS = '/advanced-settings',\n  CSM_ONLY = '/csm-only',\n  LINK_SETTINGS = '/link-settings',\n  NOTIFICATIONS = '/meeting-type-notifications',\n  NOTIFICATIONS_DETAILS = '/meeting-type-notifications-details',\n  OUTBOUND_MEETING_FORM = '/outbound-meeting-form',\n  INBOUND_MEETING_FORM = '/inbound-meeting-form',\n  SURVEY_FORM = '/survey-form',\n}\n","import { FieldRenderProps } from 'react-final-form'\nimport { components } from 'types/openapi'\nimport { RefetchProps } from '../common'\n\nexport type DefaultLocationOption = {\n  label: string\n  id: DefaultLocationPreferenceType | string\n  type: DefaultLocationPreferenceType\n}\n\nexport type LocationTypeSettings = {\n  default_location_preference: string\n  default_location_vcon_preference: {\n    integration_adapter_uuid: string\n    integration_name: string\n    integration_uuid: string\n  }\n  duration_restrictions_for_mm: string\n  max_duration: string\n  min_duration: string\n  offsite_enabled: string\n  offsite_duration_restrictions_for_mm: string\n  offsite_label: string\n  offsite_min_duration: string\n  offsite_max_duration: string\n  booth_tour_enabled: string\n  booth_tour_label: string\n  booth_tour_header: string\n  booth_tour_default_name: string\n  booth_tour_default_location: string\n  booth_tour_min_duration: string\n  booth_tour_max_duration: string\n}\n\nexport type DefaultSettingsFormValues = Omit<\n  LocationTypeSettings,\n  'default_location_preference' | 'default_location_vcon_preference'\n>\n\nexport type FormValues = Omit<\n  LocationTypeSettings,\n  'default_location_vcon_preference'\n> & { default_location_vcon_preference: string | undefined; sendIcs?: boolean }\n\nexport type DependentFields = {\n  enable_external_widget: string\n  enable_external_widget_auto_process_without_mapping: string\n  minimum_timeslot: string\n  default_mapping: string\n  min_duration: string\n  offsite_enabled: string\n  offsite_min_duration: string\n  booth_tour_enabled: string\n  booth_tour_min_duration: string\n}\n\ntype DependentFieldValues = { dependentFieldValues: DependentFields }\n\ntype EngagementMeetingData = {\n  hasActiveMeetings: boolean\n}\n\nexport type TimeIncrementProps = DependentFieldValues & EngagementMeetingData\n\nexport type DependentFieldsProps = {\n  dependentFieldValues: DependentFields\n}\n\nexport enum DefaultLocationPreferenceType {\n  ROOM = 'room',\n  BOOTH_TOUR = 'booth_tour',\n  VCON = 'vcon',\n}\n\nexport type DefaultLocationDropdownProps = {\n  renderProps: FieldRenderProps<string>\n  options: DefaultLocationOption[]\n  conferences: components['schemas']['Conference'][]\n}\n\nexport type BoothTourProps = DependentFieldsProps & RefetchProps\n","import { styled } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const FormControlStyled = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale800,\n    maxWidth: '350px',\n  })\n)\nexport const FormControlStyledToggleContainer = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale800,\n  })\n)\n\nexport const Heading = styled('h2', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale0,\n}))\n\nexport const IrpBody = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale600,\n  marginBottom: sizing.scale600,\n}))\n\nexport const FormFieldWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale700,\n}))\n\nexport const DurationContainer = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale400,\n  width: '320px',\n}))\n\nexport const Flex = styled('div', {\n  display: 'flex',\n})\n\nexport const Divider = styled('div', ({ $theme: { colors, sizing } }) => ({\n  borderTopWidth: '1px',\n  borderTopStyle: 'solid',\n  borderTopColor: colors.mono300,\n  marginBottom: sizing.scale300,\n}))\n\nexport const EngagementContainer = styled('div', ({ $theme: { sizing } }) => ({\n  alignItems: 'center',\n  marginRight: sizing.scale1600,\n}))\n\nexport const GenericError = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.LabelSmall,\n    color: colors.negative700,\n    marginBottom: sizing.scale100,\n    marginTop: sizing.scale100,\n  })\n)\n\nexport const IrpReqPageLink = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Paragraph2,\n    color: colors.mono700,\n    paddingTop: sizing.scale100,\n    textAlign: 'right',\n  })\n)\n\nexport const Anchor = styled<{ $disabled?: boolean }, 'a'>(\n  'a',\n  ({ $disabled, $theme: { colors } }) => ({\n    color: colors.primaryA,\n    cursor: $disabled ? 'default' : 'pointer',\n    pointerEvents: $disabled ? 'none' : 'auto',\n    opacity: $disabled ? 0.6 : 1,\n  })\n)\n\nexport const FormControlStyledBody = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    paddingTop: sizing.scale200,\n    paddingBottom: sizing.scale200,\n  })\n)\nexport const TextAreaContainer = styled('div', () => ({\n  maxWidth: '550px',\n}))\n\nexport const IrpLinkWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  paddingRight: sizing.scale700,\n  marginLeft: 'auto',\n}))\n\nexport const Subtitle = styled('div', ({ $theme: { sizing, typography } }) => ({\n  ...typography.Subtitle3,\n  marginBottom: sizing.scale500,\n}))\n\nexport const SchedulingTitle = styled(\n  'div',\n  ({ $theme: { sizing, typography } }) => ({\n    ...typography.Subtitle3,\n    marginBottom: sizing.scale200,\n  })\n)\n\nexport const LinkDesc = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    marginBottom: sizing.scale600,\n  })\n)\n","import { useCallback, useEffect, useState, FC } from 'react'\nimport { useField } from 'react-final-form'\nimport { useIntl, defineMessages } from 'react-intl'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { EngagementTypeToggleWithDesc } from '../common/EngagementTypeToggleWithDesc'\nimport { Paths } from '../Paths'\nimport { DependentLinks } from '../common'\nimport { EngagementModal } from '../common/EngagementModal'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { DependentFieldValues } from './types'\n\nconst messages = defineMessages({\n  irpLabel: {\n    defaultMessage: 'Enable Inbound Request Page Widget',\n    description: 'Field label',\n  },\n  irpDesc: {\n    defaultMessage: 'Enable external widget for this engagement type',\n    description: 'Field desc',\n  },\n  irpSessionDesc: {\n    defaultMessage:\n      'Enable external widget for self-nomination sessions of this engagement type',\n    description: 'Field desc for session type',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      \"For an engagement type, Inbound request page can't be enabled when the Approval process is manual.\",\n    description: 'Dependent settings modal title',\n  },\n  approvalProcessLabel: {\n    defaultMessage: 'Approval Process',\n    description: 'Dependent setting info',\n  },\n  warningEnableLabel: {\n    defaultMessage: 'Change Approval Process',\n    description: 'Dependent settings group header',\n  },\n})\n\nexport const EnableIRPField: FC<\n  { refetch: () => void } & DependentFieldValues\n> = ({ children, refetch, dependentFieldValues }) => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n  const { version } = useEventLocation().location!.attributes\n\n  const {\n    input: { value, onChange },\n  } = useField('enable_external_widget')\n\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isSession =\n    masterEngagementType === MasterEngagementTypes.TracksAndSession\n\n  const { approval_process } = dependentFieldValues\n\n  const canEnableIrp = useCallback(\n    () => approval_process === 'instant' || !isSession,\n    [approval_process, isSession]\n  )\n\n  useEffect(() => {\n    value === 'true' && setIsOpen(!canEnableIrp())\n  }, [canEnableIrp, value])\n\n  const dependentLinks = [\n    approval_process !== 'instant' && {\n      label: formatMessage(messages.approvalProcessLabel),\n      path: Paths.APPROVAL_PROCESS,\n      group: formatMessage(messages.warningEnableLabel),\n    },\n  ].filter(Boolean) as DependentLinks[]\n\n  return (\n    <>\n      {isOpen && (\n        <EngagementModal\n          title={formatMessage(messages.warningModalTitle)}\n          dependentLinks={dependentLinks}\n          onClose={() => {\n            setIsOpen(false)\n            !canEnableIrp() && onChange('false')\n          }}\n          onConfirm={() => refetch()}\n          version={version}\n        />\n      )}\n      <EngagementTypeToggleWithDesc\n        label={formatMessage(messages.irpLabel)}\n        name=\"enable_external_widget\"\n        desc={\n          isSession\n            ? formatMessage(messages.irpSessionDesc)\n            : formatMessage(messages.irpDesc)\n        }\n      >\n        {children}\n      </EngagementTypeToggleWithDesc>\n    </>\n  )\n}\n","import { FC, ReactNode } from 'react'\nimport { FieldRenderProps } from 'react-final-form'\nimport { FormattedMessage } from 'react-intl'\nimport { Paragraph1 } from '@jifflenow/brightui/typography'\nimport {\n  Anchor,\n  IrpLinkWrapper,\n  IrpReqPageLink,\n  Flex,\n  LinkDesc,\n} from './styled-components'\n\nexport const EngagementLinkField: FC<FieldRenderProps<string>> = ({\n  input: { value },\n  label,\n  disabled,\n  warning,\n}) => (\n  <Flex>\n    <Paragraph1>{label}</Paragraph1>\n    <IrpLinkWrapper>\n      <IrpReqPageLink>\n        <FormattedMessage\n          defaultMessage=\"<a>Click here </a>\"\n          description=\"Link label\"\n          values={{\n            a: (chunks: ReactNode) => (\n              <Anchor\n                href={value}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                $disabled={disabled}\n              >\n                {chunks}\n              </Anchor>\n            ),\n          }}\n        />\n      </IrpReqPageLink>\n      <LinkDesc> {warning}</LinkDesc>\n    </IrpLinkWrapper>\n  </Flex>\n)\n","export const getFrameCode = (\n  externalWidgetUrl: string\n) => `<iframe src=\"${externalWidgetUrl}&embedded=true\" width=\"500px\" height=\"760px\"   frameborder=\"0\" style=\"border:0px;\"  marginheight=\"0\" marginwidth=\"0\">\n  Loading…\n</iframe>`\n\nexport const getCallToActionButtonCode = (\n  externalWidgetUrl: string,\n  colour: string,\n  buttonText: string\n) => `<table style=\"Margin:0;border-collapse:collapse;border-spacing:0;float:none;margin:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:center;vertical-align:top;width:auto\">\n <tbody>\n     <tr style=\"padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n     <td style=\"-moz-hyphens:auto;-webkit-hyphens:auto;Margin:0;border-collapse:collapse!important;color:#0a0a0a;font-family:Helvetica,Arial,sans-serif;font-size:16px;font-weight:400;hyphens:auto;line-height:1.1;margin:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top;word-wrap:break-word\">\n         <table style=\"border-collapse:collapse;border-spacing:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n             <tbody>\n                 <tr style=\"padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n                 <td style=\"-moz-hyphens:auto;-webkit-hyphens:auto;Margin:0;background:${colour};border:none;border-collapse:collapse!important;border-radius:4px;color:#fefefe;font-family:Helvetica,Arial,sans-serif;font-size:16px;font-weight:400;hyphens:auto;line-height:1.1;margin:0;padding-bottom:7px;padding-left:0;padding-right:0;padding-top:7px;text-align:left;vertical-align:top;word-wrap:break-word\">\n                     <a align=\"center\" href=\"${externalWidgetUrl}\" target=\"_blank\" style=\"border:0 solid ${colour};border-radius:4px;color:#fefefe;display:inline-block;font-family:proxima-nova,'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;font-weight:700;height:30px;line-height:1.1;padding:0;text-align:left;text-decoration:none;word-break:break-all\">\n                         <table cellspacing=\"20\" cellpadding=\"10\" width=\"114\" style=\"border-collapse:collapse;border-spacing:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n                             <tr style=\"padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n                             <td width=\"28\" style=\"-moz-hyphens:auto;-webkit-hyphens:auto;Margin:0;background:${colour};border:none;border-collapse:collapse!important;border-radius:4px;color:#fefefe;font-family:Helvetica,Arial,sans-serif;font-size:16px;font-weight:400;hyphens:auto;line-height:1.1;margin:0;padding-bottom:0;padding-left:8px;padding-right:0;padding-top:2px;text-align:left;vertical-align:top;word-wrap:break-word\"><img width=\"28\" height=\"28\" src=\"https://jifflenow-public.s3-us-west-2.amazonaws.com/jifflenow-button.png\" alt style=\"-ms-interpolation-mode:bicubic;border:none;clear:both;display:block;float:left;height:28px;outline:0;text-decoration:none;width:28px\"></td>\n                             <td width=\"70\" style=\"-moz-hyphens:auto;-webkit-hyphens:auto;Margin:0;background:${colour};border:none;border-collapse:collapse!important;border-radius:4px;color:#fefefe;font-family:Helvetica,Arial,sans-serif;font-size:16px;font-weight:400;hyphens:auto;line-height:1.1;margin:0;padding-bottom:0;padding-left:0;padding-right:12px;padding-top:0;text-align:left;vertical-align:top;word-wrap:break-word\">\n                                 <p style=\"Margin:0;Margin-bottom:10px;color:#f3f3f3;float:right;font-family:Helvetica,Arial,sans-serif;font-size:14px;font-style:normal;font-weight:600;line-height:16px;margin:0;margin-bottom:0;margin-left:6px;margin-right:0;margin-top:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;width:60px;word-break:break-word\">${buttonText}</p>\n                             </td>\n                             </tr>\n                         </table>\n                     </a>\n                 </td>\n                 </tr>\n             </tbody>\n         </table>\n     </td>\n     </tr>\n </tbody>\n</table>`\n","import { VFC } from 'react'\nimport { useFormState } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { CopyEmbedSourceCode } from 'ui-components/CopyEmbedSourceCode'\nimport { Field } from 'ui-components/Field'\nimport { EngagementTypeToggleWithDesc } from '../common'\nimport { EngagementLinkField } from './EngagementLinkField'\nimport { getCallToActionButtonCode, getFrameCode } from './GetCopiedContent'\nimport { FormControlStyledBody, FormFieldWrapper } from './styled-components'\nimport { DependentFieldValues, FormValues } from './types'\n\nconst messages = defineMessages({\n  urlRequestLabel: {\n    defaultMessage: 'URL for inbound request page',\n    description: 'Field label',\n  },\n  sourceCodeIrpLabel: {\n    defaultMessage:\n      'Source code to embed the inbound request page of this engagement type',\n    description: 'Field label',\n  },\n  sourceCodeIrpActionLabel: {\n    defaultMessage:\n      'Source code to embed “Call to Action” button for IRP of this engagement type',\n    description: 'Field label',\n  },\n  embedIrpLabel: {\n    defaultMessage: 'Copy code to embed IRP for the engagement type',\n    description: 'Button label',\n  },\n  embedIrpActionLabel: {\n    defaultMessage:\n      'Copy source code to call to action button of IRP page for this engagement type',\n    description: 'Button label',\n  },\n  requestMeetingLabel: {\n    defaultMessage: 'Request Meeting',\n    description: 'Field Label',\n  },\n  irpUrlLabel: {\n    defaultMessage: 'Create separate URL for this engagement type',\n    description: 'Field label',\n  },\n  buttonDisabledInformation: {\n    defaultMessage: 'Save changes to access URL and source code',\n    description: 'Help text',\n  },\n})\n\nexport const IrpUrlField: VFC<DependentFieldValues> = ({\n  dependentFieldValues,\n}) => {\n  const { formatMessage } = useIntl()\n  const { theme, enable_external_widget_url } = dependentFieldValues\n  const {\n    activity_external_widget_url,\n    enable_external_widget_url: enable_external_widget_url_form,\n    disable_url,\n    warning,\n  } = useFormState<FormValues>().values\n  const disableLink =\n    enable_external_widget_url !== 'true' || disable_url === 'true'\n  const showHelpText = enable_external_widget_url_form === 'true' && disableLink\n\n  return (\n    <EngagementTypeToggleWithDesc\n      label={formatMessage(messages.irpUrlLabel)}\n      name=\"enable_external_widget_url\"\n      desc={\n        showHelpText ? formatMessage(messages.buttonDisabledInformation) : ''\n      }\n      hint\n    >\n      <FormControlStyledBody>\n        <FormFieldWrapper>\n          <Field\n            name=\"activity_external_widget_url\"\n            render={EngagementLinkField}\n            label={formatMessage(messages.urlRequestLabel)}\n            disabled={disableLink}\n            warning={warning}\n          />\n        </FormFieldWrapper>\n        <FormFieldWrapper>\n          <CopyEmbedSourceCode\n            buttonLabel={formatMessage(messages.embedIrpLabel)}\n            link={getFrameCode(activity_external_widget_url)}\n            title={formatMessage(messages.sourceCodeIrpLabel)}\n            disabled={disableLink}\n          />\n        </FormFieldWrapper>\n        <FormFieldWrapper>\n          <CopyEmbedSourceCode\n            buttonLabel={formatMessage(messages.embedIrpActionLabel)}\n            link={getCallToActionButtonCode(\n              activity_external_widget_url,\n              theme ? theme.colors.primary : '#0096FF',\n              formatMessage(messages.requestMeetingLabel)\n            )}\n            title={formatMessage(messages.sourceCodeIrpActionLabel)}\n            disabled={disableLink}\n          />\n        </FormFieldWrapper>\n      </FormControlStyledBody>\n    </EngagementTypeToggleWithDesc>\n  )\n}\n","import { useEffect, useMemo, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { FieldInputProps } from 'react-final-form'\nimport { Select } from '@jifflenow/brightui/select'\nimport { Field } from 'ui-components/Field'\nimport {\n  DurationHoursContainer,\n  Flex,\n  DurationMinsContainer,\n  DurationLabel,\n  DurationFieldRoot,\n  DurationError,\n} from './styled-components'\nimport {\n  DayOption,\n  HourOption,\n  TimeDurationSelectProps,\n  MinuteOption,\n  DurationProps,\n} from './types'\n\nconst messages = defineMessages({\n  durationDayPlaceholder: {\n    defaultMessage: 'Select day',\n    description: 'Placeholder text',\n  },\n  durationHourPlaceholder: {\n    defaultMessage: 'Select hour',\n    description: 'Placeholder text',\n  },\n  durationMinsPlaceholder: {\n    defaultMessage: 'Select Mins',\n    description: 'Placeholder text',\n  },\n})\n\ntype FieldProps = {\n  input: FieldInputProps<string>\n}\n\nconst DaysField: VFC<FieldProps> = ({\n  input: { value: fieldValue, onChange },\n}) => {\n  const { formatMessage, formatNumber } = useIntl()\n  const { days = 0, hours, mins } = (fieldValue as unknown) as DurationProps\n  const [value, setValue] = useState<DayOption[]>()\n\n  const daysDropdownOptions: DayOption[] = useMemo(\n    () =>\n      Array.from({ length: 31 }, (_, i) => ({\n        label: formatNumber(i, {\n          style: 'unit',\n          unit: 'day',\n          unitDisplay: 'narrow',\n        }),\n        value: i,\n      })),\n    [formatNumber]\n  )\n\n  useEffect(() => {\n    setValue(daysDropdownOptions.filter(({ value }) => days === value))\n  }, [days, daysDropdownOptions])\n\n  const handleOnChange = (value: DayOption[]) => {\n    setValue(value)\n    onChange(\n      value[0].value * 1440 + (value[0].value === 30 ? 0 : hours * 60 + mins)\n    )\n  }\n\n  return (\n    <Select\n      options={daysDropdownOptions}\n      clearable={false}\n      placeholder={formatMessage(messages.durationDayPlaceholder)}\n      value={value}\n      searchInput\n      valueKey=\"value\"\n      onChange={({ value }: { value: DayOption[] }) => handleOnChange(value)}\n      dataPendo=\"days-field\"\n    />\n  )\n}\n\nconst HoursField: VFC<FieldProps & { maxHours: number }> = ({\n  input: { value: fieldValue, onChange },\n  maxHours,\n}) => {\n  const { formatMessage, formatNumber } = useIntl()\n  const { days = 0, hours, mins } = (fieldValue as unknown) as DurationProps\n  const [value, setValue] = useState<HourOption[]>()\n\n  const hoursDropdownOptions: HourOption[] = useMemo(\n    () =>\n      Array.from({ length: maxHours + 1 }, (_, i) => ({\n        label: formatNumber(i, {\n          style: 'unit',\n          unit: 'hour',\n          unitDisplay: 'narrow',\n        }),\n        value: i,\n      })),\n    [maxHours, formatNumber]\n  )\n\n  useEffect(() => {\n    setValue(hoursDropdownOptions.filter(({ value }) => hours === value))\n  }, [hours, hoursDropdownOptions])\n\n  useEffect(() => {\n    if (days === 30) {\n      setValue(hoursDropdownOptions.filter(({ value }) => value === 0))\n    }\n  }, [days, hoursDropdownOptions])\n\n  const handleOnChange = (value: HourOption[]) => {\n    setValue(value)\n    onChange(\n      days * 1440 + value[0].value * 60 + (value[0].value === 24 ? 0 : mins)\n    )\n  }\n\n  const filteredHoursDropdownOptions =\n    days === 30\n      ? hoursDropdownOptions.filter(({ value }) => value === 0)\n      : hoursDropdownOptions\n\n  return (\n    <Select\n      options={filteredHoursDropdownOptions}\n      clearable={false}\n      placeholder={formatMessage(messages.durationHourPlaceholder)}\n      value={value}\n      searchInput\n      valueKey=\"value\"\n      onChange={({ value }: { value: HourOption[] }) => handleOnChange(value)}\n      dataPendo=\"hours-field\"\n    />\n  )\n}\n\nconst MinsField: VFC<FieldProps> = ({\n  input: { value: fieldValue, onChange },\n}) => {\n  const { formatMessage, formatNumber } = useIntl()\n  const { days = 0, hours, mins } = (fieldValue as unknown) as DurationProps\n  const [value, setValue] = useState<MinuteOption[]>()\n\n  const minsDropdownOptions: MinuteOption[] = useMemo(\n    () =>\n      Array.from({ length: 60 }, (_, i) => ({\n        label: formatNumber(i, {\n          style: 'unit',\n          unit: 'minute',\n          unitDisplay: 'narrow',\n        }),\n        value: i,\n      })),\n    [formatNumber]\n  )\n\n  useEffect(() => {\n    setValue(minsDropdownOptions.filter(({ value }) => mins === value))\n  }, [mins, minsDropdownOptions])\n\n  useEffect(() => {\n    if (hours === 24 || days === 30) {\n      setValue(minsDropdownOptions.filter(({ value }) => value === 0))\n    }\n  }, [hours, days, minsDropdownOptions])\n\n  const handleOnChange = (value: MinuteOption[]) => {\n    setValue(value)\n    onChange(days * 1440 + hours * 60 + value[0].value)\n  }\n\n  const filteredMinsDropdownOptions =\n    hours === 24 || days === 30\n      ? minsDropdownOptions.filter(({ value }) => value === 0)\n      : minsDropdownOptions\n\n  return (\n    <Select\n      options={filteredMinsDropdownOptions}\n      clearable={false}\n      placeholder={formatMessage(messages.durationMinsPlaceholder)}\n      value={value}\n      searchInput\n      valueKey=\"value\"\n      onChange={({ value }: { value: MinuteOption[] }) => handleOnChange(value)}\n      dataPendo=\"minutes-field\"\n    />\n  )\n}\n\nexport const TimeDurationSelect: VFC<TimeDurationSelectProps> = ({\n  name,\n  label,\n  multiDay = false,\n}) => (\n  <Field<string>\n    name={name}\n    format={value =>\n      multiDay\n        ? {\n            days: Math.floor(+(value ?? 0) / 1440),\n            hours: Math.floor((+(value ?? 0) % 1440) / 60),\n            mins: Math.floor((+(value ?? 0) % 1440) % 60),\n          }\n        : {\n            hours: Math.floor(+(value ?? 0) / 60),\n            mins: Math.floor(+(value ?? 0) % 60),\n          }\n    }\n    parse={(value: number) => value.toString()}\n    render={({ input, meta: { error } }) => (\n      <DurationFieldRoot>\n        <DurationLabel> {label} </DurationLabel>\n        {error && <DurationError>{error}</DurationError>}\n        <Flex>\n          {multiDay && (\n            <DurationHoursContainer>\n              <DaysField input={input} />\n            </DurationHoursContainer>\n          )}\n          <DurationHoursContainer>\n            <HoursField input={input} maxHours={multiDay ? 23 : 24} />\n          </DurationHoursContainer>\n          <DurationMinsContainer>\n            <MinsField input={input} />\n          </DurationMinsContainer>\n        </Flex>\n      </DurationFieldRoot>\n    )}\n  />\n)\n","import { FC, VFC } from 'react'\nimport { FieldRenderProps } from 'react-final-form'\nimport { RadioGroup, Radio, ALIGN } from '@jifflenow/brightui/radio'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'ui-components/Field'\nimport { TimeDurationSelect } from '../common/TimeDurationSelect'\nimport {\n  GenericError,\n  FormControlStyledToggleContainer,\n  DurationContainer,\n  SchedulingTitle,\n} from './styled-components'\n\nconst messages = defineMessages({\n  MeetingBufferLabel: {\n    defaultMessage: 'Duration',\n    description: 'Field label',\n  },\n  bufferTimeLabel: {\n    defaultMessage: 'Lead time for IRP slots',\n    description: 'Field label',\n  },\n  nextDayRequestLabel: {\n    defaultMessage: 'Do not allow same day requests',\n    description: 'Field label',\n  },\n  schedulingLogicLabel: {\n    defaultMessage: 'Scheduling logic',\n    description: 'Field label',\n  },\n})\n\nconst BufferTimeDuration: FC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <DurationContainer>\n      <TimeDurationSelect\n        label={formatMessage(messages.MeetingBufferLabel)}\n        name=\"irp_meeting_buffer\"\n        multiDay\n      />\n    </DurationContainer>\n  )\n}\n\nconst SchedulingLogic: FC<FieldRenderProps<string>> = ({\n  input: { value, onChange },\n  meta: { submitError },\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      {submitError && <GenericError>{submitError}</GenericError>}\n      <RadioGroup\n        align={ALIGN.vertical}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        name=\"scheduling_logic\"\n      >\n        <Radio value=\"true\">{formatMessage(messages.bufferTimeLabel)}</Radio>\n        {value === 'true' ? <BufferTimeDuration /> : null}\n        <Radio value=\"false\">\n          {formatMessage(messages.nextDayRequestLabel)}\n        </Radio>\n      </RadioGroup>\n    </>\n  )\n}\n\nexport const SchedulingLogicField: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <FormControlStyledToggleContainer>\n      <SchedulingTitle>\n        {formatMessage(messages.schedulingLogicLabel)}{' '}\n      </SchedulingTitle>\n      <Field\n        name=\"enable_irp_scheduling_logic_buffer\"\n        render={SchedulingLogic}\n      />\n    </FormControlStyledToggleContainer>\n  )\n}\n","import { RadioOverrides } from '@jifflenow/brightui/radio'\nimport { InputOverrides } from '@jifflenow/brightui/input'\n\nexport const instructionRadioOverride: RadioOverrides = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      marginTop: sizing.scale500,\n      marginBottom: sizing.scale500,\n    }),\n  },\n}\n\nexport const instructionInputOverride: InputOverrides = {\n  Root: {\n    style: ({ $theme: { mediaQuery } }) => ({\n      width: '320px',\n      [mediaQuery.medium]: {\n        width: '425px',\n      },\n    }),\n  },\n}\n","import { VFC } from 'react'\nimport { Radio } from '@jifflenow/brightui/radio'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useField } from 'react-final-form'\nimport { instructionRadioOverride } from '../overrides'\n\nconst messages = defineMessages({\n  manualSchedulingLabel: {\n    defaultMessage:\n      'Manual scheduling - A Meeting Manager will need to process the requests upon submission',\n    description: 'Field label',\n  },\n})\n\nexport const MethodRequestManualField: VFC = () => {\n  const { formatMessage } = useIntl()\n  const {\n    value: enable_external_widget_auto_process,\n    onChange: onChangeEnableExternalWidgetAutoProcess,\n  } = useField('enable_external_widget_auto_process').input\n\n  const {\n    value: enable_external_widget_auto_process_without_mapping,\n    onChange: onChangeEnableExternalWidgetAutoProcessWithoutMapping,\n  } = useField('enable_external_widget_auto_process_without_mapping').input\n\n  return (\n    <Radio\n      checked={\n        enable_external_widget_auto_process === 'false' &&\n        enable_external_widget_auto_process_without_mapping === 'false'\n      }\n      onChange={() => {\n        onChangeEnableExternalWidgetAutoProcess('false')\n        onChangeEnableExternalWidgetAutoProcessWithoutMapping('false')\n      }}\n      value=\"true\"\n      overrides={instructionRadioOverride}\n      labelPlacement=\"right\"\n      name=\"manualing_scheduling\"\n    >\n      {formatMessage(messages.manualSchedulingLabel)}\n    </Radio>\n  )\n}\n","import { FC, useEffect, useState, VFC } from 'react'\nimport { Radio } from '@jifflenow/brightui/radio'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'ui-components/Field'\nimport { FieldRenderProps, useField } from 'react-final-form'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { instructionRadioOverride } from '../overrides'\nimport { DependentFieldValues, DependentLinks } from '../types'\nimport { EngagementModal } from '../../common/EngagementModal'\nimport { RefetchProps } from '../../common/types'\nimport { Paths } from '../../Paths'\n\nconst messages = defineMessages({\n  mappedSchedulingLabel: {\n    defaultMessage: 'Auto schedule - mapped request page',\n    description: 'Field label',\n  },\n  warningEnableLabel: {\n    defaultMessage: 'Enable the following',\n    description: 'Dependent settings group header',\n  },\n  mappingLabel: {\n    defaultMessage: 'Mapping',\n    description: 'Dependent setting label',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before enabling auto schedule mapped request page.',\n    description: 'Dependent settings modal title',\n  },\n})\n\nconst AutoProcessField: FC<FieldRenderProps<string> & RefetchProps> = ({\n  input: { value, onChange },\n  refetch,\n  loading,\n  dependentFieldValues,\n}) => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n  const { default_mapping } = dependentFieldValues\n\n  const { version } = useEventLocation().location!.attributes\n\n  const { onChange: onChangeAutoProcessWithoutMapping } = useField(\n    'enable_external_widget_auto_process_without_mapping'\n  ).input\n\n  useEffect(() => {\n    value === 'true' && setIsOpen(default_mapping !== 'true')\n  }, [default_mapping, value])\n\n  const dependentLinks = [\n    default_mapping !== 'true' && {\n      label: formatMessage(messages.mappingLabel),\n      path: Paths.CSM_ONLY,\n      group: formatMessage(messages.warningEnableLabel),\n    },\n  ].filter(Boolean) as DependentLinks[]\n\n  return (\n    <>\n      {isOpen && (\n        <>\n          {loading && <ModalSpinner />}\n          <EngagementModal\n            title={formatMessage(messages.warningModalTitle)}\n            dependentLinks={dependentLinks}\n            onClose={() => {\n              setIsOpen(false)\n              default_mapping !== 'true' && onChange('false')\n            }}\n            onConfirm={() => refetch()}\n            version={version}\n          />\n        </>\n      )}\n      <Radio\n        checked={value === 'true'}\n        onChange={e => {\n          onChange(e.target.value)\n          onChangeAutoProcessWithoutMapping('false')\n        }}\n        value=\"true\"\n        overrides={instructionRadioOverride}\n        labelPlacement=\"right\"\n        name=\"mapped_scheduling\"\n      >\n        {formatMessage(messages.mappedSchedulingLabel)}\n      </Radio>\n    </>\n  )\n}\n\nexport const MethodRequestMappedField: VFC<\n  RefetchProps & DependentFieldValues\n> = ({ refetch, loading, dependentFieldValues }) => (\n  <Field<string>\n    name=\"enable_external_widget_auto_process\"\n    render={props => (\n      <AutoProcessField\n        {...props}\n        refetch={refetch}\n        loading={loading}\n        dependentFieldValues={dependentFieldValues}\n      />\n    )}\n  />\n)\n","import { FC, useCallback, useEffect, useState, VFC } from 'react'\nimport { Radio } from '@jifflenow/brightui/radio'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'ui-components/Field'\nimport { FieldRenderProps, useField } from 'react-final-form'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { instructionRadioOverride } from '../overrides'\nimport { EngagementModal } from '../../common/EngagementModal'\nimport { DependentFieldValues, DependentLinks } from '../types'\nimport { Paths } from '../../Paths'\nimport { RefetchProps } from '../../common/types'\n\nconst messages = defineMessages({\n  unmappedSchedulingLabel: {\n    defaultMessage: 'Auto schedule - unmapped request page',\n    description: 'Field label',\n  },\n  hideInternalAttendeeLabel: {\n    defaultMessage: 'Hide internal attendee section.',\n    description: 'Dependent setting label',\n  },\n  relaxRestrictionLabel: {\n    defaultMessage: 'Relax the restriction',\n    description: 'Dependent setting label',\n  },\n  mappingLabel: {\n    defaultMessage: 'Mapping',\n    description: 'Dependent setting label',\n  },\n  offsiteLabel: {\n    defaultMessage: 'Offsite',\n    description: 'Dependent setting label',\n  },\n  mstLabel: {\n    defaultMessage: 'MST',\n    description: 'Dependent setting label',\n  },\n  atLeastOneInternalAttendeeLabel: {\n    defaultMessage:\n      'At least one internal attendee is required to enable unmapped inbound request auto processing.',\n    description: 'Dependent setting info',\n  },\n  warningDisableLabel: {\n    defaultMessage: 'Disable the following',\n    description: 'Dependent settings group header',\n  },\n  warningEnableLabel: {\n    defaultMessage: 'Enable the following',\n    description: 'Dependent settings group header',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before enabling auto schedule unmapped request page.',\n    description: 'Dependent settings modal title',\n  },\n})\n\nconst AutoProcessWithoutMappingField: FC<\n  FieldRenderProps<string> & RefetchProps\n> = ({\n  input: { value, onChange },\n  refetch,\n  loading,\n  dependentFieldValues,\n}) => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n  const {\n    hide_internal_attendees_in_book_meeting,\n    offsite_enabled,\n    relax_internal_attendee_presence_for_mm,\n    default_mapping,\n    internal_attendee_presence,\n    enable_manual_scheduling,\n  } = dependentFieldValues\n\n  const { version } = useEventLocation().location!.attributes\n\n  const getExternalReqWithoutMappingState = useCallback(\n    () =>\n      hide_internal_attendees_in_book_meeting === 'false' &&\n      enable_manual_scheduling === 'false' &&\n      offsite_enabled === 'false' &&\n      relax_internal_attendee_presence_for_mm === 'false' &&\n      default_mapping === 'false' &&\n      internal_attendee_presence === 'true',\n    [\n      default_mapping,\n      enable_manual_scheduling,\n      hide_internal_attendees_in_book_meeting,\n      internal_attendee_presence,\n      offsite_enabled,\n      relax_internal_attendee_presence_for_mm,\n    ]\n  )\n\n  useEffect(() => {\n    value === 'true' && setIsOpen(!getExternalReqWithoutMappingState())\n  }, [value, getExternalReqWithoutMappingState])\n\n  const { onChange: onChangeEnableExternalWidgetAutoProcess } = useField(\n    'enable_external_widget_auto_process'\n  ).input\n\n  const dependentLinks = [\n    hide_internal_attendees_in_book_meeting !== 'false' && {\n      label: formatMessage(messages.hideInternalAttendeeLabel),\n      path: Paths.PARTICIPANTS,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n    default_mapping !== 'false' && {\n      label: formatMessage(messages.mappingLabel),\n      path: Paths.CSM_ONLY,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n    enable_manual_scheduling !== 'false' && {\n      label: formatMessage(messages.mstLabel),\n      path: Paths.CSM_ONLY,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n    offsite_enabled !== 'false' && {\n      label: formatMessage(messages.offsiteLabel),\n      path: Paths.SETTING,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n    relax_internal_attendee_presence_for_mm !== 'false' && {\n      label: formatMessage(messages.relaxRestrictionLabel),\n      path: Paths.PARTICIPANTS,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n    internal_attendee_presence !== 'true' && {\n      label: formatMessage(messages.atLeastOneInternalAttendeeLabel),\n      path: Paths.PARTICIPANTS,\n      group: formatMessage(messages.warningEnableLabel),\n    },\n  ].filter(Boolean) as DependentLinks[]\n\n  return (\n    <>\n      {isOpen && (\n        <>\n          {loading && <ModalSpinner />}\n          <EngagementModal\n            title={formatMessage(messages.warningModalTitle)}\n            dependentLinks={dependentLinks}\n            onClose={() => {\n              setIsOpen(false)\n              !getExternalReqWithoutMappingState() && onChange('false')\n            }}\n            onConfirm={() => refetch()}\n            version={version}\n          />\n        </>\n      )}\n      <Radio\n        checked={value === 'true' ? true : false}\n        onChange={e => {\n          onChange(e.target.value)\n          onChangeEnableExternalWidgetAutoProcess('false')\n        }}\n        value=\"true\"\n        overrides={instructionRadioOverride}\n        labelPlacement=\"right\"\n        name=\"unmapped_scheduling\"\n      >\n        {formatMessage(messages.unmappedSchedulingLabel)}\n      </Radio>\n    </>\n  )\n}\n\nexport const MethodRequestUnMappedField: VFC<\n  RefetchProps & DependentFieldValues\n> = ({ refetch, loading, dependentFieldValues }) => (\n  <Field<string>\n    name=\"enable_external_widget_auto_process_without_mapping\"\n    render={props => (\n      <AutoProcessWithoutMappingField\n        {...props}\n        refetch={refetch}\n        loading={loading}\n        dependentFieldValues={dependentFieldValues}\n      />\n    )}\n  />\n)\n","import { VFC } from 'react'\nimport { useField } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { RefetchProps } from '../../common/types'\nimport { GenericError } from '../styled-components'\nimport {\n  FormControlStyledToggleContainer,\n  FormFieldWrapper,\n  Subtitle,\n} from '../styled-components'\nimport { DependentFieldValues } from '../types'\nimport { MethodRequestManualField } from './MethodRequestManualField'\nimport { MethodRequestMappedField } from './MethodRequestMappedField'\nimport { MethodRequestUnMappedField } from './MethodRequestUnMappedField'\n\nconst messages = defineMessages({\n  irpMethodLabel: {\n    defaultMessage: 'Method to process inbound request page',\n    description: 'Field label',\n  },\n})\n\nexport const MethodRequestField: VFC<RefetchProps & DependentFieldValues> = ({\n  refetch,\n  loading,\n  dependentFieldValues,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const { submitError: submitError1 } = useField(\n    'enable_external_widget_auto_process'\n  ).meta\n\n  const { submitError: submitError2 } = useField(\n    'enable_external_widget_auto_process_without_mapping'\n  ).meta\n\n  return (\n    <FormFieldWrapper>\n      <FormControlStyledToggleContainer>\n        <Subtitle>{formatMessage(messages.irpMethodLabel)}</Subtitle>\n        <GenericError>{submitError1 || submitError2}</GenericError>\n        <MethodRequestManualField />\n        <MethodRequestMappedField\n          refetch={refetch}\n          loading={loading}\n          dependentFieldValues={dependentFieldValues}\n        />\n        <MethodRequestUnMappedField\n          refetch={refetch}\n          loading={loading}\n          dependentFieldValues={dependentFieldValues}\n        />\n      </FormControlStyledToggleContainer>\n    </FormFieldWrapper>\n  )\n}\n","import { FC } from 'react'\nimport { Input } from '@jifflenow/brightui/input'\nimport { FieldMetaState, FieldRenderProps } from 'react-final-form'\nimport { EngagementContainer, FormControlStyled } from './styled-components'\nimport { instructionInputOverride } from './overrides'\n\nconst fieldError: (meta: FieldMetaState<any>) => boolean = ({\n  error,\n  touched,\n}) => touched && error\n\nexport const EngagementInputField: FC<FieldRenderProps<string>> = ({\n  input,\n  meta,\n  label,\n  placeholder,\n}) => (\n  <EngagementContainer>\n    <FormControlStyled label={label} error={fieldError(meta)}>\n      <Input\n        {...input}\n        autoComplete=\"off\"\n        type=\"text\"\n        placeholder={placeholder}\n        overrides={instructionInputOverride}\n      />\n    </FormControlStyled>\n  </EngagementContainer>\n)\n","import { VFC } from 'react'\nimport { FieldRenderProps } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport {\n  FieldLabel,\n  FieldToggleWrapper,\n  GenericError,\n  ToggleContainer,\n} from '../common/styled-components'\n\nexport const EngagementTypeToggle: VFC<FieldRenderProps<string>> = ({\n  label,\n  input: { name, value, onChange },\n  meta: { error, submitError },\n  children,\n}) => (\n  <>\n    {(submitError || error) && (\n      <GenericError>{submitError || error}</GenericError>\n    )}\n    <FieldToggleWrapper $error={submitError || error}>\n      <FieldLabel>{label}</FieldLabel>\n      <ToggleContainer>\n        <Toggle\n          ariaLabel={label}\n          name={name}\n          data-pendo={name}\n          checked={value === 'true'}\n          onChange={(e: any) => onChange(e.target.checked ? 'true' : 'false')}\n        />\n      </ToggleContainer>\n    </FieldToggleWrapper>\n    {value === 'true' && children}\n  </>\n)\n","import { useCallback, useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useField, useFormState } from 'react-final-form'\nimport { Subtitle3 } from '@jifflenow/brightui/typography'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { Field } from 'ui-components/Field'\nimport { CopyEmbedSourceCode } from 'ui-components/CopyEmbedSourceCode'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { TimeDurationSelect } from '../common/TimeDurationSelect'\nimport { Paths } from '../Paths'\nimport { EngagementModal } from '../common/EngagementModal'\nimport { RefetchProps } from '../common/types'\nimport {\n  DurationContainer,\n  FormControlStyledBody,\n  FormControlStyledToggleContainer,\n  FormFieldWrapper,\n} from './styled-components'\nimport { EngagementInputField } from './EngagementInputField'\nimport { EngagementLinkField } from './EngagementLinkField'\nimport { getFrameCode, getCallToActionButtonCode } from './GetCopiedContent'\nimport { EngagementTypeToggle } from './EngagementTypeToggle'\nimport { DependentFieldValues, DependentLinks, FormValues } from './types'\n\nconst messages = defineMessages({\n  urlMeetNowLabel: {\n    defaultMessage: 'URL for meet now page',\n    description: 'Field label',\n  },\n  MeetingBufferLabel: {\n    defaultMessage: 'Buffer time for meet now slots',\n    description: 'Field label',\n  },\n  sourceCodeIrpLabel: {\n    defaultMessage:\n      'Source code to embed the inbound request page of this engagement type',\n    description: 'Field label',\n  },\n  sourceCodeIrpActionLabel: {\n    defaultMessage:\n      'Source code to embed “Call to Action” button for IRP of this engagement type',\n    description: 'Field label',\n  },\n  embedIrpLabel: {\n    defaultMessage:\n      'Copy Iframe code to embed meet now page for the engagement type',\n    description: 'Button label',\n  },\n  embedIrpActionLabel: {\n    defaultMessage:\n      'Copy source code to call to action button of meet now page for this engagement type',\n    description: 'Button label',\n  },\n  irpInstantLabel: {\n    defaultMessage: 'Meet now page URL for this engagement type',\n    description: 'Field label',\n  },\n  enableMeetNowLabel: {\n    defaultMessage: 'Enable meet now for this engagement type',\n    description: 'Field label',\n  },\n  meetNowButtonLabel: {\n    defaultMessage: 'Meet now call to action button text',\n    description: 'Field label',\n  },\n  meetNowButtonPlaceholder: {\n    defaultMessage: 'Meet now call to action button text',\n    description: 'Placeholder text',\n  },\n  meetNowLabel: {\n    defaultMessage: 'Meet Now',\n    description: 'Field label',\n  },\n  approvalProcessLabel: {\n    defaultMessage: 'Meeting APPROVAL PROCESS is set to Instant',\n    description: 'Dependent setting info',\n  },\n  mappedOrUnMappedLabel: {\n    defaultMessage:\n      'Method to process the inbound request page is set to Auto schedule - mapped request page or Auto schedule - unmapped request page',\n    description: 'Dependent setting info',\n  },\n  warningEnableLabel: {\n    defaultMessage: 'Enable the following',\n    description: 'Dependent settings group header',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before enabling Meet Now',\n    description: 'Dependent settings modal title',\n  },\n})\n\nexport const MeetNowField: VFC<RefetchProps & DependentFieldValues> = ({\n  refetch,\n  loading,\n  dependentFieldValues,\n}) => {\n  const { formatMessage } = useIntl()\n  const {\n    irp_instant_meeting_url,\n    enable_irp_instant_meeting_url,\n    irp_instant_meeting_label,\n    enable_external_widget_auto_process,\n    enable_external_widget_auto_process_without_mapping,\n    disable_url,\n    warning,\n  } = useFormState<FormValues>().values\n\n  const { version } = useEventLocation().location!.attributes\n\n  const {\n    approval_process,\n    theme,\n    enable_irp_instant_meeting,\n  } = dependentFieldValues\n  const [isOpen, setIsOpen] = useState(false)\n\n  const getMeetNowState = useCallback(\n    () =>\n      approval_process === 'instant' &&\n      (enable_external_widget_auto_process === 'true' ||\n        enable_external_widget_auto_process_without_mapping === 'true'),\n    [\n      approval_process,\n      enable_external_widget_auto_process,\n      enable_external_widget_auto_process_without_mapping,\n    ]\n  )\n\n  const { value, onChange } = useField('enable_irp_instant_meeting').input\n\n  useEffect(() => {\n    value === 'true' && setIsOpen(!getMeetNowState())\n  }, [getMeetNowState, value])\n\n  const dependentLinks = [\n    approval_process !== 'instant' && {\n      label: formatMessage(messages.approvalProcessLabel),\n      path: Paths.APPROVAL_PROCESS,\n      group: formatMessage(messages.warningEnableLabel),\n    },\n    (enable_external_widget_auto_process !== 'true' ||\n      enable_external_widget_auto_process_without_mapping !== 'true') && {\n      label: formatMessage(messages.mappedOrUnMappedLabel),\n      path: Paths.INBOUND_REQUEST_FORM,\n      group: formatMessage(messages.warningEnableLabel),\n    },\n  ].filter(Boolean) as DependentLinks[]\n\n  const disableLink =\n    enable_irp_instant_meeting !== 'true' || disable_url === 'true'\n\n  return (\n    <FormControlStyledToggleContainer>\n      <Subtitle3>{formatMessage(messages.meetNowLabel)} </Subtitle3>\n      <Field\n        label={formatMessage(messages.enableMeetNowLabel)}\n        name=\"enable_irp_instant_meeting\"\n        render={EngagementTypeToggle}\n      >\n        {isOpen && (\n          <>\n            {loading && <ModalSpinner />}\n            <EngagementModal\n              title={formatMessage(messages.warningModalTitle)}\n              dependentLinks={dependentLinks}\n              onClose={() => {\n                setIsOpen(false)\n                getMeetNowState() ? onChange('true') : onChange('false')\n              }}\n              onConfirm={() => refetch()}\n              version={version}\n            />\n          </>\n        )}\n        <FormControlStyledBody>\n          <FormControlStyledToggleContainer>\n            <Field\n              label={formatMessage(messages.irpInstantLabel)}\n              name=\"enable_irp_instant_meeting_url\"\n              render={EngagementTypeToggle}\n            >\n              <FormFieldWrapper>\n                <Field\n                  name=\"irp_instant_meeting_label\"\n                  render={EngagementInputField}\n                  label={formatMessage(messages.meetNowButtonLabel)}\n                  placeholder={formatMessage(messages.meetNowButtonPlaceholder)}\n                />\n              </FormFieldWrapper>\n              <FormFieldWrapper>\n                <DurationContainer>\n                  <TimeDurationSelect\n                    label={formatMessage(messages.MeetingBufferLabel)}\n                    name=\"irp_instant_meeting_buffer\"\n                  />\n                </DurationContainer>\n              </FormFieldWrapper>\n              <FormFieldWrapper>\n                <Field\n                  name=\"irp_instant_meeting_url\"\n                  render={EngagementLinkField}\n                  label={formatMessage(messages.urlMeetNowLabel)}\n                  disabled={disableLink}\n                  warning={warning}\n                />\n              </FormFieldWrapper>\n              <FormFieldWrapper>\n                <CopyEmbedSourceCode\n                  title={formatMessage(messages.sourceCodeIrpLabel)}\n                  link={getFrameCode(irp_instant_meeting_url)}\n                  buttonLabel={formatMessage(messages.embedIrpLabel)}\n                  disabled={disableLink}\n                />\n              </FormFieldWrapper>\n              <FormFieldWrapper>\n                <CopyEmbedSourceCode\n                  title={formatMessage(messages.sourceCodeIrpActionLabel)}\n                  link={getCallToActionButtonCode(\n                    irp_instant_meeting_url,\n                    theme ? theme.colors.primary : '#0096FF',\n                    irp_instant_meeting_label\n                  )}\n                  buttonLabel={formatMessage(messages.embedIrpActionLabel)}\n                  disabled={disableLink}\n                />\n              </FormFieldWrapper>\n            </Field>\n          </FormControlStyledToggleContainer>\n          {enable_irp_instant_meeting_url === 'false' && (\n            <FormFieldWrapper>\n              <DurationContainer>\n                <TimeDurationSelect\n                  label={formatMessage(messages.MeetingBufferLabel)}\n                  name=\"irp_instant_meeting_buffer\"\n                />\n              </DurationContainer>\n            </FormFieldWrapper>\n          )}\n        </FormControlStyledBody>\n      </Field>\n    </FormControlStyledToggleContainer>\n  )\n}\n","import { FC, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { Subtitle3 } from '@jifflenow/brightui/typography'\nimport { FieldRenderProps, useFormState } from 'react-final-form'\nimport { Textarea } from '@jifflenow/brightui/textarea'\nimport { Field } from 'ui-components/Field'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { EngagementTypeToggle } from '../common'\nimport { RefetchProps } from '../common/types'\nimport { IrpUrlField } from './IrpUrlField'\nimport { SchedulingLogicField } from './SchedulingLogicField'\nimport { MethodRequestField } from './MethodRequest'\nimport { MeetNowField } from './MeetNowField'\nimport {\n  EngagementContainer,\n  FormControlStyled,\n  FormControlStyledToggleContainer,\n  TextAreaContainer,\n} from './styled-components'\nimport { DependentFieldValues, FormValues } from './types'\n\nconst messages = defineMessages({\n  topicOptionsLabel: {\n    defaultMessage: 'Topic Options',\n    description: 'Field label',\n  },\n  unmappedUsersLabel: {\n    defaultMessage: 'Show unmapped users for topic',\n    description: 'Field label',\n  },\n  unmappedRoomsLabel: {\n    defaultMessage: 'Show unmapped rooms for topic',\n    description: 'Field label',\n  },\n  irpSuccessLabel: {\n    defaultMessage: 'IRP success message',\n    description: 'Field label',\n  },\n  irpSuccessLabelPlaceholder: {\n    defaultMessage: 'IRP Success message',\n    description: 'Placeholder text',\n  },\n})\n\nconst SuccessMessageFields: FC<FieldRenderProps<string>> = ({\n  input,\n  label,\n  placeholder,\n}) => (\n  <TextAreaContainer>\n    <EngagementContainer>\n      <FormControlStyled label={label}>\n        <Textarea {...input} autoComplete=\"off\" placeholder={placeholder} />\n      </FormControlStyled>\n    </EngagementContainer>\n  </TextAreaContainer>\n)\n\nconst ExternalWidgetAutoProcessWithoutMapping: FC = () => {\n  const { formatMessage } = useIntl()\n  const {\n    enable_external_widget_auto_process_without_mapping,\n  } = useFormState<FormValues>().values\n  const {\n    enable_topic,\n    enable_topic_to_activity,\n    enable_user_to_topic,\n    enable_room_to_topic,\n  } = useEventLocation().configs!\n\n  return enable_external_widget_auto_process_without_mapping === 'true' &&\n    enable_topic === 'true' &&\n    enable_topic_to_activity === 'true' &&\n    (enable_room_to_topic === 'true' || enable_user_to_topic === 'true') ? (\n    <FormControlStyledToggleContainer>\n      <Subtitle3>{formatMessage(messages.topicOptionsLabel)} </Subtitle3>\n      {enable_user_to_topic === 'true' && (\n        <EngagementTypeToggle\n          label={formatMessage(messages.unmappedUsersLabel)}\n          name=\"show_unmapped_users_for_topic_IRP\"\n        />\n      )}\n      {enable_room_to_topic === 'true' && (\n        <EngagementTypeToggle\n          label={formatMessage(messages.unmappedRoomsLabel)}\n          name=\"show_unmapped_rooms_for_topic_IRP\"\n        />\n      )}\n    </FormControlStyledToggleContainer>\n  ) : null\n}\n\nexport const WidgetFormFields: VFC<RefetchProps & DependentFieldValues> = ({\n  refetch,\n  loading,\n  dependentFieldValues,\n}) => {\n  const { formatMessage } = useIntl()\n  const { enable_irp_instant_meeting } = useEventLocation().configs!\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isGeneralMeeting =\n    masterEngagementType === MasterEngagementTypes.General\n\n  return (\n    <>\n      <IrpUrlField dependentFieldValues={dependentFieldValues} />\n      {isGeneralMeeting && (\n        <>\n          <SchedulingLogicField />\n          <MethodRequestField\n            refetch={refetch}\n            loading={loading}\n            dependentFieldValues={dependentFieldValues}\n          />\n        </>\n      )}\n      <Field\n        name=\"irp_request_success_message_text\"\n        render={SuccessMessageFields}\n        label={formatMessage(messages.irpSuccessLabel)}\n        placeholder={formatMessage(messages.irpSuccessLabelPlaceholder)}\n      />\n      {isGeneralMeeting && (\n        <>\n          <ExternalWidgetAutoProcessWithoutMapping />\n          {enable_irp_instant_meeting === 'true' && (\n            <MeetNowField\n              refetch={refetch}\n              loading={loading}\n              dependentFieldValues={dependentFieldValues}\n            />\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { RefetchProps } from '../common/types'\nimport { EnableIRPField } from './EnableIRPField'\nimport { WidgetFormFields } from './WidgetFormFields'\nimport { Divider, IrpBody } from './styled-components'\nimport { DependentFieldValues } from './types'\n\nexport const FormFields: VFC<RefetchProps & DependentFieldValues> = ({\n  refetch,\n  loading,\n  dependentFieldValues,\n}) => (\n  <IrpBody>\n    <EnableIRPField\n      refetch={refetch}\n      dependentFieldValues={dependentFieldValues}\n    >\n      <Divider />\n      <WidgetFormFields\n        refetch={refetch}\n        loading={loading}\n        dependentFieldValues={dependentFieldValues}\n      />\n    </EnableIRPField>\n    <Divider />\n  </IrpBody>\n)\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const IrpContentLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"600\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"25\" x=\"0\" width=\"200\" height=\"20\" />\n\n      <rect y=\"85\" x=\"0\" width=\"250\" height=\"15\" />\n      <rect y=\"110\" x=\"0\" width=\"282\" height=\"10\" />\n      <rect y=\"80\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"160\" x=\"0\" width=\"1000\" height=\"1.5\" />\n      <rect y=\"185\" x=\"0\" width=\"320\" height=\"8\" />\n    </ContentLoader>\n  )\n}\n","import { FC, useMemo, useState, VFC, useEffect, useRef } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form as FinalForm, FormRenderProps } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { QueryFunction, useQuery, useQueryClient } from 'react-query'\nimport {\n  fetchEngagementTypeSettingsQuery,\n  mutateBulkUpsertEngagementSettings,\n  useApolloClient,\n} from 'gql'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport {\n  getEngagementTypeSettingsVariables,\n  getEngagementTypeSettings_getEngagementTypeSettings,\n  getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue,\n} from 'gql/types/getEngagementTypeSettings'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { BulkEngagementSettingUpdateInput } from 'gql/types/globalTypes'\nimport {\n  bulkUpsertEngagementSettingsVariables,\n  bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue,\n} from 'gql/types/bulkUpsertEngagementSettings'\nimport { fetchEngagementTypeSettings, upsertEngagementTypeSettings } from 'rest'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport {\n  Body,\n  Footer,\n  Header,\n  StyledForm,\n  Container,\n  usePageTitle,\n} from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { RefetchProps } from '../common/types'\nimport { Heading } from './styled-components'\nimport { FormFields } from './FormFields'\nimport { IrpContentLoader } from './IrpContentLoader'\nimport {\n  DependentFieldValues,\n  FormValues,\n  EngagementTypeSettingsRestParams,\n  EngagementTypeSettingsRestResponse,\n  EngagementTypeSettingsUpsertRestPayload,\n} from './types'\n\ntype QueryKeyRequestType =\n  | getEngagementTypeSettingsVariables\n  | EngagementTypeSettingsRestParams\ntype QueryFuncResponseType = EngagementTypeSettingsRestResponse['data']\n\nconst messages = defineMessages({\n  Irp: {\n    defaultMessage: 'Inbound Request Page',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  sectionTitle: {\n    defaultMessage: 'Inbound Request Page',\n    description: 'Section title',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {option} other {options}} failed to save',\n    description: 'Error message',\n  },\n  filedError: {\n    defaultMessage: 'Error saving changes',\n    description: 'Field error message',\n  },\n})\n\nconst LoadingShimmer = () => (\n  <Body>\n    <Container>\n      <IrpContentLoader />\n    </Container>\n  </Body>\n)\n\nconst Form: FC<\n  FormRenderProps<FormValues> & DependentFieldValues & RefetchProps\n> = ({ handleSubmit, dirty, refetch, loading, dependentFieldValues }) => {\n  const { formatMessage } = useIntl()\n\n  const shimmerShown = useRef(false)\n\n  useEffect(() => {\n    if (!loading && !shimmerShown.current) {\n      shimmerShown.current = true\n    }\n  }, [loading])\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      {loading && !shimmerShown.current ? (\n        <LoadingShimmer />\n      ) : (\n        <Body>\n          <Container>\n            <Heading>{formatMessage(messages.sectionTitle)}</Heading>\n            <FormFields\n              refetch={refetch}\n              loading={loading}\n              dependentFieldValues={dependentFieldValues}\n            />\n          </Container>\n          <Footer />\n        </Body>\n      )}\n    </StyledForm>\n  )\n}\n\nconst fieldNames = [\n  'enable_external_widget',\n  'enable_external_widget_url',\n  'activity_external_widget_url',\n  'enable_irp_scheduling_logic_buffer',\n  'irp_meeting_buffer',\n  'enable_external_widget_auto_process',\n  'enable_external_widget_auto_process_without_mapping',\n  'irp_request_success_message_text',\n  'show_unmapped_users_for_topic_IRP',\n  'show_unmapped_rooms_for_topic_IRP',\n  'enable_irp_instant_meeting',\n  'enable_irp_instant_meeting_url',\n  'irp_instant_meeting_url',\n  'irp_instant_meeting_label',\n  'irp_instant_meeting_buffer',\n  'disable_url',\n  'warning',\n]\n\nconst dependentFieldNames = [\n  'theme',\n  'default_mapping',\n  'hide_internal_attendees_in_book_meeting',\n  'internal_attendee_presence',\n  'relax_internal_attendee_presence_for_mm',\n  'offsite_enabled',\n  'enable_manual_scheduling',\n  'approval_process',\n  'enable_external_widget_url',\n  'enable_irp_instant_meeting',\n]\n\nconst getEngagementTypeSettingsQueryFunc = (\n  client: any\n): QueryFunction<\n  QueryFuncResponseType,\n  ['getEngagementTypeSettingsResponse', string, QueryKeyRequestType]\n> => async ({ queryKey: [, version, params] }) => {\n  if (version === '1') {\n    const data = await fetchEngagementTypeSettings(\n      params as EngagementTypeSettingsRestParams\n    )\n\n    return data.data\n  } else {\n    const {\n      data: { getEngagementTypeSettings },\n    } = await fetchEngagementTypeSettingsQuery(client, {\n      variables: params as getEngagementTypeSettingsVariables,\n      fetchPolicy: 'network-only',\n    })\n\n    const data = getEngagementTypeSettings.map(\n      ({\n        name,\n        value: { display_name, value },\n      }: {\n        name: getEngagementTypeSettings_getEngagementTypeSettings['name']\n        value: getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue\n      }) => ({\n        name,\n        displayName: display_name,\n        value,\n      })\n    )\n\n    return data\n  }\n}\n\nconst filterEngagementSettings = (\n  response: QueryFuncResponseType,\n  fields: string[],\n  version: string\n) =>\n  version === '1'\n    ? response\n        .filter(({ name }) => !!fields.find(key => key === name))\n        .map(v => {\n          const tval =\n            v.name === 'theme'\n              ? JSON.parse(v.value)\n              : v.value === 'yes'\n              ? 'true'\n              : v.value === 'no'\n              ? 'false'\n              : v.value\n\n          return { ...v, value: tval }\n        })\n    : response.filter(({ name }) => !!fields.find(key => key === name))\n\nexport const Irp: VFC = () => {\n  const { formatMessage } = useIntl()\n  usePageTitle(formatMessage(messages.Irp))\n  const client = useApolloClient()\n  const queryClient = useQueryClient()\n  const [showLoader, setShowLoader] = useState(false)\n  const { id: engagementTypeId } = useEngagementType().engagementType\n  const {\n    attributes: { systemName: eventName, version },\n  } = useEventLocation().location!\n\n  const restQueryParam = {\n    path: { eventName, engagementTypeUuid: engagementTypeId },\n    query: { 'names[]': [...fieldNames, ...dependentFieldNames] },\n  } as EngagementTypeSettingsRestParams\n\n  const {\n    isLoading: loading,\n    data: getEngagementTypeSettings = [],\n    refetch: refetchGetEngagementTypeSettings,\n  } = useQuery(\n    [\n      'getEngagementTypeSettingsResponse',\n      version,\n      version === '1'\n        ? restQueryParam\n        : {\n            engagementTypeId,\n            names: [...fieldNames, ...dependentFieldNames],\n          },\n    ],\n    getEngagementTypeSettingsQueryFunc(client),\n    {\n      onError: () => {\n        showErrorToast(formatMessage(messages.genericError))\n      },\n    }\n  )\n\n  const fieldValues = useMemo(\n    () =>\n      filterEngagementSettings(getEngagementTypeSettings, fieldNames, version),\n    [getEngagementTypeSettings, version]\n  )\n\n  const dependentValues = useMemo(\n    () =>\n      filterEngagementSettings(\n        getEngagementTypeSettings,\n        [...dependentFieldNames],\n        version\n      ),\n    [getEngagementTypeSettings, version]\n  )\n\n  const initialValues = useMemo(\n    () =>\n      fieldValues.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: value,\n        }),\n        {}\n      ),\n    [fieldValues]\n  )\n\n  const dependentFieldValues = useMemo(\n    () =>\n      dependentValues.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: value,\n        }),\n        {}\n      ),\n    [dependentValues]\n  )\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change }\n  ) => {\n    try {\n      setShowLoader(true)\n      if (version === '1') {\n        let IrpConfigValues = {}\n        Object.keys(values).forEach(name => {\n          const value = values[name as keyof FormValues]\n          const findFieldValues = fieldValues.find(\n            ({ name: fieldName }) => fieldName === name\n          )\n          if (!findFieldValues || findFieldValues?.value !== value) {\n            const val =\n              name === 'event_irp_instant_meeting_enabled'\n                ? { [name]: `${value}` }\n                : value === 'true'\n                ? { [name]: 'yes' }\n                : value === 'false'\n                ? { [name]: 'no' }\n                : { [name]: value }\n\n            IrpConfigValues = { ...IrpConfigValues, ...val }\n          }\n        })\n        const configs: {\n          uuid: string\n          activity_setting: EngagementTypeSettingsUpsertRestPayload\n        } = {\n          uuid: engagementTypeId,\n          activity_setting: { external_widget: IrpConfigValues },\n        }\n        const { data } = await upsertEngagementTypeSettings({\n          path: { eventName },\n          payload: configs,\n        })\n        setShowLoader(false)\n        if (data) {\n          refetchGetEngagementTypeSettings()\n          showSuccessToast(formatMessage(messages.successMessage))\n          client.refetchQueries({ include: ['getEngagementTypeDetails'] })\n          queryClient.refetchQueries('getEngagementTypeSettingsResponse')\n        }\n      } else {\n        const configsToUpdate = fieldValues.reduce<\n          BulkEngagementSettingUpdateInput[]\n        >(\n          (acc, { name, displayName: display_name, value }) =>\n            value !== values[name as keyof FormValues]\n              ? [\n                  ...acc,\n                  {\n                    name,\n                    customValue: {\n                      display_name,\n                      value: values[name as keyof FormValues],\n                    },\n                  },\n                ]\n              : acc,\n          []\n        )\n        const variables: bulkUpsertEngagementSettingsVariables = {\n          engagementTypeId,\n          configsToUpdate,\n        }\n        const { failureCount, totalCount, engagementSettings, successCount } = (\n          await mutateBulkUpsertEngagementSettings(client, {\n            variables,\n            refetchQueries: ['getEngagementTypeDetails'],\n          })\n        ).data!.bulkUpsertEngagementSettings\n        setShowLoader(false)\n        if (failureCount) {\n          showErrorToast(\n            formatMessage(messages.updateError, { totalCount, failureCount })\n          )\n          engagementSettings.forEach(\n            ({ success, name, value }) =>\n              !success &&\n              change(\n                name as keyof FormValues,\n                (value as bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue)\n                  .value ?? undefined\n              )\n          )\n          const errors = engagementSettings.reduce(\n            (acc, { success, name }) =>\n              success\n                ? acc\n                : {\n                    ...acc,\n                    [name]: formatMessage(messages.filedError),\n                  },\n            {}\n          )\n\n          return errors\n        }\n        if (successCount) {\n          // refetchGetEngagementTypeSettings()\n          queryClient.refetchQueries('getEngagementTypeSettingsResponse')\n          showSuccessToast(formatMessage(messages.successMessage))\n        }\n      }\n\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<FormValues>\n        onSubmit={handleSubmit}\n        render={props => (\n          <Form\n            {...props}\n            refetch={() => refetchGetEngagementTypeSettings()}\n            loading={loading}\n            dependentFieldValues={dependentFieldValues}\n          />\n        )}\n        initialValues={initialValues}\n      />\n    </>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\nimport { Fragment } from 'react'\n\nexport const Loader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  const accordionCount = 4\n  const accordionHeaderStartIndex = 72\n  const accordionArrowStartIndex = 80\n  const HRStartIndex = 112\n\n  const Distance = 56\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"600\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"20\" x=\"0\" width=\"145\" height=\"24\" />\n      <rect y=\"24\" x=\"161\" width=\"364\" height=\"16\" />\n\n      {[...Array(accordionCount)].map((_, i) => (\n        <Fragment key={i}>\n          <rect\n            y={accordionHeaderStartIndex + i * Distance}\n            x=\"0\"\n            width=\"98\"\n            height=\"24\"\n          />\n          <rect\n            y={accordionArrowStartIndex + i * Distance}\n            x=\"106\"\n            width=\"14\"\n            height=\"7\"\n          />\n          <rect y={HRStartIndex + i * Distance} x=\"0\" width=\"1000\" height=\"1\" />\n        </Fragment>\n      ))}\n    </ContentLoader>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Title = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.HeadingXSmall,\n}))\n\nexport const SubTitle = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    paddingTop: sizing.scale200,\n  })\n)\n\nexport const Wrapper = styled('div', ({ $theme: { sizing, mediaQuery } }) => ({\n  maxWidth: '1600px',\n  paddingLeft: sizing.scale600,\n  paddingRight: sizing.scale600,\n  paddingTop: sizing.scale650,\n  [mediaQuery.large]: {\n    paddingLeft: '112px',\n    paddingRight: '112px',\n  },\n}))\n\nexport const Action = styled('div', {})\n\nexport const SectionWrapper = styled('div', {\n  display: 'flex',\n})\n\nexport const ActionContainer = styled<{ $isSurveyFirst?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { sizing }, $isSurveyFirst }) => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: sizing.scale600,\n    paddingTop: $isSurveyFirst ? sizing.scale300 : 0,\n    paddingRight: sizing.scale700,\n  })\n)\n\nexport const Section = styled('div', ({ $theme: { sizing, colors } }) => ({\n  width: '25%',\n  ':first-child': {\n    paddingLeft: sizing.scale300,\n  },\n  ':not(:first-child)': {\n    paddingLeft: sizing.scale500,\n  },\n  ':not(:last-child)': {\n    borderRightColor: colors.mono500,\n    borderRightWidth: '0.5px',\n    borderRightStyle: 'solid',\n    paddingRight: sizing.scale500,\n  },\n}))\n\nexport const ActionSection = styled<{ $highlight?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { colors }, $highlight }) => ({\n    width: '25%',\n    backgroundColor: $highlight ? '#D9D9D94D' : 'white',\n    ':not(:last-child)': {\n      borderRightColor: colors.mono500,\n      borderRightWidth: '0.5px',\n      borderRightStyle: 'solid',\n    },\n  })\n)\n\nexport const SectionHeader = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.Subtitle1,\n    marginTop: sizing.scale600,\n    marginBottom: sizing.scale300,\n  })\n)\n\nexport const PanelBody = styled('div', ({ $theme: { colors } }) => ({\n  borderBottomWidth: '1px',\n  borderBottomStyle: 'solid',\n  borderBottomColor: colors.mono400,\n}))\n\nexport const ActionType = styled(\n  'div',\n  ({ $theme: { typography, sizing, colors } }) => ({\n    ...typography.Label,\n    minHeight: sizing.scale600,\n    color: colors.mono600,\n    marginTop: sizing.scale600,\n    marginBottom: sizing.scale600,\n    paddingLeft: sizing.scale300,\n  })\n)\nexport const ActionTextWrapper = styled<{ $isFirst?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { typography, sizing, colors }, $isFirst }) => ({\n    ...typography.Paragraph2,\n    color: colors.primary,\n    paddingLeft: $isFirst ? sizing.scale300 : sizing.scale500,\n    wordBreak: 'break-word',\n    ':hover': {\n      textDecoration: 'underline',\n    },\n  })\n)\nexport const ActionWrapper = styled('div', {\n  width: '100%',\n})\n\nexport const WarningWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale300,\n  marginTop: sizing.scale300,\n  marginLeft: sizing.scale300,\n  marginRight: sizing.scale700,\n}))\n\nexport const WarningText = styled<{ $isVisible: boolean }, 'div'>(\n  'div',\n  ({ $theme: { colors, sizing }, $isVisible }) => ({\n    backgroundColor: colors.warning50,\n    borderColor: colors.warning,\n    borderRadius: sizing.scale100,\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    fontSize: sizing.scale400,\n    lineHeight: sizing.scale400,\n    paddingBottom: sizing.scale100,\n    paddingLeft: sizing.scale300,\n    paddingRight: sizing.scale300,\n    paddingTop: sizing.scale100,\n    visibility: $isVisible ? 'visible' : 'hidden',\n  })\n)\n","import { AccordionOverrides, SharedProps } from '@jifflenow/brightui/accordion'\nimport { IconOverrides } from '@jifflenow/brightui/icon'\nimport {\n  getBorderColor,\n  getBorderStyle,\n  getBorderWidth,\n  getPadding,\n} from 'utils/style-helpers'\n\nexport const accordionOverrides: AccordionOverrides<SharedProps> = {\n  Root: {\n    style: ({ $theme: { colors, mediaQuery, sizing } }) => ({\n      ...getBorderColor(colors.mono400),\n      ...getBorderStyle('solid'),\n      ...getBorderWidth(0),\n      paddingLeft: sizing.scale600,\n      paddingRight: sizing.scale600,\n      [mediaQuery.large]: {\n        paddingLeft: '112px',\n        paddingRight: '112px',\n      },\n    }),\n  },\n}\n\nexport const panelOverrides: AccordionOverrides<SharedProps> = {\n  Header: {\n    style: ({ $expanded, $theme: { colors, sizing, typography } }) => ({\n      ...typography.font300,\n      fontWeight: 600,\n      justifyContent: 'flex-start',\n      paddingLeft: 0,\n      paddingTop: sizing.scale600,\n      paddingBottom: sizing.scale600,\n      backgroundColor: colors.white,\n      color: $expanded ? colors.primary : colors.mono700,\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      borderBottomColor: colors.mono400,\n      ':hover': { color: colors.mono900 },\n    }),\n  },\n  PanelContainer: {\n    style: {\n      borderBottomStyle: 'none',\n    },\n  },\n  Content: {\n    style: ({ $theme: { colors } }) => ({\n      ...getPadding(0),\n      backgroundColor: colors.white,\n    }),\n  },\n}\n\nexport const warningIconOverride: IconOverrides = {\n  Svg: {\n    style: ({ $theme: { sizing } }) => ({\n      strokeWidth: '1',\n      marginRight: sizing.scale100,\n    }),\n  },\n}\n","import { FC, ReactNode, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Field, useForm } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { StatefulTooltip } from '@jifflenow/brightui/tooltip'\nimport { Warning as WarningIcon } from '@jifflenow/brightui/icon'\nimport {\n  useIntl,\n  defineMessages,\n  FormattedMessage,\n  MessageDescriptor,\n} from 'react-intl'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport {\n  SectionWrapper,\n  ActionType,\n  ActionSection,\n  ActionTextWrapper,\n  ActionContainer,\n  Action,\n  ActionWrapper,\n  WarningWrapper,\n  WarningText,\n} from './styled-components'\nimport {\n  ActionsBlocksProps,\n  MailActionName,\n  GroupNominationActionName,\n} from './types'\nimport { warningIconOverride } from './overrides'\n\nconst tooltips = defineMessages<MailActionName>({\n  request_received: {\n    defaultMessage: 'Email to Requestor upon submission of request',\n    description: 'Description of email template',\n  },\n  calendar_to_internal_attendee: {\n    defaultMessage:\n      'Calendar invitation sent to Internal Attendee upon approval of request',\n    description: 'Description of email template',\n  },\n  calendar_to_external_attendee: {\n    defaultMessage:\n      'Calendar invitation sent to External Attendee upon approval of request',\n    description: 'Description of email template',\n  },\n  update_calendar_to_internal_attendee: {\n    defaultMessage:\n      'Updated calendar invitation sent to Internal Attendee once approved request is updated',\n    description: 'Description of email template',\n  },\n  update_calendar_to_external_attendee: {\n    defaultMessage:\n      'Updated calendar invitation sent to External Attendee once approved request is updated',\n    description: 'Description of email template',\n  },\n  cancelled_calendar_to_internal_attendee: {\n    defaultMessage:\n      'Canceled calendar invitation sent to Internal Attendee upon cancellation of request',\n    description: 'Description of email template',\n  },\n  cancelled_calendar_to_external_attendee: {\n    defaultMessage:\n      'Canceled calendar invitation sent to External Attendee upon cancellation of request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_meeting_create: {\n    defaultMessage: 'Email to Meeting Manager upon submission of request',\n    description: 'Description of email template',\n  },\n  request_email_int_attendee_mst: {\n    defaultMessage:\n      'Email to Internal Attendee upon submission of request to confirm planned attendance',\n    description: 'Description of email template',\n  },\n  update_email_int_attendee_mst: {\n    defaultMessage:\n      'Email to Internal Attendee upon updated request to confirm planned attendance',\n    description: 'Description of email template',\n  },\n  cancel_email_int_attendee_mst: {\n    defaultMessage: 'Email to Internal Attendee upon cancellation of request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_meeting_approval: {\n    defaultMessage: 'Email to Meeting Manager upon approval of request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_meeting_update: {\n    defaultMessage:\n      'Email to Meeting Manager upon submission of updated request',\n    description: 'Description of email template',\n  },\n  email_to_req_on_meeting_approval: {\n    defaultMessage: 'Email to Requestor upon approval of request',\n    description: 'Description of email template',\n  },\n  email_to_req_on_meeting_update: {\n    defaultMessage: 'Email to Requestor upon submission of updated request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_meeting_cancellation: {\n    defaultMessage: 'Email to Meeting Manager upon cancellation of request',\n    description: 'Description of email template',\n  },\n  email_to_req_on_meeting_cancellation: {\n    defaultMessage: 'Email to Requestor upon cancellation of request',\n    description: 'Description of email template',\n  },\n  calendar_to_internal_doctor: {\n    defaultMessage:\n      'Calendar invitation for mapping sent to Internal Attendee upon approval of request',\n    description: 'Description of email template',\n  },\n  calendar_to_external_doctor: {\n    defaultMessage:\n      'Calendar invitation for mapping sent to External Attendee upon approval of request',\n    description: 'Description of email template',\n  },\n  cancel_ics_to_internal_doctor: {\n    defaultMessage:\n      'Canceled calendar invitation for mapping sent to Internal Attendee upon cancellation of request',\n    description: 'Description of email template',\n  },\n  cancel_ics_to_external_doctor: {\n    defaultMessage:\n      'Canceled calendar invitation for mapping sent to External Attendee upon cancellation of request',\n    description: 'Description of email template',\n  },\n  email_to_req_on_participant_acceptance: {\n    defaultMessage:\n      'Email to Requestor when attendee(s) accept calendar invitations',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_participant_acceptance: {\n    defaultMessage:\n      'Email to Meeting Manager when attendee(s) accept calendar invitations',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_participant_decline: {\n    defaultMessage:\n      'Email to Meeting Manager when attendee(s) decline calendar invitations',\n    description: 'Description of email template',\n  },\n  email_to_req_on_participant_decline: {\n    defaultMessage:\n      'Email to Requestor when attendee(s) decline calendar invitations',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_new_location_proposal: {\n    defaultMessage:\n      \"Email to Meeting Manager upon Requestor's submission of location preference alteration\",\n    description: 'Description of email template',\n  },\n  email_to_requestor_on_new_location_proposal_declined: {\n    defaultMessage:\n      'Email to Requestor when Meeting Manager rejects location preference alteration',\n    description: 'Description of email template',\n  },\n  external_request_received: {\n    defaultMessage:\n      'Email to External Requestor upon submission of IRP request',\n    description: 'Description of email template',\n  },\n  email_to_requestor_on_external_request_approve: {\n    defaultMessage: 'Email to External Requestor upon approval of IRP request',\n    description: 'Description of email template',\n  },\n  external_request_rejection_by_mm: {\n    defaultMessage:\n      'Email to External Requestor confirming rejection of IRP request',\n    description: 'Description of email template',\n  },\n  external_request_auto_process_failed: {\n    defaultMessage:\n      'Email to Meeting Manager upon submission of IRP request and failure to automatically process internally',\n    description: 'Description of email template',\n  },\n  email_external_request_cancellation: {\n    defaultMessage:\n      'Email to Meeting Manager upon cancellation of IRP request by creator',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_external_meeting_invite: {\n    defaultMessage: 'Email to Meeting Manager upon submission of IRP request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_request_create_reject: {\n    defaultMessage:\n      'Email to Meeting Manager confirming rejection of IRP request',\n    description: 'Description of email template',\n  },\n  email_to_requestor: {\n    defaultMessage:\n      'Email to Requestor generated from within meeting details by Meeting Manager',\n    description: 'Description of email template',\n  },\n  email_to_activity_manager_on_participant_decline: {\n    defaultMessage:\n      'Particpant decline email to requestor when any participant decline meeting invitation',\n    description: 'Description of email template',\n  },\n  self_nomination_create_ics_internal_attendee: {\n    defaultMessage:\n      'Calendar invitation to participant upon submission of self nomination request',\n    description: 'Description of email template',\n  },\n  self_nomination_email_to_mm: {\n    defaultMessage:\n      'Email to Meeting Manager upon participant submitting self nomination request',\n    description: 'Description of email template',\n  },\n  self_nomination_create_email_internal_attendee: {\n    defaultMessage: 'Email to Attendee upon self nomination request',\n    description: 'Description of email template',\n  },\n  self_nomination_update_ics_internal_attendee: {\n    defaultMessage:\n      'Updated calendar invitation to participant upon update of self nomination session',\n    description: 'Description of email template',\n  },\n  self_nomination_remove_ics_internal_attendee: {\n    defaultMessage:\n      'Canceled calendar invitation sent to Attendee upon declining self nomination session',\n    description: 'Description of email template',\n  },\n  self_nomination_remove_email_internal_attendee: {\n    defaultMessage:\n      'Email to Attendee upon Internal/External Attendee declining self nomination calendar invitation',\n    description: 'Description of email template',\n  },\n})\n\nconst displayNames = defineMessages<MailActionName>({\n  email_to_requestor: {\n    defaultMessage: 'Meeting Specific Email',\n    description: 'Display name of email template',\n  },\n  request_received: {\n    defaultMessage: 'Request Confirmation Email',\n    description: 'Display name of email template',\n  },\n  calendar_to_internal_attendee: {\n    defaultMessage: 'Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  calendar_to_external_attendee: {\n    defaultMessage: 'Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  update_calendar_to_internal_attendee: {\n    defaultMessage: 'Updated Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  update_calendar_to_external_attendee: {\n    defaultMessage: 'Updated Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  cancelled_calendar_to_internal_attendee: {\n    defaultMessage: 'Cancel Calendar (ICS)',\n    description: 'Display name of email template',\n  },\n  cancelled_calendar_to_external_attendee: {\n    defaultMessage: 'Cancel Calendar (ICS)',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_meeting_create: {\n    defaultMessage: 'Request Confirmation Email',\n    description: 'Display name of email template',\n  },\n  external_request_received: {\n    defaultMessage: 'IRP Request Confirmation Email',\n    description: 'Display name of email template',\n  },\n  email_to_requestor_on_external_request_approve: {\n    defaultMessage: 'IRP Approval Confirmation Email',\n    description: 'Display name of email template',\n  },\n  external_request_rejection_by_mm: {\n    defaultMessage: 'IRP Rejection Email',\n    description: 'Display name of email template',\n  },\n  external_request_auto_process_failed: {\n    defaultMessage: 'Automated Scheduling Failure Email',\n    description: 'Display name of email template',\n  },\n  email_external_request_cancellation: {\n    defaultMessage: 'IRP Cancellation Request',\n    description: 'Display name of email template',\n  },\n  request_email_int_attendee_mst: {\n    defaultMessage: 'Requested Attendance Confirmation Email',\n    description: 'Display name of email template',\n  },\n  update_email_int_attendee_mst: {\n    defaultMessage: 'Updated Attendance Confirmation Email',\n    description: 'Display name of email template',\n  },\n  cancel_email_int_attendee_mst: {\n    defaultMessage: 'Cancelled Attendance Confirmation Email',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_meeting_approval: {\n    defaultMessage: 'Approval Confirmation Email',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_meeting_update: {\n    defaultMessage: 'Update Confirmation Email',\n    description: 'Display name of email template',\n  },\n  email_to_req_on_meeting_approval: {\n    defaultMessage: 'Approval Confirmation Email',\n    description: 'Display name of email template',\n  },\n  email_to_req_on_meeting_update: {\n    defaultMessage: 'Update Confirmation Email',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_meeting_cancellation: {\n    defaultMessage: 'Cancel Confirmation Email',\n    description: 'Display name of email template',\n  },\n  email_to_req_on_meeting_cancellation: {\n    defaultMessage: 'Cancel Confirmation Email',\n    description: 'Display name of email template',\n  },\n  calendar_to_internal_doctor: {\n    defaultMessage: 'Mapping Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  calendar_to_external_doctor: {\n    defaultMessage: 'Mapping Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  cancel_ics_to_internal_doctor: {\n    defaultMessage: 'Cancel Calendar Mapping (ICS)',\n    description: 'Display name of email template',\n  },\n  cancel_ics_to_external_doctor: {\n    defaultMessage: 'Cancel Calendar Mapping (ICS)',\n    description: 'Display name of email template',\n  },\n  email_to_req_on_participant_acceptance: {\n    defaultMessage: 'Accepted Confirmation Emails',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_participant_acceptance: {\n    defaultMessage: 'Accepted Confirmation Emails',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_participant_decline: {\n    defaultMessage: 'Declined Confirmation Emails',\n    description: 'Display name of email template',\n  },\n  email_to_req_on_participant_decline: {\n    defaultMessage: 'Declined Confirmation Emails',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_external_meeting_invite: {\n    defaultMessage: 'IRP Request Confirmation Email',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_request_create_reject: {\n    defaultMessage: 'IRP Rejection Email',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_new_location_proposal: {\n    defaultMessage: 'Location Alteration Email',\n    description: 'Display name of email template',\n  },\n  email_to_requestor_on_new_location_proposal_declined: {\n    defaultMessage: 'Location Alteration Rejection Email',\n    description: 'Display name of email template',\n  },\n  email_to_activity_manager_on_participant_decline: {\n    defaultMessage: 'Email to activity manager on participant decline',\n    description: 'Display name of email template',\n  },\n  self_nomination_create_ics_internal_attendee: {\n    defaultMessage: 'Self Nomination Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  self_nomination_email_to_mm: {\n    defaultMessage: 'Self Nomination Confirmation Email',\n    description: 'Display name of email template',\n  },\n  self_nomination_create_email_internal_attendee: {\n    defaultMessage: 'Self Nomination Confirmation Email',\n    description: 'Display name of email template',\n  },\n  self_nomination_update_ics_internal_attendee: {\n    defaultMessage: 'Self Nomination Updated Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  self_nomination_remove_ics_internal_attendee: {\n    defaultMessage: 'Self Nomination Cancel Calendar (ICS)',\n    description: 'Display name of email template',\n  },\n  self_nomination_remove_email_internal_attendee: {\n    defaultMessage: 'Self Nomination Cancellation Email',\n    description: 'Display name of email template',\n  },\n})\n\nconst groupNominationTooltips = defineMessages<GroupNominationActionName>({\n  request_received: {\n    defaultMessage:\n      'Email to Requestor upon submission of group nomination request',\n    description: 'Description of email template',\n  },\n  calendar_to_internal_attendee: {\n    defaultMessage:\n      'Calendar invitation to Internal Attendee upon approval of group nomination request',\n    description: 'Description of email template',\n  },\n  calendar_to_external_attendee: {\n    defaultMessage:\n      'Calendar invitation to External Attendee upon approval of group nomination request',\n    description: 'Description of email template',\n  },\n  update_calendar_to_internal_attendee: {\n    defaultMessage:\n      'Updated calendar invitation to Internal Attendee upon update of group nomination request',\n    description: 'Description of email template',\n  },\n  update_calendar_to_external_attendee: {\n    defaultMessage:\n      'Calendar invitation to External Attendee upon approval of group nomination request',\n    description: 'Description of email template',\n  },\n  cancelled_calendar_to_internal_attendee: {\n    defaultMessage:\n      'Canceled calendar invitation sent to Internal Attendee upon cancellation of group nomination request',\n    description: 'Description of email template',\n  },\n  cancelled_calendar_to_external_attendee: {\n    defaultMessage:\n      'Canceled calendar invitation sent to External Attendee upon cancellation of group nomination request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_meeting_create: {\n    defaultMessage:\n      'Email to Meeting Manager upon submission of group nomination request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_meeting_approval: {\n    defaultMessage:\n      'Email to Meeting Manager upon approval of group nomination request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_meeting_update: {\n    defaultMessage:\n      'Email to Meeting Manager upon update to group nomination request',\n    description: 'Description of email template',\n  },\n  email_to_req_on_meeting_approval: {\n    defaultMessage:\n      'Email to Requestor upon approval of group nomination request',\n    description: 'Description of email template',\n  },\n  email_to_req_on_meeting_update: {\n    defaultMessage:\n      'Email to Requestor upon update to group nomination request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_meeting_cancellation: {\n    defaultMessage:\n      'Email to Meeting Manager upon cancellation of group nomination request',\n    description: 'Description of email template',\n  },\n  email_to_req_on_meeting_cancellation: {\n    defaultMessage:\n      'Email to Requestor upon cancellation of group nomination request',\n    description: 'Description of email template',\n  },\n  email_to_mm_on_participant_decline: {\n    defaultMessage:\n      'Email to Meeting Manager upon Internal/External Attendee declining group nomination calendar invitation',\n    description: 'Description of email template',\n  },\n  email_to_req_on_participant_decline: {\n    defaultMessage:\n      'Email to Requestor upon Internal/External Attendee declining group nomination calendar invitation',\n    description: 'Description of email template',\n  },\n  send_cancelled_notification_to_waitlisted_internal_attendees: {\n    defaultMessage:\n      'Email to potential Internal Participant upon cancellation of group nomination waitlisted request',\n    description: 'Description of email template',\n  },\n  send_cancelled_notification_to_waitlisted_external_attendees: {\n    defaultMessage:\n      'Email to potential External Participant upon cancellation of group nomination waitlisted request',\n    description: 'Description of email template',\n  },\n  waitlist_confirmation_email_to_requestor: {\n    defaultMessage:\n      'Email to Requestor upon submission of group nomination waitlist request',\n    description: 'Description of email template',\n  },\n  waitlist_confirmation_email_to_mm: {\n    defaultMessage:\n      'Email to Meeting Manager upon submission of group nomination waitlist request',\n    description: 'Description of email template',\n  },\n  waitlist_confirmation_ics_to_internal_attendees: {\n    defaultMessage:\n      'Calendar invitation to Internal Participant when moving from group nomination waitlist to Attendee',\n    description: 'Description of email template',\n  },\n  waitlist_confirmation_ics_to_external_attendees: {\n    defaultMessage:\n      'Calendar invitation to External Participant when moving from group nomination waitlist to Attendee',\n    description: 'Description of email template',\n  },\n  waitlist_notification_for_internal_attendees: {\n    defaultMessage:\n      'Email to potential Internal Participant upon submission of waitlisted group nomination request',\n    description: 'Description of email template',\n  },\n  waitlist_notification_for_external_attendees: {\n    defaultMessage:\n      'Email to potential External Participant upon submission of waitlisted group nomination request',\n    description: 'Description of email template',\n  },\n})\n\nconst groupNominationDisplayNames = defineMessages<GroupNominationActionName>({\n  request_received: {\n    defaultMessage: 'Group Nomination Confirmation Email',\n    description: 'Display name of email template',\n  },\n  calendar_to_internal_attendee: {\n    defaultMessage: 'Group Nomination Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  calendar_to_external_attendee: {\n    defaultMessage: 'Group Nomination Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  update_calendar_to_internal_attendee: {\n    defaultMessage: 'Group Nomination Updated Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  update_calendar_to_external_attendee: {\n    defaultMessage: 'Group Nomination Updated Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  cancelled_calendar_to_internal_attendee: {\n    defaultMessage: 'Group Nomination Cancel Calendar (ICS)',\n    description: 'Display name of email template',\n  },\n  cancelled_calendar_to_external_attendee: {\n    defaultMessage: 'Group Nomination Cancel Calendar (ICS)',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_meeting_create: {\n    defaultMessage: 'Group Nomination Confirmation Email',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_meeting_approval: {\n    defaultMessage: 'Group Nomination Approval Email',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_meeting_update: {\n    defaultMessage: 'Group Nomination Update Email',\n    description: 'Display name of email template',\n  },\n  email_to_req_on_meeting_approval: {\n    defaultMessage: 'Group Nomination Approval Email',\n    description: 'Display name of email template',\n  },\n  email_to_req_on_meeting_update: {\n    defaultMessage: 'Group Nomination Update Email',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_meeting_cancellation: {\n    defaultMessage: 'Group Nomination Cancellation Email',\n    description: 'Display name of email template',\n  },\n  email_to_req_on_meeting_cancellation: {\n    defaultMessage: 'Group Nomination Cancellation Email',\n    description: 'Display name of email template',\n  },\n  email_to_mm_on_participant_decline: {\n    defaultMessage: 'Group Nomination Participant Declined Email',\n    description: 'Display name of email template',\n  },\n  email_to_req_on_participant_decline: {\n    defaultMessage: 'Group Nomination Participant Declined Email',\n    description: 'Display name of email template',\n  },\n  send_cancelled_notification_to_waitlisted_internal_attendees: {\n    defaultMessage: 'Group Nomination Waitlist Cancel Confirmation Email',\n    description: 'Display name of email template',\n  },\n  send_cancelled_notification_to_waitlisted_external_attendees: {\n    defaultMessage: 'Group Nomination Waitlist Cancel Confirmation Email',\n    description: 'Display name of email template',\n  },\n  waitlist_confirmation_email_to_requestor: {\n    defaultMessage: 'Group Nomination Waitlist Confirmation Email',\n    description: 'Display name of email template',\n  },\n  waitlist_confirmation_email_to_mm: {\n    defaultMessage: 'Group Nomination Waitlist Confirmation Email',\n    description: 'Display name of email template',\n  },\n  waitlist_confirmation_ics_to_internal_attendees: {\n    defaultMessage: 'Group Nomination Waitlist Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  waitlist_confirmation_ics_to_external_attendees: {\n    defaultMessage: 'Group Nomination Waitlist Calendar Invitation (ICS)',\n    description: 'Display name of email template',\n  },\n  waitlist_notification_for_internal_attendees: {\n    defaultMessage: 'Group Nomination Waitlist Confirmation Email',\n    description: 'Display name of email template',\n  },\n  waitlist_notification_for_external_attendees: {\n    defaultMessage: 'Group Nomination Waitlist Confirmation Email',\n    description: 'Display name of email template',\n  },\n})\n\nconst modalLabels = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Warning',\n    description: 'Modal heading',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Cancel',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Confirm',\n    description: 'Button label',\n  },\n})\n\nconst warningMessages = defineMessages({\n  request: {\n    defaultMessage:\n      'Disabling this notification will result in {userType}(s) <b>no longer receiving personal calendar invitations</b> upon approval of requests in this engagement type',\n    description: 'Confirmation message',\n  },\n  update: {\n    defaultMessage:\n      'Disabling this notification will result in {userType}(s) <b>no longer receiving updated personal calendar invitations</b> when modifications are made to requests in this engagement type.',\n    description: 'Confirmation message',\n  },\n  cancel: {\n    defaultMessage:\n      'Disabling this notification will result in {userType}(s) <b>no longer receiving cancellation notices</b> when requests have been cancelled, or individuals have been removed from requests in this engagement type.',\n    description: 'Confirmation message',\n  },\n  decline: {\n    defaultMessage:\n      'Disabling this notification will result in {userType}(s) <b>no longer receiving decline notices</b> when requests have been cancelled, or individuals have been removed from requests in this engagement type.',\n    description: 'Confirmation message',\n  },\n  waitlist: {\n    defaultMessage:\n      'Disabling this notification will result in {userType}(s) <b>no longer receiving personal calendar invitations</b> of group nomination waitlist',\n    description: 'Confirmation message',\n  },\n  create: {\n    defaultMessage:\n      'Disabling this notification will result in {userType}(s) <b>no longer receiving personal calendar invitations</b> upon approval of requests in this engagement type',\n    description: 'Confirmation message',\n  },\n})\n\nconst warningUserTypes = defineMessages({\n  attendee: {\n    defaultMessage: 'Attendee',\n    description: 'User Role',\n  },\n  participant: {\n    defaultMessage: 'Participant',\n    description: 'User Role',\n  },\n})\n\nexport const ActionsBlocks: FC<ActionsBlocksProps> = ({\n  actionTypes,\n  name: sectionName,\n  headers,\n}) => {\n  const { formatMessage } = useIntl()\n  const [showConfirmation, setShowConfirmation] = useState(false)\n  const [actionType, setActionType] = useState<string | null>()\n  const [tempNotificationId, setTempNotificationId] = useState('')\n  const [headerIndex, setHeaderIndex] = useState<number | null>(null)\n  const { systemName: eventName } = useEventLocation().location!.attributes\n  const { uuid } = useEngagementType().engagementType\n  const location = new URLSearchParams(window.location.search).get('location')\n  const { change } = useForm()\n\n  const handleConfirm = () => {\n    change(tempNotificationId, false)\n    setShowConfirmation(false)\n  }\n\n  return (\n    <>\n      {showConfirmation && (\n        <ConfirmationDialog\n          heading={formatMessage(modalLabels.modalHeader)}\n          message={formatMessage(\n            warningMessages[actionType as keyof typeof warningMessages],\n            {\n              b: (chunks: ReactNode) => <strong>{chunks}</strong>,\n              userType:\n                headerIndex &&\n                formatMessage(\n                  headers?.[headerIndex] as MessageDescriptor\n                ).toLowerCase(),\n            }\n          )}\n          cancelLabel={formatMessage(modalLabels.cancelButtonLabel)}\n          successLabel={formatMessage(modalLabels.successButtonLabel)}\n          onClose={() => setShowConfirmation(false)}\n          onCancel={() => setShowConfirmation(false)}\n          onSuccess={handleConfirm}\n        />\n      )}\n      {actionTypes.map((item, pi) => (\n        <SectionWrapper key={`${sectionName}_wrapper_${pi}`}>\n          {item.actionColumns.map((actionColumn, i) => (\n            <ActionSection\n              key={`${sectionName}_actionSection_${i}`}\n              $highlight={pi % 2 === 0}\n            >\n              <ActionType>\n                {i === 0 && item.type ? formatMessage(item.type) : ''}\n              </ActionType>\n              <Action>\n                {actionColumn.map(\n                  ({ name, id: notificationId, templateType }) => {\n                    const isCalendar =\n                      name.includes('calendar') || name.includes('ics')\n                    const keyName = `mail_actions_${notificationId}`\n\n                    return (\n                      <ActionWrapper key={name}>\n                        <Field<boolean>\n                          name={keyName}\n                          type=\"checkbox\"\n                          render={({ input: { onChange, checked } }) => (\n                            <>\n                              <ActionContainer>\n                                <StatefulTooltip\n                                  content={\n                                    templateType === 'GroupNomination'\n                                      ? formatMessage(\n                                          groupNominationTooltips[\n                                            name as GroupNominationActionName\n                                          ]\n                                        )\n                                      : formatMessage(\n                                          tooltips[name as MailActionName]\n                                        )\n                                  }\n                                  showArrow\n                                  popoverMargin={8}\n                                >\n                                  <ActionTextWrapper $isFirst={i === 0}>\n                                    <NavLink\n                                      to={`/events/${eventName}/engagement-types/${uuid}/meeting-type-notifications-details?location=${location}&mail_actions=${name}&notificationId=${notificationId}`}\n                                    >\n                                      {templateType === 'GroupNomination'\n                                        ? formatMessage(\n                                            groupNominationDisplayNames[\n                                              name as GroupNominationActionName\n                                            ]\n                                          )\n                                        : formatMessage(\n                                            displayNames[name as MailActionName]\n                                          )}\n                                    </NavLink>\n                                  </ActionTextWrapper>\n                                </StatefulTooltip>\n                                <Toggle\n                                  ariaLabel={\n                                    templateType === 'GroupNomination'\n                                      ? formatMessage(\n                                          groupNominationDisplayNames[\n                                            name as GroupNominationActionName\n                                          ]\n                                        )\n                                      : formatMessage(\n                                          displayNames[name as MailActionName]\n                                        )\n                                  }\n                                  checked={checked}\n                                  label={' '}\n                                  onChange={e => {\n                                    if (\n                                      isCalendar &&\n                                      !e.currentTarget.checked\n                                    ) {\n                                      item.type &&\n                                        setActionType(\n                                          formatMessage(\n                                            item.type as MessageDescriptor\n                                          ).toLowerCase()\n                                        )\n                                      setTempNotificationId(keyName)\n                                      setHeaderIndex(i)\n                                      setShowConfirmation(true)\n                                    } else {\n                                      onChange(e)\n                                    }\n                                  }}\n                                />\n                              </ActionContainer>\n                              <WarningWrapper>\n                                <WarningText\n                                  $isVisible={!checked && isCalendar}\n                                >\n                                  <WarningIcon\n                                    size={8}\n                                    overrides={warningIconOverride}\n                                  />\n                                  <FormattedMessage\n                                    defaultMessage=\"{userType} will not receive calendar notification\"\n                                    description=\"Warning text\"\n                                    values={{\n                                      br: <br />,\n                                      userType:\n                                        formatMessage(\n                                          headers?.[i] as MessageDescriptor\n                                        ) ===\n                                        formatMessage(warningUserTypes.attendee)\n                                          ? formatMessage(\n                                              warningUserTypes.attendee\n                                            )\n                                          : formatMessage(\n                                              warningUserTypes.participant\n                                            ),\n                                    }}\n                                  />\n                                </WarningText>\n                              </WarningWrapper>\n                            </>\n                          )}\n                        />\n                      </ActionWrapper>\n                    )\n                  }\n                )}\n              </Action>\n            </ActionSection>\n          ))}\n        </SectionWrapper>\n      ))}\n    </>\n  )\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { StatefulTooltip } from '@jifflenow/brightui/tooltip'\nimport { InfoOutlined } from '@jifflenow/brightui/icon'\nimport { InfoTooltipContainer } from '../common'\nimport { SectionWrapper, Section, SectionHeader } from './styled-components'\nimport { SectionsProps } from './types'\n\nconst messages = defineMessages({\n  meetingManagerTooltip: {\n    defaultMessage:\n      'Click on the respective template name to choose a specific meeting manager to be notified.',\n    description: 'Meeting Manager Header tooltip message',\n  },\n})\n\nexport const Sections: FC<SectionsProps> = ({ headers }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <SectionWrapper>\n      {headers?.map((header, i) => (\n        <Section key={i}>\n          <SectionHeader>\n            {header &&\n              formatMessage(header, {\n                meetingManagerTooltip: () => (\n                  <StatefulTooltip\n                    content={formatMessage(messages.meetingManagerTooltip)}\n                    showArrow\n                    popoverMargin={8}\n                  >\n                    <InfoTooltipContainer>\n                      <InfoOutlined />\n                    </InfoTooltipContainer>\n                  </StatefulTooltip>\n                ),\n              })}\n          </SectionHeader>\n        </Section>\n      ))}\n    </SectionWrapper>\n  )\n}\n","import { defineMessage } from 'react-intl'\nimport {\n  ActionName,\n  ActionType,\n  ActionTypeForCategory,\n  Category,\n  CategoryResponse,\n  EngagementMailAction,\n} from './types'\n\nconst general_categories: ReadonlyArray<Category> = [\n  {\n    name: defineMessage({\n      defaultMessage: 'Meeting Templates',\n      description: 'Template category',\n    }),\n    headers: [\n      defineMessage({ defaultMessage: 'Requestor', description: 'Role' }),\n      defineMessage({\n        defaultMessage:\n          'Meeting Manager <meetingManagerTooltip></meetingManagerTooltip>',\n        description: 'Role',\n      }),\n      defineMessage({\n        defaultMessage: 'Internal Participant',\n        description: 'Role',\n      }),\n      defineMessage({\n        defaultMessage: 'External Participant',\n        description: 'Role',\n      }),\n    ],\n    actionTypes: [\n      {\n        type: defineMessage({\n          defaultMessage: 'Request',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['request_received'],\n          ['email_to_mm_on_meeting_create'],\n          ['calendar_to_internal_attendee', 'request_email_int_attendee_mst'],\n          ['calendar_to_external_attendee'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Approve',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['email_to_req_on_meeting_approval'],\n          ['email_to_mm_on_meeting_approval'],\n          [],\n          [],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Assign',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [],\n          [],\n          ['calendar_to_internal_doctor'],\n          ['calendar_to_external_doctor'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Accept',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['email_to_req_on_participant_acceptance'],\n          ['email_to_mm_on_participant_acceptance'],\n          [],\n          [],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Decline',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [\n            'email_to_req_on_participant_decline',\n            'email_to_requestor_on_new_location_proposal_declined',\n          ],\n          ['email_to_mm_on_participant_decline'],\n          [],\n          [],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Update',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['email_to_req_on_meeting_update'],\n          [\n            'email_to_mm_on_meeting_update',\n            'email_to_mm_on_new_location_proposal',\n          ],\n          [\n            'update_calendar_to_internal_attendee',\n            'update_email_int_attendee_mst',\n          ],\n          ['update_calendar_to_external_attendee'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Cancel',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['email_to_req_on_meeting_cancellation'],\n          ['email_to_mm_on_meeting_cancellation'],\n          [\n            'cancelled_calendar_to_internal_attendee',\n            'cancel_ics_to_internal_doctor',\n            'cancel_email_int_attendee_mst',\n          ],\n          [\n            'cancelled_calendar_to_external_attendee',\n            'cancel_ics_to_external_doctor',\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    name: defineMessage({\n      defaultMessage: 'Inbound Request Page Templates',\n      description: 'Template category',\n    }),\n    headers: [\n      defineMessage({ defaultMessage: 'Requestor', description: 'Role' }),\n      defineMessage({\n        defaultMessage:\n          'Meeting Manager <meetingManagerTooltip></meetingManagerTooltip>',\n        description: 'Role',\n      }),\n      defineMessage({\n        defaultMessage: 'Internal Participant',\n        description: 'Role',\n      }),\n      defineMessage({\n        defaultMessage: 'External Participant',\n        description: 'Role',\n      }),\n    ],\n    actionTypes: [\n      {\n        type: defineMessage({\n          defaultMessage: 'Request',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [],\n          [\n            'external_request_auto_process_failed',\n            'email_to_mm_on_external_meeting_invite',\n          ],\n          [],\n          ['external_request_received'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Approve',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [],\n          [],\n          [],\n          ['email_to_requestor_on_external_request_approve'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Rejection',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [],\n          ['email_to_mm_on_request_create_reject'],\n          [],\n          ['external_request_rejection_by_mm'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Cancel',\n          description: 'Action type',\n        }),\n        actionColumns: [[], ['email_external_request_cancellation'], [], []],\n      },\n    ],\n  },\n  {\n    name: defineMessage({\n      defaultMessage: 'Miscellaneous Templates',\n      description: 'Template category',\n    }),\n    headers: [\n      defineMessage({ defaultMessage: 'Requestor', description: 'Role' }),\n      undefined,\n      undefined,\n      undefined,\n    ],\n    actionTypes: [\n      {\n        type: defineMessage({\n          defaultMessage: 'Request',\n          description: 'Action type',\n        }),\n        actionColumns: [['email_to_requestor'], [], [], []],\n      },\n    ],\n  },\n]\n\nconst session_categories: ReadonlyArray<Category> = [\n  {\n    name: defineMessage({\n      defaultMessage: 'Inbound Meeting Request Page templates',\n      description: 'Template category',\n    }),\n    headers: [\n      defineMessage({\n        defaultMessage: 'Requestor',\n        description: 'Role',\n      }),\n      defineMessage({\n        defaultMessage:\n          'Meeting Manager <meetingManagerTooltip></meetingManagerTooltip>',\n        description: 'Role',\n      }),\n      defineMessage({\n        defaultMessage: 'Internal Participant',\n        description: 'Role',\n      }),\n      defineMessage({\n        defaultMessage: 'External Participant',\n        description: 'Role',\n      }),\n    ],\n    actionTypes: [\n      {\n        type: defineMessage({\n          defaultMessage: 'Request',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [],\n          ['email_external_request_cancellation'],\n          [],\n          ['external_request_received'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Approve',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [],\n          [],\n          [],\n          ['email_to_requestor_on_external_request_approve'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Rejection',\n          description: 'Action type',\n        }),\n        actionColumns: [[], [], [], ['external_request_rejection_by_mm']],\n      },\n    ],\n  },\n  {\n    name: defineMessage({\n      defaultMessage: 'Group Nomination templates',\n      description: 'Template category',\n    }),\n    headers: [\n      defineMessage({ defaultMessage: 'Requestor', description: 'Role' }),\n      defineMessage({\n        defaultMessage:\n          'Meeting Manager <meetingManagerTooltip></meetingManagerTooltip>',\n        description: 'Role',\n      }),\n      defineMessage({\n        defaultMessage: 'Internal Participant',\n        description: 'Role',\n      }),\n      defineMessage({\n        defaultMessage: 'External Participant',\n        description: 'Role',\n      }),\n    ],\n    actionTypes: [\n      {\n        type: defineMessage({\n          defaultMessage: 'Request',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['request_received'],\n          ['email_to_mm_on_meeting_create'],\n          ['calendar_to_internal_attendee'],\n          ['calendar_to_external_attendee'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Approve',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['email_to_req_on_meeting_approval'],\n          ['email_to_mm_on_meeting_approval'],\n          [],\n          [],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Decline',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['email_to_req_on_participant_decline'],\n          ['email_to_mm_on_participant_decline'],\n          [],\n          [],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Update',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['email_to_req_on_meeting_update'],\n          ['email_to_mm_on_meeting_update'],\n          ['update_calendar_to_internal_attendee'],\n          ['update_calendar_to_external_attendee'],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Cancel',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['email_to_req_on_meeting_cancellation'],\n          ['email_to_mm_on_meeting_cancellation'],\n          [\n            'cancelled_calendar_to_internal_attendee',\n            'send_cancelled_notification_to_waitlisted_internal_attendees',\n          ],\n          [\n            'cancelled_calendar_to_external_attendee',\n            'send_cancelled_notification_to_waitlisted_external_attendees',\n          ],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Waitlist',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['waitlist_confirmation_email_to_requestor'],\n          ['waitlist_confirmation_email_to_mm'],\n          [\n            'waitlist_notification_for_internal_attendees',\n            'waitlist_confirmation_ics_to_internal_attendees',\n          ],\n          [\n            'waitlist_notification_for_external_attendees',\n            'waitlist_confirmation_ics_to_external_attendees',\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    name: defineMessage({\n      defaultMessage: 'Self Nomination templates',\n      description: 'Template category',\n    }),\n    headers: [\n      defineMessage({\n        defaultMessage:\n          'Meeting Manager <meetingManagerTooltip></meetingManagerTooltip>',\n        description: 'Role',\n      }),\n      defineMessage({ defaultMessage: 'Attendee', description: 'Role' }),\n      undefined,\n      undefined,\n    ],\n    actionTypes: [\n      {\n        type: defineMessage({\n          defaultMessage: 'Create',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [],\n          ['self_nomination_create_ics_internal_attendee'],\n          [],\n          [],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Registration',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          ['self_nomination_email_to_mm'],\n          ['self_nomination_create_email_internal_attendee'],\n          [],\n          [],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Decline',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [],\n          [\n            'self_nomination_remove_ics_internal_attendee',\n            'self_nomination_remove_email_internal_attendee',\n          ],\n          [],\n          [],\n        ],\n      },\n      {\n        type: defineMessage({\n          defaultMessage: 'Update',\n          description: 'Action type',\n        }),\n        actionColumns: [\n          [],\n          ['self_nomination_update_ics_internal_attendee'],\n          [],\n          [],\n        ],\n      },\n    ],\n  },\n]\n\nexport const getCategories = (\n  actionSet: Set<ActionName>,\n  isSession: boolean,\n  mailActions: EngagementMailAction[]\n): ReadonlyArray<CategoryResponse> =>\n  (isSession ? session_categories : general_categories).flatMap(category => {\n    const newActionTypes = category.actionTypes.flatMap(actionType => {\n      let columnsPresent = false\n\n      const newActionColumns = actionType.actionColumns.map(actions =>\n        actions.filter(action => {\n          const present = actionSet.has(action)\n          columnsPresent = columnsPresent || present\n          return present\n        })\n      ) as ActionTypeForCategory['actionColumns']\n\n      const modifiedActionColumns = newActionColumns.map(actionName =>\n        actionName.map(name =>\n          mailActions.find(mailAction => mailAction.name === name)\n        )\n      )\n\n      return columnsPresent\n        ? [\n            {\n              ...actionType,\n              actionColumns: modifiedActionColumns as ActionType['actionColumns'],\n            },\n          ]\n        : []\n    })\n\n    return newActionTypes.length\n      ? [{ ...category, actionTypes: newActionTypes }]\n      : []\n  })\n","import { FC } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Field } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { StatefulTooltip } from '@jifflenow/brightui/tooltip'\nimport { useIntl, defineMessages } from 'react-intl'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport {\n  SectionWrapper,\n  ActionSection,\n  ActionTextWrapper,\n  ActionContainer,\n  Action,\n} from './styled-components'\nimport { SurveyName, SurveyProps } from './types'\n\nconst tooltips = defineMessages<SurveyName>({\n  pre_session_survey: {\n    defaultMessage: 'Email to attendees upon requesting survey to be filled',\n    description: 'Description of email template',\n  },\n  post_session_survey: {\n    defaultMessage: 'Email to attendees upon requesting survey to be filled',\n    description: 'Description of email template',\n  },\n  request_for_post_event_meeting_surveys: {\n    defaultMessage:\n      'Email to internal attendees upon requesting survey to be filled',\n    description: 'Description of email template',\n  },\n})\n\nexport const Survey: FC<SurveyProps> = ({ surveyTemplate }) => {\n  const { formatMessage } = useIntl()\n  const { systemName: eventName } = useEventLocation().location!.attributes\n  const { uuid } = useEngagementType().engagementType\n  const location = new URLSearchParams(window.location.search).get('location')\n\n  return (\n    <SectionWrapper>\n      <ActionSection>\n        <Action>\n          {surveyTemplate.map(\n            ({ id: notificationId, displayName, name }, i) => (\n              <ActionContainer key={notificationId} $isSurveyFirst={i === 0}>\n                <StatefulTooltip\n                  content={formatMessage(tooltips[name as SurveyName])}\n                  showArrow\n                  popoverMargin={8}\n                >\n                  <ActionTextWrapper $isFirst>\n                    <NavLink\n                      to={`/events/${eventName}/engagement-types/${uuid}/meeting-type-notifications-details?location=${location}&mail_actions=${name}&notificationId=${notificationId}`}\n                    >\n                      {displayName}\n                    </NavLink>\n                  </ActionTextWrapper>\n                </StatefulTooltip>\n                <Field<boolean>\n                  name={`mail_actions_${notificationId}`}\n                  type=\"checkbox\"\n                  render={({ input: { onChange, checked } }) => (\n                    <Toggle\n                      ariaLabel={displayName}\n                      checked={checked}\n                      label={' '}\n                      onChange={onChange}\n                    />\n                  )}\n                />\n              </ActionContainer>\n            )\n          )}\n        </Action>\n      </ActionSection>\n    </SectionWrapper>\n  )\n}\n","import { useMemo, VFC } from 'react'\nimport { Form as FinalForm, FormProps } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Accordion, Panel } from '@jifflenow/brightui/accordion'\nimport { Prompt } from 'react-router-dom'\nimport { Footer } from '../common'\nimport { ActionsBlocks } from './ActionsBlocks'\nimport { accordionOverrides, panelOverrides } from './overrides'\nimport { Sections } from './Sections'\nimport { PanelBody } from './styled-components'\nimport { ActionsActiveMap, EngagementMailAction, ActionName } from './types'\nimport { getCategories } from './utils'\nimport { Survey } from './Survey'\n\ntype Props = {\n  mailActions: EngagementMailAction[]\n  onSubmit: FormProps<ActionsActiveMap>['onSubmit']\n  isSession: boolean\n}\n\nconst messages = defineMessages({\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  surveyHeader: {\n    defaultMessage: 'Survey Template',\n    description: 'Header text',\n  },\n})\n\nexport const NotificationsForm: VFC<Props> = ({\n  mailActions,\n  onSubmit,\n  isSession,\n}) => {\n  const nonSession = mailActions.filter(\n    item =>\n      item.templateType !== 'Session' &&\n      item.templateType !== 'SurveyMailAction'\n  )\n\n  const categories = useMemo(\n    () =>\n      getCategories(\n        new Set(nonSession.map(({ name }) => name) as ActionName[]),\n        isSession,\n        mailActions\n      ),\n    [isSession, nonSession, mailActions]\n  )\n  const { formatMessage } = useIntl()\n\n  const actionsActiveMap = {} as ActionsActiveMap\n\n  mailActions.forEach(({ active, id }) => {\n    actionsActiveMap[`mail_actions_${id}`] = active\n  })\n\n  const surveyTemplate = mailActions.filter(\n    item =>\n      item.templateType === 'Session' ||\n      item.templateType === 'SurveyMailAction'\n  )\n\n  return (\n    <FinalForm<ActionsActiveMap>\n      initialValues={actionsActiveMap}\n      onSubmit={onSubmit}\n      render={({ handleSubmit, dirty }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <Prompt\n            when={dirty}\n            message={formatMessage(messages.promptMessage)}\n          />\n          <Accordion\n            accordion\n            initialState={{ expanded: [formatMessage(categories[0].name)] }}\n            overrides={accordionOverrides}\n            renderAll\n          >\n            {categories.map(({ name, headers, actionTypes }) => {\n              const formattedName = formatMessage(name)\n\n              return (\n                <Panel\n                  key={formattedName}\n                  title={formattedName}\n                  overrides={panelOverrides}\n                >\n                  <PanelBody>\n                    <Sections headers={headers} />\n                    <ActionsBlocks\n                      actionTypes={actionTypes}\n                      name={formattedName}\n                      headers={headers}\n                    />\n                  </PanelBody>\n                </Panel>\n              )\n            })}\n            {surveyTemplate.length > 0 && (\n              <Panel\n                title={formatMessage(messages.surveyHeader)}\n                overrides={panelOverrides}\n              >\n                <PanelBody>\n                  <Survey surveyTemplate={surveyTemplate} />\n                </PanelBody>\n              </Panel>\n            )}\n          </Accordion>\n          <Footer />\n        </form>\n      )}\n    />\n  )\n}\n","import { useState, VFC } from 'react'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { useQuery } from 'react-query'\nimport { getMailActionsQueryFn, putEngagementMailActionsQueryFn } from 'rest'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useMutation } from 'react-query'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport {\n  Body,\n  NotificationLoaderContainer,\n  usePageTitle,\n  Header,\n} from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { Loader } from './Loader'\nimport { NotificationsForm } from './NotificationsForm'\nimport { Wrapper, Title, SubTitle } from './styled-components'\nimport { ActionsActiveMap } from './types'\n\nconst LoadingShimmer = () => (\n  <NotificationLoaderContainer>\n    <Loader />\n  </NotificationLoaderContainer>\n)\n\nconst messages = defineMessages({\n  pageTitle: {\n    defaultMessage: 'Notifications',\n    description: 'Page title',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n})\n\nconst Container: VFC = () => {\n  const { formatMessage } = useIntl()\n  usePageTitle(formatMessage(messages.pageTitle))\n  const {\n    uuid: engagementTypeUuid,\n    templateEngagementType: { masterEngagementType },\n  } = useEngagementType().engagementType\n  const { systemName: eventName } = useEventLocation().location!.attributes\n  const [showLoader, setShowLoader] = useState(false)\n\n  const isSession =\n    masterEngagementType === MasterEngagementTypes.TracksAndSession\n\n  const { isLoading, data, error, refetch } = useQuery(\n    ['mailActions', { path: { eventName, engagementTypeUuid } }],\n    getMailActionsQueryFn\n  )\n\n  const { mutateAsync } = useMutation(putEngagementMailActionsQueryFn)\n\n  const handleSubmit = async (values: ActionsActiveMap) => {\n    const bodyParams = data!.data.map(items => ({\n      active: values[`mail_actions_${items.id}`],\n      id: items.id,\n      name: items.name,\n      engagementTypeUuid: items.engagementTypeUuid,\n      templateType: items.templateType,\n    }))\n\n    try {\n      setShowLoader(true)\n      await mutateAsync({\n        eventName,\n        engagementTypeUuid,\n        payload: { data: bodyParams },\n      })\n      setShowLoader(false)\n      showSuccessToast(formatMessage(messages.successMessage))\n      refetch()\n    } catch (err) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  return isLoading ? (\n    <Wrapper>\n      <LoadingShimmer />\n    </Wrapper>\n  ) : error || !data ? (\n    // TODO: Need to use only the error component to avoid extra padding\n    <ErrorPage onButtonClick={() => refetch()} />\n  ) : (\n    <>\n      {showLoader && <ModalSpinner />}\n      <NotificationsForm\n        mailActions={data.data}\n        onSubmit={handleSubmit}\n        isSession={isSession}\n      />\n    </>\n  )\n}\n\nexport const Notifications: VFC = () => (\n  <>\n    <Header />\n    <Body>\n      <Wrapper>\n        <Title>\n          <FormattedMessage\n            defaultMessage=\"Notification Types\"\n            description=\"Notification UI List Header\"\n          />\n        </Title>\n        <SubTitle>\n          <FormattedMessage\n            defaultMessage=\"Notifications are grouped based on the meeting stages for each user.\"\n            description=\"Notification UI List Sub Header\"\n          />\n        </SubTitle>\n      </Wrapper>\n      <Container />\n    </Body>\n  </>\n)\n","import { styled } from '@jifflenow/brightui'\n\nexport const BackButtonText = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.HeadingXSmall,\n    color: colors.primaryA,\n    cursor: 'pointer',\n    display: 'inline-block',\n    ':hover': {\n      textDecoration: 'underline',\n    },\n  })\n)\n\nexport const Root = styled('header', ({ $theme: { sizing } }) => ({\n  paddingBottom: sizing.scale200,\n}))\n\nexport const Wrapper = styled('div', {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100%',\n})\n","import { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { useEffect, useState, VFC } from 'react'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { NavLink, Prompt } from 'react-router-dom'\nimport { JiffleClock } from '@jifflenow/brightui/jiffle-logo'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { Body, Container, Header } from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { BackButtonText, Root, Wrapper } from './styled-components'\n\nconst messages = defineMessages({\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n})\n\nexport const NotificationsDetails: VFC = () => {\n  const {\n    attributes: { systemName: eventName },\n  } = useEventLocation().location!\n  const { formatMessage } = useIntl()\n  const setBeforeUnload = useBeforeUnload()\n  const [dirty, setDirty] = useState(false)\n  const handleMessage = (event: MessageEvent) => {\n    setDirty(event.data)\n  }\n\n  useEffect(() => {\n    setBeforeUnload?.(dirty)\n  }, [setBeforeUnload, dirty])\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage, false)\n\n    return () => {\n      window.removeEventListener('message', handleMessage, false)\n    }\n  }, [])\n\n  const { uuid: activity_uuid } = useEngagementType().engagementType\n  const searchParams = new URLSearchParams(window.location.search)\n  const location = searchParams.get('location')\n  const mail_actions = searchParams.get('mail_actions')\n  const notificationId = searchParams.get('notificationId')\n  const [showLoader, setShowLoader] = useState(true)\n\n  return (\n    <>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      <Body>\n        <Container>\n          <Root>\n            <div>\n              <NavLink\n                to={`/events/${eventName}/engagement-types/${activity_uuid}/meeting-type-notifications?location=${location}`}\n              >\n                <BackButtonText>\n                  <FormattedMessage\n                    defaultMessage=\"< Notification Templates\"\n                    description=\"Anchor text\"\n                  />\n                </BackButtonText>\n              </NavLink>\n            </div>\n            <div>\n              <iframe\n                src={`${origin}/${eventName}/event/settings/notifications?current_location_uuid=${location}&engagement_type_uuid=${activity_uuid}&mail_action=${mail_actions}&notificationId=${notificationId}`}\n                width=\"100%\"\n                style={{ border: 0, height: 'calc(100vh - 124px)' }}\n                frameBorder=\"0\"\n                onLoad={() => setShowLoader(false)}\n                title=\"Notification Details Page\"\n              >\n                {showLoader && (\n                  <Wrapper>\n                    <JiffleClock animated />\n                  </Wrapper>\n                )}\n              </iframe>\n            </div>\n          </Root>\n        </Container>\n      </Body>\n    </>\n  )\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\n\nexport const useFormsDirty = (): [\n  boolean,\n  Dispatch<SetStateAction<boolean>>\n] => {\n  const [dirty, setDirty] = useState(false)\n  const setBeforeUnload = useBeforeUnload()\n\n  useEffect(() => {\n    setBeforeUnload(dirty)\n  }, [dirty, setBeforeUnload])\n\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      if (event.origin !== origin) {\n        return\n      }\n\n      event?.data?.type === 'engagement-form-builder-dirty' &&\n        setDirty(event.data.value)\n    }\n    window.addEventListener('message', handleMessage, false)\n\n    return () => {\n      window.removeEventListener('message', handleMessage, false)\n    }\n  }, [])\n\n  return [dirty, setDirty]\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Wrapper = styled('div', {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100%',\n})\n\nexport const Title = styled('header', ({ $theme: { typography, sizing } }) => ({\n  ...typography.Subtitle1,\n  marginBottom: sizing.scale800,\n}))\n\nexport const Container = styled('div', ({ $theme: { sizing } }) => ({\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  padding: sizing.scale800,\n}))\n\nexport const Iframe = styled('iframe', {\n  flexGrow: 1,\n  border: 0,\n})\n","import { VFC } from 'react'\nimport { stringifyUrl } from 'query-string'\nimport { JiffleClock } from '@jifflenow/brightui/jiffle-logo'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useEngagementType } from '../../EngagementTypeProvider'\nimport { FormBuilderProps } from './types'\nimport { Iframe, Wrapper } from './styled-components'\n\nexport const FormBuilder: VFC<FormBuilderProps> = ({\n  name,\n  surveyId: survey_uuid,\n  surveyMasterName: survey_master_name,\n  title,\n}) => {\n  const {\n    id: current_location_uuid,\n    attributes: { systemName: eventName },\n  } = useEventLocation().location!\n  const { uuid: engagement_type_uuid } = useEngagementType().engagementType\n\n  return (\n    <Iframe\n      src={stringifyUrl(\n        {\n          url: `${origin}/${eventName}/event/engagement_types_form_builder`,\n          query: {\n            current_location_uuid,\n            engagement_type_uuid,\n            survey_uuid,\n            survey_master_name,\n            form_name: name,\n          },\n        },\n        { skipEmptyString: true }\n      )}\n      width=\"100%\"\n      frameBorder=\"0\"\n      title={title}\n    >\n      <Wrapper>\n        <JiffleClock animated />\n      </Wrapper>\n    </Iframe>\n  )\n}\n","import { Prompt } from 'react-router-dom'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Body, Header, usePageTitle, Root } from '../../common'\nimport { useFormsDirty } from '../common/useFormsDirty'\nimport { Container, Title } from '../common/styled-components'\nimport { FormBuilder } from '../common/FormBuilder'\n\nconst messages = defineMessages({\n  outboundMeetingForm: {\n    defaultMessage: 'Outbound Meeting Form',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n})\n\nexport const OutboundMeeting = () => {\n  const { formatMessage } = useIntl()\n  usePageTitle(formatMessage(messages.outboundMeetingForm))\n\n  const [dirty] = useFormsDirty()\n\n  return (\n    <Root>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      <Body>\n        <Container>\n          <Title>{formatMessage(messages.outboundMeetingForm)}</Title>\n          <FormBuilder\n            name=\"outbound-request\"\n            title={formatMessage(messages.outboundMeetingForm)}\n          />\n        </Container>\n      </Body>\n    </Root>\n  )\n}\n","import { Prompt } from 'react-router-dom'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Body, Header, usePageTitle, Root } from '../../common'\nimport { useFormsDirty } from '../common/useFormsDirty'\nimport { Container, Title } from '../common/styled-components'\nimport { FormBuilder } from '../common/FormBuilder'\n\nconst messages = defineMessages({\n  inboundMeetingForm: {\n    defaultMessage: 'Inbound Meeting Form',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n})\n\nexport const InboundMeeting = () => {\n  const { formatMessage } = useIntl()\n  usePageTitle(formatMessage(messages.inboundMeetingForm))\n\n  const [dirty] = useFormsDirty()\n\n  return (\n    <Root>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      <Body>\n        <Container>\n          <Title>{formatMessage(messages.inboundMeetingForm)}</Title>\n          <FormBuilder\n            name=\"inbound-request\"\n            title={formatMessage(messages.inboundMeetingForm)}\n          />\n        </Container>\n      </Body>\n    </Root>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const FilterLabel = styled(\n  'header',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.Subtitle1,\n    marginRight: sizing.scale600,\n  })\n)\n\nexport const SurveyDropDownRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: sizing.scale800,\n}))\n","import { SelectOverrides } from '@jifflenow/brightui/select'\n\nexport const surveyDropdownOverride: SelectOverrides = {\n  Root: {\n    style: { maxWidth: '250px' },\n  },\n}\n","import { useState } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Select } from '@jifflenow/brightui/select'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { getEngagementTypeSurveys_getEngagementTypeSurveys as EngagementTypeSurveys } from 'gql/types/getEngagementTypeSurveys'\nimport { useEngagementType } from '../../EngagementTypeProvider'\nimport { Body, Header, usePageTitle, Root } from '../../common'\nimport { useFormsDirty } from '../common/useFormsDirty'\nimport { Container } from '../common/styled-components'\nimport { FormBuilder } from '../common/FormBuilder'\nimport { FilterLabel, SurveyDropDownRoot } from './styled-components'\nimport { surveyDropdownOverride } from './overrides'\n\nconst messages = defineMessages({\n  surveyForm: {\n    defaultMessage: 'Survey form',\n    description: 'Page title',\n  },\n  surveyFilterLabel: {\n    defaultMessage: 'Survey form for',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nconst confirmationMessages = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Your changes will be lost.',\n    description: 'Modal heading',\n  },\n  modalMessage: {\n    defaultMessage: 'Keep changes?',\n    description: 'Confirmation message',\n  },\n  discardLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  keepLabel: {\n    defaultMessage: 'Keep',\n    description: 'Button label',\n  },\n})\n\nexport const Survey = () => {\n  const { formatMessage } = useIntl()\n  usePageTitle(formatMessage(messages.surveyForm))\n\n  const options = useEngagementType().engagementTypeSurveys.filter(\n    ({ status }) => status\n  )\n\n  const [dirty, setDirty] = useFormsDirty()\n  const [survey, setSurvey] = useState<[EngagementTypeSurveys]>([options[0]])\n  const [tempSelection, setTempSelection] = useState<\n    [EngagementTypeSurveys] | undefined\n  >()\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const handleDiscard = () => {\n    setDirty(false)\n    setShowConfirmation(false)\n    tempSelection && setSurvey(tempSelection)\n    setTempSelection(undefined)\n  }\n\n  const handleKeep = () => {\n    setShowConfirmation(false)\n    setTempSelection(undefined)\n  }\n\n  const handleOnChange = ({ value }: { value: [EngagementTypeSurveys] }) => {\n    if (value[0].surveyMasterUuid === survey?.[0].surveyMasterUuid) {\n      return\n    }\n\n    if (dirty) {\n      setTempSelection(value)\n      setShowConfirmation(true)\n    } else {\n      setSurvey(value)\n    }\n  }\n\n  return (\n    <Root>\n      {showConfirmation && (\n        <ConfirmationDialog\n          heading={formatMessage(confirmationMessages.modalHeader)}\n          message={formatMessage(confirmationMessages.modalMessage)}\n          cancelLabel={formatMessage(confirmationMessages.discardLabel)}\n          successLabel={formatMessage(confirmationMessages.keepLabel)}\n          onCancel={handleDiscard}\n          onSuccess={handleKeep}\n        />\n      )}\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      <Body>\n        <Container>\n          <SurveyDropDownRoot>\n            <FilterLabel>\n              {formatMessage(messages.surveyFilterLabel)}\n            </FilterLabel>\n            <Select\n              options={options}\n              labelKey=\"surveyMasterName\"\n              valueKey=\"surveyMasterUuid\"\n              clearable={false}\n              overrides={surveyDropdownOverride}\n              value={survey}\n              onChange={handleOnChange}\n            />\n          </SurveyDropDownRoot>\n          {survey && (\n            <FormBuilder\n              name=\"survey\"\n              surveyId={survey[0].surveyMasterUuid}\n              surveyMasterName={survey[0].surveyMasterName}\n              title={formatMessage(messages.surveyForm)}\n            />\n          )}\n        </Container>\n      </Body>\n    </Root>\n  )\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { StyledSpinnerNext } from '@jifflenow/brightui/spinner'\n\nexport const FormControlStyled = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale800,\n  })\n)\n\nexport const SpinnerContainer = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  paddingRight: sizing.scale500,\n}))\n\nexport const Spinner = withStyle(\n  StyledSpinnerNext,\n  ({ $theme: { sizing, colors } }) => ({\n    width: sizing.scale600,\n    height: sizing.scale600,\n    borderLeftWidth: sizing.scale0,\n    borderRightWidth: sizing.scale0,\n    borderTopWidth: sizing.scale0,\n    borderBottomWidth: sizing.scale0,\n    borderTopColor: colors.primary,\n    borderRightColor: colors.mono400,\n    borderBottomColor: colors.mono400,\n    borderLeftColor: colors.mono400,\n  })\n)\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Option, Select, Value } from '@jifflenow/brightui/select'\nimport { Field, Validation } from 'ui-components/Field'\nimport { commonMessages, roles as roleLabel } from 'utils/messages'\nimport { RolesFieldProps } from './types'\nimport { FormControlStyled } from './styled-components'\n\nconst messages = defineMessages({\n  roleLabel: {\n    defaultMessage: 'Default engagement type access for roles',\n    description: 'Field label',\n  },\n  roleSearchPlaceholder: {\n    defaultMessage: 'Search by name',\n    description: 'Field label',\n  },\n})\n\nexport const RolesField: VFC<RolesFieldProps> = ({ roles }) => {\n  const { formatMessage } = useIntl()\n\n  const dropdownOptions = [\n    roles.length && {\n      label: formatMessage(commonMessages.allMyAttendees),\n      id: 'ALL',\n    },\n    ...roles.map(\n      ({ roleCompanyid, roleDisplayName }): Option => ({\n        label: formatMessage(roleLabel[roleDisplayName]),\n        id: roleCompanyid,\n      })\n    ),\n  ].filter(Boolean)\n\n  return (\n    <Field<Option[] | undefined>\n      name=\"roles\"\n      format={(value: Option[] | undefined) => value ?? []}\n      parse={(value: Option[]) => (value.length ? value : undefined)}\n      render={({ input, meta: { touched, error } }) => (\n        <FormControlStyled\n          label={formatMessage(messages.roleLabel)}\n          error={touched && error}\n        >\n          <Select\n            {...input}\n            multi\n            id=\"roles\"\n            options={dropdownOptions}\n            backspaceClearsInputValue\n            searchable\n            placeholder={formatMessage(messages.roleSearchPlaceholder)}\n            onChange={({ value }: { value: Value[] }) => input.onChange(value)}\n            required\n            clearable={input.value && input.value.length > 1}\n            dataPendo=\"create-engagement-roles\"\n          />\n        </FormControlStyled>\n      )}\n      validations={[Validation.REQUIRED]}\n    />\n  )\n}\n","import { VFC, useMemo, useState } from 'react'\nimport { FieldValidator } from 'final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { queryValidEngagementTypeName, useApolloClient } from 'gql'\nimport { useField } from 'react-final-form'\nimport { Input } from '@jifflenow/brightui/input'\nimport { Field } from 'ui-components/Field'\nimport { asyncValidatorReducer } from 'utils/asyncValidatorReducer'\nimport { getEngagementNameInputOverride } from './overrides'\nimport { FormControlStyled } from './styled-components'\nimport { EngagementNameFieldProps } from './types'\n\nconst messages = defineMessages({\n  engagementNamePlaceholder: {\n    defaultMessage: 'Enter engagement name',\n    description: 'Placeholder text',\n  },\n})\n\nconst errors = defineMessages({\n  engagementNameExistsError: {\n    defaultMessage: 'Name already exists',\n    description: 'Field error message',\n  },\n  required: {\n    defaultMessage: 'Required',\n    description: 'Field validation error message',\n  },\n})\n\nconst simpleMemoize = (fn: FieldValidator<string>): FieldValidator<string> => {\n  let lastArg: string\n  let lastResult: string\n\n  return async (arg, ...rest) => {\n    if (arg !== lastArg) {\n      lastArg = arg\n      lastResult = await fn(arg, ...rest)\n    }\n\n    return lastResult\n  }\n}\n\nexport const EngagementNameField: VFC<EngagementNameFieldProps> = ({\n  label,\n  isCopy,\n}) => {\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  const [loading, setLoading] = useState(false)\n  const { initial } = useField('name').meta\n\n  const required: FieldValidator<string> = async value =>\n    value?.trim() ? undefined : formatMessage(errors.required)\n\n  const validateUrl: FieldValidator<string> = useMemo(\n    () =>\n      simpleMemoize(async value => {\n        const searchName = value?.trim()\n        if (!searchName || (searchName === initial && !isCopy)) {\n          return undefined\n        }\n        try {\n          setLoading(true)\n          const {\n            data: { isValidEngagementTypeName },\n          } = await queryValidEngagementTypeName(client, {\n            variables: { searchName },\n            // TODO: no-cache policy to force the callback to trigger on every change\n            // info: https://github.com/apollographql/apollo-client/issues/6636\n            fetchPolicy: 'no-cache',\n          })\n          setLoading(false)\n          return isValidEngagementTypeName\n            ? undefined\n            : formatMessage(errors.engagementNameExistsError)\n        } catch (error) {\n          setLoading(false)\n          return undefined\n        }\n      }),\n    [client, formatMessage, initial, isCopy]\n  )\n\n  const validate = asyncValidatorReducer([required, validateUrl])\n\n  return (\n    <Field<string>\n      name=\"name\"\n      type=\"text\"\n      formatOnBlur\n      format={value => value?.trim() ?? value}\n      validate={validate}\n    >\n      {({ input, meta }) => (\n        <FormControlStyled\n          label={label}\n          error={(meta.dirty || meta.touched) && meta.error}\n        >\n          <Input\n            {...input}\n            id=\"engagement-name\"\n            autoComplete=\"off\"\n            placeholder={formatMessage(messages.engagementNamePlaceholder)}\n            overrides={getEngagementNameInputOverride(loading)}\n          />\n        </FormControlStyled>\n      )}\n    </Field>\n  )\n}\n","import { InputOverrides } from '@jifflenow/brightui/input'\nimport { Spinner, SpinnerContainer } from './styled-components'\n\nexport const getEngagementNameInputOverride = (\n  isLoading: boolean\n): InputOverrides => ({\n  After: {\n    component: () =>\n      isLoading ? (\n        <SpinnerContainer>\n          <Spinner />\n        </SpinnerContainer>\n      ) : null,\n  },\n})\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Textarea } from '@jifflenow/brightui/textarea'\nimport { Field } from 'ui-components/Field'\nimport { FormControlStyled } from './styled-components'\nimport { EngagementDescriptionFieldProps } from './types'\n\nconst messages = defineMessages({\n  engagementDescriptionPlaceholder: {\n    defaultMessage: 'Enter description',\n    description: 'Placeholder text',\n  },\n})\n\nexport const EngagementDescriptionField: VFC<EngagementDescriptionFieldProps> = ({\n  label,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Field<string>\n      name=\"description\"\n      type=\"text\"\n      formatOnBlur\n      format={value => value?.trim() ?? value}\n      parse={value => value ?? ''}\n    >\n      {({ input, meta }) => (\n        <FormControlStyled\n          label={label}\n          error={(meta.dirty || meta.touched) && meta.error}\n        >\n          <Textarea\n            {...input}\n            id=\"engagement-description\"\n            autoComplete=\"off\"\n            placeholder={formatMessage(\n              messages.engagementDescriptionPlaceholder\n            )}\n          />\n        </FormControlStyled>\n      )}\n    </Field>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Option, Select } from '@jifflenow/brightui/select'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { Field, Validation } from 'ui-components/Field'\nimport { DisplayOrderFieldProps } from './types'\n\nconst messages = defineMessages({\n  label: {\n    defaultMessage: 'Order of Display',\n    description: 'Field label',\n  },\n  optionLabel: {\n    defaultMessage:\n      '{count, selectordinal, one {#st} two {#nd} few {#rd} other {#th}}',\n    description: 'Option Label',\n  },\n})\n\nexport const DisplayOrderField: VFC<DisplayOrderFieldProps> = ({\n  grandTotal,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const options = [...Array(grandTotal)].map((_, i) => ({\n    id: i + 1,\n    label: formatMessage(messages.optionLabel, { count: i + 1 }),\n  }))\n\n  return (\n    <Field\n      name=\"displayOrder\"\n      parse={(value: Option[]) => value[0]?.id}\n      format={value =>\n        value\n          ? [\n              {\n                id: value,\n                label: formatMessage(messages.optionLabel, { count: value }),\n              },\n            ]\n          : []\n      }\n      render={({ input, meta: { touched, error } }) => (\n        <FormControl\n          label={formatMessage(messages.label)}\n          error={touched && error}\n        >\n          <Select\n            {...input}\n            id=\"displayOrder\"\n            required\n            options={options}\n            onChange={({ value }: { value: Option[] }) => input.onChange(value)}\n            dataPendo=\"create-engagement-display-order\"\n          />\n        </FormControl>\n      )}\n      validations={[Validation.REQUIRED]}\n    />\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const FieldWrapper = styled('div', {\n  width: '100%',\n  maxWidth: '280px',\n})\n\nexport const FormControlStyled = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale800,\n  })\n)\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'react-final-form'\nimport { Input } from '@jifflenow/brightui/input'\nimport { FormControlStyled } from './styled-components'\n\nconst messages = defineMessages({\n  engagementNameLabel: {\n    defaultMessage: 'Selected Engagement Template',\n    description: 'Field label',\n  },\n})\n\nexport const EngagementTemplateField: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Field<string> name=\"engagementTemplateName\" type=\"text\">\n      {({ input }) => (\n        <FormControlStyled label={formatMessage(messages.engagementNameLabel)}>\n          <Input\n            {...input}\n            id=\"engagementTemplateName\"\n            autoComplete=\"off\"\n            disabled\n          />\n        </FormControlStyled>\n      )}\n    </Field>\n  )\n}\n","import { FC, VFC, useMemo, useState, useEffect } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form as FinalForm, FormRenderProps } from 'react-final-form'\nimport createFocusDecorator from 'final-form-focus'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useQueryClient } from 'react-query'\nimport { Option } from '@jifflenow/brightui/select'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport {\n  mutateUpdateEngagementType,\n  useApolloClient,\n  useEngagementTypesGrandTotalQuery,\n  useFetchRolesForRequestEngagement,\n} from 'gql'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { commonMessages, roles as roleLabel } from 'utils/messages'\nimport { fetchRoles_fetchRoles } from 'gql/types/fetchRoles'\nimport { updateEngagementTypeVariables } from 'gql/types/updateEngagementType'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport {\n  EngagementNameField,\n  RolesField,\n  EngagementDescriptionField,\n  DisplayOrderField,\n} from '../../common'\nimport {\n  Body,\n  Footer,\n  Header,\n  StyledForm,\n  Container,\n  usePageTitle,\n} from '../common'\nimport { EngagementTemplateField } from './EngagementTemplateField'\nimport { FieldWrapper } from './styled-components'\n\ninterface FormValues {\n  engagementTemplateName: string\n  name: string\n  description?: string\n  roles: Option[]\n  displayOrder: number\n}\n\nconst messages = defineMessages({\n  basics: {\n    defaultMessage: 'Basics',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  engagementNameLabel: {\n    defaultMessage: 'Name of Engagement Type',\n    description: 'Field label',\n  },\n  engagementDescriptionLabel: {\n    defaultMessage: 'Description',\n    description: 'Field label',\n  },\n  engagementTypeUpdateSuccess: {\n    defaultMessage: 'Engagement type updated successfully.',\n    description: 'Success message',\n  },\n})\n\nconst focusDecorator = createFocusDecorator<FormValues>()\n\nconst Form: FC<FormRenderProps<FormValues>> = ({\n  handleSubmit,\n  dirty,\n  children,\n}) => {\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      <Body>\n        <Container>\n          <FieldWrapper>\n            <EngagementTemplateField />\n            <EngagementNameField\n              label={formatMessage(messages.engagementNameLabel)}\n            />\n            <EngagementDescriptionField\n              label={formatMessage(messages.engagementDescriptionLabel)}\n            />\n            {children}\n          </FieldWrapper>\n        </Container>\n        <Footer />\n      </Body>\n    </StyledForm>\n  )\n}\n\nconst RoleMapper = ({ id }: fetchRoles_fetchRoles | Option) => id as string\n\nexport const EngagementBasics: VFC = () => {\n  const { formatMessage } = useIntl()\n  const queryClient = useQueryClient()\n  const client = useApolloClient()\n  usePageTitle(formatMessage(messages.basics))\n\n  const [showLoader, setShowLoader] = useState(false)\n\n  const {\n    uuid,\n    name,\n    defaultRoles,\n    description,\n    displayOrder,\n    templateEngagementType: { name: engagementTemplateName },\n  } = useEngagementType().engagementType\n\n  const { roles = [] } = useFetchRolesForRequestEngagement({\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const { getEngagementTypes } = useEngagementTypesGrandTotalQuery({\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      page: {},\n      filters: {},\n    },\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const { grandTotal = 0 } = getEngagementTypes ?? {}\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async values => {\n    try {\n      const { roles: selectedRoles, description } = values\n\n      const defaultRoles = selectedRoles.some(({ id }) => id === 'ALL')\n        ? ['ALL']\n        : selectedRoles.filter(({ id }) => id !== 'MM').map(RoleMapper)\n\n      const variables: updateEngagementTypeVariables = {\n        uuid,\n        name: values.name,\n        defaultRoles,\n        description,\n        displayOrder: values.displayOrder,\n      }\n      setShowLoader(true)\n      await mutateUpdateEngagementType(client, {\n        variables,\n        onQueryUpdated: () => {\n          queryClient.refetchQueries('getEngagementTypes')\n          if (name !== values.name || displayOrder !== values.displayOrder) {\n            queryClient.refetchQueries('getEngagementTypeSettings')\n          }\n        },\n      })\n      setShowLoader(false)\n      showSuccessToast(formatMessage(messages.engagementTypeUpdateSuccess))\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  const initialValues: FormValues = useMemo(\n    () => ({\n      engagementTemplateName,\n      name,\n      description: description || '',\n      displayOrder,\n      roles: [\n        {\n          label: formatMessage(roleLabel.MM),\n          id: 'MM',\n          clearableValue: false,\n        },\n        ...(defaultRoles.some(id => id === 'ALL')\n          ? [\n              {\n                label: formatMessage(commonMessages.allMyAttendees),\n                id: 'ALL',\n              },\n            ]\n          : [\n              ...roles\n                .filter(({ roleCompanyid }) =>\n                  defaultRoles.some(roleId => roleId === roleCompanyid)\n                )\n                .map(\n                  ({ roleCompanyid, roleDisplayName }): Option => ({\n                    label: formatMessage(roleLabel[roleDisplayName]),\n                    id: roleCompanyid,\n                  })\n                ),\n            ]),\n      ],\n    }),\n    [\n      defaultRoles,\n      description,\n      displayOrder,\n      engagementTemplateName,\n      formatMessage,\n      name,\n      roles,\n    ]\n  )\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<FormValues>\n        decorators={[focusDecorator]}\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        render={props => (\n          <Form {...props}>\n            <RolesField roles={roles} />\n            <DisplayOrderField grandTotal={grandTotal} />\n          </Form>\n        )}\n      />\n    </>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nexport const useSettingsLoader = (loading: boolean) => {\n  const shown = useRef(false)\n\n  useEffect(() => {\n    if (!loading && !shown.current) {\n      shown.current = true\n    }\n  }, [loading])\n\n  return loading && !shown.current\n}\n","import { ObservableQuery } from '@apollo/client'\nimport { bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings as BulkUpsertEngagementSettings } from 'gql/types/bulkUpsertEngagementSettings'\nimport { getEngagementTypeSettings } from 'gql/types/getEngagementTypeSettings'\n\nexport const updateQueryResults = (\n  updateQuery: ObservableQuery<getEngagementTypeSettings>['updateQuery'],\n  settings: BulkUpsertEngagementSettings[]\n) => {\n  const settingsSuccess = settings.filter(({ success }) => success)\n  updateQuery(existingSettings => ({\n    getEngagementTypeSettings: existingSettings.getEngagementTypeSettings.map(\n      setting => {\n        const updatedSetting = settingsSuccess.find(\n          ({ name }) => name === setting.name\n        )\n\n        return updatedSetting\n          ? { ...setting, value: updatedSetting.value }\n          : setting\n      }\n    ),\n  }))\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const StyledHeading = styled('h2', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale0,\n}))\n\nexport const StyledHeadingDesc = styled(\n  'span',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    marginBottom: sizing.scale550,\n    marginTop: sizing.scale200,\n  })\n)\nexport const BorderStyled = styled('div', ({ $theme: { colors } }) => ({\n  borderBottomColor: colors.mono300,\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1px',\n}))\n\nexport const TopicOptionsBody = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale600,\n  marginBottom: sizing.scale600,\n}))\n\nexport const SectionTitle = styled(\n  'h4',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.Subtitle1,\n    marginBottom: sizing.scale0,\n    color: colors.mono800,\n  })\n)\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { EngagementTypeToggle } from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { BorderStyled, TopicOptionsBody } from './styled-components'\nimport { SectionTitle } from './styled-components'\n\nconst togglesLabel = defineMessages({\n  labelUnmappedUsers: {\n    defaultMessage: 'Show unmapped users for topic',\n    description: 'Field Label',\n  },\n  labelUnmappedRooms: {\n    defaultMessage: 'Show unmapped rooms for topic',\n    description: 'Field Label',\n  },\n  labelAllRoomsMapped: {\n    defaultMessage:\n      \"Show ALL rooms mapped to the topic (under 'RECOMMENDED'), irrespective of their Meeting Type mapping\",\n    description: 'Field Label',\n  },\n  labelSelfNominate: {\n    defaultMessage: 'Allow requestor to nominate themselves for group meetings',\n    description: 'Field Label',\n  },\n  labelAllowInternalAttendeeNomination: {\n    defaultMessage: 'Allow Internal Attendee(s) to be added to a group meeting',\n    description: 'Field Label',\n  },\n  sectionTitle: {\n    defaultMessage: 'Track Options',\n    description: 'Section title',\n  },\n})\n\nexport const FormFields: VFC = () => {\n  const { formatMessage } = useIntl()\n  const {\n    enable_user_to_topic,\n    enable_room_to_topic,\n  } = useEventLocation().configs!\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isGeneralMeeting =\n    masterEngagementType === MasterEngagementTypes.General\n\n  return (\n    <TopicOptionsBody>\n      <BorderStyled />\n      {enable_user_to_topic === 'true' && (\n        <>\n          <EngagementTypeToggle\n            label={formatMessage(togglesLabel.labelUnmappedUsers)}\n            name=\"show_unmapped_users_for_topic\"\n          />\n          <BorderStyled />\n        </>\n      )}\n      {enable_room_to_topic === 'true' && isGeneralMeeting && (\n        <>\n          <EngagementTypeToggle\n            label={formatMessage(togglesLabel.labelUnmappedRooms)}\n            name=\"show_unmapped_rooms_for_topic\"\n          />\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(togglesLabel.labelAllRoomsMapped)}\n            name=\"show_all_mapped_rooms_for_topic\"\n          />\n          <BorderStyled />\n        </>\n      )}\n      {!isGeneralMeeting && (\n        <>\n          <SectionTitle>\n            {formatMessage(togglesLabel.sectionTitle)}\n          </SectionTitle>\n          <EngagementTypeToggle\n            label={formatMessage(togglesLabel.labelSelfNominate)}\n            name=\"allow_requestor_to_self_nominate_to_group_meeting\"\n          />\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(\n              togglesLabel.labelAllowInternalAttendeeNomination\n            )}\n            name=\"allow_internal_attendee_to_group_meeting\"\n          />\n          <BorderStyled />\n        </>\n      )}\n    </TopicOptionsBody>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const TopicOptionsLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"610\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"20\" x=\"0\" width=\"130\" height=\"15\" />\n      <rect y=\"41\" x=\"0\" width=\"350\" height=\"10\" />\n      <rect y=\"76\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"105\" x=\"0\" width=\"230\" height=\"13\" />\n      <rect y=\"100\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"149\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"178\" x=\"0\" width=\"235\" height=\"13\" />\n      <rect y=\"173\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"222\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"250\" x=\"0\" width=\"780\" height=\"13\" />\n      <rect y=\"242\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"294\" x=\"0\" width=\"1000\" height=\"1\" />\n    </ContentLoader>\n  )\n}\n","import { VFC, useState, useMemo } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form as FinalForm, FormRenderProps } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  useGetEngagementTypeSettings,\n  mutateBulkUpsertEngagementSettings,\n  useApolloClient,\n} from 'gql'\nimport {\n  bulkUpsertEngagementSettingsVariables,\n  bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue,\n} from 'gql/types/bulkUpsertEngagementSettings'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue } from 'gql/types/getEngagementTypeSettings'\nimport { BulkEngagementSettingUpdateInput } from 'gql/types/globalTypes'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport {\n  Body,\n  Footer,\n  Header,\n  StyledForm,\n  Container,\n  usePageTitle,\n  LoadingProps,\n} from '../common'\nimport { useSettingsLoader } from '../common/useSettingsLoader'\nimport { updateQueryResults } from '../common/utils'\nimport { FormFields } from './FormFields'\nimport { StyledHeading, StyledHeadingDesc } from './styled-components'\nimport { TopicOptionsLoader } from './TopicOptionsLoader'\n\ninterface FormValues {\n  show_unmapped_users_for_topic: string\n  show_unmapped_rooms_for_topic: string\n  show_all_mapped_rooms_for_topic: string\n}\n\nconst messages = defineMessages({\n  topicOptions: {\n    defaultMessage: 'Topic Options',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {option} other {options}} failed to save',\n    description: 'Error message',\n  },\n  sectionTitle: {\n    defaultMessage: 'Topic Options',\n    description: 'Section title',\n  },\n  sectionTitleDesc: {\n    defaultMessage: 'Internal attendee capabilities during requesting meeting',\n    description: 'Help text',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  fieldErrorMessage: {\n    defaultMessage: 'Error saving changes',\n    description: 'field error message',\n  },\n})\n\nconst topicOptionsLabels = [\n  'show_unmapped_users_for_topic',\n  'show_unmapped_rooms_for_topic',\n  'show_all_mapped_rooms_for_topic',\n  'allow_requestor_to_self_nominate_to_group_meeting',\n  'allow_internal_attendee_to_group_meeting',\n]\n\nconst LoadingShimmer = () => (\n  <Body>\n    <Container>\n      <TopicOptionsLoader />\n    </Container>\n  </Body>\n)\n\nconst Form: VFC<FormRenderProps<FormValues> & LoadingProps> = ({\n  handleSubmit,\n  loading,\n  dirty,\n}) => {\n  const { formatMessage } = useIntl()\n  const showLoading = useSettingsLoader(loading)\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      {showLoading ? (\n        <LoadingShimmer />\n      ) : (\n        <Body>\n          <Container>\n            <StyledHeading>\n              {formatMessage(messages.sectionTitle)}\n            </StyledHeading>\n            <StyledHeadingDesc>\n              {formatMessage(messages.sectionTitleDesc)}\n            </StyledHeadingDesc>\n            <FormFields />\n          </Container>\n          <Footer />\n        </Body>\n      )}\n    </StyledForm>\n  )\n}\n\nexport const TopicOptions: VFC = () => {\n  const [showLoader, setShowLoader] = useState(false)\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  usePageTitle(formatMessage(messages.topicOptions))\n  const { id: engagementTypeId } = useEngagementType().engagementType\n  const {\n    getEngagementTypeSettings = [],\n    loading,\n    updateQuery,\n  } = useGetEngagementTypeSettings({\n    variables: {\n      engagementTypeId,\n      names: topicOptionsLabels,\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const initialValues = useMemo(\n    () =>\n      getEngagementTypeSettings.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue)\n            .value,\n        }),\n        {}\n      ),\n    [getEngagementTypeSettings]\n  )\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change }\n  ) => {\n    try {\n      setShowLoader(true)\n      const configsToUpdate = getEngagementTypeSettings.reduce<\n        BulkEngagementSettingUpdateInput[]\n      >((acc, { name, value: previousValue }) => {\n        const {\n          display_name,\n          value,\n        } = previousValue as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue\n\n        return value !== values[name as keyof FormValues]\n          ? [\n              ...acc,\n              {\n                name,\n                customValue: {\n                  display_name,\n                  value: values[name as keyof FormValues],\n                },\n              },\n            ]\n          : acc\n      }, [])\n\n      const variables: bulkUpsertEngagementSettingsVariables = {\n        engagementTypeId,\n        configsToUpdate,\n      }\n      const { failureCount, totalCount, engagementSettings, successCount } = (\n        await mutateBulkUpsertEngagementSettings(client, {\n          variables,\n        })\n      ).data!.bulkUpsertEngagementSettings\n      setShowLoader(false)\n      if (failureCount) {\n        showErrorToast(\n          formatMessage(messages.updateError, { totalCount, failureCount })\n        )\n        engagementSettings.forEach(\n          ({ success, name, value }) =>\n            !success &&\n            change(\n              name as keyof FormValues,\n              (value as bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue)\n                .value ?? undefined\n            )\n        )\n        const errors = engagementSettings.reduce(\n          (acc, { success, name }) =>\n            success\n              ? acc\n              : {\n                  ...acc,\n                  [name]: formatMessage(messages.fieldErrorMessage),\n                },\n          {}\n        )\n        if (successCount) {\n          updateQueryResults(updateQuery, engagementSettings)\n        }\n\n        return errors\n      }\n      showSuccessToast(formatMessage(messages.successMessage))\n      updateQueryResults(updateQuery, engagementSettings)\n\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        render={props => <Form {...props} loading={loading} />}\n      />\n    </>\n  )\n}\n","import { getEngagementTypeSettings_getEngagementTypeSettings } from 'gql/types/getEngagementTypeSettings'\n\nexport const filterEngagementSettings = (\n  response: getEngagementTypeSettings_getEngagementTypeSettings[],\n  fields: string[]\n) => response.filter(({ name }) => !!fields.find(key => key === name))\n","import { styled } from '@jifflenow/brightui'\n\nexport const FieldWrapper = styled('div', {\n  width: '100%',\n  maxWidth: '100%',\n})\n\nexport const StyledInstructionTitle = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Subtitle1,\n    color: colors.mono800,\n    marginTop: sizing.scale800,\n  })\n)\n\nexport const StyledInstructionDesc = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    marginBottom: sizing.scale500,\n    marginTop: sizing.scale100,\n  })\n)\nexport const NestedRadio = styled('div', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale700,\n}))\n\nexport const StyledHeading = styled('h2', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale550,\n}))\n\nexport const GenericError = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.LabelSmall,\n    color: colors.negative700,\n    marginBottom: sizing.scale100,\n    marginTop: sizing.scale100,\n  })\n)\n","import { RadioOverrides } from '@jifflenow/brightui/radio'\n\nexport const instructionRadioOverride: RadioOverrides = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      marginTop: sizing.scale400,\n      marginBottom: sizing.scale400,\n    }),\n  },\n}\n","import { FC, useEffect, useState, VFC } from 'react'\nimport { FieldRenderProps, useField } from 'react-final-form'\nimport { RadioGroup, Radio, ALIGN } from '@jifflenow/brightui/radio'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'ui-components/Field'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { DependentLinks, RefetchProps } from '../common/types'\nimport { EngagementModal } from '../common/EngagementModal'\nimport { Paths } from '../Paths'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { NestedRadio, GenericError } from './styled-components'\nimport { instructionRadioOverride } from './overrides'\nimport { DependentFieldValues } from './types'\n\nconst messages = defineMessages({\n  labelInstant: {\n    defaultMessage:\n      'INSTANT APPROVAL - Meeting approved upon submission. Calendar invitations will be sent to all participants (internal and external) immediately.',\n    description: 'Field label',\n  },\n  labelAutoApprovedAfterAllAccept: {\n    defaultMessage:\n      'AUTOMATED APPROVAL - Meeting in pending state upon submission. Calendar invitations will be sent to internal participants immediately. The meeting is approved after ALL internal attendees accept.',\n    description: 'Field label',\n  },\n  labelManualApprovedICSOnMeetingApproval: {\n    defaultMessage:\n      'MANUAL APPROVAL (option 1) - Meeting in pending state upon submission. Calendar invitations will be sent to internal and external participants ONLY AFTER the meeting is approved by Meeting Manager.',\n    description: 'Field label',\n  },\n  labelManualApprovedICSOnMeetingRequest: {\n    defaultMessage:\n      'MANUAL APPROVAL (option 2) - Meeting in pending state upon submission. Calendar invitations will be sent to internal participants immediately.',\n    description: 'Field label',\n  },\n  labelManualApprovedICSOnSession: {\n    defaultMessage:\n      'Manual - Send ICS to Internal attendees ONLY AFTER session is approved',\n    description: 'Field label',\n  },\n  labelNoInternalAttendeeMeetingApproved: {\n    defaultMessage:\n      'If there is no internal attendee, meeting is auto Approved',\n    description: 'Field label',\n  },\n  labelNoInternalAttendeeMeetingPending: {\n    defaultMessage:\n      'If there is no internal attendee, meeting remains in Pending',\n    description: 'Field label',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before changing the Approval process',\n    description: 'Dependent settings modal title',\n  },\n  warningDisableLabel: {\n    defaultMessage: 'Disable the following',\n    description: 'Dependent settings group header',\n  },\n  meetNowLabel: {\n    defaultMessage: 'Meet now',\n    description: 'Dependent setting label',\n  },\n  IRPLabel: {\n    defaultMessage: 'Inbound Request Page',\n    description: 'Dependent setting label',\n  },\n  manualForGroupNominations: {\n    defaultMessage: 'Manual process applicable only for group nominations',\n    description: 'Manual nomination approval help text',\n  },\n})\n\nconst MeetingStatus: FC = () => {\n  const { formatMessage } = useIntl()\n  const {\n    input: { value, onChange },\n    meta: { submitError },\n  } = useField('default_meeting_status_for_auto_approval')\n\n  return (\n    <NestedRadio>\n      <RadioGroup\n        align={ALIGN.vertical}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      >\n        {submitError && <GenericError>{submitError}</GenericError>}\n        <Radio value=\"approved\" overrides={instructionRadioOverride}>\n          {formatMessage(messages.labelNoInternalAttendeeMeetingApproved)}\n        </Radio>\n        <Radio value=\"pending\" overrides={instructionRadioOverride}>\n          {formatMessage(messages.labelNoInternalAttendeeMeetingPending)}\n        </Radio>\n      </RadioGroup>\n    </NestedRadio>\n  )\n}\n\nconst ApprovalStatus: FC<FieldRenderProps<string>> = ({\n  input: { value, onChange, name },\n  meta: { submitError },\n  loading,\n  refetch,\n  dependentFieldValues,\n}) => {\n  const { formatMessage } = useIntl()\n  const {\n    enable_irp_instant_meeting,\n    enable_external_widget,\n  } = dependentFieldValues\n  const [isOpen, setIsOpen] = useState(false)\n  const {\n    templateEngagementType: { masterEngagementType },\n  } = useEngagementType().engagementType\n  const isSession =\n    masterEngagementType === MasterEngagementTypes.TracksAndSession\n\n  useEffect(() => {\n    value &&\n      !isSession &&\n      value !== 'instant' &&\n      setIsOpen(enable_irp_instant_meeting === 'true')\n    value &&\n      isSession &&\n      value === 'manual_ics_on_meeting_approve' &&\n      setIsOpen(enable_external_widget === 'true')\n  }, [enable_irp_instant_meeting, value, isSession, enable_external_widget])\n\n  const dependentLinks = [\n    enable_irp_instant_meeting !== 'false' &&\n      !isSession && {\n        label: formatMessage(messages.meetNowLabel),\n        path: Paths.INBOUND_REQUEST_FORM,\n        group: formatMessage(messages.warningDisableLabel),\n      },\n    enable_external_widget !== 'false' &&\n      isSession && {\n        label: formatMessage(messages.IRPLabel),\n        path: Paths.INBOUND_REQUEST_FORM,\n        group: formatMessage(messages.warningDisableLabel),\n      },\n  ].filter(Boolean) as DependentLinks[]\n\n  return (\n    <>\n      {isOpen && (\n        <>\n          {loading && <ModalSpinner />}\n          <EngagementModal\n            title={formatMessage(messages.warningModalTitle)}\n            dependentLinks={dependentLinks}\n            onClose={() => {\n              setIsOpen(false)\n              enable_irp_instant_meeting === 'true' &&\n                !isSession &&\n                onChange('instant')\n              enable_external_widget === 'true' &&\n                isSession &&\n                onChange('instant')\n            }}\n            onConfirm={() => refetch()}\n          />\n        </>\n      )}\n      {submitError && <GenericError>{submitError}</GenericError>}\n      <RadioGroup\n        align={ALIGN.vertical}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        name={name}\n      >\n        <Radio value=\"instant\" overrides={instructionRadioOverride}>\n          {formatMessage(messages.labelInstant)}\n        </Radio>\n        {isSession && (\n          <Radio\n            value=\"manual_ics_on_meeting_approve\"\n            overrides={instructionRadioOverride}\n            description={formatMessage(messages.manualForGroupNominations)}\n          >\n            {formatMessage(messages.labelManualApprovedICSOnSession)}\n          </Radio>\n        )}\n        {!isSession && (\n          <Radio\n            value=\"auto_approved_after_all_int_att\"\n            overrides={instructionRadioOverride}\n          >\n            {formatMessage(messages.labelAutoApprovedAfterAllAccept)}\n          </Radio>\n        )}\n        {value === 'auto_approved_after_all_int_att' && !isSession ? (\n          <MeetingStatus />\n        ) : null}\n        {!isSession && (\n          <Radio\n            value=\"manual_ics_on_meeting_approve\"\n            overrides={instructionRadioOverride}\n          >\n            {formatMessage(messages.labelManualApprovedICSOnMeetingApproval)}\n          </Radio>\n        )}\n        {!isSession && (\n          <Radio\n            value=\"manual_ics_on_meeting_create\"\n            overrides={instructionRadioOverride}\n          >\n            {formatMessage(messages.labelManualApprovedICSOnMeetingRequest)}\n          </Radio>\n        )}\n      </RadioGroup>\n    </>\n  )\n}\n\nexport const FormFields: VFC<RefetchProps & DependentFieldValues> = ({\n  loading,\n  dependentFieldValues,\n  refetch,\n}) => (\n  <Field<string>\n    name=\"approval_process\"\n    render={props => (\n      <ApprovalStatus\n        {...props}\n        refetch={refetch}\n        loading={loading}\n        dependentFieldValues={dependentFieldValues}\n      />\n    )}\n  />\n)\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const ApprovalProcessContentLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"600\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"20\" x=\"0\" width=\"165\" height=\"20\" />\n\n      <rect y=\"62\" x=\"0\" width=\"215\" height=\"13\" />\n      <rect y=\"90\" x=\"0\" width=\"340\" height=\"10\" />\n\n      <rect y=\"132\" x=\"0\" width=\"18\" height=\"18\" rx=\"10\" ry=\"10\" />\n      <rect y=\"134\" x=\"33\" width=\"50\" height=\"13\" />\n\n      <rect y=\"180\" x=\"0\" width=\"18\" height=\"18\" rx=\"10\" ry=\"10\" />\n      <rect y=\"182\" x=\"33\" width=\"375\" height=\"13\" />\n\n      <rect y=\"228\" x=\"0\" width=\"18\" height=\"18\" rx=\"10\" ry=\"10\" />\n      <rect y=\"230\" x=\"33\" width=\"540\" height=\"13\" />\n\n      <rect y=\"276\" x=\"0\" width=\"18\" height=\"18\" rx=\"10\" ry=\"10\" />\n      <rect y=\"278\" x=\"33\" width=\"525\" height=\"13\" />\n    </ContentLoader>\n  )\n}\n","import { FC, VFC, useState, useMemo } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form as FinalForm, FormRenderProps } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport {\n  mutateBulkUpsertEngagementSettings,\n  useApolloClient,\n  useGetEngagementTypeSettings,\n} from 'gql'\nimport {\n  bulkUpsertEngagementSettingsVariables,\n  bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue as CustomNameValue,\n} from 'gql/types/bulkUpsertEngagementSettings'\nimport { getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue } from 'gql/types/getEngagementTypeSettings'\nimport { BulkEngagementSettingUpdateInput } from 'gql/types/globalTypes'\nimport {\n  Body,\n  Footer,\n  Header,\n  StyledForm,\n  Container,\n  usePageTitle,\n} from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { RefetchProps } from '../common/types'\nimport { useSettingsLoader } from '../common/useSettingsLoader'\nimport { updateQueryResults } from '../common/utils'\nimport { filterEngagementSettings } from '../common/filterEngagementSettings'\nimport {\n  FieldWrapper,\n  StyledHeading,\n  StyledInstructionDesc,\n  StyledInstructionTitle,\n} from './styled-components'\nimport { FormFields } from './FormFields'\nimport { ApprovalProcessContentLoader } from './ApprovalProcessContentLoader'\nimport { DependentFieldValues, FormValues } from './types'\n\nconst messages = defineMessages({\n  approvalProcess: {\n    defaultMessage: 'Approval Process',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  sectionTitle: {\n    defaultMessage: 'Approval Process',\n    description: 'section title',\n  },\n  helpText: {\n    defaultMessage: 'Help Text',\n    description: 'Help Text',\n  },\n  instructionLabel: {\n    defaultMessage: 'Select an approval process',\n    description: 'Instruction message',\n  },\n  AdditionalInstructionLabel: {\n    defaultMessage: 'How this meeting should be approved when scheduled',\n    description: 'Instruction message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  filedError: {\n    defaultMessage: 'Error saving changes',\n    description: 'Error label message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {option} other {options}} failed to save',\n    description: 'Error message',\n  },\n})\n\nconst LoadingShimmer = () => (\n  <Body>\n    <Container>\n      <ApprovalProcessContentLoader />\n    </Container>\n  </Body>\n)\n\nconst Form: FC<\n  FormRenderProps<FormValues> & RefetchProps & DependentFieldValues\n> = ({ handleSubmit, dirty, refetch, loading, dependentFieldValues }) => {\n  const { formatMessage } = useIntl()\n  const showLoading = useSettingsLoader(loading)\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      {showLoading ? (\n        <LoadingShimmer />\n      ) : (\n        <Body>\n          <Container>\n            <FieldWrapper>\n              <StyledHeading>\n                {formatMessage(messages.sectionTitle)}\n              </StyledHeading>\n              <StyledInstructionTitle>\n                {formatMessage(messages.instructionLabel)}\n              </StyledInstructionTitle>\n              <StyledInstructionDesc>\n                {formatMessage(messages.AdditionalInstructionLabel)}\n              </StyledInstructionDesc>\n              <FormFields\n                refetch={refetch}\n                loading={loading}\n                dependentFieldValues={dependentFieldValues}\n              />\n            </FieldWrapper>\n          </Container>\n          <Footer />\n        </Body>\n      )}\n    </StyledForm>\n  )\n}\n\nconst fieldNames = [\n  'approval_process',\n  'default_meeting_status_for_auto_approval',\n]\n\nconst dependentFieldNames = [\n  'enable_irp_instant_meeting',\n  'enable_external_widget',\n]\n\nexport const ApprovalProcess: VFC = () => {\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  usePageTitle(formatMessage(messages.approvalProcess))\n  const [showLoader, setShowLoader] = useState(false)\n\n  const { id: engagementTypeId } = useEngagementType().engagementType\n\n  const {\n    loading,\n    getEngagementTypeSettings = [],\n    refetch: refetchGetEngagementTypeSettings,\n    updateQuery,\n  } = useGetEngagementTypeSettings({\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      engagementTypeId,\n      names: [...fieldNames, ...dependentFieldNames],\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  const fieldValues = useMemo(\n    () => filterEngagementSettings(getEngagementTypeSettings, fieldNames),\n    [getEngagementTypeSettings]\n  )\n\n  const dependentValues = useMemo(\n    () =>\n      filterEngagementSettings(getEngagementTypeSettings, dependentFieldNames),\n    [getEngagementTypeSettings]\n  )\n\n  const initialValues = useMemo(\n    () =>\n      fieldValues.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue)\n            .value,\n        }),\n        {}\n      ),\n    [fieldValues]\n  )\n\n  const dependentFieldValues = useMemo(\n    () =>\n      dependentValues.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue)\n            .value,\n        }),\n        {}\n      ),\n    [dependentValues]\n  )\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change }\n  ) => {\n    try {\n      const configsToUpdate = fieldValues.reduce<\n        BulkEngagementSettingUpdateInput[]\n      >((acc, { name, value: previousValue }) => {\n        const {\n          display_name,\n          value,\n        } = previousValue as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue\n\n        return value !== values[name as keyof FormValues]\n          ? [\n              ...acc,\n              {\n                name,\n                customValue: {\n                  display_name,\n                  value: values[name as keyof FormValues],\n                },\n              },\n            ]\n          : acc\n      }, [])\n\n      setShowLoader(true)\n      const variables: bulkUpsertEngagementSettingsVariables = {\n        engagementTypeId,\n        configsToUpdate,\n      }\n      const { failureCount, totalCount, engagementSettings, successCount } = (\n        await mutateBulkUpsertEngagementSettings(client, {\n          variables,\n        })\n      ).data!.bulkUpsertEngagementSettings\n      setShowLoader(false)\n      if (failureCount) {\n        showErrorToast(\n          formatMessage(messages.updateError, { totalCount, failureCount })\n        )\n        engagementSettings.forEach(\n          ({ success, name, value }) =>\n            !success &&\n            change(\n              name as keyof FormValues,\n              (value as CustomNameValue).value ?? undefined\n            )\n        )\n        const errors = engagementSettings.reduce(\n          (acc, { success, name }) =>\n            success\n              ? acc\n              : {\n                  ...acc,\n                  [name]: formatMessage(messages.filedError),\n                },\n          {}\n        )\n        if (successCount) {\n          updateQueryResults(updateQuery, engagementSettings)\n        }\n\n        return errors\n      }\n      showSuccessToast(formatMessage(messages.successMessage))\n      updateQueryResults(updateQuery, engagementSettings)\n\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<FormValues>\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        render={props => (\n          <Form\n            {...props}\n            refetch={() => refetchGetEngagementTypeSettings()}\n            loading={loading}\n            dependentFieldValues={dependentFieldValues}\n          />\n        )}\n      />\n    </>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const FieldWrapper = styled('div', {\n  width: '100%',\n  maxWidth: '100%',\n})\n\nexport const FormControlStyled = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale800,\n  })\n)\n\nexport const Heading = styled('h2', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale0,\n}))\n\nexport const LocationTypeBody = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale600,\n  marginBottom: sizing.scale600,\n}))\n\nexport const FormFieldWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale800,\n  // marginBottom: sizing.scale600,\n}))\n\nexport const ToggleWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale0,\n}))\n\nexport const Divider = styled('div', ({ $theme: { colors, sizing } }) => ({\n  borderTopWidth: '1px',\n  borderTopStyle: 'solid',\n  borderTopColor: colors.mono300,\n  marginBottom: sizing.scale500,\n}))\n\nexport const EngagementContainer = styled('div', ({ $theme: { sizing } }) => ({\n  alignItems: 'center',\n  marginRight: sizing.scale1600,\n}))\n\nexport const DurationWrapper = styled('div', {\n  alignItems: 'center',\n  maxWidth: '320px',\n})\n\nexport const InputFlexWrapper = styled('div', ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  [mediaQuery.medium]: {\n    flexDirection: 'row',\n  },\n}))\n\nexport const InputFieldContainer = styled('div', ({ $theme: { sizing } }) => ({\n  width: '100%',\n  maxWidth: '382px',\n  marginBottom: sizing.scale800,\n}))\n\nexport const FieldSeparator = styled('div', ({ $theme: { colors } }) => ({\n  borderBottomColor: colors.mono300,\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1px',\n}))\n\nexport const Section = styled('div', ({ $theme: { sizing } }) => ({\n  overflow: 'auto',\n  marginBottom: sizing.scale1000,\n}))\n\nexport const SectionTitle = styled(\n  'h4',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.Subtitle1,\n    marginBottom: sizing.scale400,\n    color: colors.mono800,\n    marginTop: sizing.scale1000,\n  })\n)\n","import { useEffect, useMemo, useState, VFC } from 'react'\nimport { FieldValidator } from 'final-form'\nimport { FieldRenderProps } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Select, Option } from '@jifflenow/brightui/select'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { Field } from 'ui-components/Field'\nimport { TimeIncrementProps } from './types'\nimport { InputFieldContainer } from './styled-components'\n\nconst messages = defineMessages({\n  timeIncrementTitle: {\n    defaultMessage: 'Time increment',\n    description: 'Field label',\n  },\n  timeCanOnlyDecreaseError: {\n    defaultMessage: 'Time increment can only be decreased',\n    description: 'Error message',\n  },\n  timeCannotBeMoreThanMinMaxError: {\n    defaultMessage: 'Time increment cannot be more than minimum duration',\n    description: 'Error message',\n  },\n})\n\nconst MinuteField: VFC<FieldRenderProps<string>> = ({\n  input: { value: mins, onChange },\n  meta: { submitError, error },\n}) => {\n  const { formatMessage, formatNumber } = useIntl()\n  const [value, setValue] = useState<Option[]>()\n\n  const hoursDropdownOptions = useMemo(\n    () =>\n      [...Array(60).keys()].map((_, i) => ({\n        label: formatNumber(i + 1, {\n          style: 'unit',\n          unit: 'minute',\n          unitDisplay: 'short',\n        }),\n        id: i + 1,\n      })),\n    [formatNumber]\n  )\n\n  useEffect(() => {\n    setValue(hoursDropdownOptions.filter(({ id }) => +mins === id))\n  }, [hoursDropdownOptions, mins])\n\n  const handleOnChange = (value: Option[]) => {\n    setValue(value)\n    onChange(value[0].id)\n  }\n\n  return (\n    <InputFieldContainer>\n      <FormControl\n        label={formatMessage(messages.timeIncrementTitle)}\n        error={submitError || error}\n      >\n        <Select\n          options={hoursDropdownOptions}\n          clearable={false}\n          value={value}\n          searchInput\n          onChange={({ value }: { value: Option[] }) => handleOnChange(value)}\n          dataPendo=\"time-increment\"\n        />\n      </FormControl>\n    </InputFieldContainer>\n  )\n}\n\nexport const TimeIncrement: VFC<TimeIncrementProps> = ({\n  dependentFieldValues,\n  hasActiveMeetings,\n}) => {\n  const { formatMessage } = useIntl()\n  const {\n    min_duration,\n    offsite_enabled,\n    offsite_min_duration,\n    booth_tour_enabled,\n    booth_tour_min_duration,\n  } = dependentFieldValues\n\n  const validateMeetingsPresent: FieldValidator<string> = (value, _, meta) =>\n    hasActiveMeetings && +value > +meta?.initial!\n      ? formatMessage(messages.timeCanOnlyDecreaseError)\n      : undefined\n\n  const validateLocationDurations: FieldValidator<string> = value =>\n    +value > +min_duration ||\n    (offsite_enabled === 'true' && +value > +offsite_min_duration) ||\n    (booth_tour_enabled === 'true' && +value > +booth_tour_min_duration)\n      ? formatMessage(messages.timeCannotBeMoreThanMinMaxError)\n      : undefined\n\n  const validate: FieldValidator<string> = (...args) =>\n    [validateMeetingsPresent, validateLocationDurations].reduce(\n      (acc, validation) => acc ?? validation(...args),\n      undefined\n    )\n\n  return (\n    <Field<string>\n      name=\"minimum_timeslot\"\n      format={value => value ?? +value}\n      parse={(value: number) => value.toString()}\n      component={MinuteField}\n      validate={validate}\n    />\n  )\n}\n","import { Dispatch, Key, SetStateAction } from 'react'\nimport {\n  RoomAvailabilityDay,\n  RoomAvailabilityLocationTypes,\n} from 'gql/types/globalTypes'\nimport { TimeRangeType } from './common/types'\nimport { Availabilities } from './Availability'\n\nexport type RoomAvailabilityProps = {\n  weekwise: boolean\n  locationType: RoomAvailabilityLocationTypes\n  setAvailabilities: Dispatch<SetStateAction<Availabilities[]>>\n  status: SelectOptions\n  setHandleDiscard: Dispatch<SetStateAction<(arg?: () => void) => void>>\n}\n\nexport type CopyDaySlotsToRoomProps = {\n  activeTab: Key\n  engagementTypeSettings: {\n    offsite_enabled?: 'true' | 'false'\n    booth_tour_enabled?: 'true' | 'false'\n  }\n  roomChecked: boolean\n  setRoomChecked: Dispatch<SetStateAction<boolean>>\n  offsiteChecked: boolean\n  setOffsiteChecked: Dispatch<SetStateAction<boolean>>\n  boothTourChecked: boolean\n  setBoothTourChecked: Dispatch<SetStateAction<boolean>>\n}\n\nexport type CopyRoomAvailabilityProps = {\n  isOpen: boolean\n  onClose: () => void\n  activeTab: RoomAvailabilityLocationTypes\n  getModalLabel: () => string\n  engagementTypeSettings: {\n    offsite_enabled?: 'true' | 'false'\n    booth_tour_enabled?: 'true' | 'false'\n  }\n}\nexport enum SelectOptions {\n  AVAILABILITY = 'AVAILABILITY',\n  EXCEPTION = 'EXCEPTION',\n}\n\nexport type AvailabilityOption = {\n  id: number\n  label: SelectOptions\n}\n\nexport type LocationTypes = {\n  label: string\n  location: RoomAvailabilityLocationTypes\n}\n\nexport type AvailabilitySelectProps = {\n  type: SelectOptions\n  onChange: (status: SelectOptions) => void\n}\n\nexport type RoomAvailabilities = {\n  __typename: 'RoomAvailability'\n  availabilityDate: string | null\n  availabilityDay: RoomAvailabilityDay | null\n  availableSlots: TimeRangeType[]\n  id: string\n}\n\nexport type RoomExceptions = {\n  date: string\n  timeRanges: [string, string][]\n}\n\nexport type FooterProps = {\n  onDiscardClick: () => void\n  onCancelClick: () => void\n  onSaveClick: () => void\n  hasError: boolean\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { EngagementTypeToggle } from '../common/EngagementTypeToggle'\nimport { TimeDurationSelect } from '../common/TimeDurationSelect'\nimport {\n  DurationWrapper,\n  FormFieldWrapper,\n  ToggleWrapper,\n} from './styled-components'\n\nconst messages = defineMessages({\n  minDurationLabel: {\n    defaultMessage: 'Minimum Duration',\n    description: 'Field label',\n  },\n  maxDurationLabel: {\n    defaultMessage: 'Maximum Duration',\n    description: 'Field label',\n  },\n  durationRestrictionLabel: {\n    defaultMessage:\n      'Apply these restrictions to Meeting Managers and Junior MM ‘s',\n    description: 'Field label',\n  },\n})\n\nexport const OnSiteFormField: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <ToggleWrapper>\n      <FormFieldWrapper>\n        <DurationWrapper>\n          <TimeDurationSelect\n            label={formatMessage(messages.minDurationLabel)}\n            name=\"min_duration\"\n          />\n          <TimeDurationSelect\n            label={formatMessage(messages.maxDurationLabel)}\n            name=\"max_duration\"\n          />\n        </DurationWrapper>\n      </FormFieldWrapper>\n      <EngagementTypeToggle\n        label={formatMessage(messages.durationRestrictionLabel)}\n        name=\"duration_restrictions_for_mm\"\n      />\n    </ToggleWrapper>\n  )\n}\n","import { FC } from 'react'\nimport { Input } from '@jifflenow/brightui/input'\nimport { FieldMetaState, FieldRenderProps } from 'react-final-form'\nimport { EngagementContainer, FormControlStyled } from './styled-components'\n\nconst fieldError: (meta: FieldMetaState<any>) => boolean = ({\n  error,\n  touched,\n}) => touched && error\n\nexport const EngagementInputField: FC<FieldRenderProps<string>> = ({\n  input,\n  meta,\n  label,\n  placeholder,\n}) => (\n  <EngagementContainer>\n    <FormControlStyled label={label} error={fieldError(meta)}>\n      <Input\n        {...input}\n        autoComplete=\"off\"\n        type=\"text\"\n        placeholder={placeholder}\n        overrides={{\n          Root: {\n            style: () => ({\n              width: '282px',\n            }),\n          },\n        }}\n      />\n    </FormControlStyled>\n  </EngagementContainer>\n)\n","import { useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'ui-components/Field'\nimport { useField } from 'react-final-form'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { EngagementTypeToggle } from '../common/EngagementTypeToggle'\nimport { TimeDurationSelect } from '../common/TimeDurationSelect'\nimport { DependentLinks } from '../Irp/types'\nimport { EngagementModal } from '../common/EngagementModal'\nimport { RefetchProps } from '../common/types'\nimport { Paths } from '../Paths'\nimport { DurationWrapper, ToggleWrapper } from './styled-components'\nimport { EngagementInputField } from './EngagementInputField'\nimport { DependentFieldsProps } from './types'\n\nconst messages = defineMessages({\n  durationRestrictionLabel: {\n    defaultMessage:\n      'Apply these restrictions to Meeting Managers and Junior MM ‘s',\n    description: 'Field label',\n  },\n  offSitesLabel: {\n    defaultMessage: 'Offsite Label',\n    description: 'Field label',\n  },\n  offSitesLabelPlaceholder: {\n    defaultMessage: 'Offsite Label',\n    description: 'Placeholder text',\n  },\n  minDurationLabel: {\n    defaultMessage: 'Minimum Duration',\n    description: 'Field label',\n  },\n  maxDurationLabel: {\n    defaultMessage: 'Maximum Duration',\n    description: 'Field label',\n  },\n  warningDisableLabel: {\n    defaultMessage: 'Disable the following',\n    description: 'Dependent settings group header',\n  },\n  autoUnMappedLabel: {\n    defaultMessage:\n      'Please disable the auto unmapped from IRP before proceeding',\n    description: 'Dependent settings modal title',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before enabling the instant',\n    description: 'Dependent settings modal title',\n  },\n})\n\nexport const OffSitesFormField: VFC<DependentFieldsProps & RefetchProps> = ({\n  refetch,\n  dependentFieldValues,\n  loading,\n}) => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n\n  const { onChange, value } = useField('offsite_enabled').input\n\n  const {\n    enable_external_widget_auto_process_without_mapping,\n    enable_external_widget,\n  } = dependentFieldValues\n\n  useEffect(() => {\n    value === 'true' &&\n      setIsOpen(\n        enable_external_widget === 'true' &&\n          enable_external_widget_auto_process_without_mapping !== 'false'\n      )\n  }, [\n    enable_external_widget,\n    enable_external_widget_auto_process_without_mapping,\n    value,\n  ])\n\n  const dependentLinks = [\n    enable_external_widget === 'true' &&\n      enable_external_widget_auto_process_without_mapping !== 'false' && {\n        label: formatMessage(messages.autoUnMappedLabel),\n        path: Paths.INBOUND_REQUEST_FORM,\n        group: formatMessage(messages.warningDisableLabel),\n      },\n  ].filter(Boolean) as DependentLinks[]\n\n  return (\n    <>\n      {isOpen && (\n        <>\n          {loading && <ModalSpinner />}\n          <EngagementModal\n            title={formatMessage(messages.warningModalTitle)}\n            dependentLinks={dependentLinks}\n            onClose={() => {\n              setIsOpen(false)\n              enable_external_widget_auto_process_without_mapping !== 'false' &&\n                onChange('false')\n            }}\n            onConfirm={() => refetch()}\n          />\n        </>\n      )}\n      <ToggleWrapper>\n        <Field\n          name=\"offsite_label\"\n          render={EngagementInputField}\n          label={formatMessage(messages.offSitesLabel)}\n          placeholder={formatMessage(messages.offSitesLabelPlaceholder)}\n        />\n        <DurationWrapper>\n          <TimeDurationSelect\n            label={formatMessage(messages.minDurationLabel)}\n            name=\"offsite_min_duration\"\n          />\n          <TimeDurationSelect\n            label={formatMessage(messages.maxDurationLabel)}\n            name=\"offsite_max_duration\"\n          />\n        </DurationWrapper>\n        <EngagementTypeToggle\n          label={formatMessage(messages.durationRestrictionLabel)}\n          name=\"offsite_duration_restrictions_for_mm\"\n        />\n      </ToggleWrapper>\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field, Validation } from 'ui-components/Field'\nimport { EngagementTypeToggleWithDesc } from '../../common'\nimport { TimeDurationSelect } from '../../common/TimeDurationSelect'\nimport {\n  ToggleWrapper,\n  DurationWrapper,\n  InputFlexWrapper,\n} from '../styled-components'\nimport { EngagementInputField } from '../EngagementInputField'\n\nconst messages = defineMessages({\n  boothTourLocationLabel: {\n    defaultMessage: 'Designated Location Name',\n    description: 'Field label',\n  },\n  bootTourLocationPlaceholder: {\n    defaultMessage: 'Designated Location Name',\n    description: 'Placeholder text',\n  },\n  boothTourLocationAddressLabel: {\n    defaultMessage: 'Designated Location Address',\n    description: 'Field label',\n  },\n  bootTourLocationAddressPlaceholder: {\n    defaultMessage: 'Designated Location Address',\n    description: 'Placeholder text',\n  },\n  minDurationLabel: {\n    defaultMessage: 'Minimum Duration',\n    description: 'Field label',\n  },\n  maxDurationLabel: {\n    defaultMessage: 'Maximum Duration',\n    description: 'Field label',\n  },\n  required: {\n    defaultMessage: 'Required',\n    description: 'Field validation error message',\n  },\n  designatedLocationLabel: {\n    defaultMessage: 'Designated Location',\n    description: 'Toggle label',\n  },\n  designatedLocationDesc: {\n    defaultMessage:\n      'A fixed location with unlimited bookings; example: Booth #123, Exhibit Hall A',\n    description: 'Toggle desc',\n  },\n})\n\nexport const BoothTourSettings: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <EngagementTypeToggleWithDesc\n      label={formatMessage(messages.designatedLocationLabel)}\n      name=\"booth_tour_enabled\"\n      desc={formatMessage(messages.designatedLocationDesc)}\n    >\n      <ToggleWrapper>\n        <InputFlexWrapper>\n          <Field\n            name=\"booth_tour_default_name\"\n            render={EngagementInputField}\n            label={formatMessage(messages.boothTourLocationLabel)}\n            placeholder={formatMessage(messages.bootTourLocationPlaceholder)}\n            validations={[Validation.REQUIRED]}\n          />\n          <Field\n            name=\"booth_tour_default_location\"\n            render={EngagementInputField}\n            label={formatMessage(messages.boothTourLocationAddressLabel)}\n            placeholder={formatMessage(\n              messages.bootTourLocationAddressPlaceholder\n            )}\n            validations={[Validation.REQUIRED]}\n          />\n        </InputFlexWrapper>\n        <DurationWrapper>\n          <TimeDurationSelect\n            label={formatMessage(messages.minDurationLabel)}\n            name={'booth_tour_min_duration'}\n          />\n          <TimeDurationSelect\n            label={formatMessage(messages.maxDurationLabel)}\n            name={'booth_tour_max_duration'}\n          />\n        </DurationWrapper>\n      </ToggleWrapper>\n    </EngagementTypeToggleWithDesc>\n  )\n}\n","import { useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useField } from 'react-final-form'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { DependentLinks, EngagementModal } from '../../common'\nimport { Paths } from '../../Paths'\nimport { BoothTourProps } from '../types'\nimport { BoothTourSettings } from './BoothTourSettings'\n\nconst messages = defineMessages({\n  warningDisableLabel: {\n    defaultMessage: 'Disable the following',\n    description: 'Dependent settings group header',\n  },\n  disableMappingLabel: {\n    defaultMessage: 'Please disable mappings to enable the designated location',\n    description: 'Dependent settings modal title',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before enabling designated location',\n    description: 'Dependent settings modal title',\n  },\n})\n\nexport const BoothTour: VFC<BoothTourProps> = ({\n  dependentFieldValues: { default_mapping },\n  loading,\n  refetch,\n}) => {\n  const { formatMessage } = useIntl()\n  const { onChange, value } = useField('booth_tour_enabled').input\n  const [isOpen, setIsOpen] = useState(false)\n\n  useEffect(() => {\n    value === 'true' && setIsOpen(default_mapping === 'true')\n  }, [default_mapping, value])\n\n  const dependentLinks = [\n    default_mapping === 'true' && {\n      label: formatMessage(messages.disableMappingLabel),\n      path: Paths.CSM_ONLY,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n  ].filter(Boolean) as DependentLinks[]\n\n  return (\n    <>\n      {isOpen && (\n        <>\n          {loading && <ModalSpinner />}\n          <EngagementModal\n            title={formatMessage(messages.warningModalTitle)}\n            dependentLinks={dependentLinks}\n            onClose={() => {\n              setIsOpen(false)\n              default_mapping === 'true' && onChange('false')\n            }}\n            onConfirm={() => refetch()}\n          />\n        </>\n      )}\n      <BoothTourSettings />\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useField, useFormState } from 'react-final-form'\nimport { Field } from 'ui-components/Field'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { Select } from '@jifflenow/brightui/select'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { FormControl } from 'components/CustomFormFields/Fields/styled-components'\nimport { useGetConferences } from 'rest'\nimport { FormFieldWrapper } from './styled-components'\nimport {\n  FormValues,\n  DefaultLocationPreferenceType,\n  DefaultLocationDropdownProps,\n  DefaultLocationOption,\n} from './types'\n\nconst messages = defineMessages({\n  defaultLocationLabel: {\n    defaultMessage: 'Default Location ',\n    description: 'Field label',\n  },\n  defaultLocationPlaceholder: {\n    defaultMessage: 'Select Default Location ',\n    description: 'Placeholder label',\n  },\n  roomsLabel: {\n    defaultMessage: 'Onsite Locations',\n    description: 'Options label',\n  },\n  boothTourLabel: {\n    defaultMessage: 'Designated Location',\n    description: 'Options label',\n  },\n})\n\nconst { ROOM, BOOTH_TOUR, VCON } = DefaultLocationPreferenceType\n\nconst DefaultLocationDropdown: VFC<DefaultLocationDropdownProps> = ({\n  renderProps: {\n    input,\n    meta: { submitError, error },\n  },\n  options,\n  conferences,\n}) => {\n  const { formatMessage } = useIntl()\n  const { input: vconPreference } = useField('default_location_vcon_preference')\n\n  const handleOnChange = (option: DefaultLocationOption[]) => {\n    input.onChange(option)\n    const [{ id, type }] = option\n    if (type === VCON) {\n      const {\n        uuid: integration_uuid = '',\n        integration_name = '',\n        integration_adapter_uuid = '',\n      } = conferences.find(({ uuid }) => uuid === id) ?? {}\n\n      vconPreference.onChange(\n        JSON.stringify({\n          integration_adapter_uuid,\n          integration_name,\n          integration_uuid,\n        })\n      )\n    } else {\n      vconPreference.onChange(undefined)\n    }\n  }\n\n  return (\n    <FormControl\n      label={formatMessage(messages.defaultLocationLabel)}\n      error={submitError || error}\n    >\n      <Select\n        {...input}\n        id=\"default_location_preference\"\n        clearable={false}\n        options={options}\n        placeholder={formatMessage(messages.defaultLocationPlaceholder)}\n        onChange={({ value }: { value: DefaultLocationOption[] }) =>\n          handleOnChange(value)\n        }\n        dataPendo=\"default-location-preference\"\n      />\n    </FormControl>\n  )\n}\n\nexport const DefaultLocationField: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  const { booth_tour_enabled } = useFormState<FormValues>().values\n\n  const { systemName } = useEventLocation().location?.attributes ?? {}\n\n  const { data: conferences, isLoading } = useGetConferences({\n    eventName: systemName,\n  })\n\n  const options = [\n    {\n      label: formatMessage(messages.roomsLabel),\n      id: ROOM,\n      type: ROOM,\n    },\n    booth_tour_enabled === 'true' && {\n      label: formatMessage(messages.boothTourLabel),\n      id: BOOTH_TOUR,\n      type: BOOTH_TOUR,\n    },\n    ...(conferences\n      ? conferences.data.map(({ integration_name: label, uuid: id }) => ({\n          label,\n          id,\n          type: VCON,\n        }))\n      : []),\n  ].filter(Boolean) as DefaultLocationOption[]\n\n  return (\n    <>\n      {isLoading && <ModalSpinner />}\n      <FormFieldWrapper>\n        <Field<string>\n          format={(value: string) => (value ? JSON.parse(value) : [])}\n          parse={(value: DefaultLocationOption[]) => JSON.stringify(value)}\n          name=\"default_location_preference\"\n          render={props => (\n            <DefaultLocationDropdown\n              renderProps={props}\n              options={options}\n              conferences={conferences?.data ?? []}\n            />\n          )}\n        />\n      </FormFieldWrapper>\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { EngagementTypeToggleWithDesc } from '../common'\nimport {\n  EngagementToggleDesc,\n  FieldToggleDescWrapper,\n  FieldToggleLabel,\n} from '../common'\nimport { RefetchProps } from '../common/types'\nimport { OnSiteFormField } from './OnSiteFormField'\nimport { OffSitesFormField } from './OffSitesFormField'\nimport { BoothTour } from './BoothTour'\nimport { Divider, LocationTypeBody } from './styled-components'\nimport { DependentFieldsProps } from './types'\nimport { DefaultLocationField } from './DefaultLocationField'\n\nconst messages = defineMessages({\n  onSiteLabel: {\n    defaultMessage: 'Onsite Locations',\n    description: 'Toggle label',\n  },\n  onSiteDesc: {\n    defaultMessage: 'Do these meetings happen in onsite locations',\n    description: 'Toggle desc',\n  },\n  offSitesLabel: {\n    defaultMessage: 'Offsites',\n    description: 'Toggle label',\n  },\n  offSitesDesc: {\n    defaultMessage: 'Do these meetings happen in offsite locations',\n    description: 'Toggle desc',\n  },\n})\n\nexport const FormFields: VFC<RefetchProps & DependentFieldsProps> = props => {\n  const { formatMessage } = useIntl()\n\n  const { subType } = useEventLocation().location?.attributes ?? {}\n\n  return (\n    <LocationTypeBody>\n      {subType === 'Emeet' && <DefaultLocationField />}\n      <FieldToggleDescWrapper>\n        <FieldToggleLabel>\n          {formatMessage(messages.onSiteLabel)}\n        </FieldToggleLabel>\n      </FieldToggleDescWrapper>\n      <EngagementToggleDesc>\n        {formatMessage(messages.onSiteDesc)}\n      </EngagementToggleDesc>\n      <OnSiteFormField />\n      <Divider />\n      <EngagementTypeToggleWithDesc\n        label={formatMessage(messages.offSitesLabel)}\n        name=\"offsite_enabled\"\n        desc={formatMessage(messages.offSitesDesc)}\n      >\n        <OffSitesFormField {...props} />\n      </EngagementTypeToggleWithDesc>\n      <Divider />\n      <BoothTour {...props} />\n      <Divider />\n    </LocationTypeBody>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const LocationTypesContentLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"600\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"20\" x=\"0\" width=\"145\" height=\"20\" />\n\n      <rect y=\"70\" x=\"0\" width=\"110\" height=\"11\" />\n      <rect y=\"90\" x=\"0\" width=\"335\" height=\"40\" rx=\"5\" ry=\"5\" />\n\n      <rect y=\"162\" x=\"0\" width=\"55\" height=\"13\" />\n      <rect y=\"190\" x=\"0\" width=\"282\" height=\"10\" />\n\n      <rect y=\"238\" x=\"0\" width=\"120\" height=\"11\" />\n      <rect y=\"258\" x=\"0\" width=\"165\" height=\"40\" rx=\"5\" ry=\"5\" />\n      <rect y=\"258\" x=\"210\" width=\"165\" height=\"40\" rx=\"5\" ry=\"5\" />\n\n      <rect y=\"330\" x=\"0\" width=\"120\" height=\"11\" />\n      <rect y=\"350\" x=\"0\" width=\"165\" height=\"40\" rx=\"5\" ry=\"5\" />\n      <rect y=\"350\" x=\"210\" width=\"165\" height=\"40\" rx=\"5\" ry=\"5\" />\n\n      <rect y=\"420\" x=\"0\" width=\"1000\" height=\"1\" />\n      <rect y=\"448\" x=\"0\" width=\"455\" height=\"12\" />\n      <rect y=\"440\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"494\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"535\" x=\"0\" width=\"55\" height=\"13\" />\n      <rect y=\"561\" x=\"0\" width=\"282\" height=\"10\" />\n      <rect y=\"551\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"511\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"652\" x=\"0\" width=\"55\" height=\"13\" />\n      <rect y=\"678\" x=\"0\" width=\"282\" height=\"10\" />\n      <rect y=\"667\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"728\" x=\"0\" width=\"1000\" height=\"1\" />\n    </ContentLoader>\n  )\n}\n","import { FC, FormEvent, useMemo, useState, VFC } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { Config, FORM_ERROR, ValidationErrors } from 'final-form'\nimport {\n  Form as FinalForm,\n  FormRenderProps,\n  useForm,\n  useFormState,\n} from 'react-final-form'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  mutateBulkUpsertEngagementSettings,\n  useApolloClient,\n  useGetEngagementTypeSettings,\n} from 'gql'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport {\n  getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue as EngagementTypeSettings,\n  getEngagementTypeSettings_getEngagementTypeSettings_value_DefaultLocationVconPreferenceValue as LocationVconPreference,\n  getEngagementTypeSettings_getEngagementTypeSettings_value_DefaultLocationVconPreferenceValue_defaultLocationVconPreferenceValue as DefaultLocationVconPreferenceValue,\n} from 'gql/types/getEngagementTypeSettings'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport {\n  BulkEngagementSettingUpdateInput,\n  MasterEngagementTypes,\n} from 'gql/types/globalTypes'\nimport {\n  bulkUpsertEngagementSettingsVariables,\n  bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue as BulkUpsertEngagementSettings,\n} from 'gql/types/bulkUpsertEngagementSettings'\nimport { useEngagementMeetingData } from 'rest'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport {\n  Body,\n  Footer,\n  Header,\n  StyledForm,\n  Container,\n  usePageTitle,\n} from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { RefetchProps } from '../common/types'\nimport { useSettingsLoader } from '../common/useSettingsLoader'\nimport { filterEngagementSettings } from '../common/filterEngagementSettings'\nimport { updateQueryResults } from '../common/utils'\nimport { TimeIncrement } from './TimeIncrement'\nimport { FieldSeparator, Section, SectionTitle } from './styled-components'\nimport {\n  DefaultLocationOption,\n  DefaultLocationPreferenceType,\n  DefaultSettingsFormValues,\n  DependentFields,\n  DependentFieldsProps,\n  FormValues,\n  LocationTypeSettings,\n} from './types'\nimport { FieldWrapper, Heading } from './styled-components'\nimport { FormFields } from './FormFields'\nimport { LocationTypesContentLoader } from './LocationTypesContentLoader'\n\nconst messages = defineMessages({\n  calendarsTitle: {\n    defaultMessage: 'Calendars',\n    description: 'Section title',\n  },\n  locationTypes: {\n    defaultMessage: 'Location Types',\n    description: 'Page title',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  sectionTitle: {\n    defaultMessage: 'Location Types',\n    description: 'Section title',\n  },\n  helpText: {\n    defaultMessage: 'Help Text',\n    description: 'Help Text',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {option} other {options}} failed to save',\n    description: 'Error message',\n  },\n  filedError: {\n    defaultMessage: 'Error saving changes',\n    description: 'Field error message',\n  },\n  minTimeIncrementError: {\n    defaultMessage:\n      'Minimum duration cannot be less than the time increment of {minTimeIncrement} min',\n    description: 'Field error message',\n  },\n  maxDurationError: {\n    defaultMessage: 'Maximum duration cannot be less than minimum duration.',\n    description: 'Field error message',\n  },\n  roomsLabel: {\n    defaultMessage: 'Onsite Locations',\n    description: 'Options label',\n  },\n  boothTourLabel: {\n    defaultMessage: 'Designated Location',\n    description: 'Options label',\n  },\n  modalHeader: {\n    defaultMessage:\n      'Should meeting participants be sent an updated calendar invitation?',\n    description: 'Header text',\n  },\n  modalMessage: {\n    defaultMessage:\n      '(Ignore this if there are no booth tour meetings requested)<br/>Note that participants may have the previous booth tour location in their calendars.<br/><br/>Select Yes if you want to send updated calendar invitations to participants who have previously received invitations for their booth tour meetings of this meeting type.',\n    description: 'Message text',\n  },\n  noButtonLabel: {\n    defaultMessage: 'No',\n    description: 'Button text',\n  },\n  yesButtonLabel: {\n    defaultMessage: 'Yes',\n    description: 'Button text',\n  },\n})\n\nconst LoadingShimmer = () => (\n  <Body>\n    <Container>\n      <LocationTypesContentLoader />\n    </Container>\n  </Body>\n)\n\nconst Form: FC<\n  FormRenderProps<FormValues> &\n    RefetchProps &\n    DependentFieldsProps & {\n      hasActiveMeetings: boolean\n      booth_tour_default_location?: string\n      booth_tour_default_name?: string\n    }\n> = ({\n  handleSubmit,\n  dirty,\n  refetch,\n  loading,\n  dependentFieldValues,\n  hasActiveMeetings,\n  booth_tour_default_location,\n  booth_tour_default_name,\n}) => {\n  const { formatMessage } = useIntl()\n  const showLoading = useSettingsLoader(loading)\n  const [isOpen, setIsOpen] = useState(false)\n\n  const { values } = useFormState()\n  const { change } = useForm()\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isGeneralMeeting =\n    masterEngagementType === MasterEngagementTypes.General\n\n  const validateBootTour = (e: FormEvent) => {\n    e.preventDefault()\n    if (\n      booth_tour_default_name !== values.booth_tour_default_name ||\n      booth_tour_default_location !== values.booth_tour_default_location\n    ) {\n      setIsOpen(true)\n    } else {\n      handleSubmit()\n    }\n  }\n\n  const handleResponse = (sendIcs: boolean) => {\n    change('sendIcs', sendIcs)\n    handleSubmit()\n    setIsOpen(false)\n  }\n\n  return (\n    <>\n      {isOpen && (\n        <ConfirmationDialog\n          heading={formatMessage(messages.modalHeader)}\n          message={\n            <div\n              dangerouslySetInnerHTML={{\n                __html: formatMessage(messages.modalMessage),\n              }}\n            />\n          }\n          cancelLabel={formatMessage(messages.noButtonLabel)}\n          successLabel={formatMessage(messages.yesButtonLabel)}\n          onCancel={() => handleResponse(false)}\n          onSuccess={() => handleResponse(true)}\n        />\n      )}\n      <StyledForm onSubmit={validateBootTour} noValidate>\n        <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n        <Header />\n        {showLoading ? (\n          <LoadingShimmer />\n        ) : (\n          <Body>\n            <Container>\n              <FieldWrapper>\n                <Heading>{formatMessage(messages.sectionTitle)}</Heading>\n                <Section>\n                  <SectionTitle>\n                    {formatMessage(messages.calendarsTitle)}\n                  </SectionTitle>\n                  <TimeIncrement\n                    dependentFieldValues={dependentFieldValues}\n                    hasActiveMeetings={hasActiveMeetings}\n                  />\n                  <FieldSeparator />\n                </Section>\n                {isGeneralMeeting && (\n                  <FormFields\n                    refetch={refetch}\n                    loading={loading}\n                    dependentFieldValues={dependentFieldValues}\n                  />\n                )}\n              </FieldWrapper>\n            </Container>\n            <Footer />\n          </Body>\n        )}\n      </StyledForm>\n    </>\n  )\n}\n\nconst fieldNames = [\n  'duration_restrictions_for_mm',\n  'max_duration',\n  'min_duration',\n  'offsite_enabled',\n  'offsite_duration_restrictions_for_mm',\n  'offsite_label',\n  'offsite_min_duration',\n  'offsite_max_duration',\n  'booth_tour_enabled',\n  'booth_tour_label',\n  'booth_tour_header',\n  'booth_tour_default_name',\n  'booth_tour_default_location',\n  'booth_tour_min_duration',\n  'booth_tour_max_duration',\n  'default_location_preference',\n  'default_location_vcon_preference',\n  'enable_external_widget',\n  'enable_external_widget_auto_process_without_mapping',\n  'minimum_timeslot',\n  'default_mapping',\n]\n\nconst dependentFieldNames = [\n  'enable_external_widget',\n  'enable_external_widget_auto_process_without_mapping',\n  'minimum_timeslot',\n  'default_mapping',\n  'min_duration',\n  'offsite_enabled',\n  'offsite_min_duration',\n  'booth_tour_enabled',\n  'booth_tour_min_duration',\n]\n\nconst cleanLocationVconPreference = (\n  value: DefaultLocationVconPreferenceValue\n) => {\n  const { __typename, ...rest } = value\n\n  return rest\n}\n\nconst { ROOM, BOOTH_TOUR, VCON } = DefaultLocationPreferenceType\n\nexport const LocationTypes: VFC = () => {\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  usePageTitle(formatMessage(messages.locationTypes))\n  const [showLoader, setShowLoader] = useState(false)\n  const {\n    id: engagementTypeId,\n    uuid: activity_uuid,\n  } = useEngagementType().engagementType\n  const {\n    id: current_location_uuid,\n    attributes: { systemName: subSystem },\n  } = useEventLocation().location!\n\n  const {\n    loading,\n    getEngagementTypeSettings = [],\n    refetch: refetchGetEngagementTypeSettings,\n    updateQuery,\n  } = useGetEngagementTypeSettings({\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      engagementTypeId,\n      names: [...fieldNames, ...dependentFieldNames],\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  const {\n    data: { data: engagementMeetingData } = {},\n  } = useEngagementMeetingData({\n    eventName: subSystem,\n    activity_uuid,\n    current_location_uuid,\n  })\n\n  const fieldValues = useMemo(\n    () => filterEngagementSettings(getEngagementTypeSettings, fieldNames),\n    [getEngagementTypeSettings]\n  )\n\n  const dependentValues = useMemo(\n    () =>\n      filterEngagementSettings(getEngagementTypeSettings, dependentFieldNames),\n    [getEngagementTypeSettings]\n  )\n\n  const dependentFieldValues = useMemo(\n    () =>\n      dependentValues.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as EngagementTypeSettings).value,\n        }),\n        {}\n      ) as DependentFields,\n    [dependentValues]\n  )\n\n  const initialValues: FormValues | undefined = useMemo(() => {\n    if (!fieldValues.length) {\n      return undefined\n    }\n\n    const settings = fieldValues.reduce(\n      (acc, { name, value }) => ({\n        ...acc,\n        [name]:\n          name === 'default_location_vcon_preference'\n            ? cleanLocationVconPreference(\n                (value as LocationVconPreference)\n                  .defaultLocationVconPreferenceValue\n              )\n            : (value as EngagementTypeSettings).value,\n      }),\n      {}\n    ) as LocationTypeSettings\n\n    const {\n      default_location_preference: location,\n      default_location_vcon_preference,\n      ...rest\n    } = settings\n\n    const {\n      integration_adapter_uuid,\n      integration_name,\n      integration_uuid,\n    } = default_location_vcon_preference\n\n    const locationPreference: DefaultLocationOption[] = [\n      location === ROOM\n        ? {\n            label: formatMessage(messages.roomsLabel),\n            id: ROOM,\n            type: ROOM,\n          }\n        : location === BOOTH_TOUR\n        ? {\n            label: formatMessage(messages.boothTourLabel),\n            id: BOOTH_TOUR,\n            type: BOOTH_TOUR,\n          }\n        : {\n            label: integration_name,\n            id: integration_uuid,\n            type: VCON,\n          },\n    ]\n\n    return {\n      ...rest,\n      default_location_vcon_preference:\n        location === VCON\n          ? JSON.stringify({\n              integration_adapter_uuid,\n              integration_name,\n              integration_uuid,\n            })\n          : undefined,\n      default_location_preference: JSON.stringify(locationPreference),\n    }\n  }, [fieldValues, formatMessage])\n\n  // eslint-disable-next-line complexity\n  const validate: Config<FormValues>['validate'] = ({\n    min_duration,\n    max_duration,\n    offsite_min_duration,\n    offsite_max_duration,\n    booth_tour_min_duration,\n    booth_tour_max_duration,\n    offsite_enabled,\n    booth_tour_enabled,\n  }) => {\n    const errors: ValidationErrors = {}\n    const { minimum_timeslot: minTimeIncrement } = dependentFieldValues\n\n    const minError = formatMessage(messages.minTimeIncrementError, {\n      minTimeIncrement,\n    })\n    const maxError = formatMessage(messages.maxDurationError)\n\n    min_duration &&\n      +min_duration < +minTimeIncrement &&\n      (errors.min_duration = minError)\n\n    min_duration &&\n      max_duration &&\n      +min_duration > +max_duration &&\n      (errors.max_duration = maxError)\n\n    offsite_enabled === 'true' &&\n      offsite_min_duration &&\n      +offsite_min_duration < +minTimeIncrement &&\n      (errors.offsite_min_duration = minError)\n\n    offsite_enabled === 'true' &&\n      offsite_min_duration &&\n      offsite_max_duration &&\n      +offsite_min_duration > +offsite_max_duration &&\n      (errors.offsite_max_duration = maxError)\n\n    booth_tour_enabled === 'true' &&\n      booth_tour_min_duration &&\n      +booth_tour_min_duration < +minTimeIncrement &&\n      (errors.booth_tour_min_duration = minError)\n\n    booth_tour_enabled === 'true' &&\n      booth_tour_min_duration &&\n      booth_tour_max_duration &&\n      +booth_tour_min_duration > +booth_tour_max_duration &&\n      (errors.booth_tour_max_duration = maxError)\n\n    return errors\n  }\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change }\n  ) => {\n    try {\n      const prevValues = fieldValues.filter(\n        field =>\n          field.name !== 'default_location_vcon_preference' &&\n          field.name !== 'default_location_preference'\n      )\n      const prevLocationPreference = fieldValues.filter(\n        field => field.name === 'default_location_preference'\n      )\n      const prevLocationVconPreference = fieldValues.filter(\n        field => field.name === 'default_location_vcon_preference'\n      )\n\n      const {\n        default_location_preference,\n        default_location_vcon_preference,\n        sendIcs,\n        ...newValues\n      } = values\n\n      const configsToUpdate = prevValues.reduce<\n        BulkEngagementSettingUpdateInput[]\n      >((acc, { name, value: setting }) => {\n        const {\n          display_name,\n          value: oldValue,\n        } = setting as EngagementTypeSettings\n        const value = newValues[name as keyof DefaultSettingsFormValues]\n\n        return oldValue !== value\n          ? [\n              ...acc,\n              {\n                name,\n                customValue: {\n                  display_name,\n                  value,\n                },\n              },\n            ]\n          : acc\n      }, [])\n\n      if (\n        default_location_preference !==\n        initialValues?.default_location_preference\n      ) {\n        const type = (JSON.parse(\n          default_location_preference\n        ) as DefaultLocationOption[])[0].type\n\n        const defaultLocationPreference = prevLocationPreference.reduce<\n          BulkEngagementSettingUpdateInput[]\n        >((acc, { name, value: previousValue }) => {\n          const display_name = (previousValue as EngagementTypeSettings)\n            .display_name\n\n          return [\n            ...acc,\n            {\n              name,\n              customValue: {\n                display_name,\n                value: type,\n              },\n            },\n          ]\n        }, [])\n\n        const defaultLocationVconPreference =\n          default_location_vcon_preference && type === VCON\n            ? prevLocationVconPreference.reduce<\n                BulkEngagementSettingUpdateInput[]\n              >((acc, { name, value }) => {\n                const display_name = (value as LocationVconPreference)\n                  .display_name\n\n                return [\n                  ...acc,\n                  {\n                    name,\n                    defaultLocationVconPreferenceValue: {\n                      display_name,\n                      value: JSON.parse(default_location_vcon_preference),\n                    },\n                  },\n                ]\n              }, [])\n            : []\n\n        configsToUpdate.push(\n          ...defaultLocationPreference,\n          ...defaultLocationVconPreference\n        )\n      }\n\n      setShowLoader(true)\n      const variables: bulkUpsertEngagementSettingsVariables = {\n        engagementTypeId,\n        configsToUpdate,\n        sendIcs,\n      }\n      const { failureCount, totalCount, engagementSettings, successCount } = (\n        await mutateBulkUpsertEngagementSettings(client, {\n          variables,\n        })\n      ).data!.bulkUpsertEngagementSettings\n      setShowLoader(false)\n      if (failureCount) {\n        showErrorToast(\n          formatMessage(messages.updateError, { totalCount, failureCount })\n        )\n        engagementSettings.forEach(\n          ({ success, name, value }) =>\n            !success &&\n            change(\n              name as keyof FormValues,\n              (value as BulkUpsertEngagementSettings).value ?? undefined\n            )\n        )\n        const errors = engagementSettings.reduce(\n          (acc, { success, name }) =>\n            success\n              ? acc\n              : {\n                  ...acc,\n                  [name]: formatMessage(messages.filedError),\n                },\n          {}\n        )\n        if (successCount) {\n          updateQueryResults(updateQuery, engagementSettings)\n        }\n\n        return errors\n      }\n      showSuccessToast(formatMessage(messages.successMessage))\n      updateQueryResults(updateQuery, engagementSettings)\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  const { booth_tour_default_location, booth_tour_default_name } =\n    initialValues || {}\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<FormValues>\n        onSubmit={handleSubmit}\n        render={props => (\n          <Form\n            {...props}\n            booth_tour_default_location={booth_tour_default_location}\n            booth_tour_default_name={booth_tour_default_name}\n            refetch={() => refetchGetEngagementTypeSettings()}\n            loading={loading}\n            dependentFieldValues={dependentFieldValues}\n            hasActiveMeetings={\n              engagementMeetingData?.hasActiveMeetings ?? false\n            }\n          />\n        )}\n        initialValues={initialValues}\n        validate={validate}\n      />\n    </>\n  )\n}\n","import { FooterContainer as DrawerFooterContainer } from 'ui-components/Drawer'\nimport { styled, withStyle } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\n\nexport const CopySlotsModalBodyWrapper = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    marginTop: sizing.scale400,\n  })\n)\n\nexport const ModalDescription = styled(\n  'small',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Paragraph2,\n    marginLeft: sizing.scale800,\n    color: colors.mono700,\n  })\n)\n\nexport const CopyRoomCheckBox = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale800,\n}))\n\nexport const CopyRoomSlotsRoot = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale700,\n}))\n\nexport const FooterContainer = withStyle(\n  DrawerFooterContainer,\n  ({ $theme: { sizing } }) => ({\n    height: sizing.scale1600,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    paddingRight: sizing.scale600,\n  })\n)\n\nexport const FooterButton = styled(Button, ({ $theme: { sizing } }) => ({\n  minWidth: '99px',\n  height: sizing.scale900,\n  marginRight: sizing.scale300,\n}))\n\nexport const CopySlotsRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  marginBottom: sizing.scale700,\n}))\n\nexport const ConfirmationMessage = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.Paragraph1,\n    marginTop: sizing.scale300,\n  })\n)\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const successButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n","import { VFC } from 'react'\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  SIZE,\n} from '@jifflenow/brightui/modal'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { ConfirmationMessage, FooterButton } from './styled-components'\nimport { ConfirmationDialogProps } from './types'\nimport { successButtonOverrides } from './overrides'\n\nexport const ConfirmationDialog: VFC<ConfirmationDialogProps> = ({\n  heading,\n  message,\n  successLabel,\n  cancelLabel,\n  onClose,\n  onCancel,\n  onSuccess,\n}) => (\n  <Modal size={SIZE.small} closeable={false} onClose={onClose} isOpen>\n    <ModalHeader>{heading}</ModalHeader>\n    <ModalBody>\n      <ConfirmationMessage>{message}</ConfirmationMessage>\n    </ModalBody>\n    <ModalFooter>\n      <FooterButton type=\"button\" kind={KIND.tertiary} onClick={onCancel}>\n        {cancelLabel}\n      </FooterButton>\n      <FooterButton\n        type=\"button\"\n        overrides={successButtonOverrides}\n        onClick={onSuccess}\n      >\n        {successLabel}\n      </FooterButton>\n    </ModalFooter>\n  </Modal>\n)\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { StyledTabList } from '@jifflenow/brightui/tabs-motion'\nimport { Button } from '@jifflenow/brightui/button'\n\nexport const Root = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n  minHeight: '100vh',\n}))\n\nexport const SetAvailabilityHeaderContainer = styled('div', () => ({\n  display: 'flex',\n}))\n\nexport const StyledHeading = styled('h2', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale400,\n  marginBottom: sizing.scale0,\n}))\n\nexport const StyledButtonWrapper = styled('div', () => ({\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  float: 'right',\n}))\n\nexport const StyledButtonLabel = styled(\n  Button,\n  ({ $theme: { sizing, colors } }) => ({\n    paddingLeft: sizing.scale200,\n    color: colors.primaryA,\n    fontSize: sizing.scale550,\n  })\n)\n\nexport const CopyRoomAvailabilityButton = styled(\n  'div',\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '100%',\n    zIndex: 1,\n    paddingBottom: sizing.scale600,\n    [mediaQuery.medium]: {\n      boxShadow: 'none',\n      paddingLeft: 0,\n      paddingBottom: 0,\n      width: 'auto',\n      zIndex: 'unset',\n    },\n  })\n)\n\nexport const CopyButtonLabel = styled('span', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale200,\n}))\n\nexport const TabsRoot = styled(\n  'div',\n  ({ $theme: { colors, mediaQuery, sizing } }) => ({\n    backgroundColor: colors.mono100,\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    maxWidth: '100vw',\n    position: 'sticky',\n    marginTop: sizing.scale750,\n    top: 0,\n    whiteSpace: 'nowrap',\n    zIndex: 1,\n    [mediaQuery.medium]: {\n      maxWidth: 'calc(100vw - 64px)',\n      flexDirection: 'row',\n    },\n  })\n)\n\nexport const TabList = withStyle(StyledTabList, {\n  marginBottom: 0,\n  paddingBottom: 0,\n})\n\nexport const TabBar = styled('div', ({ $theme: { colors } }) => ({\n  alignItems: 'center',\n  backgroundColor: colors.mono100,\n  display: 'flex',\n  position: 'relative',\n  width: '100%',\n}))\n\nexport const Wrapper = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Caption1,\n  display: 'flex',\n  marginLeft: 'auto',\n  width: '240px',\n}))\n\nexport const NoteMessage = styled('span', {})\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\nimport { SelectOverrides } from '@jifflenow/brightui/select'\nimport { TabOverrides } from '@jifflenow/brightui/tabs-motion'\nimport { ReactNode } from 'react'\nimport {\n  CopyRoomAvailabilityButton,\n  TabBar,\n  TabList,\n  TabsRoot,\n} from './styled-components'\n\nexport const availabilitySelectOverride: SelectOverrides = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      width: '148px',\n      marginLeft: sizing.scale400,\n    }),\n  },\n  ControlContainer: {\n    style: ({ $theme: { sizing } }) => ({\n      borderTopLeftRadius: sizing.scale600,\n      borderTopRightRadius: sizing.scale600,\n      borderBottomRightRadius: sizing.scale600,\n      borderBottomLeftRadius: sizing.scale600,\n    }),\n  },\n}\n\nexport const tabOverrides: TabOverrides = {\n  TabPanel: {\n    style: ({ $theme: { sizing, colors, mediaQuery } }) => ({\n      borderLeftStyle: 'solid',\n      borderRightStyle: 'solid',\n      borderTopStyle: 'solid',\n      borderBottomStyle: 'solid',\n      borderLeftWidth: '1px',\n      borderRightWidth: '1px',\n      borderTopWidth: '1px',\n      borderBottomWidth: '1px',\n      borderTopColor: colors.mono400,\n      borderBottomColor: colors.mono400,\n      borderLeftColor: colors.mono400,\n      borderRightColor: colors.mono400,\n      borderBottomLeftRadius: sizing.scale100,\n      borderBottomRightRadius: sizing.scale100,\n      borderTopRightRadius: sizing.scale100,\n      marginBottom: sizing.scale800,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingTop: 0,\n      minHeight: 'calc(62vh - 64px)',\n      [mediaQuery.medium]: {\n        minHeight: 'calc(100vh - 300px)',\n      },\n    }),\n  },\n}\n\nexport const getTabsOverrides = (copyButton: () => ReactNode) => ({\n  TabList: (props: any) => (\n    <TabsRoot>\n      <TabBar>\n        <TabList {...props} />\n      </TabBar>\n      <CopyRoomAvailabilityButton>{copyButton()}</CopyRoomAvailabilityButton>\n    </TabsRoot>\n  ),\n\n  TabHighlight: {\n    style: {\n      marginLeft: '1px',\n    },\n  },\n  TabBorder: () => null,\n})\n\nexport const buttonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { colors, sizing } }) => ({\n      backgroundColor: colors.white,\n      borderTopColor: colors.mono700,\n      borderBottomColor: colors.mono700,\n      borderLeftColor: colors.mono700,\n      borderRightColor: colors.mono700,\n      borderTopRightRadius: '50%',\n      borderBottomRightRadius: '50%',\n      borderTopLeftRadius: '50%',\n      borderBottomLeftRadius: '50%',\n      height: sizing.scale700,\n      width: sizing.scale700,\n    }),\n  },\n}\n\nexport const iconButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { colors } }) => ({\n      backgroundColor: colors.white,\n      borderLeftStyle: 'none',\n      borderTopStyle: 'none',\n      borderRightStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopRightRadius: 'none',\n      borderBottomRightRadius: 'none',\n      borderTopLeftRadius: 'none',\n      borderBottomLeftRadius: 'none',\n    }),\n  },\n}\n\nexport const modalButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n      width: '99px',\n    }),\n  },\n}\n","import { VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { ModalFooter, ModalButton } from '@jifflenow/brightui/modal'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { modalButtonOverrides } from '../overrides'\nimport { CopyModalFooterProps } from './types'\n\nexport const CopyModalFooter: VFC<CopyModalFooterProps> = props => (\n  <ModalFooter>\n    <ModalButton\n      kind={KIND.tertiary}\n      overrides={modalButtonOverrides}\n      onClick={props.onClose}\n    >\n      <FormattedMessage defaultMessage=\"Cancel\" description=\"Button label\" />\n    </ModalButton>\n    <ModalButton\n      kind={KIND.primary}\n      onClick={props.handleCopySlots}\n      overrides={modalButtonOverrides}\n      disabled={props.copyButtonDisabled}\n    >\n      <FormattedMessage defaultMessage=\"Copy\" description=\"Button label\" />\n    </ModalButton>\n  </ModalFooter>\n)\n","import { DateTime, DurationObject } from 'luxon'\n\nconst referenceISODate = '1970-01-01T00:00:00Z'\n\nexport const getDateFromMinute = ({\n  days,\n  minutes,\n}: {\n  days: number\n  minutes: number\n}) => {\n  const hour = Math.floor(minutes / 60)\n  const minute = minutes % 60\n\n  return DateTime.fromISO(referenceISODate)\n    .startOf('day')\n    .set({ day: ++days, hour, minute })\n    .toString()\n}\n\nexport const getMinutes = (date: string) => {\n  const { minute, hour } = DateTime.fromISO(date)\n\n  return hour * 60 + minute\n}\n\nexport const getTimeFromDate = (date: string) =>\n  DateTime.fromISO(date).toISOTime({ includeOffset: false })\n\nexport const getEndTimeOfDay = (date: string) =>\n  DateTime.fromISO(`${DateTime.fromISO(date).toISODate()}T24:00:00`).toISOTime({\n    includeOffset: false,\n  })\n\nexport const areDatesAdjacent = (prev: string, next: string) =>\n  diffInISODates(prev, next).days === 1\n\nexport const getFullMinutes = (date: string) => {\n  const { minute, hour } = DateTime.fromISO(date)\n\n  return hour * 60 + minute\n}\n\nexport const getISODateFromTime = (time: string) =>\n  DateTime.fromISO(\n    `${DateTime.fromISO(referenceISODate).toISODate()}T${time}`\n  ).toISO()\n\nexport const getPlusISOTime = (date: string, plus: DurationObject) =>\n  DateTime.fromISO(date).plus(plus).toISOTime({ includeOffset: false })\n\nexport const getISOTimeFromJSDate = (date: Date) =>\n  DateTime.fromJSDate(date).toISOTime({ includeOffset: false })\n\nexport const getJSDate = (date: string) => DateTime.fromISO(date).toJSDate()\n\nexport const getISODateFromDateAndTime = (date: string, time: string) =>\n  `${DateTime.fromISO(date).toISODate()}T${time}`\n\nexport const getISODateString = (date: string) =>\n  DateTime.fromISO(date).toISODate()\n\nexport const getDate = (date: string) => DateTime.fromISO(date)\n\nexport const getPlusDate = (date: string, plus: DurationObject) =>\n  DateTime.fromISO(date).plus(plus).toISO()\n\nexport const getDateStringFromJSDate = (date: Date) =>\n  DateTime.fromJSDate(date).toISODate()\n\nexport const diffInISODates = (prev: string, next: string) =>\n  DateTime.fromISO(next).diff(DateTime.fromISO(prev), 'day')\n\nexport const getPlusISOStringDate = (date: string, plus: DurationObject) =>\n  DateTime.fromISO(date).plus(plus).toISODate()\n\nexport const getFormattedTimeFromDate = (date: string) =>\n  DateTime.fromISO(date).toFormat('hh:mm a')\n\nexport const getDurationInDays = (startDate?: string, endDate?: string) => {\n  const start = DateTime.fromISO(startDate!)\n  const end = DateTime.fromISO(endDate!)\n\n  return end.diff(start, ['day']).days\n}\n\nexport const getEndDateOfDay = (date: string) =>\n  DateTime.fromISO(`${DateTime.fromISO(date).toISODate()}T24:00:00`).toISO()\n\nexport const getISOTimeFromDate = (date: string) =>\n  DateTime.fromISO(date).toISOTime({ includeOffset: false })\n","import { VFC, useState } from 'react'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { formatDate } from 'utils/dates'\nimport { getJSDate, CopySlotsRoot } from '../common'\nimport { CopyDaySlotsToProps } from './types'\n\nexport const CopyDaySlotsTo: VFC<CopyDaySlotsToProps> = props => {\n  const [checked, setChecked] = useState(false)\n  const { weekDay, weekwise } = props\n\n  return (\n    <CopySlotsRoot>\n      <Checkbox\n        checked={checked}\n        onChange={() => {\n          setChecked(!checked)\n          props.addCopyDestinationDays(weekDay)\n        }}\n      >\n        {weekwise ? weekDay : formatDate(getJSDate(weekDay))}\n      </Checkbox>\n    </CopySlotsRoot>\n  )\n}\n","import { ModalOverrides } from '@jifflenow/brightui/modal'\n\nexport const modalOverrides: ModalOverrides = {\n  Root: {\n    style: {\n      zIndex: 1,\n    },\n  },\n}\n","import { VFC, useState } from 'react'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { Modal, ModalBody, ModalHeader } from '@jifflenow/brightui/modal'\nimport { formatDate } from 'utils/dates'\nimport {\n  CopySlotsModalBodyWrapper,\n  ModalDescription,\n  getJSDate,\n  CopyModalFooter,\n} from '../common'\nimport { CopyDaySlotsTo } from './CopyDaySlotsTo'\nimport { modalOverrides } from './overrides'\nimport { Availabilities, CopyAvailabilityProps } from './types'\n\nexport const CopyAvailability: VFC<CopyAvailabilityProps> = props => {\n  const { formatMessage } = useIntl()\n  const {\n    sourceWeekDay,\n    availabilities,\n    setAvailabilities,\n    weekwise,\n    ...modalProps\n  } = props\n\n  const [targetWeekDays, setTargetWeekDays] = useState<string[]>([])\n\n  const addCopyDestinationDays = (availabilityDate: string) => {\n    setTargetWeekDays([...targetWeekDays, availabilityDate])\n  }\n\n  const messages = defineMessages({\n    copyAvailabilityLabel: {\n      defaultMessage: 'Select dates to copy the slots of \"{day}\" to',\n      description: 'Copy availability label',\n    },\n  })\n\n  const handleCopySlots = () => {\n    if (sourceWeekDay) {\n      const slots = availabilities.find((availability: Availabilities) =>\n        weekwise\n          ? availability.availabilityDay === sourceWeekDay\n          : availability.availabilityDate === sourceWeekDay\n      )\n\n      setAvailabilities(\n        availabilities.map((availability: Availabilities) =>\n          targetWeekDays.includes(\n            weekwise\n              ? availability.availabilityDay!\n              : availability.availabilityDate!\n          )\n            ? { ...availability, availableSlots: slots!.availableSlots }\n            : availability\n        )\n      )\n\n      modalProps.onClose()\n      setTargetWeekDays([])\n    }\n  }\n\n  return (\n    <Modal {...modalProps} overrides={modalOverrides}>\n      <ModalHeader>\n        <FormattedMessage\n          defaultMessage=\"Copy availability of {day} to\"\n          description=\"Header title\"\n          values={{\n            day: weekwise\n              ? sourceWeekDay\n              : formatDate(getJSDate(sourceWeekDay)),\n          }}\n        />\n      </ModalHeader>\n      <ModalDescription>\n        {formatMessage(messages.copyAvailabilityLabel, {\n          day: weekwise ? sourceWeekDay : formatDate(getJSDate(sourceWeekDay)),\n        })}\n      </ModalDescription>\n      <ModalBody>\n        <CopySlotsModalBodyWrapper>\n          {availabilities\n            ?.filter((availability: Availabilities) =>\n              weekwise\n                ? availability.availabilityDay !== sourceWeekDay\n                : availability.availabilityDate !== sourceWeekDay\n            )\n            .map((availability: Availabilities, key: number) => (\n              <CopyDaySlotsTo\n                weekwise={weekwise}\n                key={key}\n                weekDay={\n                  weekwise\n                    ? availability.availabilityDay!\n                    : availability.availabilityDate!\n                }\n                addCopyDestinationDays={addCopyDestinationDays}\n              />\n            ))}\n        </CopySlotsModalBodyWrapper>\n      </ModalBody>\n      <CopyModalFooter\n        onClose={modalProps.onClose}\n        handleCopySlots={handleCopySlots}\n      />\n    </Modal>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const WeekDayRoot = styled('div', ({ $theme: { sizing, colors } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  paddingTop: sizing.scale600,\n  paddingBottom: 0,\n  paddingRight: sizing.scale800,\n  paddingLeft: sizing.scale800,\n  borderBottom: `1px solid ${colors.mono400}`,\n}))\n\nexport const WeekDayTitle = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Subtitle1,\n    color: colors.mono800,\n  })\n)\n\nexport const SlotsRoot = styled('div', {\n  display: 'flex',\n  flexWrap: 'wrap',\n})\n\nexport const ActionsContainer = styled('div', {\n  width: '100px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n})\n\nexport const TitleActionsContainer = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale500,\n    display: 'flex',\n    justifyContent: 'space-between',\n  })\n)\n\nexport const TimeSlotWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale700,\n  marginBottom: sizing.scale700,\n}))\n","import { FC } from 'react'\nimport { DateTime } from 'luxon'\nimport { Plus, Trash, CopyOutlined } from '@jifflenow/brightui/icon'\nimport { IconButton } from '@jifflenow/brightui/button'\nimport { RangeTimeSlot } from 'ui-components/RangeTimeSlot'\nimport { buttonOverrides, iconButtonOverrides } from '../overrides'\nimport {\n  getISODateFromTime,\n  getPlusISOTime,\n  getTimeFromDate,\n  getEndTimeOfDay,\n  getDate,\n} from '../common'\nimport {\n  WeekDayRoot,\n  WeekDayTitle,\n  SlotsRoot,\n  ActionsContainer,\n  TitleActionsContainer,\n  TimeSlotWrapper,\n} from './styled-components'\nimport { TimeRangeType, AvailabilityDayProps } from './types'\n\nexport const AvailabilityDay: FC<AvailabilityDayProps> = ({\n  availability,\n  index,\n  weekwise,\n  ...restProps\n}) => {\n  const { availabilityDate, availableSlots, availabilityDay } = availability\n\n  const lastSlotEndsAt12AM = availableSlots.length\n    ? DateTime.fromISO(availableSlots[availableSlots.length - 1].end).hour === 0\n    : false\n\n  const deleteAllSlots = () => {\n    restProps.deleteAllSlots(index)\n  }\n  const addNewSlot = () => {\n    const prevEndTime = availableSlots[availableSlots.length - 1]?.end\n    const newStartDate = prevEndTime\n      ? getISODateFromTime(prevEndTime)\n      : getISODateFromTime('09:00:00')\n\n    restProps.addSlotsToAvailability(index, {\n      start: getTimeFromDate(newStartDate),\n      end:\n        DateTime.fromISO(newStartDate).hour === 23\n          ? getEndTimeOfDay(newStartDate)\n          : prevEndTime\n          ? getPlusISOTime(newStartDate, { hour: 1 })\n          : getTimeFromDate(getISODateFromTime('17:00:00')),\n    })\n  }\n\n  const deleteSlot = (index: number) => {\n    if (weekwise) {\n      restProps.deleteSingleSlot(availabilityDay!, [index])\n    } else {\n      restProps.deleteSingleSlot(availabilityDate!, [index])\n    }\n  }\n\n  const editSlotStartTime = (newDate: Date, index: number) => {\n    if (weekwise) {\n      restProps.editSlotStartTime(availabilityDay!, index, newDate)\n    } else {\n      restProps.editSlotStartTime(availabilityDate!, index, newDate)\n    }\n  }\n\n  const editSlotEndTime = (newDate: Date, index: number) => {\n    if (weekwise) {\n      restProps.editSlotEndTime(availabilityDay!, index, newDate)\n    } else {\n      restProps.editSlotEndTime(availabilityDate!, index, newDate)\n    }\n  }\n\n  return (\n    <WeekDayRoot key={index}>\n      <TitleActionsContainer>\n        <WeekDayTitle>\n          {weekwise\n            ? availabilityDay\n            : getDate(availabilityDate!).toLocaleString({\n                ...DateTime.DATE_MED_WITH_WEEKDAY,\n                weekday: 'long',\n              })}\n        </WeekDayTitle>\n        <ActionsContainer>\n          <IconButton\n            size={20}\n            overrides={buttonOverrides}\n            disabled={lastSlotEndsAt12AM}\n            onClick={addNewSlot}\n            data-pendo=\"engangemnet-type/add-new-slot\"\n          >\n            <Plus />\n          </IconButton>\n          <IconButton\n            size={20}\n            overrides={iconButtonOverrides}\n            disabled={!availableSlots?.length}\n            onClick={() =>\n              restProps.handleCopySlotsToOtherDays(\n                weekwise ? availabilityDay! : availabilityDate!\n              )\n            }\n            data-pendo=\"engangemnet-type/copy-slot\"\n          >\n            <CopyOutlined />\n          </IconButton>\n          <IconButton\n            size={20}\n            disabled={!availableSlots?.length}\n            overrides={iconButtonOverrides}\n            onClick={deleteAllSlots}\n            data-pendo=\"engangemnet-type/delete-all-slot\"\n          >\n            <Trash />\n          </IconButton>\n        </ActionsContainer>\n      </TitleActionsContainer>\n      <SlotsRoot>\n        {availableSlots\n          ? availableSlots.map(\n              ({ start, end, error }: TimeRangeType, index: number) => (\n                <TimeSlotWrapper key={index}>\n                  <RangeTimeSlot\n                    start={getISODateFromTime(start)}\n                    end={getISODateFromTime(end)}\n                    error={error}\n                    onDelete={() => deleteSlot(index)}\n                    onStartChange={date => editSlotStartTime(date, index)}\n                    onEndChange={date => editSlotEndTime(date, index)}\n                  />\n                </TimeSlotWrapper>\n              )\n            )\n          : null}\n      </SlotsRoot>\n    </WeekDayRoot>\n  )\n}\n","import { VFC, useState, useEffect } from 'react'\nimport { DateTime } from 'luxon'\nimport { useIntl, defineMessages } from 'react-intl'\nimport {\n  getISODateFromTime,\n  getISOTimeFromJSDate,\n  getFullMinutes,\n  getEndDateOfDay,\n  getISOTimeFromDate,\n} from '../common'\nimport { CopyAvailability } from './CopyAvailability'\nimport { AvailabilityDay } from './AvailabilityDay'\nimport {\n  Availabilities,\n  AvailabilityProps,\n  AvailabilityDayProps,\n  TimeRangeType,\n} from './types'\n\nconst messages = defineMessages({\n  overlapError: {\n    defaultMessage: 'Time overlap',\n    description: 'Error message',\n  },\n  endTimeLessThanStartTime: {\n    defaultMessage: 'Choose an end time later than start time.',\n    description: 'Error message',\n  },\n})\n\nexport const Availability: VFC<AvailabilityProps> = ({\n  weekwise,\n  availabilities,\n  setAvailabilities,\n  setHandleDiscard,\n}) => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n  const [copySource, setCopySource] = useState<string>('')\n  const [newAvailabilities, setNewAvailabilities] = useState<Availabilities[]>(\n    availabilities\n  )\n  const [oldAvailabilities, setOldAvailabilities] = useState<Availabilities[]>(\n    availabilities\n  )\n\n  useEffect(() => {\n    setHandleDiscard?.(() => () => setNewAvailabilities(availabilities))\n  }, [availabilities, setHandleDiscard])\n\n  useEffect(() => {\n    setNewAvailabilities(availabilities)\n    setOldAvailabilities(availabilities)\n  }, [availabilities])\n\n  useEffect(() => {\n    setAvailabilities(\n      JSON.stringify(newAvailabilities) === JSON.stringify(oldAvailabilities)\n        ? []\n        : newAvailabilities\n    )\n  }, [newAvailabilities, oldAvailabilities, setAvailabilities])\n\n  const addSlotsToAvailability = (index: number, newSlot: TimeRangeType) => {\n    setNewAvailabilities(\n      newAvailabilities.map((available, i: number) => {\n        const { availableSlots } = available\n\n        return i === index\n          ? {\n              ...available,\n              availableSlots: [...availableSlots, newSlot],\n            }\n          : available\n      })\n    )\n  }\n\n  const handleCopySlotsToOtherDays = (availabilityDate: string) => {\n    setIsOpen(true)\n    setCopySource(availabilityDate)\n  }\n\n  const deleteSingleSlot: AvailabilityDayProps['deleteSingleSlot'] = (\n    availabilityDay,\n    indexesToDelete\n  ) => {\n    setNewAvailabilities(\n      (newAvailabilities ?? []).map(availability => {\n        const { availableSlots } = availability\n\n        return (\n          weekwise\n            ? availabilityDay === availability.availabilityDay\n            : availabilityDay === availability.availabilityDate\n        )\n          ? {\n              ...availability,\n              availableSlots: availableSlots.filter(\n                (_, index) => !indexesToDelete.includes(index)\n              ),\n            }\n          : availability\n      })\n    )\n\n    checkForOverlaps(availabilityDay)\n  }\n\n  const deleteAllSlots: AvailabilityDayProps['deleteAllSlots'] = index => {\n    setNewAvailabilities(\n      (newAvailabilities ?? []).map((availability, i) =>\n        i === index ? { ...availability, availableSlots: [] } : availability\n      )\n    )\n  }\n\n  const checkForOverlaps = (availabilityDate: string) => {\n    setNewAvailabilities(newAvailabilities =>\n      newAvailabilities.map(availability =>\n        (\n          weekwise\n            ? availabilityDate === availability.availabilityDay\n            : availabilityDate === availability.availabilityDate\n        )\n          ? {\n              ...availability,\n              availableSlots: availability.availableSlots.some(\n                ({ start, end }) => {\n                  const endTimeToCompare =\n                    getFullMinutes(end) === 0\n                      ? DateTime.fromISO(end)\n                          .endOf('day')\n                          .toISOTime({ includeOffset: false })\n                      : end\n\n                  return endTimeToCompare <= start\n                }\n              )\n                ? availability.availableSlots\n                : availability.availableSlots.map(\n                    (range, currentRangeIndex) => {\n                      const { start, end } = range\n\n                      const endTimeToCompare =\n                        getFullMinutes(end) === 0\n                          ? DateTime.fromISO(end)\n                              .endOf('day')\n                              .toISOTime({ includeOffset: false })\n                          : end\n\n                      const otherRanges = availability.availableSlots.filter(\n                        (_, index) => index !== currentRangeIndex\n                      )\n\n                      const hasOverlap = otherRanges.some(\n                        ({ start: rangeStart, end: rangeEnd }) => {\n                          const rangeEndToCompare =\n                            getFullMinutes(rangeEnd) === 0\n                              ? DateTime.fromISO(rangeEnd)\n                                  .endOf('day')\n                                  .toISOTime({ includeOffset: false })\n                              : rangeEnd\n\n                          return (\n                            rangeStart < endTimeToCompare &&\n                            rangeEndToCompare > start\n                          )\n                        }\n                      )\n\n                      return {\n                        start,\n                        end,\n                        ...(hasOverlap\n                          ? { error: formatMessage(messages.overlapError) }\n                          : null),\n                      }\n                    }\n                  ),\n            }\n          : availability\n      )\n    )\n  }\n\n  const editSlotStartTime: AvailabilityDayProps['editSlotStartTime'] = (\n    availabilityDate,\n    indexToUpdate,\n    startTime\n  ) => {\n    const startDateTime = DateTime.fromJSDate(startTime)\n    setNewAvailabilities(\n      (newAvailabilities ?? []).map(availability => {\n        const { availableSlots } = availability\n\n        return (\n          weekwise\n            ? availabilityDate === availability.availabilityDay\n            : availabilityDate === availability.availabilityDate\n        )\n          ? {\n              ...availability,\n              availableSlots: availableSlots.map((range, index) =>\n                index === indexToUpdate\n                  ? {\n                      start: getISOTimeFromJSDate(startTime),\n                      end:\n                        startDateTime.toMillis() >=\n                        DateTime.fromJSDate(\n                          new Date(\n                            getISODateFromTime(\n                              availableSlots.find((_, idx) => idx === index)\n                                ?.end!\n                            )\n                          )\n                        ).toMillis()\n                          ? getISOTimeFromJSDate(\n                              startDateTime.hour === 23\n                                ? startDateTime.endOf('day').toJSDate()\n                                : startDateTime.plus({ hour: 1 }).toJSDate()\n                            )\n                          : range.end,\n                    }\n                  : range\n              ),\n            }\n          : availability\n      })\n    )\n\n    checkForOverlaps(availabilityDate)\n  }\n\n  const editSlotEndTime: AvailabilityDayProps['editSlotEndTime'] = (\n    availabilityDate,\n    indexToUpdate,\n    endTime\n  ) => {\n    setNewAvailabilities(\n      (newAvailabilities ?? []).map(availability => {\n        const { availableSlots } = availability\n\n        return (\n          weekwise\n            ? availabilityDate === availability.availabilityDay\n            : availabilityDate === availability.availabilityDate\n        )\n          ? {\n              ...availability,\n              availableSlots: availableSlots.map(\n                (range: { start: string; end: string }, index: number) => {\n                  if (index !== indexToUpdate) {\n                    return range\n                  }\n\n                  const is12AM = getFullMinutes(endTime.toISOString()) === 0\n\n                  const end = is12AM\n                    ? getISOTimeFromDate(getEndDateOfDay(endTime.toISOString()))\n                    : getISOTimeFromJSDate(endTime)\n\n                  return {\n                    start: range.start,\n                    ...(!is12AM && end <= range.start\n                      ? {\n                          error: formatMessage(\n                            messages.endTimeLessThanStartTime\n                          ),\n                        }\n                      : null),\n                    end,\n                  }\n                }\n              ),\n            }\n          : availability\n      })\n    )\n\n    checkForOverlaps(availabilityDate)\n  }\n\n  return (\n    <>\n      {newAvailabilities?.map((availability, key) => (\n        <AvailabilityDay\n          key={key}\n          index={key}\n          availability={availability}\n          weekwise={weekwise}\n          handleCopySlotsToOtherDays={handleCopySlotsToOtherDays}\n          addSlotsToAvailability={addSlotsToAvailability}\n          deleteAllSlots={deleteAllSlots}\n          deleteSingleSlot={deleteSingleSlot}\n          editSlotStartTime={editSlotStartTime}\n          editSlotEndTime={editSlotEndTime}\n        />\n      ))}\n      {isOpen && (\n        <CopyAvailability\n          isOpen\n          weekwise={weekwise}\n          sourceWeekDay={copySource}\n          onClose={() => setIsOpen(false)}\n          availabilities={newAvailabilities}\n          setAvailabilities={setNewAvailabilities}\n        />\n      )}\n    </>\n  )\n}\n","import { getRoomAvailabilities_getRoomAvailabilities } from 'gql/types/getRoomAvailabilities'\nimport {\n  RoomAvailabilityDay,\n  SingleAvailabilityInput,\n} from 'gql/types/globalTypes'\nimport { getDateFromMinute, getMinutes, getTimeFromDate } from '../common'\nimport { Availabilities } from './types'\n\nconst daysMap: Record<RoomAvailabilityDay, number> = {\n  Monday: 1,\n  Tuesday: 2,\n  Wednesday: 3,\n  Thursday: 4,\n  Friday: 5,\n  Saturday: 6,\n  Sunday: 7,\n}\n\nexport const getNonRecurringAvailabilities = (\n  availabilities: getRoomAvailabilities_getRoomAvailabilities[]\n) =>\n  availabilities\n    .map(({ availableSlots, availabilityDate, ...rest }, dayIndex) => ({\n      availableSlots: getSlots(availableSlots, dayIndex),\n      availabilityDate: availabilityDate!,\n      ...rest,\n    }))\n    .sort(\n      (a, b) => +new Date(a.availabilityDate) - +new Date(b.availabilityDate)\n    )\n\nexport const getRecurringAvailabilities = (\n  availabilities: getRoomAvailabilities_getRoomAvailabilities[]\n) =>\n  availabilities\n    .map(({ availableSlots, availabilityDay, ...rest }, dayIndex) => ({\n      availableSlots: getSlots(availableSlots, dayIndex),\n      availabilityDay: availabilityDay!,\n      ...rest,\n    }))\n    .sort((a, b) => daysMap[a.availabilityDay] - daysMap[b.availabilityDay])\n\nexport const getSlots = (availableSlots: number[], dayIndex: number) =>\n  availableSlots\n    .slice()\n    .sort((a, b) => a - b)\n    .reduce<{ start: string; end: string }[]>((acc, _, index, array) => {\n      if (index % 2 === 0) {\n        acc.push({\n          start: getTimeFromDate(\n            getDateFromMinute({\n              days: dayIndex,\n              minutes: array[index],\n            })\n          ),\n          end: getTimeFromDate(\n            getDateFromMinute({\n              days: dayIndex,\n              minutes: array[index + 1],\n            })\n          ),\n        })\n      }\n\n      return acc\n    }, [])\n\nconst mergeContinuousTimeRanges = (timeRanges: number[]): number[] =>\n  timeRanges\n    .sort((a, b) => (a > b ? 1 : a < b ? -1 : 0))\n    .filter((v, _, a) => a.indexOf(v) === a.lastIndexOf(v))\n\nexport const getAvailabilityInMinutes = (\n  availability: Availabilities[]\n): SingleAvailabilityInput[] =>\n  availability.map(({ availableSlots, availabilityDate, availabilityDay }) => {\n    const timeRange = availableSlots.reduce<number[]>(\n      (acc, slot) => [\n        ...acc,\n        ...[getMinutes(slot.start), getMinutes(slot.end) || 1440],\n      ],\n      []\n    )\n\n    return {\n      availableSlots: mergeContinuousTimeRanges(timeRange),\n      availabilityDate,\n      availabilityDay,\n    }\n  })\n","import { useState, VFC } from 'react'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { FooterProps } from './types'\nimport { FooterContainer, FooterButton } from './common'\n\nconst modalLabels = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Your changes will be lost.',\n    description: 'Modal heading',\n  },\n  modalMessage: {\n    defaultMessage: 'Keep changes?',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Keep',\n    description: 'Button label',\n  },\n})\n\nexport const Footer: VFC<FooterProps> = ({\n  onSaveClick,\n  onDiscardClick,\n  hasError,\n}) => {\n  const { formatMessage } = useIntl()\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const handleDiscard = () => setShowConfirmation(true)\n\n  const handleDialogClose = () => setShowConfirmation(false)\n\n  return (\n    <>\n      {showConfirmation && (\n        <ConfirmationDialog\n          heading={formatMessage(modalLabels.modalHeader)}\n          message={formatMessage(modalLabels.modalMessage)}\n          cancelLabel={formatMessage(modalLabels.cancelButtonLabel)}\n          successLabel={formatMessage(modalLabels.successButtonLabel)}\n          onClose={handleDialogClose}\n          onCancel={() => {\n            handleDialogClose()\n            onDiscardClick()\n          }}\n          onSuccess={handleDialogClose}\n        />\n      )}\n      <FooterContainer>\n        <FooterButton\n          type=\"button\"\n          kind={KIND.tertiary}\n          onClick={() => handleDiscard()}\n          disabled={hasError}\n        >\n          <FormattedMessage\n            defaultMessage=\"Discard Changes\"\n            description=\"Button label\"\n          />\n        </FooterButton>\n        <FooterButton type=\"button\" onClick={onSaveClick} disabled={hasError}>\n          <FormattedMessage defaultMessage=\"Save\" description=\"Button label\" />\n        </FooterButton>\n      </FooterContainer>\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Select, Value, Option } from '@jifflenow/brightui/select'\nimport { availabilitySelectOverride } from './overrides'\nimport {\n  AvailabilityOption,\n  AvailabilitySelectProps,\n  SelectOptions,\n} from './types'\n\nconst { AVAILABILITY, EXCEPTION } = SelectOptions\nconst availabilitySelectOptions = [AVAILABILITY, EXCEPTION]\n\nconst availabilityOptions = availabilitySelectOptions.map((label, id) => ({\n  label,\n  id,\n}))\n\nexport const AvailabilitySelect: VFC<AvailabilitySelectProps> = ({\n  type,\n  onChange,\n}) => {\n  const { formatMessage } = useIntl()\n  const availabilitySelectLabel = defineMessages<SelectOptions>({\n    AVAILABILITY: {\n      defaultMessage: 'Availability Dates',\n      description: 'Select Label',\n    },\n    EXCEPTION: {\n      defaultMessage: 'Exception Dates',\n      description: 'Select Label',\n    },\n  })\n  const value: AvailabilityOption[] = [\n    {\n      label: type,\n      id: availabilitySelectOptions.indexOf(type),\n    },\n  ]\n\n  const handleStatusChange = (val: [AvailabilityOption]) => {\n    onChange(availabilitySelectOptions[val[0].id])\n  }\n\n  return (\n    <Select\n      overrides={availabilitySelectOverride}\n      options={availabilityOptions}\n      filterOptions={(options: AvailabilityOption[]): Value =>\n        options.map(\n          ({ label, id }): Option => ({\n            label: formatMessage(availabilitySelectLabel[label]),\n            id,\n          })\n        )\n      }\n      value={value}\n      getValueLabel={({ option }: { option: AvailabilityOption }) =>\n        formatMessage(availabilitySelectLabel[option.label])\n      }\n      onChange={({ value }: { value: [AvailabilityOption] }) =>\n        handleStatusChange(value)\n      }\n      clearable={false}\n    />\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { CopyRoomCheckBox, CopyRoomSlotsRoot } from '../common'\nimport { CopyDaySlotsToRoomProps } from '../types'\n\nexport const CopyDaySlotsToRoom: VFC<CopyDaySlotsToRoomProps> = ({\n  activeTab,\n  engagementTypeSettings,\n  roomChecked,\n  setRoomChecked,\n  offsiteChecked,\n  setOffsiteChecked,\n  boothTourChecked,\n  setBoothTourChecked,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const messages = defineMessages({\n    roomsLabel: {\n      defaultMessage: 'Onsite Locations',\n      description: 'Tab Label',\n    },\n    offsiteLabel: {\n      defaultMessage: 'Offsites',\n      description: 'Tab Label',\n    },\n    boothTour: {\n      defaultMessage: 'Designated Location',\n      description: 'Tab Label',\n    },\n  })\n\n  const { offsite_enabled, booth_tour_enabled } = engagementTypeSettings\n\n  return (\n    <CopyRoomSlotsRoot>\n      {activeTab !== 'Room' ? (\n        <CopyRoomCheckBox>\n          <Checkbox\n            checked={roomChecked}\n            onChange={() => {\n              setRoomChecked(!roomChecked)\n            }}\n          >\n            {formatMessage(messages.roomsLabel)}\n          </Checkbox>\n        </CopyRoomCheckBox>\n      ) : null}\n      {offsite_enabled === 'true' && activeTab !== 'Offsite' ? (\n        <CopyRoomCheckBox>\n          <Checkbox\n            checked={offsiteChecked}\n            onChange={() => {\n              setOffsiteChecked(!offsiteChecked)\n            }}\n          >\n            {formatMessage(messages.offsiteLabel)}\n          </Checkbox>\n        </CopyRoomCheckBox>\n      ) : null}\n\n      {booth_tour_enabled === 'true' && activeTab !== 'BoothTour' ? (\n        <Checkbox\n          checked={boothTourChecked}\n          onChange={() => {\n            setBoothTourChecked(!boothTourChecked)\n          }}\n        >\n          {formatMessage(messages.boothTour)}\n        </Checkbox>\n      ) : null}\n    </CopyRoomSlotsRoot>\n  )\n}\n","import { useState, VFC, useEffect } from 'react'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport {\n  mutateCopyRoomAvailabilities,\n  useApolloClient,\n  validateRoomAvailabilitiesToCopyQuery,\n} from 'gql'\nimport { Modal, ModalBody, ModalHeader } from '@jifflenow/brightui/modal'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { copyRoomAvailabilitiesVariables } from 'gql/types/copyRoomAvailabilities'\nimport { validateRoomAvailabilitiesToCopy_validateRoomAvailabilitiesToCopy } from 'gql/types/validateRoomAvailabilitiesToCopy'\nimport { RoomAvailabilityLocationTypes } from 'gql/types/globalTypes'\nimport { useEngagementType } from 'components/EngagementTypes/EngagementTypeEdit/EngagementTypeProvider'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { CopyRoomAvailabilityProps } from '../types'\nimport {\n  ConfirmationDialog,\n  CopyModalFooter,\n  CopySlotsModalBodyWrapper,\n  ModalDescription,\n} from '../common'\nimport { CopyDaySlotsToRoom } from './CopyDaySlotsToRoom'\n\nexport const CopyRoomAvailability: VFC<CopyRoomAvailabilityProps> = props => {\n  const { formatMessage } = useIntl()\n  const { activeTab, getModalLabel, ...modalProps } = props\n  const [showLoader, setShowLoader] = useState(false)\n  const [roomChecked, setRoomChecked] = useState(false)\n  const [offsiteChecked, setOffsiteChecked] = useState(false)\n  const [boothTourChecked, setBoothTourChecked] = useState(false)\n  const [copyConfirmation, setCopyConfirmation] = useState(false)\n  const [copyButtonDisabled, setCopyButtonDisabled] = useState(false)\n  const [conflictRoomLabels, setConflictRoomLabels] = useState([])\n\n  const { id: engagementTypeId } = useEngagementType().engagementType\n  const client = useApolloClient()\n\n  useEffect(() => {\n    if (roomChecked || offsiteChecked || boothTourChecked) {\n      setCopyButtonDisabled(false)\n    } else {\n      setCopyButtonDisabled(true)\n    }\n  }, [roomChecked, offsiteChecked, boothTourChecked])\n\n  const messages = defineMessages({\n    roomAvailabilityLabel: {\n      defaultMessage: 'Select locations to copy the \"{room}\" Availability To',\n      description: 'Room label',\n    },\n    success: {\n      defaultMessage: 'Availabilities Copied Successfully.',\n      description: 'Success message',\n    },\n    genericError: {\n      defaultMessage: 'Something is not right. Please retry.',\n      description: 'Error message',\n    },\n    roomsLabel: {\n      defaultMessage: 'Onsite Locations',\n      description: 'Tab Label',\n    },\n    offsiteLabel: {\n      defaultMessage: 'Offsites',\n      description: 'Tab Label',\n    },\n    boothTourLabel: {\n      defaultMessage: 'Designated Location',\n      description: 'Tab Label',\n    },\n    confirmationModalHeader: {\n      defaultMessage: 'You have unsaved changes',\n      description: 'Modal heading',\n    },\n    confirmationModalMessage: {\n      defaultMessage:\n        'Conflicts with planned meeting(s) in {rooms}. Updating availability will applicable only for future planned meetings and not for existing planned meeting',\n      description: 'Confirmation message',\n    },\n    cancelButtonLabel: {\n      defaultMessage: 'Cancel',\n      description: 'Button label',\n    },\n    saveButtonLabel: {\n      defaultMessage: 'Proceed',\n      description: 'Button label',\n    },\n  })\n  const { Room, Offsite, BoothTour } = RoomAvailabilityLocationTypes\n\n  const handleDialogClose = () => setCopyConfirmation(false)\n\n  const copyRoomData = () => {\n    const { activeTab } = props\n    const locationTypes = []\n    if (offsiteChecked) {\n      locationTypes.push(Offsite)\n    }\n    if (boothTourChecked) {\n      locationTypes.push(BoothTour)\n    }\n    if (roomChecked) {\n      locationTypes.push(Room)\n    }\n\n    return {\n      engagementTypeId,\n      fromAvailabilityLocationType: activeTab,\n      toAvailabilityLocationType: locationTypes,\n    }\n  }\n\n  const validateCopy = async () => {\n    setShowLoader(true)\n    try {\n      const variables: copyRoomAvailabilitiesVariables = copyRoomData()\n      const {\n        data: { validateRoomAvailabilitiesToCopy },\n      } = await validateRoomAvailabilitiesToCopyQuery(client, { variables })\n      setShowLoader(false)\n\n      const conflictRooms = validateRoomAvailabilitiesToCopy\n        .map(\n          (\n            room: validateRoomAvailabilitiesToCopy_validateRoomAvailabilitiesToCopy\n          ) => {\n            let conflictRoom: string | boolean = false\n            if (room.isValid === false) {\n              if (room.availabilityLocationType === Room) {\n                conflictRoom = formatMessage(messages.roomsLabel)\n              }\n              if (room.availabilityLocationType === Offsite) {\n                conflictRoom = formatMessage(messages.offsiteLabel)\n              }\n              if (room.availabilityLocationType === BoothTour) {\n                conflictRoom = formatMessage(messages.boothTourLabel)\n              }\n            }\n\n            return conflictRoom\n          }\n        )\n        .filter(Boolean)\n\n      setConflictRoomLabels(conflictRooms)\n\n      conflictRooms.length ? setCopyConfirmation(true) : handleCopy()\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  const handleCopy = async () => {\n    setShowLoader(true)\n    try {\n      const variables: copyRoomAvailabilitiesVariables = copyRoomData()\n      await mutateCopyRoomAvailabilities(client, { variables })\n      showSuccessToast(formatMessage(messages.success))\n      props.onClose()\n      setShowLoader(false)\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <Modal {...modalProps}>\n        <ModalHeader>\n          <FormattedMessage\n            defaultMessage=\"Copy {room} Availability To\"\n            description=\"Header title\"\n            values={{ room: getModalLabel() }}\n          />\n        </ModalHeader>\n        <ModalDescription>\n          {formatMessage(messages.roomAvailabilityLabel, {\n            room: getModalLabel(),\n          })}\n        </ModalDescription>\n        <ModalBody>\n          <CopySlotsModalBodyWrapper>\n            <CopyDaySlotsToRoom\n              activeTab={activeTab}\n              engagementTypeSettings={props.engagementTypeSettings}\n              roomChecked={roomChecked}\n              setRoomChecked={setRoomChecked}\n              offsiteChecked={offsiteChecked}\n              setOffsiteChecked={setOffsiteChecked}\n              boothTourChecked={boothTourChecked}\n              setBoothTourChecked={setBoothTourChecked}\n            />\n          </CopySlotsModalBodyWrapper>\n        </ModalBody>\n        <CopyModalFooter\n          onClose={modalProps.onClose}\n          handleCopySlots={validateCopy}\n          copyButtonDisabled={copyButtonDisabled}\n        />\n      </Modal>\n      {copyConfirmation ? (\n        <ConfirmationDialog\n          heading={formatMessage(messages.confirmationModalHeader)}\n          message={formatMessage(messages.confirmationModalMessage, {\n            rooms: conflictRoomLabels.join(', '),\n          })}\n          cancelLabel={formatMessage(messages.cancelButtonLabel)}\n          successLabel={formatMessage(messages.saveButtonLabel)}\n          onClose={handleDialogClose}\n          onCancel={handleDialogClose}\n          onSuccess={handleCopy}\n        />\n      ) : null}\n    </>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Root = styled('div', ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: 'calc(62vh - 64px)',\n  overflow: 'scroll',\n  [mediaQuery.medium]: {\n    height: 'calc(100vh - 300px)',\n  },\n}))\n\nexport const NoException = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nexport const Text = styled(\n  'div',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.Paragraph1,\n    marginTop: sizing.scale600,\n    color: colors.mono700,\n  })\n)\n","import { getRoomExceptions_getRoomExceptions } from 'gql/types/getRoomExceptions'\nimport { RoomExceptions } from '../types'\nimport {\n  getISODateFromDateAndTime,\n  getISODateString,\n  getTimeFromDate,\n  getDateFromMinute,\n  getDate,\n  getMinutes,\n} from '../common'\nimport { TimeSlots } from './types'\n\nexport const getExceptions = (\n  exceptions: getRoomExceptions_getRoomExceptions[]\n) => {\n  const flatted = exceptions.flatMap((exception, dayIndex) => {\n    const { exceptionDate, availableSlots } = exception\n\n    const timeRange = availableSlots.reduce(\n      (acc: [string, string][], range, index, array) => {\n        if (index % 2 === 0) {\n          acc.push([\n            getISODateFromDateAndTime(\n              exceptionDate,\n              getTimeFromDate(\n                getDateFromMinute({ days: dayIndex, minutes: array[index] })\n              )\n            ),\n            getISODateFromDateAndTime(\n              exceptionDate,\n              array[index + 1] === 1440\n                ? '24:00:00.000'\n                : getTimeFromDate(\n                    getDateFromMinute({\n                      days: dayIndex,\n                      minutes: array[index + 1],\n                    })\n                  )\n            ),\n          ])\n        }\n\n        return acc\n      },\n      []\n    )\n\n    return timeRange.length === 0\n      ? [[exceptionDate, exceptionDate]]\n      : timeRange\n          .sort(([a], [b]) => (a < b ? -1 : a > b ? 1 : 0))\n          .flatMap(([start, end]: string[]) => {\n            const startDateTime = getDate(start)\n            const endDateTime = getDate(end)\n\n            return startDateTime.toISODate() === endDateTime.toISODate() ||\n              (endDateTime.hour === 0 && endDateTime.minute === 0)\n              ? [[start, end]]\n              : [\n                  [start, startDateTime.endOf('day').toISO()],\n                  [endDateTime.startOf('day').toISO(), end],\n                ]\n          })\n  })\n\n  const dateBasedTimeRanges = flatted.reduce((accRanges, range) => {\n    const [start, end] = range\n    const dateKey = getISODateString(start)\n\n    return {\n      ...accRanges,\n      [dateKey]: [\n        ...(accRanges[dateKey] ?? []),\n        ...(start === end ? [] : [range]),\n      ],\n    }\n  }, {} as { [key: string]: string[][] })\n\n  return Object.keys(dateBasedTimeRanges)\n    .map(date => ({\n      date,\n      timeRanges: dateBasedTimeRanges[date] as TimeSlots,\n    }))\n    .sort((a, b) => +new Date(a.date) - +new Date(b.date))\n}\n\nexport const getExceptionsInMinutes = (exceptions: RoomExceptions[]) =>\n  exceptions.map(({ timeRanges, date }) => {\n    const timeRange = timeRanges\n      ? timeRanges.flatMap(([start, end]: string[]) => {\n          const startDateTime = getDate(start)\n          const endDateTime = getDate(end)\n\n          return startDateTime.toISODate() === endDateTime.toISODate() ||\n            (endDateTime.hour === 0 && endDateTime.minute === 0)\n            ? [getMinutes(start), getMinutes(end) || 1440]\n            : [\n                getMinutes(start),\n                getMinutes(startDateTime.endOf('day').toISO()),\n\n                getMinutes(endDateTime.startOf('day').toISO()),\n                getMinutes(end),\n              ]\n        })\n      : null\n\n    return {\n      availableSlots: timeRange,\n      exceptionDate: date,\n    }\n  })\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const iconButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: 0,\n      marginBottom: sizing.scale700,\n    }),\n  },\n}\n\nexport const buttonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      width: '100px',\n      marginRight: sizing.scale300,\n    }),\n  },\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { ModalBody } from '@jifflenow/brightui/modal'\n\nexport const SlotsRoot = styled('div', ({ $theme: { sizing, colors } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  alignItems: 'flex-start',\n  paddingTop: sizing.scale800,\n  paddingBottom: sizing.scale300,\n  paddingLeft: sizing.scale1000,\n  paddingRight: sizing.scale300,\n  minWidth: '243px',\n  overflowY: 'auto',\n  maxHeight: '337px',\n  borderLeft: `1px solid ${colors.mono400}`,\n  borderBottom: `1px solid ${colors.mono400}`,\n}))\n\nexport const StyledModalBody = withStyle(\n  ModalBody,\n  ({ $theme: { colors } }) => ({\n    minHeight: '337px',\n    maxHeight: '674px',\n    overflowY: 'hidden',\n    borderTop: `1px solid ${colors.mono400}`,\n    marginTop: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    marginBottom: 0,\n  })\n)\n\nexport const AddExceptionRoot = styled('div', () => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n}))\n\nexport const CalendarRoot = styled(\n  'div',\n  ({ $theme: { sizing, colors, mediaQuery } }) => ({\n    minWidth: '377px',\n    flexGrow: 1,\n    paddingTop: sizing.scale200,\n    paddingBottom: sizing.scale200,\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    borderBottom: `1px solid ${colors.mono400}`,\n    [mediaQuery.medium]: {\n      flexGrow: 0,\n    },\n  })\n)\n\nexport const UnavailableText = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono700,\n  })\n)\n\nexport const TimeSlotWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale200,\n}))\n","import { VFC, useState, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { DateTime } from 'luxon'\nimport { LinkButton } from '@jifflenow/brightui/button'\nimport { PlusCircleOutlined } from '@jifflenow/brightui/icon'\nimport { Calendar } from '@jifflenow/brightui/calendar'\nimport { RangeTimeSlot } from 'ui-components/RangeTimeSlot'\nimport {\n  getPlusDate,\n  getISODateString,\n  getISOTimeFromJSDate,\n  getJSDate,\n  getDateStringFromJSDate,\n  diffInISODates,\n  getPlusISOStringDate,\n  getFullMinutes,\n  getISODateFromTime,\n  getEndDateOfDay,\n} from '../../common'\nimport { ExceptionModalBodyProps } from './types'\nimport { iconButtonOverrides } from './overrides'\nimport {\n  StyledModalBody,\n  SlotsRoot,\n  AddExceptionRoot,\n  CalendarRoot,\n  UnavailableText,\n  TimeSlotWrapper,\n} from './styled-components'\n\nconst messages = defineMessages({\n  addSlots: {\n    defaultMessage: 'Add available slots',\n    description: 'Button text',\n  },\n  unavailable: {\n    defaultMessage: 'Unavailable',\n    description: 'Button text',\n  },\n  overlapError: {\n    defaultMessage: 'Time overlap',\n    description: 'Error message',\n  },\n  endTimeLessThanStartTime: {\n    defaultMessage: 'Choose an end time later than start time.',\n    description: 'Error message',\n  },\n})\n\nexport const ExceptionModalBody: VFC<ExceptionModalBodyProps> = props => {\n  const { formatMessage } = useIntl()\n  const currentDate = new Date()\n  const { calendarDates, timeSlots, setTimeSlots, setCalendarDates } = props\n  const initialCalendarRange = calendarDates.length\n    ? [\n        getJSDate(calendarDates[0]),\n        getJSDate(calendarDates[calendarDates.length - 1]),\n      ]\n    : [currentDate, currentDate]\n\n  const [calendarRange, setCalendarRange] = useState<Date[]>(\n    initialCalendarRange\n  )\n\n  const lastSlotEndsAt12AM = timeSlots.length\n    ? DateTime.fromISO(timeSlots[timeSlots.length - 1].timeSlot[1]).hour === 0\n    : false\n\n  useEffect(() => {\n    const dates = Array.from(\n      new Set(calendarRange.map(date => getDateStringFromJSDate(date)))\n    )\n    const [start, end] = dates\n    const datesToExtract = dates.length === 2 && diffInISODates(start, end).days\n\n    setCalendarDates(\n      datesToExtract\n        ? [\n            start,\n            ...Array.from({ length: datesToExtract - 1 }, (_, index) =>\n              getPlusISOStringDate(start, { day: index + 1 })\n            ),\n            end,\n          ]\n        : dates\n    )\n  }, [calendarRange, setCalendarDates])\n\n  const addNewSlot = () => {\n    const preferredStartTime = timeSlots.length\n      ? timeSlots[timeSlots.length - 1].timeSlot[1]\n      : getISODateFromTime('09:00:00')\n\n    const preferredStartDT = DateTime.fromISO(preferredStartTime)\n    setTimeSlots([\n      ...timeSlots,\n      {\n        timeSlot: [\n          preferredStartTime,\n          preferredStartDT.hour === 23\n            ? getISODateFromTime('24:00:00')\n            : timeSlots.length\n            ? getPlusDate(preferredStartTime, { hour: 1 })\n            : getISODateFromTime('17:00:00'),\n        ],\n      },\n    ])\n  }\n\n  const checkForOverlaps = () => {\n    setTimeSlots(timeSlots =>\n      timeSlots.some(({ timeSlot: [start, end] }) => end <= start)\n        ? timeSlots\n        : timeSlots.map((currentTimeSlot, currentSlotIndex) => {\n            const [curStart, curEnd] = currentTimeSlot.timeSlot\n\n            const otherSlots = timeSlots.filter(\n              (_, index) => index !== currentSlotIndex\n            )\n\n            const hasOverlap = otherSlots.some(\n              ({ timeSlot: [start, end] }) => start < curEnd && end > curStart\n            )\n\n            return {\n              timeSlot: currentTimeSlot.timeSlot,\n              ...(hasOverlap\n                ? { error: formatMessage(messages.overlapError) }\n                : null),\n            }\n          })\n    )\n  }\n\n  /*\n    1. When the start time changes, increase end time by 1hr if start time >= end time\n    2. When the start time is > 23 eg, 23.15, 23.30, set the end date to end of the day (23:59)\n  */\n  const changeSlotStartTime = (date: Date, index: number) => {\n    const startDateTime = DateTime.fromJSDate(date)\n    setTimeSlots(\n      timeSlots.map((slot, slotIndex) =>\n        slotIndex === index\n          ? {\n              timeSlot: [\n                startDateTime.toISO(),\n                startDateTime.toMillis() >=\n                DateTime.fromISO(slot.timeSlot[1]).toMillis()\n                  ? startDateTime.hour === 23\n                    ? startDateTime.endOf('day').toISO()\n                    : startDateTime.plus({ hour: 1 }).toISO()\n                  : slot.timeSlot[1],\n              ],\n            }\n          : slot\n      )\n    )\n\n    checkForOverlaps()\n  }\n\n  const changeSlotEndTime = (date: Date, index: number) => {\n    const is12AM = getFullMinutes(date.toISOString()) === 0\n\n    setTimeSlots(\n      timeSlots.map((slot, slotIndex) => {\n        if (slotIndex !== index) {\n          return slot\n        }\n\n        const start = slot.timeSlot[0]\n        const end = is12AM\n          ? getEndDateOfDay(date.toISOString())\n          : `${getISODateString(start)}T${getISOTimeFromJSDate(date)}`\n\n        return {\n          timeSlot: [start, end],\n          ...(end <= start\n            ? { error: formatMessage(messages.endTimeLessThanStartTime) }\n            : null),\n        }\n      })\n    )\n\n    checkForOverlaps()\n  }\n\n  const deleteSlot = (index: number) => {\n    setTimeSlots(timeSlots.filter((_, slotIndex) => slotIndex !== index))\n\n    checkForOverlaps()\n  }\n\n  const changeCalendarRange = (dates: Date[]) => {\n    if (dates.length === 1) {\n      const timeSlots =\n        props.exceptions.find(\n          ({ date }) => getDateStringFromJSDate(dates[0]) === date\n        )?.timeRanges ?? []\n\n      setTimeSlots(timeSlots.map(timeSlot => ({ timeSlot })))\n    }\n    setCalendarRange(dates)\n  }\n\n  return (\n    <StyledModalBody>\n      <AddExceptionRoot>\n        <CalendarRoot>\n          <Calendar\n            selectRange\n            allowPartialRange\n            minDate={currentDate}\n            value={calendarRange}\n            onChange={changeCalendarRange}\n          />\n        </CalendarRoot>\n        <SlotsRoot>\n          <LinkButton\n            size={18}\n            disabled={lastSlotEndsAt12AM}\n            onClick={addNewSlot}\n            startEnhancer={PlusCircleOutlined}\n            overrides={iconButtonOverrides}\n          >\n            {formatMessage(messages.addSlots)}\n          </LinkButton>\n          {timeSlots.length ? (\n            timeSlots.map(({ timeSlot: [start, end], error }, slotIndex) => (\n              <TimeSlotWrapper key={slotIndex}>\n                <RangeTimeSlot\n                  start={start}\n                  end={end}\n                  error={error}\n                  onStartChange={date => changeSlotStartTime(date, slotIndex)}\n                  onEndChange={date => changeSlotEndTime(date, slotIndex)}\n                  onDelete={() => deleteSlot(slotIndex)}\n                />\n              </TimeSlotWrapper>\n            ))\n          ) : (\n            <UnavailableText>\n              {formatMessage(messages.unavailable)}\n            </UnavailableText>\n          )}\n        </SlotsRoot>\n      </AddExceptionRoot>\n    </StyledModalBody>\n  )\n}\n","import { VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { ModalFooter } from '@jifflenow/brightui/modal'\nimport { FooterProps } from './types'\nimport { buttonOverrides } from './overrides'\n\nexport const Footer: VFC<FooterProps> = ({ onCancel, onDone, hasError }) => (\n  <ModalFooter>\n    <Button kind={KIND.tertiary} overrides={buttonOverrides} onClick={onCancel}>\n      <FormattedMessage defaultMessage=\"Cancel\" description=\"Button label\" />\n    </Button>\n    <Button overrides={buttonOverrides} onClick={onDone} disabled={hasError}>\n      <FormattedMessage defaultMessage=\"Done\" description=\"Button label\" />\n    </Button>\n  </ModalFooter>\n)\n","import { VFC, useState, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Modal, ModalHeader, SIZE } from '@jifflenow/brightui/modal'\nimport {\n  getTimeFromDate,\n  getPlusISOStringDate,\n  getFullMinutes,\n} from '../../common'\nimport { AddEditExceptionProps, TimeSlots, TimeSlot } from './types'\nimport { ExceptionModalBody } from './ExceptionModalBody'\nimport { Footer } from './Footer'\n\nconst messages = defineMessages({\n  addException: {\n    defaultMessage: 'Add Exception',\n    description: 'Modal header',\n  },\n  editException: {\n    defaultMessage: 'Edit Exception',\n    description: 'Modal header',\n  },\n})\n\nexport const AddEditException: VFC<AddEditExceptionProps> = ({\n  isOpen,\n  onClose,\n  exceptions,\n  setExceptions,\n  listedExceptionEditIndex,\n  listedExceptions,\n  ...restProps\n}) => {\n  const { formatMessage } = useIntl()\n  const [calendarDates, setCalendarDates] = useState<string[]>([])\n  const [timeSlots, setTimeSlots] = useState<TimeSlot[]>([])\n\n  useEffect(() => {\n    if (restProps.calendarDates && restProps.timeSlots) {\n      setCalendarDates(restProps.calendarDates)\n      setTimeSlots(restProps.timeSlots.map(timeSlot => ({ timeSlot })))\n    }\n  }, [restProps.calendarDates, restProps.timeSlots])\n\n  const isEditingException =\n    listedExceptionEditIndex !== undefined && listedExceptionEditIndex >= 0\n\n  const hasError = timeSlots.some(timeSlot => !!timeSlot.error)\n\n  const handleDone = () => {\n    setExceptions(\n      [\n        ...calendarDates.map(date => ({\n          date,\n          timeRanges: timeSlots\n            .sort(({ timeSlot: [a] }, { timeSlot: [b] }) =>\n              a < b ? -1 : a > b ? 1 : 0\n            )\n            .map(({ timeSlot: [start, end] }) => {\n              const isSlotEndingAt12AM = getFullMinutes(end) === 0\n\n              return [\n                `${date}T${getTimeFromDate(start)}`,\n                `${\n                  isSlotEndingAt12AM\n                    ? getPlusISOStringDate(date, { day: 1 })\n                    : date\n                }T${getTimeFromDate(end)}`,\n              ]\n            }) as TimeSlots,\n        })),\n        ...(listedExceptions && isEditingException\n          ? exceptions.filter(\n              ({ date }) =>\n                !listedExceptions[listedExceptionEditIndex!].date.includes(date)\n            )\n          : exceptions\n        ).filter(({ date }) => !calendarDates.includes(date)),\n      ].sort((next, prev) => (prev.date < next.date ? 1 : -1))\n    )\n\n    onClose()\n  }\n\n  return (\n    <Modal isOpen={isOpen} size={SIZE.large} onClose={onClose}>\n      <ModalHeader>\n        {formatMessage(\n          isEditingException ? messages.editException : messages.addException\n        )}\n      </ModalHeader>\n      <ExceptionModalBody\n        exceptions={exceptions}\n        calendarDates={calendarDates}\n        timeSlots={timeSlots}\n        setCalendarDates={setCalendarDates}\n        setTimeSlots={setTimeSlots}\n      />\n      <Footer onCancel={onClose} onDone={handleDone} hasError={hasError} />\n    </Modal>\n  )\n}\n","import { useState, VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Button } from '@jifflenow/brightui/button'\nimport { AddExceptionButtonProps } from './types'\nimport { AddEditException as AddException } from './AddEditException'\n\nexport const AddExceptionButton: VFC<AddExceptionButtonProps> = ({\n  exceptions,\n  setExceptions,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <>\n      {isOpen && (\n        <AddException\n          isOpen={isOpen}\n          onClose={() => setIsOpen(false)}\n          exceptions={exceptions}\n          setExceptions={setExceptions}\n        />\n      )}\n      <Button onClick={() => setIsOpen(true)}>\n        <FormattedMessage\n          defaultMessage=\"Add Exception Date\"\n          description=\"Button label\"\n        />\n      </Button>\n    </>\n  )\n}\n","import { areDatesAdjacent, getFullMinutes } from '../../common'\nimport { GroupedException, Exception } from '../types'\n\nconst minutesMapper = ([start, end]: string[]) => [\n  getFullMinutes(start),\n  getFullMinutes(end),\n]\n\nexport const getGroupedExceptionDates = (exceptions: Exception[]) =>\n  exceptions.reduce((accExceptions, exception) => {\n    const lastAccumulatedException = accExceptions[accExceptions.length - 1]\n\n    if (\n      lastAccumulatedException &&\n      areDatesAdjacent(\n        lastAccumulatedException.date[lastAccumulatedException.date.length - 1],\n        exception.date\n      ) &&\n      JSON.stringify(lastAccumulatedException.timeRanges.map(minutesMapper)) ===\n        JSON.stringify(exception.timeRanges.map(minutesMapper))\n    ) {\n      const poppedLastException = accExceptions.pop() as GroupedException\n      accExceptions.push({\n        ...poppedLastException,\n        date: [...poppedLastException.date, exception.date],\n      })\n    } else {\n      accExceptions.push({ ...exception, date: [exception.date] })\n    }\n\n    return accExceptions\n  }, [] as GroupedException[])\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const iconButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      borderTopWidth: 0,\n      borderRightWidth: 0,\n      borderBottomWidth: 0,\n      borderLeftWidth: 0,\n      borderTopRightRadius: sizing.scale200,\n      borderTopLeftRadius: sizing.scale200,\n      borderBottomRightRadius: sizing.scale200,\n      borderBottomLeftRadius: sizing.scale200,\n      marginLeft: sizing.scale200,\n    }),\n  },\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Root = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n})\n\nexport const ListHeader = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  flexDirection: 'row-reverse',\n  minHeight: '64px',\n  paddingTop: sizing.scale600,\n  paddingBottom: sizing.scale600,\n  paddingLeft: sizing.scale600,\n  paddingRight: sizing.scale600,\n}))\n\nexport const ExceptionList = styled('ul', {\n  paddingLeft: 0,\n  marginTop: 0,\n  listStyleType: 'none',\n})\n\nexport const ExceptionListItem = styled(\n  'li',\n  ({ $theme: { colors, sizing } }) => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    minHeight: '64px',\n    borderTop: `1px solid ${colors.mono400}`,\n    paddingTop: sizing.scale600,\n    paddingBottom: sizing.scale600,\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n  })\n)\n\nexport const ExceptionDate = styled(\n  'div',\n  ({ $theme: { typography, mediaQuery, sizing } }) => ({\n    ...typography.Paragraph1,\n    paddingBottom: sizing.scale400,\n    minWidth: '150px',\n    flexBasis: '40%',\n    [mediaQuery.medium]: {\n      paddingBottom: 0,\n    },\n  })\n)\n\nexport const ExceptionTime = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Paragraph1,\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: '150px',\n  flexBasis: '60%',\n}))\n\nexport const ExceptionActions = styled('div', {\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'flex-end',\n})\n\nexport const Unavailable = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono900,\n  })\n)\n\nexport const ListItemRoot = styled('div', {\n  display: 'flex',\n  flexWrap: 'wrap',\n  flexGrow: 1,\n})\n","import { VFC, useState } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { IconButton } from '@jifflenow/brightui/button'\nimport { Trash, Pencil } from '@jifflenow/brightui/icon'\nimport { formatDate, formatDateRange } from 'utils/dates'\nimport { getFormattedTimeFromDate, getJSDate } from '../../common'\nimport { AddEditException as EditException } from '../AddEditException'\nimport { AddExceptionButton } from '../AddExceptionButton'\nimport { ListExceptionsProps } from '../types'\nimport { getGroupedExceptionDates } from './groupExceptionDates'\nimport { iconButtonOverrides } from './overrides'\nimport {\n  Root,\n  ListHeader,\n  ExceptionList,\n  ExceptionListItem,\n  ExceptionDate,\n  ExceptionTime,\n  ExceptionActions,\n  Unavailable,\n  ListItemRoot,\n} from './styled-components'\n\nconst messages = defineMessages({\n  unavailable: {\n    defaultMessage: 'Unavailable',\n    description: 'Button text',\n  },\n})\n\nexport const ListExceptions: VFC<ListExceptionsProps> = ({\n  exceptions,\n  setExceptions,\n}) => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n  const [exceptionEditIndex, setExceptionEditIndex] = useState(-1)\n  const groupedExceptions = getGroupedExceptionDates(exceptions)\n\n  const handleEdit = (indexForEdit: number) => {\n    setExceptionEditIndex(indexForEdit)\n    setIsOpen(true)\n  }\n\n  const handleDelete = (indexToDelete: number) => {\n    const datesToDelete = groupedExceptions.find(\n      (_, index) => indexToDelete === index\n    )?.date!\n\n    setExceptions(\n      exceptions.filter(({ date }) => !datesToDelete.includes(date))\n    )\n  }\n\n  const onClose = () => {\n    setExceptionEditIndex(-1)\n    setIsOpen(false)\n  }\n\n  return (\n    <Root>\n      <ListHeader>\n        <AddExceptionButton\n          exceptions={exceptions}\n          setExceptions={setExceptions}\n        />\n      </ListHeader>\n      {isOpen && (\n        <EditException\n          isOpen={isOpen}\n          onClose={onClose}\n          exceptions={exceptions}\n          setExceptions={setExceptions}\n          {...(exceptionEditIndex !== -1\n            ? {\n                listedExceptions: groupedExceptions,\n                listedExceptionEditIndex: exceptionEditIndex,\n                timeSlots: groupedExceptions[exceptionEditIndex].timeRanges,\n                calendarDates: groupedExceptions[exceptionEditIndex].date,\n              }\n            : null)}\n        />\n      )}\n      <ExceptionList>\n        {groupedExceptions.map(({ date, timeRanges }, exceptionIndex) => (\n          <ExceptionListItem key={exceptionIndex}>\n            <ListItemRoot>\n              <ExceptionDate>\n                {date.length === 1\n                  ? formatDate(getJSDate(date[0]))\n                  : formatDateRange(\n                      getJSDate(date[0]),\n                      getJSDate(date[date.length - 1])\n                    )}\n              </ExceptionDate>\n              <ExceptionTime>\n                {timeRanges.length ? (\n                  timeRanges.map((range, index) => (\n                    <ExceptionTime key={index}>{`${getFormattedTimeFromDate(\n                      range[0]\n                    )} – ${getFormattedTimeFromDate(range[1])}`}</ExceptionTime>\n                  ))\n                ) : (\n                  <Unavailable>\n                    {formatMessage(messages.unavailable)}\n                  </Unavailable>\n                )}\n              </ExceptionTime>\n            </ListItemRoot>\n\n            <ExceptionActions>\n              <IconButton\n                size={18}\n                overrides={iconButtonOverrides}\n                onClick={() => handleEdit(exceptionIndex)}\n              >\n                <Pencil />\n              </IconButton>\n              <IconButton\n                size={18}\n                overrides={iconButtonOverrides}\n                onClick={() => handleDelete(exceptionIndex)}\n              >\n                <Trash />\n              </IconButton>\n            </ExceptionActions>\n          </ExceptionListItem>\n        ))}\n      </ExceptionList>\n    </Root>\n  )\n}\n","import { VFC, useState, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useRoomExceptionsQuery } from 'gql'\nimport { useEngagementType } from '../../EngagementTypeProvider'\nimport { RoomExceptions } from '../types'\nimport { Root, NoException, Text } from './styled-components'\nimport { ExceptionsProps } from './types'\nimport { getExceptions } from './transformExceptionDates'\nimport { AddExceptionButton } from './AddExceptionButton'\nimport { ListExceptions } from './ListExceptions'\n\nconst messages = defineMessages({\n  addException: {\n    defaultMessage: 'Add Exception',\n    description: 'Button text',\n  },\n  noException: {\n    defaultMessage: 'Add dates that deviate from your standard working hours.',\n    description: 'Button text',\n  },\n  success: {\n    defaultMessage: 'Exceptions updated successfully',\n    description: 'Button text',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nexport const Exceptions: VFC<ExceptionsProps> = ({\n  locationType,\n  setExceptions,\n  setHandleDiscard,\n}) => {\n  const { formatMessage } = useIntl()\n  const [showLoader] = useState(false)\n  const [newExceptions, setNewExceptions] = useState<RoomExceptions[]>([])\n  const [oldExceptions, setOldExceptions] = useState<RoomExceptions[]>([])\n\n  const { id: engagementTypeId } = useEngagementType().engagementType\n  const { getRoomExceptions = [], loading } = useRoomExceptionsQuery({\n    variables: {\n      engagementTypeId,\n      availabilityLocationType: locationType,\n    },\n    fetchPolicy: 'cache-and-network',\n  })\n\n  useEffect(() => {\n    const exceptions = getExceptions(getRoomExceptions)\n    setOldExceptions(exceptions)\n    setNewExceptions(exceptions)\n    setHandleDiscard?.(() => () => setNewExceptions(exceptions))\n  }, [getRoomExceptions, setHandleDiscard])\n\n  useEffect(() => {\n    setExceptions(\n      JSON.stringify(newExceptions) === JSON.stringify(oldExceptions)\n        ? []\n        : ([\n            ...oldExceptions\n              .filter(\n                oldException =>\n                  !newExceptions.some(\n                    exception => oldException.date === exception.date\n                  )\n              )\n              .map(exception => ({ ...exception, timeRanges: null })),\n            ...newExceptions,\n          ] as [])\n    )\n  }, [newExceptions, oldExceptions, setExceptions])\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <Root>\n        {!loading &&\n          newExceptions &&\n          (newExceptions.length ? (\n            <ListExceptions\n              exceptions={newExceptions}\n              setExceptions={setNewExceptions}\n            />\n          ) : (\n            <NoException>\n              <Text>{formatMessage(messages.noException)}</Text>\n              <AddExceptionButton\n                exceptions={newExceptions}\n                setExceptions={setNewExceptions}\n              />\n            </NoException>\n          ))}\n      </Root>\n    </>\n  )\n}\n","import { VFC, useState, useMemo, useEffect, ReactNode } from 'react'\nimport { useHistory, Prompt } from 'react-router-dom'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  mutateRoomAvailabilities,\n  mutateRoomExceptions,\n  useApolloClient,\n  useGetEngagementTypeSettings,\n  validateRoomAvailabilitiesQuery,\n  validateRoomExceptionsQuery,\n  useRoomAvailabilitiesQuery,\n} from 'gql'\nimport {\n  Tabs,\n  Tab,\n  TabTitle,\n  getTabOverrides,\n} from '@jifflenow/brightui/tabs-motion'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { CopyOutlined } from '@jifflenow/brightui/icon'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue } from 'gql/types/getEngagementTypeSettings'\nimport { upsertRoomAvailabilitiesVariables } from 'gql/types/upsertRoomAvailabilities'\nimport { RoomAvailabilityLocationTypes } from 'gql/types/globalTypes'\nimport { upsertRoomExceptionsVariables } from 'gql/types/upsertRoomExceptions'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { Body, Header, Container } from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { ConfirmationDialog, getDurationInDays } from './common'\nimport {\n  getAvailabilityInMinutes,\n  getNonRecurringAvailabilities,\n  getRecurringAvailabilities,\n} from './Availability'\nimport { Footer } from './Footer'\nimport {\n  Root,\n  SetAvailabilityHeaderContainer,\n  CopyButtonLabel,\n  StyledButtonLabel,\n  StyledButtonWrapper,\n  StyledHeading,\n  Wrapper,\n  NoteMessage,\n} from './styled-components'\nimport { getTabsOverrides, tabOverrides } from './overrides'\nimport {\n  SelectOptions,\n  LocationTypes,\n  RoomAvailabilities,\n  RoomExceptions,\n  RoomAvailabilityProps,\n} from './types'\nimport { AvailabilitySelect } from './AvailabilitySelect'\nimport { CopyRoomAvailability } from './CopyRoomAvailability'\nimport { Exceptions, getExceptionsInMinutes } from './Exceptions'\nimport { Availabilities, Availability } from './Availability'\n\nconst messages = defineMessages({\n  locationTypes: {\n    defaultMessage: 'Location Types',\n    description: 'Page title',\n  },\n  success: {\n    defaultMessage: 'Availabilities Saved Successfully.',\n    description: 'Success message',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  sectionTitle: {\n    defaultMessage: 'Set',\n    description: 'Section title',\n  },\n  setAvailability: {\n    defaultMessage: 'Set Availability',\n    description: 'Section title',\n  },\n  roomsLabel: {\n    defaultMessage: 'Onsite Locations',\n    description: 'Tab Label',\n  },\n  offsiteLabel: {\n    defaultMessage: 'Offsites',\n    description: 'Tab Label',\n  },\n  boothTourLabel: {\n    defaultMessage: 'Designated Location',\n    description: 'Tab Label',\n  },\n  copyRoomAvailabilityLabel: {\n    defaultMessage: 'Copy {room} availability to other locations',\n    description: 'Button label',\n  },\n  confirmationModalHeader: {\n    defaultMessage: 'You have unsaved changes',\n    description: 'Modal heading',\n  },\n  confirmationModalMessage: {\n    defaultMessage:\n      'Conflicts with planned meeting(s). Updating availability will be applicable only to future meetings and not for existing meeting',\n    description: 'Confirmation message',\n  },\n  unsavedChangesConfirmationMessage: {\n    defaultMessage: 'Please save the changes before proceeding',\n    description: 'Confirmation message',\n  },\n  unsavedChangesConfirmationMessageToCopy: {\n    defaultMessage: 'Please save the changes before proceeding to copy',\n    description: 'Confirmation message',\n  },\n  confirmationMessageToAvailabilityDates: {\n    defaultMessage:\n      'Please save the changes before proceeding to Availability Dates',\n    description: 'Confirmation message',\n  },\n  confirmationMessageToExceptions: {\n    defaultMessage:\n      'Please save the changes before proceeding to Exception Dates',\n    description: 'Confirmation message',\n  },\n  discardButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  saveButtonLabel: {\n    defaultMessage: 'Save and Proceed',\n    description: 'Button label',\n  },\n  availablityNoteMessage: {\n    defaultMessage:\n      '<b>Note:</b> Availability by date cannot be less than the minimum duration or time increments.',\n    description: 'Help text',\n  },\n})\n\nconst names = ['offsite_enabled', 'booth_tour_enabled']\n\nconst RoomAvailability: VFC<RoomAvailabilityProps> = ({\n  weekwise,\n  setAvailabilities,\n  locationType,\n  setHandleDiscard,\n}) => {\n  const { id: engagementTypeId } = useEngagementType().engagementType\n\n  const { getRoomAvailabilities = [] } = useRoomAvailabilitiesQuery({\n    variables: {\n      engagementTypeId,\n      availabilityLocationType: locationType,\n    },\n    fetchPolicy: 'cache-and-network',\n  })\n\n  const availabilities: RoomAvailabilities[] = useMemo(\n    () =>\n      weekwise\n        ? getRecurringAvailabilities(getRoomAvailabilities)\n        : getNonRecurringAvailabilities(getRoomAvailabilities),\n    [getRoomAvailabilities, weekwise]\n  )\n\n  return availabilities.length ? (\n    <Availability\n      weekwise={weekwise}\n      availabilities={availabilities}\n      setAvailabilities={setAvailabilities}\n      setHandleDiscard={setHandleDiscard}\n    />\n  ) : null\n}\n\nexport const SetAvailability: VFC = () => {\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  const history = useHistory()\n  const unload = useBeforeUnload()\n  const { Room, Offsite, BoothTour } = RoomAvailabilityLocationTypes\n  const [showLoader, setShowLoader] = useState(false)\n  const [exceptions, setExceptions] = useState<RoomExceptions[]>([])\n  const [availabilities, setAvailabilities] = useState<Availabilities[]>([])\n  const [isOpen, setIsOpen] = useState(false)\n  const [availabilityConfirmation, setAvailabilityConfirmation] = useState(\n    false\n  )\n  const { id: engagementTypeId } = useEngagementType().engagementType\n  const [status, setStatus] = useState<SelectOptions>(\n    SelectOptions.AVAILABILITY\n  )\n  const [statusToBeChanged, setStatusToBeChanged] = useState<SelectOptions>(\n    SelectOptions.AVAILABILITY\n  )\n  const [activeTab, setActiveTab] = useState<RoomAvailabilityLocationTypes>(\n    Room\n  )\n  const [copyChange, setCopyChange] = useState<boolean>(false)\n  const [\n    tabToBeChanged,\n    setTabToBeChanged,\n  ] = useState<RoomAvailabilityLocationTypes>(Room)\n  const [\n    unsavedChangesConfirmation,\n    setUnsavedChangesConfirmation,\n  ] = useState<boolean>(false)\n  const [dirty, setDirty] = useState(false)\n\n  const [handleDiscard, setHandleDiscard] = useState<\n    (arg?: () => void) => void\n  >(() => {})\n\n  useEffect(() => {\n    setDirty(!!(availabilities.length || exceptions.length))\n  }, [availabilities.length, exceptions.length])\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  const hasError = availabilities\n    .flatMap(({ availableSlots }) => availableSlots)\n    .some(({ error }) => error)\n\n  const { getEngagementTypeSettings = [] } = useGetEngagementTypeSettings({\n    variables: {\n      engagementTypeId,\n      names,\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  const getModalLabel = () => {\n    if (activeTab === Offsite) {\n      return formatMessage(messages.offsiteLabel)\n    } else if (activeTab === BoothTour) {\n      return formatMessage(messages.boothTourLabel)\n    }\n\n    return formatMessage(messages.roomsLabel)\n  }\n\n  const renderTabButton = () =>\n    engagementTypeSettings?.offsite_enabled === 'true' ||\n    engagementTypeSettings?.booth_tour_enabled === 'true' ? (\n      <StyledButtonWrapper\n        onClick={() => {\n          if (dirty) {\n            setCopyChange(true)\n            setUnsavedChangesConfirmation(true)\n          } else {\n            setIsOpen(true)\n          }\n        }}\n      >\n        <StyledButtonLabel type=\"button\" kind={KIND.minimal}>\n          <CopyOutlined color=\"primaryA\" size={16} />\n          <CopyButtonLabel>\n            {formatMessage(messages.copyRoomAvailabilityLabel, {\n              room: getModalLabel(),\n            })}\n          </CopyButtonLabel>\n        </StyledButtonLabel>\n      </StyledButtonWrapper>\n    ) : null\n\n  const { startDate, endDate } = useEventLocation().location?.attributes ?? {}\n  const weekwise = getDurationInDays(startDate, endDate) >= 14\n\n  const engagementTypeSettings: {\n    offsite_enabled?: 'true' | 'false'\n    booth_tour_enabled?: 'true' | 'false'\n  } = useMemo(\n    () =>\n      getEngagementTypeSettings.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue)\n            .value,\n        }),\n        {}\n      ),\n    [getEngagementTypeSettings]\n  )\n\n  const availabilityLocationTypes = [\n    {\n      label: formatMessage(messages.roomsLabel),\n      location: Room,\n    },\n    engagementTypeSettings.offsite_enabled === 'true' && {\n      label: formatMessage(messages.offsiteLabel),\n      location: Offsite,\n    },\n    engagementTypeSettings.booth_tour_enabled === 'true' && {\n      label: formatMessage(messages.boothTourLabel),\n      location: BoothTour,\n    },\n  ].filter(Boolean) as LocationTypes[]\n\n  const handleDialogClose = () => {\n    setAvailabilityConfirmation(false)\n  }\n\n  const handleDiscardChangesDialogClose = () => {\n    setUnsavedChangesConfirmation(false)\n    if (copyChange && availabilities.length) {\n      setAvailabilities([])\n    }\n    if (copyChange && exceptions.length) {\n      setExceptions([])\n    }\n    if (availabilities.length) {\n      setAvailabilities([])\n    }\n    if (exceptions.length) {\n      setExceptions([])\n    }\n    if (activeTab !== tabToBeChanged) {\n      setActiveTab(tabToBeChanged)\n    }\n    if (copyChange) {\n      setIsOpen(true)\n      setCopyChange(false)\n    }\n    if (statusToBeChanged !== status) {\n      setStatus(statusToBeChanged)\n    }\n  }\n\n  const availabilityExceptionsData = ():\n    | upsertRoomAvailabilitiesVariables\n    | upsertRoomExceptionsVariables => ({\n    availabilityLocationType: activeTab,\n    ...(status === SelectOptions.AVAILABILITY\n      ? { availabilities: getAvailabilityInMinutes(availabilities) }\n      : { exceptions: getExceptionsInMinutes(exceptions) }),\n    engagementTypeId,\n    weekwise,\n  })\n\n  const unsavedConfirmationDialogDesc = () =>\n    formatMessage(\n      copyChange\n        ? messages.unsavedChangesConfirmationMessageToCopy\n        : statusToBeChanged !== status\n        ? statusToBeChanged === SelectOptions.AVAILABILITY\n          ? messages.confirmationMessageToAvailabilityDates\n          : messages.confirmationMessageToExceptions\n        : messages.unsavedChangesConfirmationMessage\n    )\n\n  useEffect(() => {\n    setStatusToBeChanged(SelectOptions.AVAILABILITY)\n    setTabToBeChanged(RoomAvailabilityLocationTypes.Room)\n    setActiveTab(RoomAvailabilityLocationTypes.Room)\n  }, [engagementTypeId])\n\n  useEffect(() => {\n    if (statusToBeChanged !== status && dirty) {\n      setUnsavedChangesConfirmation(true)\n    } else {\n      setStatus(statusToBeChanged)\n    }\n    if (copyChange || tabToBeChanged !== activeTab) {\n      setStatusToBeChanged(status)\n    }\n  }, [copyChange, status, statusToBeChanged, tabToBeChanged, activeTab, dirty])\n\n  const checkAvailabilityExceptions = async () => {\n    if (unsavedChangesConfirmation) {\n      setUnsavedChangesConfirmation(false)\n    }\n    setAvailabilities(\n      availabilities.map(availability => {\n        const { availableSlots } = availability\n\n        return {\n          ...availability,\n          availableSlots: availableSlots.sort((a, b) =>\n            a.start < b.start ? -1 : a.start > b.start ? 1 : 0\n          ),\n        }\n      })\n    )\n    try {\n      setShowLoader(true)\n      if (status === SelectOptions.AVAILABILITY) {\n        const {\n          data: { validateRoomAvailabilities },\n        } = await validateRoomAvailabilitiesQuery(client, {\n          variables: availabilityExceptionsData(),\n          fetchPolicy: 'network-only',\n        })\n        setShowLoader(false)\n        validateRoomAvailabilities\n          ? handleSave()\n          : setAvailabilityConfirmation(true)\n      } else {\n        const {\n          data: { validateRoomExceptions },\n        } = await validateRoomExceptionsQuery(client, {\n          variables: availabilityExceptionsData(),\n          fetchPolicy: 'network-only',\n        })\n        setShowLoader(false)\n        validateRoomExceptions\n          ? handleSave()\n          : setAvailabilityConfirmation(true)\n      }\n    } catch (error) {\n      if (activeTab !== tabToBeChanged) {\n        setTabToBeChanged(activeTab)\n      }\n      if (copyChange) {\n        setCopyChange(false)\n      }\n      if (statusToBeChanged !== status) {\n        setStatusToBeChanged(status)\n      }\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  const handleSave = async () => {\n    if (availabilityConfirmation) {\n      setAvailabilityConfirmation(false)\n    }\n    try {\n      setShowLoader(true)\n      if (status === SelectOptions.AVAILABILITY) {\n        await mutateRoomAvailabilities(client, {\n          variables: availabilityExceptionsData(),\n        })\n      } else {\n        await mutateRoomExceptions(client, {\n          variables: availabilityExceptionsData(),\n        })\n      }\n      if (availabilities.length) {\n        setAvailabilities([])\n      }\n      if (exceptions.length) {\n        setExceptions([])\n      }\n      if (activeTab !== tabToBeChanged) {\n        setActiveTab(tabToBeChanged)\n      }\n      if (copyChange) {\n        setIsOpen(true)\n        setCopyChange(false)\n      }\n      if (statusToBeChanged !== status) {\n        setStatus(statusToBeChanged)\n      }\n      setShowLoader(false)\n      showSuccessToast(formatMessage(messages.success))\n    } catch (error) {\n      if (activeTab !== tabToBeChanged) {\n        setTabToBeChanged(activeTab)\n      }\n      if (copyChange) {\n        setCopyChange(false)\n      }\n      if (statusToBeChanged !== status) {\n        setStatusToBeChanged(status)\n      }\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Root>\n        <Header />\n        <Body>\n          <Container>\n            <SetAvailabilityHeaderContainer>\n              {weekwise ? (\n                <>\n                  <StyledHeading>\n                    {formatMessage(messages.sectionTitle)}\n                  </StyledHeading>\n                  <AvailabilitySelect\n                    type={status}\n                    onChange={setStatusToBeChanged}\n                  />\n                </>\n              ) : (\n                <StyledHeading>\n                  {formatMessage(messages.setAvailability)}\n                </StyledHeading>\n              )}\n              <Wrapper>\n                <NoteMessage>\n                  {formatMessage(messages.availablityNoteMessage, {\n                    b: (chunks: ReactNode) => <strong>{chunks}</strong>,\n                  })}\n                </NoteMessage>\n              </Wrapper>\n            </SetAvailabilityHeaderContainer>\n\n            <Tabs\n              overrides={getTabsOverrides(renderTabButton)}\n              activeKey={activeTab}\n              onChange={({ activeKey }) => {\n                setTabToBeChanged(activeKey as RoomAvailabilityLocationTypes)\n                if (dirty) {\n                  setUnsavedChangesConfirmation(true)\n                } else {\n                  setActiveTab(activeKey as RoomAvailabilityLocationTypes)\n                }\n              }}\n            >\n              {availabilityLocationTypes.map(({ label, location }) => (\n                <Tab\n                  title={<TabTitle>{label}</TabTitle>}\n                  overrides={getTabOverrides(tabOverrides)}\n                  key={location}\n                >\n                  {status === SelectOptions.AVAILABILITY ? (\n                    <RoomAvailability\n                      weekwise={weekwise}\n                      status={status}\n                      locationType={location}\n                      setAvailabilities={setAvailabilities}\n                      setHandleDiscard={setHandleDiscard}\n                    />\n                  ) : (\n                    <Exceptions\n                      weekwise={weekwise}\n                      status={status}\n                      locationType={location}\n                      setExceptions={setExceptions}\n                      setHandleDiscard={setHandleDiscard}\n                    />\n                  )}\n                </Tab>\n              ))}\n            </Tabs>\n          </Container>\n          {dirty ? (\n            <Footer\n              onDiscardClick={handleDiscard}\n              onSaveClick={checkAvailabilityExceptions}\n              hasError={hasError}\n              onCancelClick={() => history.goBack()}\n            />\n          ) : null}\n        </Body>\n      </Root>\n      {isOpen && (\n        <CopyRoomAvailability\n          isOpen\n          engagementTypeSettings={engagementTypeSettings}\n          activeTab={activeTab}\n          getModalLabel={getModalLabel}\n          onClose={() => setIsOpen(false)}\n        />\n      )}\n      {availabilityConfirmation ? (\n        <ConfirmationDialog\n          heading={formatMessage(messages.confirmationModalHeader)}\n          message={formatMessage(messages.confirmationModalMessage)}\n          cancelLabel={formatMessage(messages.discardButtonLabel)}\n          successLabel={formatMessage(messages.saveButtonLabel)}\n          onClose={handleDialogClose}\n          onCancel={handleDialogClose}\n          onSuccess={handleSave}\n        />\n      ) : null}\n      {unsavedChangesConfirmation ? (\n        <ConfirmationDialog\n          heading={formatMessage(messages.confirmationModalHeader)}\n          message={unsavedConfirmationDialogDesc()}\n          cancelLabel={formatMessage(messages.discardButtonLabel)}\n          successLabel={formatMessage(messages.saveButtonLabel)}\n          onClose={handleDiscardChangesDialogClose}\n          onCancel={handleDiscardChangesDialogClose}\n          onSuccess={checkAvailabilityExceptions}\n        />\n      ) : null}\n    </>\n  )\n}\n","import { EngagementSettingConfigErrors as EngagementSettingConfigErrorsEnum } from 'gql/types/globalTypes'\nimport { defineMessages } from 'react-intl'\n\ntype EngagementSettingConfigErrorsType = keyof typeof EngagementSettingConfigErrorsEnum\n\nexport const engagementSettingErrors = defineMessages<EngagementSettingConfigErrorsType>(\n  {\n    MAKE_OPTIONAL_PARTICIPANT_CONFIG_ERROR: {\n      defaultMessage:\n        'Cannot be turned off as there are active meeting(s) with at least one user as optional.',\n      description: 'Error message',\n    },\n  }\n)\n","import { styled } from '@jifflenow/brightui'\n\nexport const ParticipantsTitle = styled('h2', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale800,\n}))\n\nexport const ParticipantsSectionTitle = styled(\n  'h4',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.Subtitle1,\n    marginBottom: sizing.scale0,\n    color: colors.mono800,\n    marginTop: sizing.scale0,\n  })\n)\n\nexport const ParticipantsSectionDesc = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    marginBottom: sizing.scale550,\n    marginTop: sizing.scale200,\n  })\n)\n\nexport const BorderStyled = styled('div', ({ $theme: { colors } }) => ({\n  borderBottomColor: colors.mono300,\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1px',\n}))\n\nexport const ParticipantsBody = styled('div', ({ $theme: { sizing } }) => ({\n  overflow: 'auto',\n  marginBottom: sizing.scale1000,\n}))\n\nexport const InputFieldContainer = styled<{ $first?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { sizing, mediaQuery }, $first }) => ({\n    width: '100%',\n    maxWidth: '282px',\n    marginBottom: sizing.scale800,\n    [mediaQuery.large]: {\n      marginRight: $first ? '46px' : 0,\n    },\n  })\n)\nexport const MeetingHostLabel = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale650,\n}))\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const ParticipantsLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"600\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"20\" x=\"0\" width=\"116\" height=\"15\" />\n\n      <rect y=\"75\" x=\"0\" width=\"205\" height=\"14\" />\n      <rect y=\"105\" x=\"0\" width=\"345\" height=\"9\" />\n      <rect y=\"138\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"166\" x=\"0\" width=\"220\" height=\"13\" />\n      <rect y=\"158\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"210\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"238\" x=\"0\" width=\"295\" height=\"13\" />\n      <rect y=\"230\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"282\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"310\" x=\"0\" width=\"485\" height=\"13\" />\n      <rect y=\"302\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"354\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"382\" x=\"0\" width=\"330\" height=\"13\" />\n      <rect y=\"374\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"426\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"454\" x=\"0\" width=\"405\" height=\"13\" />\n      <rect y=\"446\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"498\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"526\" x=\"0\" width=\"520\" height=\"13\" />\n      <rect y=\"518\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n      <rect y=\"570\" x=\"0\" width=\"1000\" height=\"1\" />\n    </ContentLoader>\n  )\n}\n","import { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { EngagementTypeToggle } from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport {\n  BorderStyled,\n  ParticipantsBody,\n  ParticipantsSectionDesc,\n  ParticipantsSectionTitle,\n} from './styled-components'\n\nconst messages = defineMessages({\n  sectionTitle: {\n    defaultMessage: 'Internal Attendee Options',\n    description: 'Section title',\n  },\n  sectionTitleDesc: {\n    defaultMessage: 'Internal attendee capabilities during requesting meeting',\n    description: 'Help text',\n  },\n  hideInternalAttendeesInBookMeetingLabel: {\n    defaultMessage: 'Hide Internal Attendee section',\n    description: 'Field label',\n  },\n  internalAttendeePresenceLabel: {\n    defaultMessage: 'At least one internal attendee is required',\n    description: 'Field label',\n  },\n  relaxInternalAttendeePresenceForMmLabel: {\n    defaultMessage:\n      'Relax this restriction for MMs/JMMs (applicable if above is enabled).',\n    description: 'Field label',\n  },\n  atLeastOneAttendeeRolePresenceLabel: {\n    defaultMessage: \"At least one user of 'Attendee' role is required\",\n    description: 'Field label',\n  },\n  allowRequestorToAddInternalAttendeeLabel: {\n    defaultMessage: 'Allow meeting requestors to add new internal attendees',\n    description: 'Field label',\n  },\n  sendVerificationEmailToAttendeeLabel: {\n    defaultMessage:\n      'Send verification mails to internal attendees added via Request Meeting',\n    description: 'Field label',\n  },\n  allowRequestorToNominateThemselves: {\n    defaultMessage: 'Allow requestors to nominate themselves to a meeting',\n    description: 'Field label',\n  },\n})\n\nexport const InternalAttendee: VFC = () => {\n  const { formatMessage } = useIntl()\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isSession =\n    masterEngagementType === MasterEngagementTypes.TracksAndSession\n\n  return (\n    <ParticipantsBody>\n      <ParticipantsSectionTitle>\n        {formatMessage(messages.sectionTitle)}\n      </ParticipantsSectionTitle>\n      <ParticipantsSectionDesc>\n        {formatMessage(messages.sectionTitleDesc)}\n      </ParticipantsSectionDesc>\n      {!isSession && (\n        <>\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(\n              messages.hideInternalAttendeesInBookMeetingLabel\n            )}\n            name=\"hide_internal_attendees_in_book_meeting\"\n          />\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(messages.internalAttendeePresenceLabel)}\n            name=\"internal_attendee_presence\"\n          >\n            <BorderStyled />\n            <EngagementTypeToggle\n              label={formatMessage(\n                messages.relaxInternalAttendeePresenceForMmLabel\n              )}\n              name=\"relax_internal_attendee_presence_for_mm\"\n            />\n          </EngagementTypeToggle>\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(messages.atLeastOneAttendeeRolePresenceLabel)}\n            name=\"atleast_one_attendee_role_presence\"\n          />\n        </>\n      )}\n      <BorderStyled />\n      <EngagementTypeToggle\n        label={formatMessage(messages.allowRequestorToAddInternalAttendeeLabel)}\n        name=\"allow_requestor_to_add_internal_attendee\"\n      />\n      <BorderStyled />\n      <EngagementTypeToggle\n        label={formatMessage(messages.sendVerificationEmailToAttendeeLabel)}\n        name=\"send_verification_email_to_attendee\"\n      />\n      {isSession && (\n        <>\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(messages.allowRequestorToNominateThemselves)}\n            name=\"allow_requestor_to_self_nominate_to_meeting\"\n          />\n        </>\n      )}\n      <BorderStyled />\n    </ParticipantsBody>\n  )\n}\n","import { ReactNode, useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useField } from 'react-final-form'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { EngagementTypeToggle } from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport {\n  BorderStyled,\n  ParticipantsBody,\n  ParticipantsSectionDesc,\n  ParticipantsSectionTitle,\n} from './styled-components'\n\nconst messages = defineMessages({\n  sectionTitle: {\n    defaultMessage: 'External Attendee Options',\n    description: 'Section title',\n  },\n  sectionTitleDesc: {\n    defaultMessage: 'External attendee capabilities during requesting meeting',\n    description: 'Help text',\n  },\n  hideExternalAttendeesInBookMeetingLabel: {\n    defaultMessage: 'Hide External Attendee section',\n    description: 'Field label',\n  },\n  externalAttendeePresenceLabel: {\n    defaultMessage: 'At least one external attendee is required',\n    description: 'Field label',\n  },\n  allExternalAttendeesVisibleLabel: {\n    defaultMessage:\n      'Requestors can see External Attendees added by anyone (other Requestors + MMs)',\n    description: 'Field label',\n  },\n  relaxExternalAttendeePresenceForMmLabel: {\n    defaultMessage:\n      'Relax this restriction for MMs/JMMs (applicable if above is enabled).',\n    description: 'Field label',\n  },\n  externalAttendeesVisibleAddedByMmLabel: {\n    defaultMessage: 'Requestors can see External Attendees added by MMs',\n    description: 'Field label',\n  },\n  allowUserToAddNewExternalAttendeeLabel: {\n    defaultMessage: 'Allow user to add new External Attendees',\n    description: 'Field label',\n  },\n  externalIcsOptOutLabel: {\n    defaultMessage:\n      'Requestors (non-MMs) can opt out External Attendees from ICS',\n    description: 'Field label',\n  },\n  dialogTitle: {\n    defaultMessage: 'Warning',\n    description: 'Dialog title',\n  },\n  dialogMessage: {\n    defaultMessage:\n      'Enabling this setting will result in external attendee(s) <b>not receiving the personal calendar invitations automatically</b> upon approval of requests in this engagement type.',\n    description: 'Dialog Body',\n  },\n  labelConfirm: {\n    defaultMessage: 'Confirm',\n    description: 'Button label',\n  },\n  labelCancel: {\n    defaultMessage: 'Cancel',\n    description: 'Button label',\n  },\n})\n\nconst ExternalIcs: VFC = () => {\n  const { formatMessage } = useIntl()\n  const [showWarning, setShowWarning] = useState(false)\n\n  const {\n    input: { value: externalIcsOptOut, onChange: changeExternalIcsOptOut },\n    meta: { initial: initialExternalIcsOptOut },\n  } = useField('external_ics_opt_out')\n\n  useEffect(() => {\n    initialExternalIcsOptOut === 'false' &&\n      externalIcsOptOut === 'true' &&\n      setShowWarning(true)\n  }, [externalIcsOptOut, initialExternalIcsOptOut])\n\n  return (\n    <>\n      {showWarning && (\n        <ConfirmationDialog\n          heading={formatMessage(messages.dialogTitle)}\n          message={formatMessage(messages.dialogMessage, {\n            b: (chunks: ReactNode) => <strong>{chunks}</strong>,\n          })}\n          successLabel={formatMessage(messages.labelConfirm)}\n          cancelLabel={formatMessage(messages.labelCancel)}\n          onCancel={() => {\n            setShowWarning(false)\n            changeExternalIcsOptOut('false')\n          }}\n          onSuccess={() => setShowWarning(false)}\n        />\n      )}\n      <EngagementTypeToggle\n        label={formatMessage(messages.externalIcsOptOutLabel)}\n        name=\"external_ics_opt_out\"\n      />\n    </>\n  )\n}\n\nexport const ExternalAttendee: VFC = () => {\n  const { formatMessage } = useIntl()\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isSession =\n    masterEngagementType === MasterEngagementTypes.TracksAndSession\n\n  return (\n    <ParticipantsBody>\n      <ParticipantsSectionTitle>\n        {formatMessage(messages.sectionTitle)}\n      </ParticipantsSectionTitle>\n      <ParticipantsSectionDesc>\n        {formatMessage(messages.sectionTitleDesc)}\n      </ParticipantsSectionDesc>\n      {!isSession && (\n        <>\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(\n              messages.hideExternalAttendeesInBookMeetingLabel\n            )}\n            name=\"hide_external_attendees_in_book_meeting\"\n          />\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(messages.externalAttendeePresenceLabel)}\n            name=\"external_attendee_presence\"\n          >\n            <BorderStyled />\n            <EngagementTypeToggle\n              label={formatMessage(\n                messages.relaxExternalAttendeePresenceForMmLabel\n              )}\n              name=\"relax_external_attendee_presence_for_mm\"\n            />\n          </EngagementTypeToggle>\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(messages.allExternalAttendeesVisibleLabel)}\n            name=\"all_external_attendees_visible\"\n          />\n          <BorderStyled />\n          <EngagementTypeToggle\n            label={formatMessage(\n              messages.externalAttendeesVisibleAddedByMmLabel\n            )}\n            name=\"external_attendees_visible_added_by_mm\"\n          />\n        </>\n      )}\n      <BorderStyled />\n      <EngagementTypeToggle\n        label={formatMessage(messages.allowUserToAddNewExternalAttendeeLabel)}\n        name=\"allow_user_to_add_new_external_attendee\"\n      />\n      {!isSession && (\n        <>\n          <BorderStyled />\n          <ExternalIcs />\n        </>\n      )}\n      <BorderStyled />\n    </ParticipantsBody>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport {\n  EngagementTypeToggle,\n  EngagementTypeInput,\n  EngagementTypeToggleWithDesc,\n} from '../common'\nimport {\n  BorderStyled,\n  InputFieldContainer,\n  MeetingHostLabel,\n  ParticipantsBody,\n} from './styled-components'\n\nconst messages = defineMessages({\n  sectionTitle: {\n    defaultMessage: 'Meeting Host',\n    description: 'Section title',\n  },\n  sectionTitleDesc: {\n    defaultMessage: 'Meeting Host capabilities during requesting meeting',\n    description: 'Help text',\n  },\n  meetingHostInputLabel: {\n    defaultMessage: 'Meeting Host Label',\n    description: 'Input label',\n  },\n  meetingHostInputPlaceholder: {\n    defaultMessage: 'Meeting host',\n    description: 'placeholder text',\n  },\n  enableMeetingHost: {\n    defaultMessage: 'Enable meeting host',\n    description: 'Field label',\n  },\n  atLeastOneMeetingHostLabel: {\n    defaultMessage: 'At least one meeting host is required',\n    description: 'Field label',\n  },\n  assignRequestorAsHostLabel: {\n    defaultMessage: 'Assign requestors as meeting host by default',\n    description: 'Field label',\n  },\n  assignMappedUserAsHostLabel: {\n    defaultMessage:\n      'Assign participants mapped to the topic as meeting host by default',\n    description: 'Field label',\n  },\n  mapAttendeeAsHostLabel: {\n    defaultMessage:\n      'Allow only attendees mapped to the topic to be assigned as Meeting Hosts by Requestor',\n    description: 'Field label',\n  },\n  allowRequestorsToEditMeetingHostLabel: {\n    defaultMessage:\n      'Allow requestors to edit Meeting Host role while creating/editing a meeting (If turned Off, only JMM/MM will be able to edit the Meeting Host role)',\n    description: 'Field label',\n  },\n  allowMeetingHostToManageMeetingLabel: {\n    defaultMessage: 'Allow meeting host to manage meeting',\n    description: 'Field label',\n  },\n  allowMeetingHostToEditMeetingLabel: {\n    defaultMessage: 'Allow meeting host to edit meeting',\n    description: 'Field label',\n  },\n  notificationToMeetingHostLabel: {\n    defaultMessage: 'Send a meeting update notification to meeting host',\n    description: 'Section title name',\n  },\n})\n\nexport const MeetingHost: VFC = () => {\n  const { formatMessage } = useIntl()\n  const { configs } = useEventLocation()\n  const { enable_topic } = configs!\n\n  return (\n    <ParticipantsBody>\n      <EngagementTypeToggleWithDesc\n        label={formatMessage(messages.sectionTitle)}\n        name=\"enable_meeting_host\"\n        desc={formatMessage(messages.sectionTitleDesc)}\n      >\n        <MeetingHostLabel>\n          <InputFieldContainer>\n            <EngagementTypeInput\n              label={formatMessage(messages.meetingHostInputLabel)}\n              name=\"meeting_host_label\"\n              placeholder={formatMessage(messages.meetingHostInputPlaceholder)}\n              required\n            />\n          </InputFieldContainer>\n        </MeetingHostLabel>\n        <BorderStyled />\n        <EngagementTypeToggle\n          label={formatMessage(messages.atLeastOneMeetingHostLabel)}\n          name=\"atleast_one_meeting_host\"\n        />\n        <BorderStyled />\n        <EngagementTypeToggle\n          label={formatMessage(messages.assignRequestorAsHostLabel)}\n          name=\"assign_requestors_as_meeting_host_by_default\"\n        />\n        <BorderStyled />\n        {enable_topic === 'true' && (\n          <>\n            <EngagementTypeToggle\n              label={formatMessage(messages.assignMappedUserAsHostLabel)}\n              name=\"assign_mapped_user_as_meeting_host_by_default\"\n            />\n            <BorderStyled />\n          </>\n        )}\n        <EngagementTypeToggle\n          label={formatMessage(messages.mapAttendeeAsHostLabel)}\n          name=\"assign_only_topic_mapped_user_as_meeting_host\"\n        />\n        <BorderStyled />\n        <EngagementTypeToggle\n          label={formatMessage(messages.allowRequestorsToEditMeetingHostLabel)}\n          name=\"allow_requestors_to_unassign_meeting_host\"\n        />\n        <BorderStyled />\n        <EngagementTypeToggle\n          label={formatMessage(messages.allowMeetingHostToManageMeetingLabel)}\n          name=\"allow_meeting_host_to_manage_meeting\"\n        />\n        <BorderStyled />\n        <EngagementTypeToggle\n          label={formatMessage(messages.allowMeetingHostToEditMeetingLabel)}\n          name=\"allow_meeting_host_to_edit_meeting\"\n        />\n        <BorderStyled />\n        <EngagementTypeToggle\n          label={formatMessage(messages.notificationToMeetingHostLabel)}\n          name=\"send_copy_of_mm_update_email_to_host\"\n        />\n      </EngagementTypeToggleWithDesc>\n      <BorderStyled />\n    </ParticipantsBody>\n  )\n}\n","import { RadioOverrides } from '@jifflenow/brightui/radio'\nimport { RadioGroupOverrides } from '@jifflenow/brightui/radio'\n\nexport const instructionRadioOverride: RadioOverrides = {\n  Root: {\n    style: () => ({\n      marginRight: '79px',\n    }),\n  },\n}\n\nexport const radioGroupOverrides: RadioGroupOverrides = {\n  RadioGroupRoot: {\n    style: ({ $theme: { sizing } }) => ({\n      marginBottom: sizing.scale800,\n    }),\n  },\n}\n","import { defineMessages, useIntl } from 'react-intl'\nimport { RadioGroup, Radio, ALIGN } from '@jifflenow/brightui/radio'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { Field } from 'ui-components/Field'\nimport {\n  EngagementTypeToggleWithDesc,\n  FieldLabel,\n  GenericError,\n} from '../common'\nimport { BorderStyled, ParticipantsBody } from './styled-components'\nimport { instructionRadioOverride, radioGroupOverrides } from './overrides'\n\nconst messages = defineMessages({\n  sectionTitle: {\n    defaultMessage: 'Attendee Mode of attendance',\n    description: 'Section title',\n  },\n  sectionTitleDesc: {\n    defaultMessage:\n      'In-person attendees will be considered for room capacity utilization',\n    description: 'Help text',\n  },\n  defaultModeForAllAttendeesLabel: {\n    defaultMessage: 'Enable Default Mode of attendance for all attendees',\n    description: 'Field label',\n  },\n})\n\nconst AttendeeModeSelect = () => {\n  const { formatMessage } = useIntl()\n\n  const {\n    in_person_attendance_custom_label,\n    virtual_attendance_custom_label,\n  } = useEventLocation().configs!\n\n  return (\n    <Field<string>\n      name=\"mode_of_attendance\"\n      render={({\n        input: { value, onChange },\n        meta: { error, submitError },\n      }) => (\n        <>\n          {(submitError || error) && (\n            <GenericError>{submitError || error}</GenericError>\n          )}\n          <FieldLabel $bold={false}>\n            {formatMessage(messages.defaultModeForAllAttendeesLabel)}\n          </FieldLabel>\n          <RadioGroup\n            align={ALIGN.horizontal}\n            value={value}\n            onChange={e => onChange(e.target.value)}\n            overrides={radioGroupOverrides}\n          >\n            <Radio value=\"in_person\" overrides={instructionRadioOverride}>\n              {in_person_attendance_custom_label}\n            </Radio>\n            <Radio value=\"virtual\">{virtual_attendance_custom_label}</Radio>\n          </RadioGroup>\n        </>\n      )}\n    />\n  )\n}\n\nexport const AttendeeMode = () => {\n  const { formatMessage } = useIntl()\n  const { enable_mode_of_attendance } = useEventLocation().configs!\n\n  return enable_mode_of_attendance === 'true' ? (\n    <ParticipantsBody>\n      <EngagementTypeToggleWithDesc\n        label={formatMessage(messages.sectionTitle)}\n        name=\"enable_mode_of_attendance\"\n        desc={formatMessage(messages.sectionTitleDesc)}\n      >\n        <AttendeeModeSelect />\n      </EngagementTypeToggleWithDesc>\n      <BorderStyled />\n    </ParticipantsBody>\n  ) : null\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { EngagementTypeToggleWithDesc } from '../common'\nimport { BorderStyled, ParticipantsBody } from './styled-components'\n\nconst messages = defineMessages({\n  sectionTitle: {\n    defaultMessage: 'Make participants optional to the meeting',\n    description: 'Section title',\n  },\n  sectionTitleDesc: {\n    defaultMessage:\n      'Requestor and admin will have the capability to mark a meeting participant as Optional or Required on the create/update meeting',\n    description: 'Help text',\n  },\n})\n\nexport const OptionalParticipant: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <ParticipantsBody>\n      <EngagementTypeToggleWithDesc\n        label={formatMessage(messages.sectionTitle)}\n        name=\"make_participants_optional_to_the_meeting\"\n        desc={formatMessage(messages.sectionTitleDesc)}\n      />\n      <BorderStyled />\n    </ParticipantsBody>\n  )\n}\n","import { useEffect, useState, VFC } from 'react'\nimport { useField } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { DependentLinks, RefetchProps } from '../common/types'\nimport { EngagementModal } from '../common/EngagementModal'\nimport { Paths } from '../Paths'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { InternalAttendee } from './InternalAttendee'\nimport { ExternalAttendee } from './ExternalAttendee'\nimport { MeetingHost } from './MeetingHost'\nimport { AttendeeMode } from './AttendeeMode'\nimport { DependentFields } from './types'\nimport { OptionalParticipant } from './OptionalParticipant'\n\nconst messages = defineMessages({\n  unMappedSchedulingLabel: {\n    defaultMessage: 'Auto process without mapping request page',\n    description: 'Field label',\n  },\n  warningDisableLabel: {\n    defaultMessage: 'Disable the following',\n    description: 'Dependent settings group header',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before enabling the Hide Internal Attendee section.',\n    description: 'Dependent settings modal title',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nexport const FormField: VFC<RefetchProps & DependentFields> = ({\n  refetch,\n  loading,\n  dependentFields,\n}) => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n  const { subType } = useEventLocation().location?.attributes ?? {}\n\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isGeneralMeetingType =\n    masterEngagementType === MasterEngagementTypes.General\n  const {\n    onChange: hideInternalAttendeesOnChange,\n    value: hideInternalValue,\n  } = useField('hide_internal_attendees_in_book_meeting').input\n\n  const {\n    onChange: InternalAttendeeOnChange,\n    value: InternalAttendeeValue,\n  } = useField('internal_attendee_presence').input\n\n  const {\n    onChange: relaxInternalAttendeeOnChange,\n    value: relaxInternalAttendeeValue,\n  } = useField('relax_internal_attendee_presence_for_mm').input\n\n  const {\n    enable_external_widget_auto_process_without_mapping,\n  } = dependentFields\n\n  useEffect(() => {\n    if (\n      hideInternalValue === 'true' ||\n      relaxInternalAttendeeValue === 'true' ||\n      InternalAttendeeValue === 'false'\n    ) {\n      setIsOpen(enable_external_widget_auto_process_without_mapping !== 'false')\n    }\n  }, [\n    hideInternalValue,\n    enable_external_widget_auto_process_without_mapping,\n    relaxInternalAttendeeValue,\n    InternalAttendeeValue,\n  ])\n\n  const dependentLinks = [\n    enable_external_widget_auto_process_without_mapping !== 'false' && {\n      label: formatMessage(messages.unMappedSchedulingLabel),\n      path: Paths.INBOUND_REQUEST_FORM,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n  ].filter(Boolean) as DependentLinks[]\n\n  const dependentValueChange = () => {\n    if (enable_external_widget_auto_process_without_mapping !== 'false') {\n      hideInternalAttendeesOnChange('false')\n      relaxInternalAttendeeOnChange('false')\n      InternalAttendeeOnChange('true')\n    }\n  }\n\n  return (\n    <>\n      {isOpen && (\n        <>\n          {loading && <ModalSpinner />}\n          <EngagementModal\n            title={formatMessage(messages.warningModalTitle)}\n            dependentLinks={dependentLinks}\n            onClose={() => {\n              setIsOpen(false)\n              dependentValueChange()\n            }}\n            onConfirm={() => refetch()}\n          />\n        </>\n      )}\n      <InternalAttendee />\n      <ExternalAttendee />\n      {isGeneralMeetingType && (\n        <>\n          <AttendeeMode />\n          {subType === 'Emeet' && <OptionalParticipant />}\n          <MeetingHost />\n        </>\n      )}\n    </>\n  )\n}\n","import { VFC, useState, useEffect, useMemo } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form as FinalForm, FormRenderProps } from 'react-final-form'\nimport createFocusDecorator from 'final-form-focus'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport {\n  mutateBulkUpsertEngagementSettings,\n  useApolloClient,\n  useGetEngagementTypeSettings,\n} from 'gql'\nimport { getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue } from 'gql/types/getEngagementTypeSettings'\nimport { BulkEngagementSettingUpdateInput } from 'gql/types/globalTypes'\nimport {\n  bulkUpsertEngagementSettingsVariables,\n  bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue,\n} from 'gql/types/bulkUpsertEngagementSettings'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport {\n  Body,\n  Footer,\n  StyledForm,\n  Container,\n  usePageTitle,\n  Header,\n} from '../common'\nimport { useSettingsLoader } from '../common/useSettingsLoader'\nimport { RefetchProps } from '../common/types'\nimport { filterEngagementSettings } from '../common/filterEngagementSettings'\nimport { engagementSettingErrors } from '../common/EngagementSettingErrors'\nimport { updateQueryResults } from '../common/utils'\nimport { ParticipantsTitle } from './styled-components'\nimport { ParticipantsLoader } from './ParticipantsLoader'\nimport { FormField } from './FormField'\nimport { DependentFields, DependentFieldValues, FormValues } from './types'\n\nconst LoadingShimmer = () => (\n  <Body>\n    <Container>\n      <ParticipantsLoader />\n    </Container>\n  </Body>\n)\n\nconst messages = defineMessages({\n  pageTitle: {\n    defaultMessage: 'Participants',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {option} other {options}} failed to save',\n    description: 'Error message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  sectionTitle: {\n    defaultMessage: 'Participants Options',\n    description: 'Section title',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  fieldErrorMessage: {\n    defaultMessage: 'Error saving changes',\n    description: 'field error message',\n  },\n})\n\nconst focusDecorator = createFocusDecorator<FormValues>()\n\nconst Form: VFC<\n  FormRenderProps<FormValues> & RefetchProps & DependentFields\n> = ({ handleSubmit, dirty, refetch, loading, dependentFields }) => {\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n  const showLoading = useSettingsLoader(loading)\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      {showLoading ? (\n        <LoadingShimmer />\n      ) : (\n        <Body>\n          <Container>\n            <ParticipantsTitle>\n              {formatMessage(messages.sectionTitle)}\n            </ParticipantsTitle>\n            <FormField\n              refetch={refetch}\n              loading={loading}\n              dependentFields={dependentFields}\n            />\n          </Container>\n          <Footer />\n        </Body>\n      )}\n    </StyledForm>\n  )\n}\n\nconst fieldNames = [\n  'hide_internal_attendees_in_book_meeting',\n  'internal_attendee_presence',\n  'relax_internal_attendee_presence_for_mm',\n  'atleast_one_attendee_role_presence',\n  'allow_requestor_to_add_internal_attendee',\n  'send_verification_email_to_attendee',\n  'hide_external_attendees_in_book_meeting',\n  'external_attendee_presence',\n  'all_external_attendees_visible',\n  'relax_external_attendee_presence_for_mm',\n  'external_attendees_visible_added_by_mm',\n  'allow_user_to_add_new_external_attendee',\n  'external_ics_opt_out',\n  'mode_of_attendance',\n  'enable_mode_of_attendance',\n  'enable_meeting_host',\n  'meeting_host_label',\n  'atleast_one_meeting_host',\n  'assign_requestors_as_meeting_host_by_default',\n  'assign_mapped_user_as_meeting_host_by_default',\n  'assign_only_topic_mapped_user_as_meeting_host',\n  'allow_requestors_to_unassign_meeting_host',\n  'allow_meeting_host_to_manage_meeting',\n  'allow_meeting_host_to_edit_meeting',\n  'send_copy_of_mm_update_email_to_host',\n  'make_participants_optional_to_the_meeting',\n  'allow_requestor_to_self_nominate_to_meeting',\n]\n\nconst dependentFieldNames = [\n  'enable_external_widget_auto_process_without_mapping',\n]\n\nexport const Participants: VFC = () => {\n  const [showLoader, setShowLoader] = useState(false)\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  usePageTitle(formatMessage(messages.pageTitle))\n  const { id: engagementTypeId } = useEngagementType().engagementType\n\n  const {\n    loading,\n    getEngagementTypeSettings = [],\n    refetch: refetchGetEngagementTypeSettings,\n    updateQuery,\n  } = useGetEngagementTypeSettings({\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      engagementTypeId,\n      names: [...fieldNames, ...dependentFieldNames],\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  const fieldValues = useMemo(\n    () => filterEngagementSettings(getEngagementTypeSettings, fieldNames),\n    [getEngagementTypeSettings]\n  )\n\n  const dependentValues = useMemo(\n    () =>\n      filterEngagementSettings(getEngagementTypeSettings, dependentFieldNames),\n    [getEngagementTypeSettings]\n  )\n\n  const initialValues = useMemo(\n    () =>\n      fieldValues.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue)\n            .value,\n        }),\n        {}\n      ),\n    [fieldValues]\n  )\n\n  const dependentFieldValues = useMemo(\n    () =>\n      dependentValues.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue)\n            .value,\n        }),\n        {}\n      ),\n    [dependentValues]\n  ) as DependentFieldValues\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change }\n  ) => {\n    try {\n      setShowLoader(true)\n      const configsToUpdate = fieldValues.reduce<\n        BulkEngagementSettingUpdateInput[]\n      >((acc, { name, value: previousValue }) => {\n        const {\n          display_name,\n          value,\n        } = previousValue as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue\n\n        return value !== values[name as keyof FormValues]\n          ? [\n              ...acc,\n              {\n                name,\n                customValue: {\n                  display_name,\n                  value: values[name as keyof FormValues],\n                },\n              },\n            ]\n          : acc\n      }, [])\n\n      const variables: bulkUpsertEngagementSettingsVariables = {\n        engagementTypeId,\n        configsToUpdate,\n      }\n      const { failureCount, totalCount, engagementSettings, successCount } = (\n        await mutateBulkUpsertEngagementSettings(client, {\n          variables,\n        })\n      ).data!.bulkUpsertEngagementSettings\n      setShowLoader(false)\n      if (failureCount) {\n        showErrorToast(\n          formatMessage(messages.updateError, { totalCount, failureCount })\n        )\n        engagementSettings.forEach(\n          ({ success, name, value }) =>\n            !success &&\n            change(\n              name as keyof FormValues,\n              (value as bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue)\n                .value ?? undefined\n            )\n        )\n        const errors = engagementSettings.reduce(\n          (acc, { success, name, errorCode }) =>\n            success\n              ? acc\n              : {\n                  ...acc,\n                  [name]: formatMessage(\n                    (errorCode && engagementSettingErrors[errorCode]) ??\n                      messages.fieldErrorMessage\n                  ),\n                },\n          {}\n        )\n        if (successCount) {\n          updateQueryResults(updateQuery, engagementSettings)\n        }\n\n        return errors\n      }\n      showSuccessToast(formatMessage(messages.successMessage))\n      updateQueryResults(updateQuery, engagementSettings)\n\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<FormValues>\n        decorators={[focusDecorator]}\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        render={props => (\n          <Form\n            {...props}\n            refetch={() => refetchGetEngagementTypeSettings()}\n            loading={loading}\n            dependentFields={dependentFieldValues}\n          />\n        )}\n      />\n    </>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const AdvancedSettingsLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"600\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"20\" x=\"0\" width=\"177\" height=\"15\" />\n\n      <rect y=\"75\" x=\"0\" width=\"206\" height=\"14\" />\n\n      <rect y=\"108\" x=\"0\" width=\"1000\" height=\"1\" />\n      <rect y=\"136\" x=\"0\" width=\"320\" height=\"13\" />\n      <rect y=\"129\" x=\"940\" width=\"50\" height=\"27\" rx=\"12\" ry=\"12\" />\n      <rect y=\"180\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"235\" x=\"0\" width=\"213\" height=\"14\" />\n\n      <rect y=\"269\" x=\"0\" width=\"1000\" height=\"1\" />\n      <rect y=\"300\" x=\"0\" width=\"475\" height=\"13\" />\n      <rect y=\"292\" x=\"940\" width=\"50\" height=\"27\" rx=\"12\" ry=\"12\" />\n      <rect y=\"340\" x=\"0\" width=\"1000\" height=\"1\" />\n\n      <rect y=\"400\" x=\"0\" width=\"113\" height=\"14\" />\n\n      <rect y=\"433\" x=\"0\" width=\"1000\" height=\"1\" />\n      <rect y=\"462\" x=\"0\" width=\"205\" height=\"13\" />\n      <rect y=\"455\" x=\"940\" width=\"50\" height=\"27\" rx=\"12\" ry=\"12\" />\n      <rect y=\"505\" x=\"0\" width=\"1000\" height=\"1\" />\n    </ContentLoader>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const Section = styled('div', ({ $theme: { sizing } }) => ({\n  overflow: 'auto',\n  marginBottom: sizing.scale1000,\n}))\n\nexport const AdvancedSettingsTitle = styled('h2', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale800,\n}))\n\nexport const FieldSeparator = styled('div', ({ $theme: { colors } }) => ({\n  borderBottomColor: colors.mono300,\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1px',\n}))\n\nexport const InputFieldContainer = styled('div', ({ $theme: { sizing } }) => ({\n  width: '100%',\n  maxWidth: '382px',\n  marginBottom: sizing.scale800,\n}))\n\nexport const SectionTitle = styled(\n  'h4',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.Subtitle1,\n    marginBottom: sizing.scale400,\n    color: colors.mono800,\n    marginTop: sizing.scale0,\n  })\n)\n\nexport const InputWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: sizing.scale300,\n}))\n\nexport const StyledFormControl = styled(FormControl, {\n  width: '100%',\n})\n\nexport const CommentsListFieldWrap = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    maxWidth: '382px',\n    marginBottom: sizing.scale800,\n  })\n)\n\nexport const CommentsListHelpText = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.Paragraph2,\n    marginBottom: sizing.scale300,\n  })\n)\n\nexport const Note = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Caption1,\n}))\n\nexport const SelectContainer = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    marginTop: sizing.scale600,\n    maxWidth: '380px',\n  })\n)\n\nexport const BorderStyled = styled('div', ({ $theme: { colors } }) => ({\n  borderBottomColor: colors.mono300,\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1px',\n}))\n\nexport const MeetingTypeHelpText = styled(\n  'div',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.Paragraph2,\n    marginTop: sizing.scale200,\n    marginBottom: sizing.scale400,\n    color: colors.mono700,\n  })\n)\n\nexport const ChangeMeetingTypeSelectContainer = styled(FormControl, {\n  maxWidth: '380px',\n})\n\nexport const Info = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale500,\n}))\n\nexport const FooterButton = styled(Button, {\n  minWidth: '99px',\n})\n\nexport const ModalContentWrapper = styled(\n  'div',\n  ({ $theme: { typography } }) => ({\n    ...typography.Paragraph1,\n  })\n)\n\nexport const ModalBody = styled('div', ({ $theme }) => ({\n  ...$theme.typography.Caption1,\n  color: $theme.colors.contentPrimary,\n  marginTop: $theme.sizing.scale600,\n  marginLeft: $theme.sizing.scale800,\n  marginRight: $theme.sizing.scale800,\n  marginBottom: $theme.sizing.scale800,\n  minHeight: '80px',\n  maxHeight: '524px',\n}))\n\nexport const FieldLabel = styled(\n  'div',\n  ({ $theme: { colors, typography } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono900,\n    maxWidth: '856px',\n  })\n)\n","import { ChangeEvent, VFC } from 'react'\nimport { Field } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport {\n  EngagementTypeToggleProps,\n  FieldLabel,\n  FieldToggleWrapper,\n  GenericError,\n  ToggleContainer,\n  FieldLabelContainer,\n} from '../common'\n\nexport const AreYouAttendingToggle: VFC<EngagementTypeToggleProps> = ({\n  label,\n  name,\n}) => (\n  <Field<string>\n    name={name}\n    render={({ input: { value, onChange }, meta: { error, submitError } }) => (\n      <>\n        {(submitError || error) && (\n          <GenericError>{submitError || error}</GenericError>\n        )}\n        <FieldToggleWrapper $error={submitError || error}>\n          <FieldLabelContainer>\n            <FieldLabel>{label}</FieldLabel>\n          </FieldLabelContainer>\n\n          <ToggleContainer>\n            <Toggle\n              name={name}\n              ariaLabel={label + value}\n              checked={value === '2'}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                onChange(e.target.checked ? '2' : '1')\n              }\n            />\n          </ToggleContainer>\n        </FieldToggleWrapper>\n      </>\n    )}\n  />\n)\n","import { ChangeEvent, VFC } from 'react'\nimport { Textarea } from '@jifflenow/brightui/textarea'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { Field } from 'ui-components/Field'\n\ntype InputProps = {\n  label: string\n  name: string\n  placeholder: string\n}\n\nexport const AdvancedSettingsTextArea: VFC<InputProps> = ({\n  label,\n  name,\n  placeholder,\n}) => (\n  <Field<string>\n    name={name}\n    parse={value => value}\n    render={({ input: { value, onChange }, meta: { error, submitError } }) => (\n      <FormControl label={label} error={submitError || error}>\n        <Textarea\n          name={name}\n          value={value}\n          placeholder={placeholder}\n          onChange={(e: ChangeEvent<HTMLTextAreaElement>) =>\n            onChange(e.target.value)\n          }\n        />\n      </FormControl>\n    )}\n  />\n)\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const closeButtonOverride: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { colors, sizing } }) => ({\n      borderLeftStyle: 'none',\n      borderTopStyle: 'none',\n      borderRightStyle: 'none',\n      borderBottomStyle: 'none',\n      color: colors.mono900,\n      paddingTop: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      marginLeft: sizing.scale300,\n      width: sizing.scale700,\n      height: sizing.scale700,\n    }),\n  },\n}\n\nexport const okButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n","import { ChangeEvent, VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { KIND, IconButton, Button } from '@jifflenow/brightui/button'\nimport { Close } from '@jifflenow/brightui/icon'\nimport { Field, Validation } from 'ui-components/Field'\nimport { Input } from '@jifflenow/brightui/input'\nimport {\n  CommentsListHelpText,\n  CommentsListFieldWrap,\n  InputWrapper,\n  StyledFormControl,\n  Note,\n} from './styled-components'\nimport { CommentsListFieldProps } from './types'\nimport { closeButtonOverride } from './overrides'\n\nexport const CommentsListField: VFC<CommentsListFieldProps> = ({\n  helpText,\n  name,\n  placeholder,\n  note,\n}) => (\n  <Field<string>\n    name={name}\n    validations={[Validation.REQUIRED]}\n    format={value => (value ? JSON.parse(value) : [])}\n    parse={value => JSON.stringify(value ? value : [])}\n    render={({ input: { value, onChange }, meta: { error, submitError } }) => {\n      const comments = (value as unknown) as string[]\n\n      const handleInputChange = (newComment: string, index: number) =>\n        onChange(\n          comments.map((comment, i) => (i === index ? newComment : comment))\n        )\n\n      const handleAddOption = () => onChange([...comments, ''])\n\n      const handleRemoveOption = (index: number) =>\n        onChange(comments.filter((_, i) => i !== index))\n\n      return (\n        <>\n          <CommentsListHelpText>{helpText}</CommentsListHelpText>\n          <CommentsListFieldWrap>\n            {comments.map((option, index) => (\n              <InputWrapper key={index}>\n                <StyledFormControl error={submitError || error}>\n                  <Input\n                    name={name}\n                    value={option}\n                    placeholder={placeholder}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                      handleInputChange(e.target.value, index)\n                    }\n                  />\n                </StyledFormControl>\n                <IconButton\n                  type=\"button\"\n                  size={20}\n                  overrides={closeButtonOverride}\n                  onClick={() => handleRemoveOption(index)}\n                  data-pendo=\"remove-comments\"\n                >\n                  <Close />\n                </IconButton>\n              </InputWrapper>\n            ))}\n            <Button\n              type=\"button\"\n              kind={KIND.minimal}\n              onClick={handleAddOption}\n              data-pendo=\"add-comments\"\n            >\n              <FormattedMessage\n                defaultMessage=\"+ Add\"\n                description=\"Button label\"\n              />\n            </Button>\n          </CommentsListFieldWrap>\n          <CommentsListFieldWrap>\n            <Note>{note}</Note>\n          </CommentsListFieldWrap>\n        </>\n      )\n    }}\n  />\n)\n","import { useEffect, useState, VFC } from 'react'\nimport { FieldRenderProps, Field } from 'react-final-form'\nimport { components } from 'types/openapi'\nimport { OptgroupsT, Select, Value } from '@jifflenow/brightui/select'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { DurationError } from '../common'\nimport { SelectContainer } from './styled-components'\nimport { CopyNotificationsProps, CopyNotificationsSelectProps } from './types'\n\ntype Role = components['schemas']['Role']\ntype EventUser = components['schemas']['EventUser']\n\nconst messages = defineMessages({\n  allMms: {\n    defaultMessage: 'All MMs',\n    description: 'Option label',\n  },\n  allJmms: {\n    defaultMessage: 'All JMMs',\n    description: 'Option label',\n  },\n  meetingManager: {\n    defaultMessage: 'Meeting Manager',\n    description: 'Option label',\n  },\n  juniorMM: {\n    defaultMessage: 'Junior MM',\n    description: 'Option label',\n  },\n  jmmMappedWithTopic: {\n    defaultMessage: 'JMMs mapped to Topic',\n    description: 'Option label',\n  },\n  jmmMappedToMeetingTypes: {\n    defaultMessage: 'JMMs mapped to meeting type',\n    description: 'Option label',\n  },\n  executiveAdmin: {\n    defaultMessage: 'Executive Admin',\n    description: 'Option label',\n  },\n})\n\nconst filterRole = (userRole: Role) => ({ attributes: { role } }: EventUser) =>\n  role === userRole\n\nconst optionMapper = ({\n  id,\n  attributes: { role, firstName, lastName },\n}: EventUser) => ({\n  label: `${firstName} ${lastName}`,\n  id,\n  role,\n})\n\nconst CopyNotificationsSelect: VFC<\n  FieldRenderProps<string[]> & CopyNotificationsSelectProps\n> = ({\n  input: { value: fieldValue, onChange },\n  meta: { error, submitError },\n  label,\n  eventUsers,\n}) => {\n  const [dropdownOptions, setDropdownOptions] = useState<OptgroupsT>()\n  const { formatMessage } = useIntl()\n  useEffect(() => {\n    if (eventUsers?.length) {\n      setDropdownOptions({\n        __ungrouped: [\n          {\n            label: formatMessage(messages.allMms),\n            id: 'mms',\n          },\n          ...(eventUsers.some(({ attributes: { role } }) => role === 'JMM')\n            ? [\n                {\n                  label: formatMessage(messages.jmmMappedWithTopic),\n                  id: 'jmm_mapped_with_topic',\n                },\n                {\n                  label: formatMessage(messages.allJmms),\n                  id: 'jmms',\n                },\n                {\n                  label: formatMessage(messages.jmmMappedToMeetingTypes),\n                  id: 'jmm_mapped_to_meeting_types',\n                },\n              ]\n            : []),\n          {\n            label: formatMessage(messages.executiveAdmin),\n            id: 'eas',\n          },\n        ],\n        [formatMessage(messages.meetingManager)]: eventUsers\n          .filter(filterRole('MM'))\n          .map(optionMapper),\n        [formatMessage(messages.juniorMM)]: eventUsers\n          .filter(filterRole('JMM'))\n          .map(optionMapper),\n      })\n    }\n  }, [eventUsers, formatMessage])\n\n  const selectedValues = [\n    ...(dropdownOptions?.__ungrouped ?? []),\n    ...(dropdownOptions?.[formatMessage(messages.meetingManager)] ?? []),\n    ...(dropdownOptions?.[formatMessage(messages.juniorMM)] ?? []),\n  ].filter(({ id }) => fieldValue.some(value => id === value))\n\n  return (\n    <>\n      {(error || submitError) && (\n        <DurationError>{error || submitError}</DurationError>\n      )}\n\n      <SelectContainer label={label}>\n        <Select\n          options={dropdownOptions}\n          clearable={false}\n          multi\n          value={selectedValues}\n          onChange={({ value }: { value: Value }) => {\n            let options = value.some(({ id }) => id === 'mms')\n              ? value.filter(({ role }) => role !== 'MM')\n              : value\n            options = options.some(({ id }) => id === 'jmms')\n              ? options.filter(({ role }) => role !== 'JMM')\n              : options\n            onChange(options.map(({ id }) => id))\n          }}\n          dataPendo=\"cc_notification_reply_to\"\n        />\n      </SelectContainer>\n    </>\n  )\n}\n\nexport const CopyNotifications: VFC<CopyNotificationsProps> = ({\n  name,\n  ...rest\n}) => (\n  <Field\n    name={name}\n    format={value => (value ? JSON.parse(value) : [])}\n    parse={value => JSON.stringify(value ?? [])}\n    render={props => <CopyNotificationsSelect {...props} {...rest} />}\n  />\n)\n","import { defineMessages, useIntl } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { EngagementTypeToggle } from '../common'\nimport { FieldSeparator, Section, SectionTitle } from './styled-components'\n\nconst messages = defineMessages({\n  attachDocumentOptions: {\n    defaultMessage: 'Attach Document Options',\n    description: 'Section title',\n  },\n  includeBriefingDocs: {\n    defaultMessage: 'Attach Document',\n    description: 'Section title',\n  },\n  briefingDocsInMobile: {\n    defaultMessage: 'Allow viewing of attachments on mobile',\n    description: 'Field label',\n  },\n  briefingDocsAsAttachment: {\n    defaultMessage: 'Attach documents by uploading files',\n    description: 'Field label',\n  },\n  briefingDocsAsLink: {\n    defaultMessage: 'Attach documents by inserting links',\n    description: 'Field label',\n  },\n  briefingDocsInNotificationTemplates: {\n    defaultMessage:\n      'Allow document link variable to be used in Notification templates',\n    description: 'Field label',\n  },\n  docAccessOnlyForLoggedIn: {\n    defaultMessage: 'Participants need to login to access uploaded files.',\n    description: 'Field label',\n  },\n})\n\nexport const AttachDocument = () => {\n  const { formatMessage } = useIntl()\n  const {\n    templateEngagementType: { masterEngagementType },\n  } = useEngagementType().engagementType\n  const { include_briefing_docs } = useEventLocation().configs!\n\n  return include_briefing_docs === 'true' &&\n    masterEngagementType === MasterEngagementTypes.General ? (\n    <Section>\n      <SectionTitle>\n        {formatMessage(messages.attachDocumentOptions)}\n      </SectionTitle>\n      <EngagementTypeToggle\n        name=\"include_briefing_docs\"\n        label={formatMessage(messages.includeBriefingDocs)}\n      >\n        <FieldSeparator />\n        <EngagementTypeToggle\n          name=\"briefing_docs_in_mobile\"\n          label={formatMessage(messages.briefingDocsInMobile)}\n        />\n        <FieldSeparator />\n        <EngagementTypeToggle\n          name=\"briefing_doc_as_attachment\"\n          label={formatMessage(messages.briefingDocsAsAttachment)}\n        />\n        <FieldSeparator />\n        <EngagementTypeToggle\n          name=\"briefing_doc_as_link\"\n          label={formatMessage(messages.briefingDocsAsLink)}\n        />\n        <FieldSeparator />\n        <EngagementTypeToggle\n          name=\"briefing_docs_in_notification_templates\"\n          label={formatMessage(messages.briefingDocsInNotificationTemplates)}\n        />\n        <FieldSeparator />\n        <EngagementTypeToggle\n          name=\"doc_access_only_for_logged_in\"\n          label={formatMessage(messages.docAccessOnlyForLoggedIn)}\n        />\n        <FieldSeparator />\n      </EngagementTypeToggle>\n    </Section>\n  ) : null\n}\n","import { useEffect, useState } from 'react'\nimport { useField } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { EngagementTypeToggle } from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { BorderStyled, Section, SectionTitle } from './styled-components'\n\nconst messages = defineMessages({\n  videoConferencing: {\n    defaultMessage: 'Video Conferencing',\n    description: 'Section title',\n  },\n  timeZone: {\n    defaultMessage: 'Time Zone',\n    description: 'Section title',\n  },\n  enableVideoConfLink: {\n    defaultMessage: 'Enable video conferencing for this engagement type',\n    description: 'Field label',\n  },\n  meetingTypeAvailability: {\n    defaultMessage: 'Make the meeting type available for 24 hours',\n    description: 'Field label',\n  },\n  enableTimeZoneSelection: {\n    defaultMessage: 'Enable time zone selection for this engagement type',\n    description: 'Field label',\n  },\n  dialogTitle: {\n    defaultMessage: 'Are you sure?',\n    description: 'Dialog title',\n  },\n  vconDisableErrorMessage: {\n    defaultMessage:\n      'Once the meeting made hybrid and the availability is set to 24 hours, it cannot be changed back.',\n    description: 'Vcon cannot be disabled Error message',\n  },\n  fullDayMeetingTypeConfirmationMessage: {\n    defaultMessage:\n      'Once the meeting is made available for 24 hours, it cannot be changed back.',\n    description: 'Dialog Body',\n  },\n  labelYes: {\n    defaultMessage: 'Yes',\n    description: 'Button label',\n  },\n  labelNo: {\n    defaultMessage: 'No',\n    description: 'Button label',\n  },\n})\n\nexport const VideoConference = () => {\n  const { formatMessage } = useIntl()\n  const [open, setOpen] = useState(false)\n  const { eventType } = useEventLocation().location?.attributes ?? {}\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isGeneralMeeting =\n    masterEngagementType === MasterEngagementTypes.General\n\n  const {\n    input: {\n      value: enableFullDayMeetingTypeAvailability,\n      onChange: changeFullDayMeetingTypeAvailability,\n    },\n    meta: { initial: initialEnableFullDayMeetingTypeAvailability },\n  } = useField('enable_full_day_meeting_type_availability')\n\n  const {\n    input: { value: EnableVcon },\n  } = useField('enable_vcon_link', {\n    validate: value =>\n      value === 'false' && enableFullDayMeetingTypeAvailability === 'true'\n        ? formatMessage(messages.vconDisableErrorMessage)\n        : undefined,\n  })\n\n  useEffect(() => {\n    initialEnableFullDayMeetingTypeAvailability === 'false' &&\n      enableFullDayMeetingTypeAvailability === 'true' &&\n      setOpen(true)\n  }, [\n    enableFullDayMeetingTypeAvailability,\n    initialEnableFullDayMeetingTypeAvailability,\n  ])\n\n  return (\n    <>\n      {open && (\n        <ConfirmationDialog\n          heading={formatMessage(messages.dialogTitle)}\n          message={formatMessage(\n            messages.fullDayMeetingTypeConfirmationMessage\n          )}\n          successLabel={formatMessage(messages.labelYes)}\n          cancelLabel={formatMessage(messages.labelNo)}\n          onCancel={() => {\n            setOpen(false)\n            changeFullDayMeetingTypeAvailability('false')\n          }}\n          onSuccess={() => setOpen(false)}\n        />\n      )}\n      <Section>\n        <SectionTitle>\n          {isGeneralMeeting\n            ? formatMessage(messages.videoConferencing)\n            : formatMessage(messages.timeZone)}\n        </SectionTitle>\n        {isGeneralMeeting && (\n          <>\n            <EngagementTypeToggle\n              name=\"enable_vcon_link\"\n              label={formatMessage(messages.enableVideoConfLink)}\n            />\n            <BorderStyled />\n          </>\n        )}\n        {eventType !== 'Ebc' && (\n          <>\n            {isGeneralMeeting && EnableVcon === 'true' && (\n              <>\n                <EngagementTypeToggle\n                  name=\"enable_full_day_meeting_type_availability\"\n                  label={formatMessage(messages.meetingTypeAvailability)}\n                />\n                <BorderStyled />\n              </>\n            )}\n            <EngagementTypeToggle\n              name=\"enable_view_calendar_in_other_timezone\"\n              label={formatMessage(messages.enableTimeZoneSelection)}\n            />\n            <BorderStyled />\n          </>\n        )}\n      </Section>\n    </>\n  )\n}\n","import {\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  SIZE,\n} from '@jifflenow/brightui/modal'\nimport { FC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { okButtonOverrides } from './overrides'\nimport {\n  FooterButton,\n  ModalContentWrapper,\n  ModalBody,\n} from './styled-components'\n\nexport const InstructionsModal: FC<{ onClose: () => void }> = ({ onClose }) => (\n  <Modal size={SIZE.xlarge} onClose={onClose} isOpen>\n    <ModalHeader>\n      <FormattedMessage\n        defaultMessage=\"Change Meeting Types - Further Instructions\"\n        description=\"Change meeting type info header\"\n      />\n    </ModalHeader>\n    <ModalBody>\n      <ModalContentWrapper>\n        <p>\n          <FormattedMessage\n            defaultMessage=\"It is recommended to only add engagement types satisfying following conditions\"\n            description=\"Change meeting type info description\"\n          />\n        </p>\n        <ol>\n          <li>\n            <FormattedMessage\n              defaultMessage=\"In Engagement Settings > Location settings\"\n              description=\"Change meeting type info description\"\n            />\n          </li>\n          <ul>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"Apply Min and Max meeting duration restrictions for MMs/JMMs as well is same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"If above config is ON, 'MINIMUM DURATION' and 'MAXIMUM DURATION' of locations is the same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"'OFFSITE' is either enabled or disabled in both. If ON, MIN and MAX duration should be same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"'Designated Location' is either enabled or disabled in both. If ON, MIN and MAX duration should be same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n          </ul>\n          <li>\n            <FormattedMessage\n              defaultMessage=\"In Engagement Settings > Approval process\"\n              description=\"Change meeting type info description\"\n            />\n          </li>\n          <ul>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"Approval Process is the same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n          </ul>\n          <li>\n            <FormattedMessage\n              defaultMessage=\"In Engagement Settings > Participants\"\n              description=\"Change meeting type info description\"\n            />\n          </li>\n          <ul>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"'Hide Internal Attendee' is the same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"'Enable Meeting Host' is the same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"'Hide External Attendee' is the same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n          </ul>\n          <li>\n            <FormattedMessage\n              defaultMessage=\"In Engagement Settings > Topic settings\"\n              description=\"Change meeting type info description\"\n            />\n          </li>\n          <ul>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"'Show unmapped rooms for the topic' under 'Rules' is same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n          </ul>\n          <li>\n            <FormattedMessage\n              defaultMessage=\"In Engagement Settings > Advanced settings\"\n              description=\"Change meeting type info description\"\n            />\n          </li>\n          <ul>\n            <li>\n              <FormattedMessage\n                defaultMessage=\"'Attach documents' should be same as current type\"\n                description=\"Change meeting type info description\"\n              />\n            </li>\n          </ul>\n        </ol>\n        <p>\n          <FormattedMessage\n            defaultMessage=\"Note that\"\n            description=\"Change meeting type info description\"\n          />\n        </p>\n        <ol>\n          <li>\n            <FormattedMessage\n              defaultMessage=\"Customer information fields (in Inbound Request page -> Form builder) need not be the same.\"\n              description=\"Change meeting type info description\"\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              defaultMessage=\"Set of topic, room, user mapping need not be the same for the 2 meeting types.\"\n              description=\"Change meeting type info description\"\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              defaultMessage=\"A meeting with topic can only be transferred to a meeting type mapped to the same topic.\"\n              description=\"Change meeting type info description\"\n            />\n          </li>\n        </ol>\n      </ModalContentWrapper>\n    </ModalBody>\n    <ModalFooter>\n      <FooterButton\n        type=\"button\"\n        overrides={okButtonOverrides}\n        onClick={onClose}\n      >\n        <FormattedMessage defaultMessage=\"Close\" description=\"Button label\" />\n      </FooterButton>\n    </ModalFooter>\n  </Modal>\n)\n","import { FC, ReactNode, useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { FieldRenderProps } from 'react-final-form'\nimport { Select, Value } from '@jifflenow/brightui/select'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { Field } from 'ui-components/Field'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { DurationError, FieldLabelContainer } from '../common'\nimport { InstructionsModal } from './InstructionsModal'\nimport { ChangeMeetingTypeProps, ChangeMeetingTypeSelectProps } from './types'\nimport {\n  BorderStyled,\n  MeetingTypeHelpText,\n  Section,\n  SectionTitle,\n  Info,\n  ChangeMeetingTypeSelectContainer,\n  FieldLabel,\n} from './styled-components'\n\nconst messages = defineMessages({\n  changeMeetingTypeTitle: {\n    defaultMessage: 'Change Engagement Type',\n    description: 'Section title',\n  },\n  changeMeetingType: {\n    defaultMessage:\n      'Meetings of this type can be changed to following engagement types',\n    description: 'Field label',\n  },\n  actionsSelectPlaceholder: {\n    defaultMessage: 'Select engagement type',\n    description: 'Placeholder text',\n  },\n  meetingTypeHelpText: {\n    defaultMessage:\n      'It is recommended to set this after you complete setting up all engagement types',\n    description: 'Field label',\n  },\n  changeMeetingTypeSubText: {\n    defaultMessage:\n      '<b>NOTE:</b> Some Engagement Types may not show as selectable due to inconsistent settings. Location, Participant, and Approval settings, etc. must match to change a meeting from one Engagement Type to the other. Please<button>click here</button>for further instructions.',\n    description: 'Field label',\n  },\n  meetingTypeTooltip: {\n    defaultMessage:\n      'It is recommended to only add meeting types satisfying the following conditions',\n    description: 'Tooltip label',\n  },\n  selectAllEngagamentTypes: {\n    defaultMessage: 'All eligible engagement types',\n    description: 'Option label',\n  },\n})\n\nconst ChangeMeetingTypeSelect: FC<\n  FieldRenderProps<string> & ChangeMeetingTypeSelectProps\n> = ({\n  input: { value, onChange, name },\n  meta: { error, submitError },\n  meetingType,\n}) => {\n  const { formatMessage } = useIntl()\n  const [options, setOptions] = useState<Value>([])\n\n  const actionValue = (value as unknown) as string[]\n\n  useEffect(() => {\n    setOptions([\n      { label: formatMessage(messages.selectAllEngagamentTypes), id: 'ALL' },\n      ...meetingType.map(({ text: label, id }) => ({\n        label,\n        id,\n      })),\n    ])\n  }, [formatMessage, meetingType])\n\n  const selectedOptions = options.filter(({ id }) =>\n    actionValue?.some(typeId => typeId === id)\n  )\n\n  return (\n    <>\n      {(error || submitError) && (\n        <DurationError>{error || submitError}</DurationError>\n      )}\n      <ChangeMeetingTypeSelectContainer>\n        <Select\n          options={options}\n          clearable={false}\n          multi\n          value={selectedOptions}\n          placeholder={formatMessage(messages.actionsSelectPlaceholder)}\n          onChange={({ value }: { value: Value }) => {\n            onChange(value.map(({ id }) => id))\n          }}\n          dataPendo={name}\n        />\n      </ChangeMeetingTypeSelectContainer>\n      <MeetingTypeHelpText>\n        {formatMessage(messages.meetingTypeHelpText)}\n      </MeetingTypeHelpText>\n    </>\n  )\n}\n\nexport const ChangeMeetingType: VFC<ChangeMeetingTypeProps> = ({\n  meetingType,\n}) => {\n  const { formatMessage } = useIntl()\n  const { enable_change_meeting_type } = useEventLocation().configs!\n  const [showInfo, setShowInfo] = useState(false)\n\n  return enable_change_meeting_type === 'true' ? (\n    <Section>\n      <SectionTitle>\n        {formatMessage(messages.changeMeetingTypeTitle)}\n      </SectionTitle>\n      <Info>\n        <FieldLabel>\n          {formatMessage(messages.changeMeetingTypeSubText, {\n            b: (chunks: ReactNode) => <strong>{chunks}</strong>,\n            button: (chunks: ReactNode) => (\n              <Button\n                kind={KIND.minimal}\n                type=\"button\"\n                onClick={() => {\n                  setShowInfo(true)\n                }}\n              >\n                {chunks}\n              </Button>\n            ),\n          })}\n        </FieldLabel>\n      </Info>\n      <FieldLabelContainer>\n        <FieldLabel>{formatMessage(messages.changeMeetingType)}</FieldLabel>\n      </FieldLabelContainer>\n      <Field<string>\n        name=\"change_meeting_type_links\"\n        format={value => (value ? JSON.parse(value) : value)}\n        parse={value => JSON.stringify(value)}\n        render={props => (\n          <ChangeMeetingTypeSelect {...props} meetingType={meetingType} />\n        )}\n      />\n      <BorderStyled />\n      {showInfo && <InstructionsModal onClose={() => setShowInfo(false)} />}\n    </Section>\n  ) : null\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { EngagementTypeInput, EngagementTypeToggle } from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { AreYouAttendingToggle } from './AreYouAttendingToggle'\nimport { AdvancedSettingsTextArea } from './AdvancedSettingsTextArea'\nimport { CommentsListField } from './CommentsListField'\nimport { CopyNotifications } from './CopyNotifications'\nimport {\n  BorderStyled,\n  FieldSeparator,\n  InputFieldContainer,\n  Section,\n  SectionTitle,\n} from './styled-components'\nimport { FormFieldProps } from './types'\nimport { AttachDocument } from './AttachDocument'\nimport { VideoConference } from './VideoConference'\nimport { ChangeMeetingType } from './ChangeMeetingType'\n\nconst messages = defineMessages({\n  bookMeetingInstructionsTitle: {\n    defaultMessage: 'Book meeting instructions',\n    description: 'Section title',\n  },\n  showConflictsOnCalendarTitle: {\n    defaultMessage:\n      'Show Conflicted Meetings Summary in all book meeting calendars',\n    description: 'Section title',\n  },\n  notificationsTitle: {\n    defaultMessage: 'Notifications',\n    description: 'Section title',\n  },\n  instructionsHeaderLabel: {\n    defaultMessage: 'Header',\n    description: 'Field label',\n  },\n  instructionsHeaderPlaceholder: {\n    defaultMessage: 'Header',\n    description: 'Placeholder text',\n  },\n  instructionsBodyContentLabel: {\n    defaultMessage: 'Body Content',\n    description: 'Field label',\n  },\n  instructionsBodyContentPlaceholder: {\n    defaultMessage: 'Body Content',\n    description: 'Placeholder text',\n  },\n  instructionAdditionalContentLabel: {\n    defaultMessage: 'Additional Content for Consecutive Meetings',\n    description: 'Field label',\n  },\n  instructionAdditionalContentPlaceholder: {\n    defaultMessage: 'Additional Content for Consecutive Meetings',\n    description: 'Placeholder text',\n  },\n  declineCommentsLabel: {\n    defaultMessage: 'Set up reasons for declining meeting',\n    description: 'Field label',\n  },\n  declineCommentsHelpText: {\n    defaultMessage:\n      'Attendees can use the following reasons as comments to decline a meeting',\n    description: 'Field Label',\n  },\n  cancelCommentsLabel: {\n    defaultMessage: 'Set up reasons for cancelling meeting',\n    description: 'Field Label',\n  },\n  cancelCommentsHelpText: {\n    defaultMessage:\n      'Requestors can use the following reasons as meeting cancellation comments',\n    description: 'Help text',\n  },\n  commentNotes: {\n    defaultMessage:\n      'Note: User can choose to select “other reason” to add a custom message. Cancellation comments will be part of meeting cancelled notifications',\n    description: 'Info text',\n  },\n  commentsInputPlaceholder: {\n    defaultMessage: 'Add new comment',\n    description: 'Filed Placeholder',\n  },\n  displayFilledCustomerInfoOnly: {\n    defaultMessage:\n      'In all emails and ICS show only customer information fields which have been filled',\n    description: 'Field Label',\n  },\n  sendIcsReplyToRequestor: {\n    defaultMessage: 'Send ICS reply to meeting requestor',\n    description: 'Field Label',\n  },\n  ccNotificationReplyToTitle: {\n    defaultMessage: 'Copy notification replies to',\n    description: 'Field Label',\n  },\n  sendRequestorMailToEa: {\n    defaultMessage:\n      \"Send a copy of the 'Requestor' email to the EA(s) of the attendee.\",\n    description: 'Field Label',\n  },\n  sendAttendeeIcsToEa: {\n    defaultMessage:\n      'Send a copy of the calendar invitation to the EA(s) of the attendee.',\n    description: 'Field Label',\n  },\n  sendCopyOfMmEmailToEaParticipant: {\n    defaultMessage: \"Send a copy of MM's mail to EA of participants\",\n    description: 'Field Label',\n  },\n  privilegesTitle: {\n    defaultMessage: 'Privileges',\n    description: 'Section title',\n  },\n  approvalPrivilegeTitle: {\n    defaultMessage: 'Approval Privilege',\n    description: 'Section title',\n  },\n  eaCanApproveOrCancelMeeting: {\n    defaultMessage: 'EAs can approve/cancel meetings of their executives.',\n    description: 'Field label',\n  },\n  editPrivilegeTitle: {\n    defaultMessage: 'Edit Privilege',\n    description: 'Section title',\n  },\n  eaCanEditMeeting: {\n    defaultMessage: 'Allow EA to edit pending meetings of their executives',\n    description: 'Field label',\n  },\n  allowNonMMToEditMeeting: {\n    defaultMessage:\n      'Allow Meeting creator, requestor, and host (if host is enabled) roles to edit meeting after it is approved',\n    description: 'Field label',\n  },\n  creatorPrivilegesTitle: {\n    defaultMessage: 'Creator Privileges',\n    description: 'Field label',\n  },\n  creatorAttendMeeting: {\n    defaultMessage: 'Creator required to attend the meeting',\n    description: 'Field label',\n  },\n  areYouAttendingLabel: {\n    defaultMessage: 'Creator can add/remove themselves from the meeting',\n    description: 'Field label',\n  },\n  showAllRequestors: {\n    defaultMessage:\n      'Meeting Creator can make someone else the Meeting Requestor',\n    description: 'Field label',\n  },\n  allowRequestorsToReinvite: {\n    defaultMessage: 'Allow meeting Creator/Requestor to reinvite attendees.',\n    description: 'Field label',\n  },\n})\n\nexport const FormField: VFC<FormFieldProps> = ({ meetingType, eventUsers }) => {\n  const { formatMessage } = useIntl()\n  const virtualEvent =\n    useEventLocation().location?.attributes.virtualEvent || false\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isGeneralMeeting =\n    masterEngagementType === MasterEngagementTypes.General\n\n  return (\n    <>\n      {virtualEvent && <VideoConference />}\n      {isGeneralMeeting && (\n        <>\n          <EngagementTypeToggle\n            label={formatMessage(messages.bookMeetingInstructionsTitle)}\n            name=\"instruction_book_meeting\"\n            bold\n          >\n            <InputFieldContainer>\n              <EngagementTypeInput\n                label={formatMessage(messages.instructionsHeaderLabel)}\n                name=\"book_meeting_instructions_header\"\n                placeholder={formatMessage(\n                  messages.instructionsHeaderPlaceholder\n                )}\n              />\n            </InputFieldContainer>\n            <InputFieldContainer>\n              <AdvancedSettingsTextArea\n                label={formatMessage(messages.instructionsBodyContentLabel)}\n                name=\"book_meeting_instructions_body\"\n                placeholder={formatMessage(\n                  messages.instructionsBodyContentPlaceholder\n                )}\n              />\n            </InputFieldContainer>\n            <InputFieldContainer>\n              <AdvancedSettingsTextArea\n                label={formatMessage(\n                  messages.instructionAdditionalContentLabel\n                )}\n                name=\"consecutive_meeting_instructions_body\"\n                placeholder={formatMessage(\n                  messages.instructionAdditionalContentPlaceholder\n                )}\n              />\n            </InputFieldContainer>\n          </EngagementTypeToggle>\n          <FieldSeparator />\n        </>\n      )}\n      <EngagementTypeToggle\n        label={formatMessage(messages.showConflictsOnCalendarTitle)}\n        name=\"show_summary\"\n        bold\n      />\n      <FieldSeparator />\n      <EngagementTypeToggle\n        label={formatMessage(messages.cancelCommentsLabel)}\n        name=\"cancel_comments_enabled\"\n        bold\n      >\n        <CommentsListField\n          helpText={formatMessage(messages.cancelCommentsHelpText)}\n          name=\"predefined_cancel_comments\"\n          placeholder={formatMessage(messages.commentsInputPlaceholder)}\n          note={formatMessage(messages.commentNotes)}\n        />\n      </EngagementTypeToggle>\n      <FieldSeparator />\n      <Section>\n        <EngagementTypeToggle\n          label={formatMessage(messages.declineCommentsLabel)}\n          name=\"decline_comments_enabled\"\n          bold\n        >\n          <CommentsListField\n            helpText={formatMessage(messages.declineCommentsHelpText)}\n            name=\"predefined_decline_comments\"\n            placeholder={formatMessage(messages.commentsInputPlaceholder)}\n            note={formatMessage(messages.commentNotes)}\n          />\n        </EngagementTypeToggle>\n        <FieldSeparator />\n      </Section>\n      {isGeneralMeeting && (\n        <Section>\n          <ChangeMeetingType meetingType={meetingType} />\n        </Section>\n      )}\n      <Section>\n        <SectionTitle>\n          {formatMessage(messages.notificationsTitle)}\n        </SectionTitle>\n        <FieldSeparator />\n        {isGeneralMeeting && (\n          <EngagementTypeToggle\n            label={formatMessage(messages.displayFilledCustomerInfoOnly)}\n            name=\"display_filled_customer_info_only\"\n          />\n        )}\n        <FieldSeparator />\n        <EngagementTypeToggle\n          label={formatMessage(messages.sendIcsReplyToRequestor)}\n          name=\"send_ics_reply_to_requestor\"\n        >\n          <FieldSeparator />\n          <InputFieldContainer>\n            <CopyNotifications\n              eventUsers={eventUsers}\n              label={formatMessage(messages.ccNotificationReplyToTitle)}\n              name=\"cc_notification_reply_to\"\n            />\n          </InputFieldContainer>\n        </EngagementTypeToggle>\n        <FieldSeparator />\n        {isGeneralMeeting && (\n          <>\n            <EngagementTypeToggle\n              label={formatMessage(messages.sendRequestorMailToEa)}\n              name=\"send_requestor_mail_to_ea\"\n            />\n            <FieldSeparator />\n            <EngagementTypeToggle\n              label={formatMessage(messages.sendAttendeeIcsToEa)}\n              name=\"send_attendee_ics_to_ea\"\n            />\n            <FieldSeparator />\n            <EngagementTypeToggle\n              label={formatMessage(messages.sendCopyOfMmEmailToEaParticipant)}\n              name=\"send_copy_of_mm_email_to_ea_participant\"\n            />\n            <FieldSeparator />\n          </>\n        )}\n      </Section>\n      {isGeneralMeeting && <AttachDocument />}\n      <Section>\n        <SectionTitle>{formatMessage(messages.privilegesTitle)}</SectionTitle>\n        {isGeneralMeeting && (\n          <Section>\n            <SectionTitle>\n              {formatMessage(messages.approvalPrivilegeTitle)}\n            </SectionTitle>\n            <EngagementTypeToggle\n              name=\"ea_can_approve_or_cancel_meeting\"\n              label={formatMessage(messages.eaCanApproveOrCancelMeeting)}\n            />\n            <BorderStyled />\n          </Section>\n        )}\n        <SectionTitle>\n          {formatMessage(messages.editPrivilegeTitle)}\n        </SectionTitle>\n        <EngagementTypeToggle\n          name=\"ea_can_edit_meeting_of_their_executives\"\n          label={formatMessage(messages.eaCanEditMeeting)}\n        />\n        <BorderStyled />\n        {isGeneralMeeting && (\n          <EngagementTypeToggle\n            name=\"can_edit_approved_meeting\"\n            label={formatMessage(messages.allowNonMMToEditMeeting)}\n          />\n        )}\n        <BorderStyled />\n      </Section>\n      <Section>\n        <SectionTitle>\n          {formatMessage(messages.creatorPrivilegesTitle)}\n        </SectionTitle>\n        <AreYouAttendingToggle\n          name=\"default_state_of_are_you_attending\"\n          label={formatMessage(messages.creatorAttendMeeting)}\n        />\n        <BorderStyled />\n        <EngagementTypeToggle\n          name=\"are_you_attending_non_changeable\"\n          label={formatMessage(messages.areYouAttendingLabel)}\n          inverted\n        />\n        <BorderStyled />\n        <EngagementTypeToggle\n          name=\"show_all_requestors\"\n          label={formatMessage(messages.showAllRequestors)}\n        />\n        <BorderStyled />\n        <EngagementTypeToggle\n          name=\"allow_requestors_to_reinvite\"\n          label={formatMessage(messages.allowRequestorsToReinvite)}\n        />\n        <BorderStyled />\n      </Section>\n    </>\n  )\n}\n","import { useEffect, useState, useMemo, VFC } from 'react'\nimport { Form as FinalForm } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Prompt } from 'react-router-dom'\nimport { useMutation, useQuery } from 'react-query'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport {\n  mutateBulkUpsertEngagementSettings,\n  useApolloClient,\n  useGetEngagementTypeSettings,\n} from 'gql'\nimport { BulkEngagementSettingUpdateInput } from 'gql/types/globalTypes'\nimport { getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue as CustomNameValue } from 'gql/types/getEngagementTypeSettings'\nimport {\n  bulkUpsertEngagementSettingsVariables,\n  bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue as UpsertCustomNameValue,\n} from 'gql/types/bulkUpsertEngagementSettings'\nimport { useAllEventUsers } from 'rest'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { changeMeetingTypeMutationFn, changeMeetingTypeQueryFn } from 'rest'\nimport {\n  Body,\n  Footer,\n  StyledForm,\n  Container,\n  usePageTitle,\n  Header,\n} from '../common'\nimport { useSettingsLoader } from '../common/useSettingsLoader'\nimport { updateQueryResults } from '../common/utils'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { AdvancedSettingsLoader } from './AdvancedSettingsLoader'\nimport { AdvancedSettingsTitle } from './styled-components'\nimport { FormField } from './FormField'\nimport { DependentFields, FormProps, FormValues } from './types'\n\nconst LoadingShimmer = () => (\n  <Body>\n    <Container>\n      <AdvancedSettingsLoader />\n    </Container>\n  </Body>\n)\n\nconst messages = defineMessages({\n  pageTitle: {\n    defaultMessage: 'Advanced Settings',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {option} other {options}} failed to save',\n    description: 'Error message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  sectionTitle: {\n    defaultMessage: 'Advanced Settings',\n    description: 'Section title',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  fieldErrorMessage: {\n    defaultMessage: 'Error saving changes',\n    description: 'field error message',\n  },\n})\n\nconst settings = [\n  'minimum_timeslot',\n  'enable_vcon_link',\n  'enable_full_day_meeting_type_availability',\n  'enable_view_calendar_in_other_timezone',\n  'instruction_book_meeting',\n  'book_meeting_instructions_header',\n  'book_meeting_instructions_body',\n  'consecutive_meeting_instructions_body',\n  'show_summary',\n  'decline_comments_enabled',\n  'predefined_decline_comments',\n  'cancel_comments_enabled',\n  'cc_notification_reply_to',\n  'predefined_cancel_comments',\n  'display_filled_customer_info_only',\n  'send_ics_reply_to_requestor',\n  'send_requestor_mail_to_ea',\n  'send_attendee_ics_to_ea',\n  'send_copy_of_mm_email_to_ea_participant',\n  'include_briefing_docs',\n  'briefing_docs_in_mobile',\n  'briefing_doc_as_attachment',\n  'briefing_doc_as_link',\n  'briefing_docs_in_notification_templates',\n  'doc_access_only_for_logged_in',\n  'ea_can_approve_or_cancel_meeting',\n  'ea_can_edit_meeting_of_their_executives',\n  'can_edit_approved_meeting',\n  'default_state_of_are_you_attending',\n  'are_you_attending_non_changeable',\n  'show_all_requestors',\n  'allow_requestors_to_reinvite',\n]\n\nconst dependentSettings: Array<keyof DependentFields> = [\n  'min_duration',\n  'offsite_enabled',\n  'offsite_min_duration',\n  'booth_tour_enabled',\n  'booth_tour_min_duration',\n]\n\nconst Form: VFC<FormProps> = ({\n  handleSubmit,\n  dirty,\n  loading,\n  eventUsers,\n  meetingType,\n}) => {\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n  const showLoading = useSettingsLoader(loading)\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      {showLoading ? (\n        <LoadingShimmer />\n      ) : (\n        <Body>\n          <Container>\n            <AdvancedSettingsTitle>\n              {formatMessage(messages.sectionTitle)}\n            </AdvancedSettingsTitle>\n            <FormField meetingType={meetingType} eventUsers={eventUsers} />\n          </Container>\n          <Footer />\n        </Body>\n      )}\n    </StyledForm>\n  )\n}\n\nexport const AdvancedSettings: VFC = () => {\n  const [showLoader, setShowLoader] = useState(false)\n  const { formatMessage } = useIntl()\n  usePageTitle(formatMessage(messages.pageTitle))\n  const client = useApolloClient()\n  const {\n    id: engagementTypeId,\n    uuid: activity_uuid,\n  } = useEngagementType().engagementType\n  const {\n    getEngagementTypeSettings = [],\n    loading,\n    updateQuery,\n  } = useGetEngagementTypeSettings({\n    variables: {\n      engagementTypeId,\n      names: [...settings, ...dependentSettings],\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const {\n    id: current_location_uuid,\n    attributes: { systemName: subSystem },\n  } = useEventLocation().location!\n\n  const eventUsers =\n    useAllEventUsers({\n      subSystem,\n      locationId: current_location_uuid,\n      page: {\n        number: 1,\n        size: 1000,\n      },\n      eventRoles: ['MM', 'JMM'],\n    }).data?.data ?? []\n\n  const {\n    isRefetching,\n    data: { data: changeMeetingType } = {},\n    refetch: refetchChangeMeetingTypes,\n  } = useQuery(\n    [\n      'changeMeetingType',\n      {\n        path: { eventName: subSystem },\n        query: {\n          current_location_uuid,\n          activity_uuid,\n        },\n      },\n    ],\n    changeMeetingTypeQueryFn,\n    {\n      onError: () => showErrorToast(formatMessage(messages.genericError)),\n    }\n  )\n\n  const { mutateAsync } = useMutation(changeMeetingTypeMutationFn)\n\n  const initialValues = useMemo(\n    () => ({\n      ...getEngagementTypeSettings.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as CustomNameValue).value,\n        }),\n        {}\n      ),\n      change_meeting_type_links: JSON.stringify(\n        changeMeetingType?.select_all_engagement_types\n          ? ['ALL']\n          : changeMeetingType?.activities\n              .filter(({ selected }) => selected)\n              .map(({ id }) => id)\n      ),\n    }),\n    [\n      getEngagementTypeSettings,\n      changeMeetingType?.select_all_engagement_types,\n      changeMeetingType?.activities,\n    ]\n  )\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change }\n  ) => {\n    try {\n      setShowLoader(true)\n      const configsToUpdate = getEngagementTypeSettings.reduce<\n        BulkEngagementSettingUpdateInput[]\n      >((acc, { name, value: previousValue }) => {\n        const { display_name, value } = previousValue as CustomNameValue\n\n        return value !== values[name as keyof FormValues]\n          ? [\n              ...acc,\n              {\n                name,\n                customValue: {\n                  display_name,\n                  value: values[name as keyof FormValues],\n                },\n              },\n            ]\n          : acc\n      }, [])\n\n      if (\n        initialValues.change_meeting_type_links !==\n        values.change_meeting_type_links\n      ) {\n        const value = JSON.parse(\n          values.change_meeting_type_links.includes('ALL')\n            ? JSON.stringify(['ALL'])\n            : values.change_meeting_type_links\n        )\n        await mutateAsync({\n          eventName: subSystem,\n          payload: {\n            current_location_uuid,\n            activity_uuid,\n            transfer_activities: value,\n          },\n        })\n        value.includes('ALL') &&\n          change('change_meeting_type_links', JSON.stringify(value))\n        refetchChangeMeetingTypes()\n        setShowLoader(false)\n        showSuccessToast(formatMessage(messages.successMessage))\n      }\n      const variables: bulkUpsertEngagementSettingsVariables = {\n        engagementTypeId,\n        configsToUpdate,\n      }\n      if (configsToUpdate.length) {\n        const { failureCount, totalCount, engagementSettings, successCount } = (\n          await mutateBulkUpsertEngagementSettings(client, {\n            variables,\n          })\n        ).data!.bulkUpsertEngagementSettings\n        setShowLoader(false)\n        if (failureCount) {\n          showErrorToast(\n            formatMessage(messages.updateError, { totalCount, failureCount })\n          )\n          engagementSettings.forEach(\n            ({ success, name, value }) =>\n              !success &&\n              change(\n                name as keyof FormValues,\n                (value as UpsertCustomNameValue).value ?? undefined\n              )\n          )\n          const errors = engagementSettings.reduce(\n            (acc, { success, name }) =>\n              success\n                ? acc\n                : {\n                    ...acc,\n                    [name]: formatMessage(messages.fieldErrorMessage),\n                  },\n            {}\n          )\n          if (successCount) {\n            updateQueryResults(updateQuery, engagementSettings)\n          }\n\n          return errors\n        }\n        showSuccessToast(formatMessage(messages.successMessage))\n        updateQueryResults(updateQuery, engagementSettings)\n      }\n\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return (\n    <>\n      {(showLoader || isRefetching) && <ModalSpinner />}\n      <FinalForm<FormValues>\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        render={props => (\n          <Form\n            {...props}\n            meetingType={changeMeetingType?.activities ?? []}\n            loading={loading}\n            eventUsers={eventUsers}\n          />\n        )}\n      />\n    </>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const Loader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"600\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"20\" x=\"0\" width=\"98\" height=\"15\" />\n\n      <rect y=\"75\" x=\"0\" width=\"125\" height=\"14\" />\n\n      <rect y=\"110\" x=\"0\" width=\"105\" height=\"13\" />\n      <rect y=\"135\" x=\"0\" width=\"450\" height=\"37\" />\n\n      <rect y=\"200\" x=\"0\" width=\"1000\" height=\"1\" />\n      <rect y=\"230\" x=\"0\" width=\"95\" height=\"13\" />\n      <rect y=\"222\" x=\"940\" width=\"47\" height=\"28\" rx=\"12\" ry=\"12\" />\n\n      <rect y=\"273\" x=\"0\" width=\"1000\" height=\"1\" />\n      <rect y=\"305\" x=\"0\" width=\"410\" height=\"13\" />\n      <rect y=\"297\" x=\"940\" width=\"47\" height=\"28\" rx=\"12\" ry=\"12\" />\n      <rect y=\"347\" x=\"0\" width=\"1000\" height=\"1\" />\n    </ContentLoader>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const Section = styled('div', ({ $theme: { sizing } }) => ({\n  overflow: 'auto',\n  marginBottom: sizing.scale1000,\n}))\n\nexport const CsmOnlyTitle = styled('h2', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale800,\n}))\n\nexport const BorderStyled = styled('div', ({ $theme: { colors } }) => ({\n  borderBottomColor: colors.mono300,\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1px',\n}))\n\nexport const InputFieldContainer = styled('div', ({ $theme: { sizing } }) => ({\n  width: '100%',\n  maxWidth: '382px',\n  marginBottom: sizing.scale800,\n}))\n\nexport const SectionTitle = styled(\n  'h4',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.Subtitle1,\n    marginBottom: sizing.scale400,\n    color: colors.mono800,\n    marginTop: sizing.scale0,\n  })\n)\n\nexport const TabToggleWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingTop: sizing.scale650,\n  paddingBottom: sizing.scale650,\n}))\n\nexport const UrlFormControl = styled(FormControl, {\n  maxWidth: '380px',\n})\n\nexport const SelectContainer = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    marginTop: sizing.scale700,\n    marginBottom: sizing.scale700,\n    maxWidth: '380px',\n  })\n)\n","import { useEffect, useState, useMemo, VFC } from 'react'\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'ui-components/Field'\nimport { Select, Value } from '@jifflenow/brightui/select'\nimport {\n  DurationMinsContainer,\n  DurationLabel,\n  DurationFieldRoot,\n  DurationError,\n  SelectProps,\n  MinsLabel,\n} from '../common'\nimport { FieldProps } from './types'\n\nconst messages = defineMessages({\n  durationMinsPlaceholder: {\n    defaultMessage: 'Select Mins',\n    description: 'Placeholder text',\n  },\n})\n\nconst MinsField: VFC<FieldProps> = ({\n  input: { value: mins, onChange, name },\n  disabled,\n}) => {\n  const { formatMessage, formatNumber } = useIntl()\n  const [value, setValue] = useState<Value>([])\n  const minsDropdownOptions = useMemo(\n    () =>\n      [...Array(24).keys()].map(i => ({\n        label: formatNumber((i + 1) * 5),\n        id: (i + 1) * 5,\n      })),\n    [formatNumber]\n  )\n  useEffect(() => {\n    setValue(minsDropdownOptions.filter(({ id }) => +mins === id))\n  }, [mins, minsDropdownOptions])\n\n  const handleOnChange = (value: Value) => {\n    setValue(value)\n    onChange(value[0].id)\n  }\n\n  return (\n    <Select\n      options={minsDropdownOptions}\n      clearable={false}\n      placeholder={formatMessage(messages.durationMinsPlaceholder)}\n      value={value}\n      onChange={({ value }: { value: Value }) => handleOnChange(value)}\n      disabled={disabled}\n      dataPendo={name}\n    />\n  )\n}\n\nexport const MeetingBreakDurationSelect: VFC<SelectProps> = ({\n  name,\n  label,\n  disabled,\n}) => (\n  <Field<string>\n    name={name}\n    parse={value => value.toString()}\n    format={value => +value}\n    render={({ input, meta: { error } }) => (\n      <DurationFieldRoot>\n        <DurationLabel>{label}</DurationLabel>\n        {error && <DurationError>{error}</DurationError>}\n        <DurationMinsContainer>\n          <MinsField input={input} disabled={disabled} />\n          <MinsLabel>\n            <FormattedMessage defaultMessage=\"mins\" description=\"Mins label\" />\n          </MinsLabel>\n        </DurationMinsContainer>\n      </DurationFieldRoot>\n    )}\n  />\n)\n","import { ChangeEvent, FC, useEffect, useRef, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { FieldRenderProps } from 'react-final-form'\nimport { Option, Select, Value } from '@jifflenow/brightui/select'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { Input } from '@jifflenow/brightui/input'\nimport { Field } from 'ui-components/Field'\nimport {\n  DurationMinsContainer,\n  DurationLabel,\n  DurationError,\n  SelectProps,\n  FieldLabel,\n} from '../common'\nimport {\n  Action,\n  ActionDropDownOption,\n  MeetingSummitHook,\n  UrlParameters,\n} from './types'\nimport {\n  TabToggleWrapper,\n  UrlFormControl,\n  SelectContainer,\n} from './styled-components'\n\nconst messages = defineMessages({\n  actionsSelectPlaceholder: {\n    defaultMessage: 'Select Action',\n    description: 'Placeholder text',\n  },\n  openNewTab: {\n    defaultMessage: 'Open New Tab',\n    description: 'Field label',\n  },\n  urlLabel: {\n    defaultMessage: 'URL',\n    description: 'Field label',\n  },\n  urlParameters: {\n    defaultMessage: 'URL Parameters',\n    description: 'Field label',\n  },\n})\n\nconst actions = defineMessages<Action>({\n  no_action: {\n    defaultMessage: 'No Action',\n    description: 'Dropdown option',\n  },\n  redirect: {\n    defaultMessage: 'Redirect',\n    description: 'Dropdown option',\n  },\n})\n\nconst actionOptions: Action[] = ['no_action', 'redirect']\nconst actionDropdownOptions: ActionDropDownOption[] = actionOptions.map(\n  action => ({ id: action, label: action })\n)\n\nconst ActionsField: FC<FieldRenderProps<string>> = ({\n  input: { value: formValue, onChange, name },\n  error,\n  label,\n}) => {\n  const { formatMessage } = useIntl()\n  const [value, setValue] = useState<ActionDropDownOption[]>([])\n  const [urlParameters, setUrlParameters] = useState<UrlParameters[]>()\n  const [urlParameterOptions, setUrlParameterOptions] = useState<\n    UrlParameters[]\n  >()\n\n  const actionValue = (formValue as unknown) as MeetingSummitHook\n\n  const initialized = useRef(false)\n\n  useEffect(() => {\n    if (actionValue && !initialized.current) {\n      initialized.current = true\n      setValue(\n        actionDropdownOptions.filter(({ id }) => id === actionValue.action)\n      )\n      if (actionValue.url_parameters?.length) {\n        setUrlParameterOptions(\n          actionValue.url_parameters.map(parameter => ({\n            label: parameter.text,\n            ...parameter,\n          }))\n        )\n\n        setUrlParameters(\n          actionValue.url_parameters.filter(({ selected }) => selected)\n        )\n      }\n    }\n  }, [actionValue, formatMessage])\n\n  return (\n    <>\n      <DurationLabel> {label} </DurationLabel>\n      {error && <DurationError>{error}</DurationError>}\n      <DurationMinsContainer>\n        <Select\n          options={actionDropdownOptions}\n          filterOptions={(options: ActionDropDownOption[]): Value =>\n            options.map(\n              ({ label, id }): Option => ({\n                label: formatMessage(actions[label]),\n                id,\n              })\n            )\n          }\n          clearable={false}\n          placeholder={formatMessage(messages.actionsSelectPlaceholder)}\n          value={value}\n          getValueLabel={({ option }: { option: ActionDropDownOption }) =>\n            formatMessage(actions[option.label])\n          }\n          onChange={({ value }: { value: ActionDropDownOption[] }) => {\n            setValue(value)\n            onChange({ ...actionValue, action: value[0].id })\n          }}\n          dataPendo={name}\n        />\n      </DurationMinsContainer>\n      {value[0]?.id === 'redirect' ? (\n        <>\n          <TabToggleWrapper>\n            <FieldLabel>{formatMessage(messages.openNewTab)}</FieldLabel>\n            <Toggle\n              ariaLabel={label}\n              checked={actionValue.open_new_tab}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                onChange({ ...actionValue, open_new_tab: e.target.checked })\n              }\n            />\n          </TabToggleWrapper>\n          <UrlFormControl label={formatMessage(messages.urlLabel)}>\n            <Input\n              value={actionValue.url}\n              placeholder={formatMessage(messages.urlLabel)}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                onChange({ ...actionValue, url: e.target.value })\n              }\n            />\n          </UrlFormControl>\n          <SelectContainer label={formatMessage(messages.urlParameters)}>\n            <Select\n              options={urlParameterOptions}\n              clearable={false}\n              multi\n              value={urlParameters}\n              placeholder={formatMessage(messages.actionsSelectPlaceholder)}\n              onChange={({ value }: { value: UrlParameters[] }) => {\n                setUrlParameters(value)\n                onChange({\n                  ...actionValue,\n                  url_parameters: actionValue.url_parameters.map(parameter =>\n                    value.find(param => param.id === parameter.id)\n                      ? { ...parameter, selected: true }\n                      : { ...parameter, selected: false }\n                  ),\n                })\n              }}\n            />\n          </SelectContainer>\n        </>\n      ) : null}\n    </>\n  )\n}\n\nexport const MeetingSummitHookSelect: VFC<SelectProps> = ({ name, label }) => (\n  <Field<string>\n    name={name}\n    format={value => (value ? JSON.parse(value) : value)}\n    parse={value => JSON.stringify(value)}\n    render={props => <ActionsField {...props} label={label} />}\n  />\n)\n","import { ChangeEvent, VFC } from 'react'\nimport { Field, Validation } from 'ui-components/Field'\nimport { Input } from '@jifflenow/brightui/input'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { FormattedMessage } from 'react-intl'\nimport { DurationError, MeetingDurationInput, MinsLabel } from '../common'\n\ntype InputProps = {\n  name: string\n  label?: string\n  placeholder?: string\n  min?: number\n  type?: 'number' | 'text'\n  disabled?: boolean\n}\n\nexport const BreakDurationInput: VFC<InputProps> = ({\n  label,\n  name,\n  placeholder,\n  type,\n  min,\n  disabled,\n}) => (\n  <Field<string>\n    name={name}\n    validations={[Validation.REQUIRED]}\n    render={({ input: { value, onChange }, meta: { error, submitError } }) => (\n      <>\n        {submitError ||\n          (error && <DurationError>{submitError || error}</DurationError>)}\n        <MeetingDurationInput>\n          <>\n            <FormControl label={label}>\n              <Input\n                name={name}\n                type={type ? type : 'text'}\n                value={value}\n                min={min}\n                placeholder={placeholder}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  onChange(e.target.value)\n                }\n                disabled={disabled}\n              />\n            </FormControl>\n            <MinsLabel>\n              <FormattedMessage\n                defaultMessage=\"mins\"\n                description=\"Short form of Minutes\"\n              />\n            </MinsLabel>\n          </>\n        </MeetingDurationInput>\n      </>\n    )}\n  />\n)\n","import { useCallback, useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useField, useFormState } from 'react-final-form'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport createDecorator from 'final-form-calculate'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { DependentLinks, EngagementTypeToggle } from '../common'\nimport { EngagementModal } from '../common/EngagementModal'\nimport { Paths } from '../Paths'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { BorderStyled, Section, SectionTitle } from './styled-components'\nimport { Fields, FormValues, MappingsProps } from './types'\n\nconst identity = (value: string) => value\n\nconst messages = defineMessages({\n  mappingsTitle: {\n    defaultMessage: 'Mappings',\n    description: 'Section title',\n  },\n  defaultMapping: {\n    defaultMessage: 'Enable Mappings',\n    description: 'Field label',\n  },\n  assignTopic: {\n    defaultMessage: 'Show Topic Selection section',\n    description: 'Field label',\n  },\n  assignTopicMandatory: {\n    defaultMessage: 'Make Topic selection mandatory',\n    description: 'Field label',\n  },\n  assignAttendees: {\n    defaultMessage: \"Show 'Pick Attendees' section\",\n    description: 'Field label',\n  },\n  assignInternalAttendees: {\n    defaultMessage: 'At least one internal attendee is required',\n    description: 'Field label',\n  },\n  assignExternalAttendees: {\n    defaultMessage: 'At least one external attendee is required',\n    description: 'Field label',\n  },\n  blockAttendeeCalendar: {\n    defaultMessage: 'Block Attendee Calender',\n    description: 'Field label',\n  },\n  assignRoom: {\n    defaultMessage: \"Show 'Select a Location' section\",\n    description: 'Field label',\n  },\n  blockRoomCalendar: {\n    defaultMessage: 'Block Room Calender',\n    description: 'Field label',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before enabling mappings',\n    description: 'Dependent settings modal title',\n  },\n  warningDisableLabel: {\n    defaultMessage: 'Disable the following',\n    description: 'Dependent settings group header',\n  },\n  boothTourLabel: {\n    defaultMessage: 'Designated Location',\n    description: 'Dependent setting label',\n  },\n  enableManualSchedulingLabel: {\n    defaultMessage: 'Enable manual scheduling',\n    description: 'Dependent setting label',\n  },\n  autoScheduleMappedRequestLabel: {\n    defaultMessage: 'Auto schedule - mapped request',\n    description: 'Dependent setting label',\n  },\n})\n\nexport const mappingDecorator = createDecorator(\n  {\n    field: 'default_mapping',\n    updates: {\n      assign_attendees: identity,\n      block_attendee_calendar: identity,\n      assign_room: identity,\n      block_room_calendar: identity,\n    },\n  },\n  {\n    field: 'assign_topic',\n    updates: {\n      assign_topic_mandatory: (value, allValues) =>\n        value === 'false'\n          ? 'false'\n          : (allValues as Fields)?.assign_topic_mandatory,\n    },\n  },\n  {\n    field: 'assign_attendees',\n    updates: {\n      assign_internal_attendees: identity,\n    },\n  }\n)\n\nexport const Mappings: VFC<MappingsProps> = ({\n  dependentFieldValues: {\n    booth_tour_enabled,\n    enable_external_widget_auto_process,\n  },\n  refetch,\n  loading,\n}) => {\n  const { formatMessage } = useIntl()\n  const { mapping_module, enable_topic } = useEventLocation().configs!\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isSession =\n    masterEngagementType === MasterEngagementTypes.TracksAndSession\n  const [isOpen, setIsOpen] = useState(false)\n  const { enable_manual_scheduling } = useFormState<FormValues>().values\n\n  const {\n    input: { value, onChange },\n  } = useField('default_mapping')\n\n  const canEnableMappings = useCallback(\n    () =>\n      booth_tour_enabled === 'false' && enable_manual_scheduling === 'false',\n    [booth_tour_enabled, enable_manual_scheduling]\n  )\n\n  const canDisableMappings = useCallback(\n    () => enable_external_widget_auto_process === 'false',\n    [enable_external_widget_auto_process]\n  )\n\n  useEffect(() => {\n    value === 'true' && setIsOpen(!canEnableMappings())\n    value === 'false' && setIsOpen(!canDisableMappings())\n  }, [canDisableMappings, canEnableMappings, value])\n\n  const dependentLinks = [\n    booth_tour_enabled === 'true' && {\n      label: formatMessage(messages.boothTourLabel),\n      path: Paths.SETTING,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n    enable_manual_scheduling === 'true' && {\n      label: formatMessage(messages.enableManualSchedulingLabel),\n      path: Paths.CSM_ONLY,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n    enable_external_widget_auto_process === 'true' && {\n      label: formatMessage(messages.autoScheduleMappedRequestLabel),\n      path: Paths.INBOUND_REQUEST_FORM,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n  ].filter(Boolean) as DependentLinks[]\n\n  return mapping_module === 'true' ? (\n    <>\n      {isOpen && (\n        <>\n          {loading && <ModalSpinner />}\n          <EngagementModal\n            title={formatMessage(messages.warningModalTitle)}\n            dependentLinks={dependentLinks}\n            onClose={() => {\n              setIsOpen(false)\n              !canEnableMappings() && onChange('false')\n              !canDisableMappings() && onChange('true')\n            }}\n            onConfirm={() => refetch()}\n          />\n        </>\n      )}\n      <Section>\n        <SectionTitle>{formatMessage(messages.mappingsTitle)}</SectionTitle>\n        <BorderStyled />\n        <EngagementTypeToggle\n          label={formatMessage(messages.defaultMapping)}\n          name=\"default_mapping\"\n          disabled={isSession}\n        >\n          <BorderStyled />\n          {enable_topic === 'true' && (\n            <>\n              <EngagementTypeToggle\n                label={formatMessage(messages.assignTopic)}\n                name=\"assign_topic\"\n              >\n                <BorderStyled />\n                <EngagementTypeToggle\n                  label={formatMessage(messages.assignTopicMandatory)}\n                  name=\"assign_topic_mandatory\"\n                />\n              </EngagementTypeToggle>\n              <BorderStyled />\n            </>\n          )}\n          <EngagementTypeToggle\n            label={formatMessage(messages.assignAttendees)}\n            name=\"assign_attendees\"\n            disabled\n          >\n            <BorderStyled />\n            <EngagementTypeToggle\n              label={formatMessage(messages.assignInternalAttendees)}\n              name=\"assign_internal_attendees\"\n              disabled\n            />\n            <BorderStyled />\n            <EngagementTypeToggle\n              label={formatMessage(messages.assignExternalAttendees)}\n              name=\"assign_external_attendees\"\n              disabled\n            />\n            <BorderStyled />\n            <EngagementTypeToggle\n              label={formatMessage(messages.blockAttendeeCalendar)}\n              name=\"block_attendee_calendar\"\n              disabled\n            />\n            <BorderStyled />\n            <EngagementTypeToggle\n              label={formatMessage(messages.assignRoom)}\n              name=\"assign_room\"\n              disabled\n            >\n              <BorderStyled />\n              <EngagementTypeToggle\n                label={formatMessage(messages.blockRoomCalendar)}\n                name=\"block_room_calendar\"\n                disabled\n              />\n            </EngagementTypeToggle>\n          </EngagementTypeToggle>\n        </EngagementTypeToggle>\n        <BorderStyled />\n      </Section>\n    </>\n  ) : null\n}\n","import { VFC } from 'react'\nimport { useFormState } from 'react-final-form'\nimport { FormattedMessage } from 'react-intl'\nimport { Paragraph2 } from '@jifflenow/brightui/typography'\nimport { Select, Option } from '@jifflenow/brightui/select'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { Field } from 'ui-components/Field'\nimport { FormValues } from '../types'\nimport { SelectContainer } from '../styled-components'\n\ntype SelectField = { label: string; field_name: string; values: string[] }\n\nexport const DemoSubTopicFields: VFC<{\n  fields: SelectField[]\n}> = ({ fields }) => {\n  const { demo_topic } = useFormState<FormValues>().values\n\n  const { values: options } =\n    fields.find(({ field_name }) => field_name === demo_topic) || {}\n\n  const subTopicFields = fields.filter(\n    ({ field_name, label }) =>\n      field_name !== demo_topic && options?.find(option => option === label)\n  )\n\n  return (\n    <>\n      {subTopicFields.length > 0 && (\n        <Paragraph2>\n          <FormattedMessage\n            defaultMessage=\"Choose Sub-Topic/Child field\"\n            description=\"Field label\"\n          />\n        </Paragraph2>\n      )}\n      {subTopicFields.map(({ label, values: options }) => (\n        <div key={label}>\n          <Field<string>\n            name={`demo_sub_topics.${label}`}\n            render={({\n              input: { value, onChange },\n              meta: { submitError, error },\n            }) => {\n              const subTopicOptions = options.reduce((acc, option) => {\n                const field = fields.find(field => field.label === option)\n\n                return [\n                  ...acc,\n                  ...(field ? [{ label: option, id: field.field_name }] : []),\n                ]\n              }, [] as Option[])\n\n              return (\n                <SelectContainer>\n                  <FormControl label={label} error={submitError || error}>\n                    <Select\n                      options={subTopicOptions}\n                      clearable={false}\n                      value={subTopicOptions.filter(\n                        option => option.id === value\n                      )}\n                      searchInput\n                      onChange={({ value }: { value: Option[] }) => {\n                        onChange(value[0].id)\n                      }}\n                    />\n                  </FormControl>\n                </SelectContainer>\n              )\n            }}\n          />\n        </div>\n      ))}\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Paragraph2 } from '@jifflenow/brightui/typography'\nimport { Select, Option } from '@jifflenow/brightui/select'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { Field } from 'ui-components/Field'\nimport { SelectContainer } from '../styled-components'\n\nexport const DemoTopicField: VFC<{ topicOptions: Option[] }> = ({\n  topicOptions,\n}) => (\n  <>\n    <Paragraph2>\n      {\n        <FormattedMessage\n          defaultMessage=\"Choose Topic/Parent field\"\n          description=\"Field label\"\n        />\n      }\n    </Paragraph2>\n    <Field<string>\n      name=\"demo_topic\"\n      render={({\n        input: { value, onChange },\n        meta: { submitError, error },\n      }) => (\n        <SelectContainer>\n          <FormControl error={submitError || error}>\n            <Select\n              options={topicOptions}\n              clearable={false}\n              value={topicOptions.filter(option => option.id === value)}\n              searchInput\n              onChange={({ value }: { value: Option[] }) => {\n                onChange(value[0].id)\n              }}\n            />\n          </FormControl>\n        </SelectContainer>\n      )}\n    />\n  </>\n)\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const FieldLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"200\"\n      viewBox=\"0 0 1000 200\"\n      {...loaderOptions}\n    >\n      <rect y=\"70\" x=\"0\" width=\"110\" height=\"11\" />\n      <rect y=\"90\" x=\"0\" width=\"335\" height=\"40\" rx=\"5\" ry=\"5\" />\n    </ContentLoader>\n  )\n}\n","import { VFC } from 'react'\nimport { useFormState } from 'react-final-form'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useQuery } from 'react-query'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { getEngagementTypeCustomFormQueryFn, useSummitClient } from 'rest'\nimport { useEngagementType } from '../../EngagementTypeProvider'\nimport { FormValues } from '../types'\nimport { DemoSubTopicFields } from './DemoSubTopicsFields'\nimport { DemoTopicField } from './DemoTopicField'\nimport { FieldLoader } from './FieldLoader'\n\nexport const CustomFields: VFC = () => {\n  const { demo_topic } = useFormState<FormValues>().values\n  const { uuid } = useEngagementType().engagementType\n  const {\n    attributes: { systemName: eventName },\n  } = useEventLocation().location!\n\n  const client = useSummitClient()\n\n  const { isLoading, data, error, refetch } = useQuery(\n    [\n      'engagementTypeCustomForm',\n      {\n        path: {\n          eventName,\n        },\n        query: {\n          uuid,\n        },\n      },\n    ],\n    getEngagementTypeCustomFormQueryFn(client)\n  )\n\n  if (isLoading) {\n    return <FieldLoader />\n  }\n  if (error || !data) {\n    return <ErrorPage onButtonClick={() => refetch()} />\n  }\n\n  const meetingTypeName = Object.keys(data.data)[0]\n  const fields = data.data[meetingTypeName].forms?.meeting_request_form || []\n\n  // @ts-expect-error: options is wrong in openapi spec\n  const selectFields: SelectField[] = fields.filter(\n    ({ type }) => type === 'dropdown'\n  )\n  const topicOptions = selectFields.map(({ label, field_name }) => ({\n    label,\n    id: field_name,\n  }))\n\n  return (\n    <>\n      <DemoTopicField topicOptions={topicOptions} />\n      {demo_topic && <DemoSubTopicFields fields={selectFields} />}\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useFormState } from 'react-final-form'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport {\n  EngagementTypeToggle,\n  EngagementTypeToggleWithDesc,\n} from '../../common'\nimport { BorderStyled, Section, SectionTitle } from '../styled-components'\nimport { FormValues } from '../types'\nimport { CustomFields } from './CustomFields'\n\nconst messages = defineMessages({\n  guidedTour: {\n    defaultMessage: 'Guided Tour',\n    description: 'Section title',\n  },\n  enableGuidedTour: {\n    defaultMessage: 'Enable Guided Tour',\n    description: 'Field label',\n  },\n  quickDemo: {\n    defaultMessage: 'Quick Demo',\n    description: 'Field label',\n  },\n  note: {\n    defaultMessage: 'Note: Make sure to enable designated location.',\n    description: 'Quick Demo help text',\n  },\n})\n\nexport const GuidedTour: VFC = () => {\n  const { formatMessage } = useIntl()\n  const { guided_tour_survey: eventGuidedTourSurvey, quick_demo } =\n    useEventLocation().configs || {}\n  const { guided_tour_survey } = useFormState<FormValues>().values\n\n  return eventGuidedTourSurvey === 'true' ? (\n    <Section>\n      <SectionTitle>{formatMessage(messages.guidedTour)}</SectionTitle>\n      <EngagementTypeToggle\n        name=\"guided_tour_survey\"\n        label={formatMessage(messages.enableGuidedTour)}\n      />\n      <BorderStyled />\n      {guided_tour_survey === 'true' && (\n        <>\n          {quick_demo === 'true' && (\n            <EngagementTypeToggleWithDesc\n              name=\"quick_demo\"\n              label={formatMessage(messages.quickDemo)}\n              desc={formatMessage(messages.note)}\n            />\n          )}\n          <CustomFields />\n          <BorderStyled />\n        </>\n      )}\n    </Section>\n  ) : null\n}\n","import { useCallback, useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useField, useFormState } from 'react-final-form'\nimport createDecorator from 'final-form-calculate'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { DependentLinks, EngagementTypeToggle } from '../common'\nimport { Paths } from '../Paths'\nimport { EngagementModal } from '../common/EngagementModal'\nimport { BorderStyled, Section } from './styled-components'\nimport { Fields, FormValues, ManualSchedulingProps } from './types'\n\nconst messages = defineMessages({\n  enableManualScheduling: {\n    defaultMessage: 'Enable manual scheduling',\n    description: 'Section title',\n  },\n  showOnsiteRoomJmmAbove: {\n    defaultMessage: 'Show onsite room listing only for JMM and above roles',\n    description: 'Field label',\n  },\n  blockUserCalendarOnAcceptance: {\n    defaultMessage: 'Block user(s) calendar upon meeting acceptance',\n    description: 'Field label',\n  },\n  sendMstEmailsToEa: {\n    defaultMessage:\n      'Send a copy of the \"Meeting Request/Update/Cancel EMAIL to Internal Attendee\" to all the EA(s) of the attendee',\n    description: 'Field label',\n  },\n  sendMstMailToAttendee: {\n    defaultMessage: 'Send email notification to attendees managed by EA',\n    description: 'Field label',\n  },\n  sendMstMailToAttendeeTooltip: {\n    defaultMessage:\n      'This will not affect the delivery of notification to attendees not managed by EA.',\n    description: 'Tooltip label',\n  },\n  warningDisableLabel: {\n    defaultMessage: 'Disable the following',\n    description: 'Dependent settings group header',\n  },\n  enableMappingsLabel: {\n    defaultMessage: 'Enable Mappings',\n    description: 'Dependent settings group header',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before enabling manual scheduling',\n    description: 'Dependent settings modal title',\n  },\n})\n\nexport const manualSchedulingDecorator = createDecorator({\n  field: 'enable_manual_scheduling',\n  updates: {\n    show_onsite_room_jmm_above: (value, allValues) =>\n      value === 'false'\n        ? 'false'\n        : (allValues as Fields)?.show_onsite_room_jmm_above,\n    block_user_calendar_on_acceptance: (value, allValues) =>\n      value === 'false'\n        ? 'false'\n        : (allValues as Fields)?.block_user_calendar_on_acceptance,\n    send_mst_mails_to_ea: (value, allValues) =>\n      value === 'false' ? 'false' : (allValues as Fields)?.send_mst_mails_to_ea,\n    send_mst_mail_to_attendee_managed_by_ea: (value, allValues) =>\n      value === 'false'\n        ? 'false'\n        : (allValues as Fields)?.send_mst_mail_to_attendee_managed_by_ea,\n  },\n})\n\nexport const ManualScheduling: VFC<ManualSchedulingProps> = ({\n  loading,\n  refetch,\n}) => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n\n  const { enable_manual_scheduling } = useEventLocation().configs!\n\n  const { default_mapping } = useFormState<FormValues>().values\n\n  const {\n    input: { value, onChange },\n  } = useField('enable_manual_scheduling')\n\n  const canEnableManualScheduling = useCallback(\n    () => default_mapping === 'false',\n    [default_mapping]\n  )\n\n  useEffect(() => {\n    value === 'true' && setIsOpen(!canEnableManualScheduling())\n  }, [canEnableManualScheduling, value])\n\n  const dependentLinks = [\n    default_mapping === 'true' && {\n      label: formatMessage(messages.enableMappingsLabel),\n      path: Paths.CSM_ONLY,\n      group: formatMessage(messages.warningDisableLabel),\n    },\n  ].filter(Boolean) as DependentLinks[]\n\n  return enable_manual_scheduling === 'true' ? (\n    <>\n      {isOpen && (\n        <>\n          {loading && <ModalSpinner />}\n          <EngagementModal\n            title={formatMessage(messages.warningModalTitle)}\n            dependentLinks={dependentLinks}\n            onClose={() => {\n              setIsOpen(false)\n              !canEnableManualScheduling() && onChange('false')\n            }}\n            onConfirm={() => refetch()}\n          />\n        </>\n      )}\n      <Section>\n        <EngagementTypeToggle\n          label={formatMessage(messages.enableManualScheduling)}\n          name=\"enable_manual_scheduling\"\n          bold\n        >\n          <EngagementTypeToggle\n            name=\"show_onsite_room_jmm_above\"\n            label={formatMessage(messages.showOnsiteRoomJmmAbove)}\n          />\n          <BorderStyled />\n          <EngagementTypeToggle\n            name=\"block_user_calendar_on_acceptance\"\n            label={formatMessage(messages.blockUserCalendarOnAcceptance)}\n          />\n          <BorderStyled />\n          <EngagementTypeToggle\n            name=\"send_mst_mails_to_ea\"\n            label={formatMessage(messages.sendMstEmailsToEa)}\n          />\n          <BorderStyled />\n          <EngagementTypeToggle\n            name=\"send_mst_mail_to_attendee_managed_by_ea\"\n            label={formatMessage(messages.sendMstMailToAttendee)}\n            infoTooltip={formatMessage(messages.sendMstMailToAttendeeTooltip)}\n          />\n          <BorderStyled />\n        </EngagementTypeToggle>\n      </Section>\n    </>\n  ) : null\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport {\n  EngagementTypeToggle,\n  EngagementTypeToggleWithDesc,\n  MeetingBreakDurationLabel,\n} from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { OptionalParticipant } from '../Participants/OptionalParticipant'\nimport {\n  BorderStyled,\n  Section,\n  SectionTitle,\n  InputFieldContainer,\n} from './styled-components'\nimport { MeetingBreakDurationSelect } from './MeetingBreakDurationSelect'\nimport { MeetingSummitHookSelect } from './MeetingSummitHookSelect'\nimport { BreakDurationInput } from './BreakDurationInput'\nimport { FormFieldProps } from './types'\nimport { Mappings } from './Mappings'\nimport { GuidedTour } from './GuidedTour'\nimport { ManualScheduling } from './ManualScheduling'\n\nconst messages = defineMessages({\n  meetingSubmitHookTitle: {\n    defaultMessage: 'Redirect after meeting creation',\n    description: 'Section title',\n  },\n  meetingBreakEnabled: {\n    defaultMessage: 'Enable break',\n    description: 'Field label',\n  },\n  meetingBreakHelpText: {\n    defaultMessage:\n      'NOTE: Break settings cannot be modified if there are active meetings',\n    description: 'Help text',\n  },\n  meetingBreakMeetingDuration: {\n    defaultMessage: 'Meeting duration greater than or equal to',\n    description: 'Field label',\n  },\n  meetingBreakDurationLabel: {\n    defaultMessage: 'Set break duration',\n    description: 'Field label',\n  },\n  meetingSummitHookLabel: {\n    defaultMessage: 'Action [Dropdown with values \"No Action\" and \"Redirect\"]',\n    description: 'Field label',\n  },\n  showMeetingBreakNotification: {\n    defaultMessage: 'Notify user to break inclusion while requesting meetings',\n    description: 'Dependent settings modal title',\n  },\n})\n\nexport const FormField: VFC<FormFieldProps> = ({\n  hasActiveMeetings,\n  ...rest\n}) => {\n  const { formatMessage } = useIntl()\n\n  const { guided_tour_survey } = useEventLocation().configs!\n\n  const { subType } = useEventLocation().location?.attributes ?? {}\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n  const isGeneralMeetingType =\n    masterEngagementType === MasterEngagementTypes.General\n\n  return (\n    <>\n      {isGeneralMeetingType && (\n        <>\n          <Section>\n            <EngagementTypeToggleWithDesc\n              label={formatMessage(messages.meetingBreakEnabled)}\n              name=\"meeting_break_enabled\"\n              desc={formatMessage(messages.meetingBreakHelpText)}\n              disabled={hasActiveMeetings}\n            >\n              <InputFieldContainer>\n                <MeetingBreakDurationLabel>\n                  {formatMessage(messages.meetingBreakMeetingDuration)}\n                </MeetingBreakDurationLabel>\n                <BreakDurationInput\n                  name=\"meeting_break_meeting_duration\"\n                  disabled={hasActiveMeetings}\n                />\n              </InputFieldContainer>\n              <MeetingBreakDurationSelect\n                label={formatMessage(messages.meetingBreakDurationLabel)}\n                name=\"meeting_break_duration\"\n                disabled={hasActiveMeetings}\n              />\n              <EngagementTypeToggle\n                label={formatMessage(messages.showMeetingBreakNotification)}\n                name=\"show_meeting_break_notification\"\n              />\n            </EngagementTypeToggleWithDesc>\n            <BorderStyled />\n          </Section>\n          <Section>\n            <SectionTitle>\n              {formatMessage(messages.meetingSubmitHookTitle)}\n            </SectionTitle>\n            <MeetingSummitHookSelect\n              name=\"meeting_submit_hook\"\n              label={formatMessage(messages.meetingSummitHookLabel)}\n            />\n          </Section>\n        </>\n      )}\n      <Mappings {...rest} />\n      {isGeneralMeetingType && (\n        <>\n          {guided_tour_survey === 'true' && <GuidedTour />}\n          <ManualScheduling {...rest} />\n          {subType !== 'Emeet' && <OptionalParticipant />}\n        </>\n      )}\n    </>\n  )\n}\n","import { useEffect, useState, useMemo, VFC } from 'react'\nimport { Form as FinalForm } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Prompt } from 'react-router-dom'\nimport { Config, FORM_ERROR, ValidationErrors } from 'final-form'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport {\n  BulkEngagementSettingUpdateInput,\n  DemoSubTopicDataInput,\n} from 'gql/types/globalTypes'\nimport {\n  mutateBulkUpsertEngagementSettings,\n  useApolloClient,\n  useGetEngagementTypeSettings,\n} from 'gql'\nimport {\n  getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue as CustomNameValue,\n  getEngagementTypeSettings_getEngagementTypeSettings_value_MeetingHookValue as MeetingHookValue,\n  getEngagementTypeSettings_getEngagementTypeSettings_value_MeetingHookValue_MeetingHookValue as MeetingHookValue_MeetingHookValue,\n  getEngagementTypeSettings_getEngagementTypeSettings_value_DemoSubTopic as DemoSubTopics,\n  getEngagementTypeSettings_getEngagementTypeSettings_value_DemoSubTopic_DemoSubTopicData as DemoSubTopicsData,\n} from 'gql/types/getEngagementTypeSettings'\nimport {\n  bulkUpsertEngagementSettingsVariables,\n  bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue as UpsertCustomNameValue,\n} from 'gql/types/bulkUpsertEngagementSettings'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useEngagementMeetingData } from 'rest'\nimport {\n  Body,\n  Footer,\n  StyledForm,\n  Container,\n  usePageTitle,\n  Header,\n} from '../common'\nimport { useSettingsLoader } from '../common/useSettingsLoader'\nimport { filterEngagementSettings } from '../common/filterEngagementSettings'\nimport { updateQueryResults } from '../common/utils'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { Loader } from './Loader'\nimport { CsmOnlyTitle } from './styled-components'\nimport { FormField } from './FormField'\nimport {\n  DependentFields,\n  FormProps,\n  FormValues,\n  Fields,\n  MeetingSubmitHookField,\n} from './types'\nimport { mappingDecorator } from './Mappings'\nimport { manualSchedulingDecorator } from './ManualScheduling'\n\nconst shallowEqual = (\n  object1: { [key: string]: string },\n  object2: { [key: string]: string }\n): boolean => {\n  const keys1 = Object.keys(object1)\n  const keys2 = Object.keys(object2)\n  if (keys1.length !== keys2.length) {\n    return false\n  }\n\n  for (const key of keys1) {\n    if (object1[key] !== object2[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nconst initialSubTopics = (demoSubTopicData: DemoSubTopicsData[] | null = []) =>\n  demoSubTopicData!.reduce(\n    (acc, value) => ({\n      ...acc,\n      ...(value.value ? { [value.key]: value.value } : null),\n    }),\n    {}\n  )\n\nconst changeSubTopicFormValues = (demoSubTopicData: {\n  [key: string]: string\n}): DemoSubTopicDataInput[] =>\n  Object.keys(demoSubTopicData).map(key => ({\n    key,\n    value: demoSubTopicData[key],\n  }))\n\nconst LoadingShimmer = () => (\n  <Body>\n    <Container>\n      <Loader />\n    </Container>\n  </Body>\n)\n\nconst messages = defineMessages({\n  pageTitle: {\n    defaultMessage: 'CSM Only',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {option} other {options}} failed to save',\n    description: 'Error message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  sectionTitle: {\n    defaultMessage: 'CSM Only',\n    description: 'Section title',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  fieldErrorMessage: {\n    defaultMessage: 'Error saving changes',\n    description: 'field error message',\n  },\n  meetingDurationError: {\n    defaultMessage:\n      'Meeting break duration should be lesser than meeting duration.',\n    description: 'Field error message',\n  },\n})\n\nconst settings = [\n  'meeting_break_enabled',\n  'meeting_break_meeting_duration',\n  'meeting_break_duration',\n  'show_meeting_break_notification',\n  'default_mapping',\n  'assign_topic',\n  'assign_topic_mandatory',\n  'assign_attendees',\n  'assign_internal_attendees',\n  'assign_external_attendees',\n  'block_attendee_calendar',\n  'assign_room',\n  'block_room_calendar',\n  'guided_tour_survey',\n  'quick_demo',\n  'demo_topic',\n  'enable_manual_scheduling',\n  'show_onsite_room_jmm_above',\n  'block_user_calendar_on_acceptance',\n  'send_mst_mails_to_ea',\n  'send_mst_mail_to_attendee_managed_by_ea',\n  'make_participants_optional_to_the_meeting',\n]\n\nconst meetingHookSetting = ['meeting_submit_hook']\nconst demoSubTopics = ['demo_sub_topics']\n\nconst dependentSettings: Array<keyof DependentFields> = [\n  'booth_tour_enabled',\n  'enable_external_widget_auto_process',\n]\n\nconst Form: VFC<FormProps> = ({\n  formRenderProps: { handleSubmit, dirty },\n  ...restProps\n}) => {\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n  const showLoading = useSettingsLoader(restProps.loading)\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      {showLoading ? (\n        <LoadingShimmer />\n      ) : (\n        <Body>\n          <Container>\n            <CsmOnlyTitle>{formatMessage(messages.sectionTitle)}</CsmOnlyTitle>\n            <FormField {...restProps} />\n          </Container>\n          <Footer />\n        </Body>\n      )}\n    </StyledForm>\n  )\n}\n\nconst cleanMeetingHookData = (value: MeetingHookValue_MeetingHookValue) => {\n  const { __typename, url_parameters, ...rest } = value\n\n  return {\n    ...rest,\n    url_parameters: url_parameters?.map(({ __typename, ...rest }) => rest),\n  }\n}\n\nexport const CsmOnly: VFC = () => {\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  usePageTitle(formatMessage(messages.pageTitle))\n\n  const [showLoader, setShowLoader] = useState(false)\n\n  const {\n    id: engagementTypeId,\n    uuid: activity_uuid,\n  } = useEngagementType().engagementType\n  const {\n    id: current_location_uuid,\n    attributes: { systemName: eventName },\n  } = useEventLocation().location!\n\n  const {\n    getEngagementTypeSettings = [],\n    refetch: refetchEngagementTypeSettings,\n    loading,\n    updateQuery,\n  } = useGetEngagementTypeSettings({\n    variables: {\n      engagementTypeId,\n      names: [\n        ...settings,\n        ...demoSubTopics,\n        ...meetingHookSetting,\n        ...dependentSettings,\n      ],\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const fields = useMemo(\n    () => filterEngagementSettings(getEngagementTypeSettings, settings),\n    [getEngagementTypeSettings]\n  )\n\n  const meetingHookField = useMemo(\n    () =>\n      filterEngagementSettings(getEngagementTypeSettings, meetingHookSetting),\n    [getEngagementTypeSettings]\n  )\n\n  const demoSubTopicsField = useMemo(\n    () => filterEngagementSettings(getEngagementTypeSettings, demoSubTopics),\n    [getEngagementTypeSettings]\n  )\n\n  const dependentFields = useMemo(\n    () =>\n      filterEngagementSettings(getEngagementTypeSettings, dependentSettings),\n    [getEngagementTypeSettings]\n  )\n\n  const {\n    data: { data: engagementMeetingData } = {},\n  } = useEngagementMeetingData({\n    eventName,\n    activity_uuid,\n    current_location_uuid,\n  })\n\n  const initialValues = useMemo(\n    () => ({\n      ...fields.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as CustomNameValue).value,\n        }),\n        {}\n      ),\n      ...demoSubTopicsField.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: initialSubTopics((value as DemoSubTopics).DemoSubTopicData),\n        }),\n        {}\n      ),\n      ...meetingHookField.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: JSON.stringify(\n            cleanMeetingHookData((value as MeetingHookValue).MeetingHookValue)\n          ),\n        }),\n        {}\n      ),\n    }),\n    [fields, meetingHookField, demoSubTopicsField]\n  )\n\n  const dependentFieldValues = useMemo(\n    () => ({\n      ...dependentFields.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as CustomNameValue).value,\n        }),\n        {}\n      ),\n    }),\n    [dependentFields]\n  ) as DependentFields\n\n  const validate: Config<FormValues>['validate'] = ({\n    meeting_break_meeting_duration,\n    meeting_break_duration,\n  }) => {\n    const errors: ValidationErrors = {}\n    if (+meeting_break_meeting_duration < +meeting_break_duration) {\n      errors.meeting_break_meeting_duration = formatMessage(\n        messages.meetingDurationError\n      )\n      errors.meeting_break_duration = formatMessage(\n        messages.meetingDurationError\n      )\n    }\n\n    return errors\n  }\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change }\n  ) => {\n    try {\n      setShowLoader(true)\n      let configsToUpdate = fields.reduce<BulkEngagementSettingUpdateInput[]>(\n        (acc, { name, value: previousValue }) => {\n          const { display_name, value } = previousValue as CustomNameValue\n\n          return value !== values[name as keyof FormValues]\n            ? [\n                ...acc,\n                {\n                  name,\n                  customValue: {\n                    display_name,\n                    value: values[name as keyof Fields],\n                  },\n                },\n              ]\n            : acc\n        },\n        []\n      )\n\n      configsToUpdate = demoSubTopicsField.reduce<\n        BulkEngagementSettingUpdateInput[]\n      >((acc, { name, value: previousValue }) => {\n        const {\n          display_name,\n          DemoSubTopicData,\n        } = previousValue as DemoSubTopics\n\n        return shallowEqual(\n          initialSubTopics(DemoSubTopicData),\n          values.demo_sub_topics\n        )\n          ? acc\n          : [\n              ...acc,\n              {\n                name,\n                demoSubTopics: {\n                  display_name,\n                  subTopicConfigName: '',\n                  value: changeSubTopicFormValues(values.demo_sub_topics),\n                },\n              },\n            ]\n      }, configsToUpdate)\n\n      configsToUpdate = meetingHookField.reduce<\n        BulkEngagementSettingUpdateInput[]\n      >((acc, { name, value: previousValue }) => {\n        const {\n          display_name,\n          MeetingHookValue,\n        } = previousValue as MeetingHookValue\n\n        return JSON.stringify(MeetingHookValue) !==\n          values[name as keyof FormValues]\n          ? [\n              ...acc,\n              {\n                name,\n                hookValue: {\n                  display_name,\n                  value: JSON.parse(\n                    values[name as keyof MeetingSubmitHookField]\n                  ),\n                },\n              },\n            ]\n          : acc\n      }, configsToUpdate)\n\n      if (configsToUpdate.length) {\n        const variables: bulkUpsertEngagementSettingsVariables = {\n          engagementTypeId,\n          configsToUpdate,\n        }\n        const { failureCount, totalCount, engagementSettings, successCount } = (\n          await mutateBulkUpsertEngagementSettings(client, {\n            variables,\n          })\n        ).data!.bulkUpsertEngagementSettings\n        setShowLoader(false)\n        if (failureCount) {\n          showErrorToast(\n            formatMessage(messages.updateError, { totalCount, failureCount })\n          )\n          engagementSettings.forEach(\n            ({ success, name, value }) =>\n              !success &&\n              change(\n                name as keyof FormValues,\n                (value as UpsertCustomNameValue).value ?? undefined\n              )\n          )\n          const errors = engagementSettings.reduce(\n            (acc, { success, name }) =>\n              success\n                ? acc\n                : {\n                    ...acc,\n                    [name]: formatMessage(messages.fieldErrorMessage),\n                  },\n            {}\n          )\n          if (successCount) {\n            updateQueryResults(updateQuery, engagementSettings)\n          }\n\n          return errors\n        }\n        showSuccessToast(formatMessage(messages.successMessage))\n        updateQueryResults(updateQuery, engagementSettings)\n      }\n\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<FormValues>\n        initialValues={initialValues}\n        // TODO: Awaiting fix for this [bug](https://github.com/final-form/final-form-calculate/issues/38)\n        // to remove `ts-expect-error`.\n        // @ts-expect-error\n        decorators={[mappingDecorator, manualSchedulingDecorator]}\n        onSubmit={handleSubmit}\n        render={props => (\n          <Form\n            formRenderProps={props}\n            hasActiveMeetings={\n              engagementMeetingData?.hasActiveMeetings ?? false\n            }\n            dependentFieldValues={dependentFieldValues}\n            loading={loading}\n            refetch={refetchEngagementTypeSettings}\n          />\n        )}\n        validate={validate}\n      />\n    </>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const FieldsWrapper = styled('div', {\n  width: '100%',\n  maxWidth: '100%',\n})\n\nexport const Title = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Subtitle1,\n    color: colors.mono800,\n    marginTop: sizing.scale800,\n  })\n)\n\nexport const Description = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    marginBottom: sizing.scale500,\n    marginTop: sizing.scale100,\n  })\n)\n\nexport const Heading = styled('h2', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale550,\n}))\n\nexport const GenericError = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.LabelSmall,\n    color: colors.negative700,\n    marginBottom: sizing.scale100,\n    marginTop: sizing.scale100,\n  })\n)\n\nexport const InputFieldWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  maxWidth: '350px',\n  paddingTop: sizing.scale300,\n}))\n\nexport const FieldWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale950,\n}))\n\nexport const Divider = styled('div', ({ $theme: { colors, sizing } }) => ({\n  borderTopWidth: '1px',\n  borderTopStyle: 'solid',\n  borderTopColor: colors.mono300,\n  marginBottom: sizing.scale300,\n}))\n\nexport const FormControlStyledToggleContainer = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale800,\n  })\n)\n\nexport const DurationContainer = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale400,\n  width: '320px',\n}))\n\nexport const SchedulingTitle = styled(\n  'div',\n  ({ $theme: { sizing, typography } }) => ({\n    ...typography.Subtitle3,\n    marginBottom: sizing.scale200,\n  })\n)\n","import { VFC } from 'react'\nimport { FieldRenderProps } from 'react-final-form'\nimport { RadioGroup, Radio, ALIGN } from '@jifflenow/brightui/radio'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'ui-components/Field'\nimport { TimeDurationSelect } from '../common/TimeDurationSelect'\nimport {\n  GenericError,\n  FormControlStyledToggleContainer,\n  DurationContainer,\n  SchedulingTitle,\n} from './styled-components'\n\nconst messages = defineMessages({\n  MeetingBufferLabel: {\n    defaultMessage: 'Duration',\n    description: 'Field label',\n  },\n  bufferTimeLabel: {\n    defaultMessage: 'Lead time for IRP slots',\n    description: 'Field label',\n  },\n  nextDayRequestLabel: {\n    defaultMessage: 'Do not allow same day requests',\n    description: 'Field label',\n  },\n  schedulingLogicLabel: {\n    defaultMessage: 'Scheduling logic',\n    description: 'Field label',\n  },\n})\n\nconst BufferTimeDuration: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <DurationContainer>\n      <TimeDurationSelect\n        label={formatMessage(messages.MeetingBufferLabel)}\n        name=\"emeet_irp_meeting_buffer\"\n        multiDay\n      />\n    </DurationContainer>\n  )\n}\n\nconst SchedulingLogic: VFC<FieldRenderProps<string>> = ({\n  input: { value, onChange },\n  meta: { submitError },\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      {submitError && <GenericError>{submitError}</GenericError>}\n      <RadioGroup\n        align={ALIGN.vertical}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        name=\"scheduling_logic\"\n      >\n        <Radio value=\"true\">{formatMessage(messages.bufferTimeLabel)}</Radio>\n        {value === 'true' ? <BufferTimeDuration /> : null}\n        <Radio value=\"false\">\n          {formatMessage(messages.nextDayRequestLabel)}\n        </Radio>\n      </RadioGroup>\n    </>\n  )\n}\n\nexport const SchedulingLogicField: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <FormControlStyledToggleContainer>\n      <SchedulingTitle>\n        {formatMessage(messages.schedulingLogicLabel)}\n      </SchedulingTitle>\n      <Field\n        name=\"enable_emeet_irp_scheduling_logic_buffer\"\n        render={SchedulingLogic}\n      />\n    </FormControlStyledToggleContainer>\n  )\n}\n","import { InputOverrides } from '@jifflenow/brightui/input'\n\nexport const instructionInputOverride: InputOverrides = {\n  Root: {\n    style: ({ $theme: { mediaQuery } }) => ({\n      width: '320px',\n      [mediaQuery.medium]: {\n        width: '280px',\n      },\n    }),\n  },\n}\n","import { FC, useCallback, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useParams } from 'react-router-dom'\nimport { Field, Validation } from 'ui-components/Field'\nimport { Input } from '@jifflenow/brightui/input'\nimport { useAutoSelectExpertData } from 'rest'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useField } from 'react-final-form'\nimport { useEffect } from 'react'\nimport { DependentLinks, EngagementTypeToggle } from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { EngagementModal } from '../common/EngagementModal'\nimport { SchedulingLogicField } from './SchedulingLogicField'\nimport { instructionInputOverride } from './overrides'\nimport {\n  Divider,\n  FieldWrapper,\n  InputFieldWrapper,\n  Description,\n  Title,\n  GenericError,\n} from './styled-components'\n\nconst messages = defineMessages({\n  defaultDurationLabel: {\n    defaultMessage: 'Default duration of shared availability in days',\n    description: 'Field label',\n  },\n  meetingExpiryLabel: {\n    defaultMessage: 'Meeting link expiry in days',\n    description: 'Field label',\n  },\n  meetingExpiryDescLabel: {\n    defaultMessage:\n      'Link expiry duration needs to be less than or equal to the default duration of shared availability',\n    description: 'Field label description',\n  },\n  autoExpertLabel: {\n    defaultMessage: 'Auto Expert Setting',\n    description: 'Field label',\n  },\n  warningModalTitle: {\n    defaultMessage:\n      'Please ensure following settings are done before changing the Auto Expert Setting',\n    description: 'Dependent settings modal title',\n  },\n  warningEnableLabel: {\n    defaultMessage: 'Enable the following',\n    description: 'Dependent settings group header',\n  },\n  topicMappedLabel: {\n    defaultMessage: 'Please enable topic',\n    description: 'Dependent setting label',\n  },\n  hasMappedTopicsLabel: {\n    defaultMessage: 'Please map at least one topic to enable',\n    description: 'Dependent setting label',\n  },\n  hasUserMappedToTopicLabel: {\n    defaultMessage:\n      'Please map at least one internal user to mapped topics to enable auto expert setting',\n    description: 'Dependent setting label',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nconst DaysInput: FC<{ name: string; placeholder: string }> = ({\n  name,\n  placeholder,\n}) => (\n  <Field<string>\n    name={name}\n    validations={[Validation.REQUIRED]}\n    render={({ input: { value, onChange }, meta: { error, submitError } }) => (\n      <>\n        <GenericError>{submitError || error} </GenericError>\n        <Input\n          type=\"number\"\n          name={name}\n          value={value}\n          placeholder={placeholder}\n          onChange={(e: any) => onChange(e.target.value)}\n          overrides={instructionInputOverride}\n        />\n      </>\n    )}\n  />\n)\n\nexport const FormFields: VFC = () => {\n  const { formatMessage } = useIntl()\n  const { location } = useEventLocation()\n  const { uuid: activity_uuid } = useEngagementType().engagementType\n  const {\n    isLoading,\n    data: autoSelectExpert,\n    reload: refetchAutoSelectExpertSettings,\n  } = useAutoSelectExpertData({\n    eventName: location?.attributes.systemName,\n    activity_uuid,\n    current_location_uuid: location?.id,\n  })\n  const [isOpen, setIsOpen] = useState(false)\n  const {\n    input: { value, onChange },\n  } = useField('auto_select_expert')\n\n  const validateAutoSelectExpertSettings = useCallback(\n    () =>\n      autoSelectExpert?.data.topicEnabled &&\n      autoSelectExpert?.data.hasMappedTopics &&\n      autoSelectExpert?.data.hasUserMappedToTopic,\n    [\n      autoSelectExpert?.data.hasMappedTopics,\n      autoSelectExpert?.data.hasUserMappedToTopic,\n      autoSelectExpert?.data.topicEnabled,\n    ]\n  )\n\n  useEffect(() => {\n    value === 'true' && setIsOpen(!validateAutoSelectExpertSettings())\n  }, [validateAutoSelectExpertSettings, value])\n\n  const { eventName } = useParams<{\n    eventName: string\n  }>()\n\n  const dependentLinks = ([\n    !autoSelectExpert?.data.topicEnabled && {\n      label: formatMessage(messages.topicMappedLabel),\n      path: `${window.location.origin}/${eventName}/event/new?current_location_uuid=${location?.id}`,\n      group: formatMessage(messages.warningEnableLabel),\n    },\n    !autoSelectExpert?.data.hasMappedTopics && {\n      label: formatMessage(messages.hasMappedTopicsLabel),\n      path: `${window.location.origin}/${eventName}/topics/topic_listing?current_location_uuid=${location?.id}`,\n      group: formatMessage(messages.warningEnableLabel),\n    },\n    !autoSelectExpert?.data.hasUserMappedToTopic && {\n      label: formatMessage(messages.hasUserMappedToTopicLabel),\n      path: `${window.location.origin}/${eventName}/topics/topic_listing?current_location_uuid=${location?.id}`,\n      group: formatMessage(messages.warningEnableLabel),\n    },\n  ].filter(Boolean) as unknown) as DependentLinks[]\n\n  return (\n    <>\n      {isOpen && (\n        <EngagementModal\n          title={formatMessage(messages.warningModalTitle)}\n          dependentLinks={dependentLinks}\n          onClose={() => {\n            setIsOpen(false)\n            !validateAutoSelectExpertSettings() && onChange('false')\n          }}\n          onConfirm={() => refetchAutoSelectExpertSettings()}\n        />\n      )}\n\n      {isLoading && <ModalSpinner />}\n      <FieldWrapper>\n        <Title>{formatMessage(messages.defaultDurationLabel)}</Title>\n        <InputFieldWrapper>\n          <DaysInput\n            name=\"default_availability_duration\"\n            placeholder={formatMessage(messages.defaultDurationLabel)}\n          />\n        </InputFieldWrapper>\n      </FieldWrapper>\n      <FieldWrapper>\n        <Title>{formatMessage(messages.meetingExpiryLabel)}</Title>\n        <Description>\n          {formatMessage(messages.meetingExpiryDescLabel)}\n        </Description>\n        <InputFieldWrapper>\n          <DaysInput\n            name=\"inbound_link_expiry\"\n            placeholder={formatMessage(messages.meetingExpiryLabel)}\n          />\n        </InputFieldWrapper>\n      </FieldWrapper>\n      <Divider />\n      <FieldWrapper>\n        <EngagementTypeToggle\n          label={formatMessage(messages.autoExpertLabel)}\n          name=\"auto_select_expert\"\n          bold\n        />\n      </FieldWrapper>\n      <Divider />\n      <SchedulingLogicField />\n    </>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const LinkSettingsContentLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"600\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"20\" x=\"0\" width=\"165\" height=\"20\" />\n\n      <rect y=\"62\" x=\"0\" width=\"370\" height=\"15\" />\n      <rect y=\"92\" x=\"0\" width=\"335\" height=\"35\" rx=\"5\" ry=\"5\" />\n\n      <rect y=\"180\" x=\"0\" width=\"215\" height=\"15\" />\n      <rect y=\"210\" x=\"0\" width=\"585\" height=\"12\" />\n      <rect y=\"250\" x=\"0\" width=\"335\" height=\"35\" rx=\"5\" ry=\"5\" />\n\n      <rect y=\"330\" x=\"0\" width=\"1000\" height=\"1\" />\n      <rect y=\"368\" x=\"0\" width=\"158\" height=\"13\" />\n      <rect y=\"360\" x=\"955\" width=\"42\" height=\"24\" rx=\"12\" ry=\"12\" />\n    </ContentLoader>\n  )\n}\n","import { FC, VFC, useState, useMemo } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { Config, FORM_ERROR, ValidationErrors } from 'final-form'\nimport { Form as FinalForm, FormRenderProps } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport {\n  mutateBulkUpsertEngagementSettings,\n  useApolloClient,\n  useGetEngagementTypeSettings,\n} from 'gql'\nimport {\n  bulkUpsertEngagementSettingsVariables,\n  bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue,\n} from 'gql/types/bulkUpsertEngagementSettings'\nimport { getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue } from 'gql/types/getEngagementTypeSettings'\nimport { BulkEngagementSettingUpdateInput } from 'gql/types/globalTypes'\nimport {\n  Body,\n  Footer,\n  Header,\n  StyledForm,\n  Container,\n  usePageTitle,\n} from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { useSettingsLoader } from '../common/useSettingsLoader'\nimport { updateQueryResults } from '../common/utils'\nimport { FieldsWrapper, Heading } from './styled-components'\nimport { FormFields } from './FormFields'\nimport { LinkSettingsContentLoader } from './LinkSettingsContentLoader'\nimport { FormValues } from './types'\n\nconst messages = defineMessages({\n  linkSettings: {\n    defaultMessage: 'Link Settings',\n    description: 'Page title',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  sectionTitle: {\n    defaultMessage: 'Link Setting',\n    description: 'section title',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  filedError: {\n    defaultMessage: 'Error saving changes',\n    description: 'Error label message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {option} other {options}} failed to save',\n    description: 'Error message',\n  },\n  availabilityDurationError: {\n    defaultMessage: 'Availability duration cannot be greater than 180 days.',\n    description: 'Field error message',\n  },\n  inboundLinkExpiryError: {\n    defaultMessage:\n      'Link expiry cannot be greater than default availability duration.',\n    description: 'Field error message',\n  },\n  lessThanMinDaysError: {\n    defaultMessage: 'Must be greater than {minDays}.',\n    description: 'Field error message',\n  },\n  availabilityDurationLessError: {\n    defaultMessage:\n      'Availability duration cannot be less than inbound link expiry.',\n    description: 'Field error message',\n  },\n})\n\nconst LoadingShimmer = () => (\n  <Body>\n    <Container>\n      <LinkSettingsContentLoader />\n    </Container>\n  </Body>\n)\n\nconst Form: FC<FormRenderProps<FormValues> & { loading: boolean }> = ({\n  handleSubmit,\n  dirty,\n  loading,\n}) => {\n  const { formatMessage } = useIntl()\n  const showLoading = useSettingsLoader(loading)\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Header />\n      {showLoading ? (\n        <LoadingShimmer />\n      ) : (\n        <Body>\n          <Container>\n            <FieldsWrapper>\n              <Heading>{formatMessage(messages.sectionTitle)}</Heading>\n              <FormFields />\n            </FieldsWrapper>\n          </Container>\n          <Footer />\n        </Body>\n      )}\n    </StyledForm>\n  )\n}\n\nexport const LinkSettings: VFC = () => {\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  usePageTitle(formatMessage(messages.linkSettings))\n  const [showLoader, setShowLoader] = useState(false)\n\n  const { id: engagementTypeId } = useEngagementType().engagementType\n\n  const {\n    loading,\n    getEngagementTypeSettings = [],\n    updateQuery,\n  } = useGetEngagementTypeSettings({\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      engagementTypeId,\n      names: [\n        'default_availability_duration',\n        'inbound_link_expiry',\n        'auto_select_expert',\n        'enable_emeet_irp_scheduling_logic_buffer',\n        'emeet_irp_meeting_buffer',\n      ],\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  const initialValues = useMemo(\n    () =>\n      getEngagementTypeSettings.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue)\n            .value,\n        }),\n        {}\n      ),\n    [getEngagementTypeSettings]\n  )\n\n  const validate: Config<FormValues>['validate'] = ({\n    default_availability_duration,\n    inbound_link_expiry,\n  }) => {\n    const MIN_DAYS = 1\n    const errors: ValidationErrors = {}\n    if (parseInt(default_availability_duration) <= 0) {\n      errors.default_availability_duration = formatMessage(\n        messages.lessThanMinDaysError,\n        { minDays: MIN_DAYS - 1 }\n      )\n    }\n    if (parseInt(default_availability_duration) > 180) {\n      errors.default_availability_duration = formatMessage(\n        messages.availabilityDurationError\n      )\n    }\n    if (\n      parseInt(inbound_link_expiry) > parseInt(default_availability_duration)\n    ) {\n      errors.default_availability_duration = formatMessage(\n        messages.availabilityDurationLessError\n      )\n      errors.inbound_link_expiry = formatMessage(\n        messages.inboundLinkExpiryError,\n        { count: parseInt(default_availability_duration) }\n      )\n    }\n    if (parseInt(inbound_link_expiry) <= 0) {\n      errors.inbound_link_expiry = formatMessage(\n        messages.lessThanMinDaysError,\n        { minDays: MIN_DAYS - 1 }\n      )\n    }\n\n    return errors\n  }\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change }\n  ) => {\n    try {\n      const configsToUpdate = getEngagementTypeSettings.reduce<\n        BulkEngagementSettingUpdateInput[]\n      >((acc, { name, value: previousValue }) => {\n        const {\n          display_name,\n          value,\n        } = previousValue as getEngagementTypeSettings_getEngagementTypeSettings_value_CustomNameValue\n\n        return value !== values[name as keyof FormValues]\n          ? [\n              ...acc,\n              {\n                name,\n                customValue: {\n                  display_name,\n                  value: values[name as keyof FormValues],\n                },\n              },\n            ]\n          : acc\n      }, [])\n\n      setShowLoader(true)\n      const variables: bulkUpsertEngagementSettingsVariables = {\n        engagementTypeId,\n        configsToUpdate,\n      }\n      const { failureCount, totalCount, engagementSettings, successCount } = (\n        await mutateBulkUpsertEngagementSettings(client, {\n          variables,\n        })\n      ).data!.bulkUpsertEngagementSettings\n      setShowLoader(false)\n      if (failureCount) {\n        showErrorToast(\n          formatMessage(messages.updateError, { totalCount, failureCount })\n        )\n        engagementSettings.forEach(\n          ({ success, name, value }) =>\n            !success &&\n            change(\n              name as keyof FormValues,\n              (value as bulkUpsertEngagementSettings_bulkUpsertEngagementSettings_engagementSettings_value_CustomNameValue)\n                .value ?? undefined\n            )\n        )\n        const errors = engagementSettings.reduce(\n          (acc, { success, name }) =>\n            success\n              ? acc\n              : {\n                  ...acc,\n                  [name]: formatMessage(messages.filedError),\n                },\n          {}\n        )\n        if (successCount) {\n          updateQueryResults(updateQuery, engagementSettings)\n        }\n\n        return errors\n      }\n      showSuccessToast(formatMessage(messages.successMessage))\n      updateQueryResults(updateQuery, engagementSettings)\n\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<FormValues>\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        render={props => <Form {...props} loading={loading} />}\n        validate={validate}\n      />\n    </>\n  )\n}\n","import { VFC, ChangeEvent } from 'react'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { Field } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { StatefulTooltip } from '@jifflenow/brightui/tooltip'\n\nconst messages = defineMessages({\n  helpText: {\n    defaultMessage:\n      'Survey type is inactive at survey list. Activate the survey and try again.',\n    description: 'Help text',\n  },\n})\n\nexport const SurveyStatusField: VFC<{ surveyMasterstatus: boolean }> = ({\n  surveyMasterstatus,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Field<boolean>\n      name=\"status\"\n      render={({ input: { value, onChange } }) =>\n        surveyMasterstatus ? (\n          <Toggle\n            checked={Boolean(value)}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => {\n              onChange(e.target.checked)\n            }}\n          />\n        ) : (\n          <StatefulTooltip\n            content={() => formatMessage(messages.helpText)}\n            showArrow\n          >\n            <span>\n              <Toggle disabled />\n            </span>\n          </StatefulTooltip>\n        )\n      }\n    />\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const FieldWrapper = styled('div', {\n  width: '100%',\n})\n\nexport const FormControlStyled = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale800,\n  })\n)\n\nexport const Flex = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport const SectionTitle = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.HeadingXSmall,\n}))\n\nexport const Header = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Subtitle1,\n}))\n\nexport const HeaderDesc = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.font200,\n    marginTop: sizing.scale100,\n  })\n)\n\nexport const SelectWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale400,\n  marginRight: sizing.scale850,\n  width: '280px',\n}))\n\nexport const SelectOptionsDesc = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.font200,\n    marginTop: sizing.scale400,\n    marginBottom: sizing.scale600,\n  })\n)\n\nexport const TabWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale600,\n  paddingTop: sizing.scale700,\n  MaxHeight: 'calc(100vh - 84px)',\n}))\n\nexport const RolesSurveyWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale800,\n  marginBottom: sizing.scale800,\n}))\n\nexport const RolesTitle = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.ParagraphMedium,\n}))\n\nexport const CheckBoxWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale550,\n  marginTop: sizing.scale550,\n}))\n\nexport const Divider = styled('div', ({ $theme: { colors, sizing } }) => ({\n  borderTopWidth: '1px',\n  borderTopStyle: 'solid',\n  borderTopColor: colors.mono300,\n  marginBottom: sizing.scale600,\n  maxWidth: '725px',\n}))\n\nexport const RolesFieldWrapper = styled('div', {\n  maxWidth: '345px',\n})\n","import { TabOverrides, TabsOverrides } from '@jifflenow/brightui/tabs-motion'\n\nexport const tabOverrides: TabOverrides = {\n  TabPanel: {\n    style: ({ $theme: { sizing, colors, mediaQuery } }) => ({\n      borderLeftStyle: 'solid',\n      borderRightStyle: 'solid',\n      borderTopStyle: 'solid',\n      borderBottomStyle: 'solid',\n      borderLeftWidth: '1px',\n      borderRightWidth: '1px',\n      borderTopWidth: '1px',\n      borderBottomWidth: '1px',\n      borderTopColor: colors.mono400,\n      borderBottomColor: colors.mono400,\n      borderLeftColor: colors.mono400,\n      borderRightColor: colors.mono400,\n      borderBottomLeftRadius: sizing.scale100,\n      borderBottomRightRadius: sizing.scale100,\n      borderTopRightRadius: sizing.scale100,\n      marginBottom: sizing.scale800,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingTop: 0,\n      marginTop: sizing.scale100,\n      [mediaQuery.medium]: {\n        minHeight: 'calc(100vh - 300px)',\n      },\n    }),\n  },\n}\n\nexport const tabsOverrides: TabsOverrides = {\n  TabHighlight: {\n    style: () => ({\n      marginLeft: '1px',\n    }),\n  },\n  TabBorder: () => null,\n}\n","import { useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Option, Select as BrightSelect } from '@jifflenow/brightui/select'\nimport { Field, Validation } from 'ui-components/Field'\nimport { SelectFieldProps } from './types'\nimport { FormControlStyled } from './styled-components'\nimport { FieldProps } from './types'\n\nconst messages = defineMessages({\n  searchPlaceholder: {\n    defaultMessage: 'Search by name',\n    description: 'Field label',\n  },\n})\n\nconst Select: VFC<FieldProps> = ({\n  input: { value: fieldValue, onChange, name },\n  options,\n}) => {\n  const { formatMessage } = useIntl()\n  const [value, setValue] = useState<Option[]>([])\n\n  useEffect(() => {\n    if (fieldValue) {\n      setValue(fieldValue?.map((roleId): Option => ({ id: roleId })))\n    }\n  }, [fieldValue])\n\n  return (\n    <BrightSelect\n      value={value}\n      multi\n      options={options}\n      backspaceClearsInputValue\n      searchable\n      placeholder={formatMessage(messages.searchPlaceholder)}\n      onChange={({ value }: { value: Option[] }) =>\n        onChange(value?.map(option => option.id))\n      }\n      required\n      dataPendo={name}\n    />\n  )\n}\nexport const SelectField: VFC<SelectFieldProps> = ({\n  options,\n  name,\n  label,\n}) => (\n  <Field<string[]>\n    name={name}\n    render={({ input, meta: { touched, error } }) => (\n      <FormControlStyled label={label} error={touched && error}>\n        <Select input={input} options={options} />\n      </FormControlStyled>\n    )}\n    validations={[Validation.REQUIRED]}\n  />\n)\n","import { ChangeEvent, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { Field } from 'ui-components/Field'\nimport { showErrorToast } from 'utils/toast'\nimport { useFetchAllCompanyRoles } from 'gql'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { roles as roleLabel } from 'utils/messages'\nimport { Option } from '@jifflenow/brightui/select'\nimport { SelectField } from './SelectField'\nimport {\n  CheckBoxWrapper,\n  Divider,\n  Header,\n  HeaderDesc,\n  RolesFieldWrapper,\n  RolesSurveyWrapper,\n  RolesTitle,\n} from './styled-components'\n\nconst messages = defineMessages({\n  postMeetingInternalLabel: {\n    defaultMessage: 'Post Meeting Internal Survey',\n    description: 'Field label',\n  },\n  enableSurveyLabel: {\n    defaultMessage: 'Enable this survey',\n    description: 'Description label',\n  },\n  whoTakeSurveyLabel: {\n    defaultMessage: 'Who can take the survey',\n    description: 'Field label',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  meetingHostLabel: {\n    defaultMessage: 'Meeting Host',\n    description: 'Field label',\n  },\n  meetingRequestorLabel: {\n    defaultMessage: 'Meeting Requestor',\n    description: 'Field label',\n  },\n  requesterRoleLabel: {\n    defaultMessage: 'Requestors of these roles can fill survey',\n    description: 'Field label',\n  },\n  participantsRoleLabel: {\n    defaultMessage: 'Participants of these roles can fill the survey',\n    description: 'Field label',\n  },\n  roleLabel: {\n    defaultMessage:\n      'Meetings with the following status will receive the survey',\n    description: 'Field label',\n  },\n  allInternalRoles: {\n    defaultMessage: 'All Internal Roles',\n    description: 'Option label',\n  },\n})\n\nexport const RolesAndPermissionSettings: VFC = () => {\n  const { formatMessage } = useIntl()\n  const { loading, roles = [] } = useFetchAllCompanyRoles({\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  const dropdownOptions = [\n    {\n      label: formatMessage(messages.allInternalRoles),\n      id: 'INTERNAL',\n    },\n    ...roles.map(\n      ({ roleCompanyid, roleDisplayName }): Option => ({\n        label: formatMessage(roleLabel[roleDisplayName]),\n        id: roleDisplayName === 'ET' ? 'EXTERNAL' : roleCompanyid,\n      })\n    ),\n  ]\n\n  return (\n    <>\n      {loading && <ModalSpinner />}\n      <Header>{formatMessage(messages.postMeetingInternalLabel)}</Header>\n      <HeaderDesc>{formatMessage(messages.enableSurveyLabel)}</HeaderDesc>\n      <RolesSurveyWrapper>\n        <RolesTitle>{formatMessage(messages.whoTakeSurveyLabel)}</RolesTitle>\n        <CheckBoxWrapper>\n          <Field<boolean>\n            name=\"meetingHostCanTakeSurvey\"\n            render={({ input: { value, onChange, name } }) => (\n              <Checkbox\n                checked={Boolean(value)}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  onChange(e.target.checked)\n                }\n                name={name}\n              >\n                {formatMessage(messages.meetingHostLabel)}\n              </Checkbox>\n            )}\n          />\n        </CheckBoxWrapper>\n\n        <CheckBoxWrapper>\n          <Field<boolean>\n            name=\"requestorShouldFillSurvey\"\n            render={({ input: { value, onChange, name } }) => (\n              <Checkbox\n                checked={Boolean(value)}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  onChange(e.target.checked)\n                }\n                name={name}\n              >\n                {formatMessage(messages.meetingRequestorLabel)}\n              </Checkbox>\n            )}\n          />\n        </CheckBoxWrapper>\n        <RolesFieldWrapper>\n          <SelectField\n            options={dropdownOptions}\n            label={formatMessage(messages.requesterRoleLabel)}\n            name=\"requestorAccessLevel\"\n          />\n        </RolesFieldWrapper>\n        <Divider />\n        <RolesFieldWrapper>\n          <SelectField\n            options={dropdownOptions}\n            label={formatMessage(messages.participantsRoleLabel)}\n            name=\"accessLevel\"\n          />\n        </RolesFieldWrapper>\n        <RolesFieldWrapper>\n          <SelectField\n            options={[\n              { label: 'approved', id: 'approved' },\n              { label: 'pending', id: 'pending' },\n            ]}\n            label={formatMessage(messages.roleLabel)}\n            name=\"entityStatus\"\n          />\n        </RolesFieldWrapper>\n      </RolesSurveyWrapper>\n    </>\n  )\n}\n","import { useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  getTabOverrides,\n  Tab,\n  Tabs,\n  TabTitle,\n} from '@jifflenow/brightui/tabs-motion'\nimport { TabWrapper } from './styled-components'\nimport { tabOverrides, tabsOverrides } from './overrides'\nimport { RolesAndPermissionSettings } from './RolesAndPermissionSettings'\n\nconst messages = defineMessages({\n  surveyLabel: {\n    defaultMessage: 'Design',\n    description: 'Field label',\n  },\n  rolesAndPermissionTabLabel: {\n    defaultMessage: 'Roles & Permission',\n    description: 'Tab label',\n  },\n})\n\nexport const SurveyTab: VFC = () => {\n  const { formatMessage } = useIntl()\n  const [activeKey, setActiveKey] = useState('0')\n  enum FormElementsTabProps {\n    RolesAndPermission = 'Roles & Permission',\n  }\n\n  return (\n    <Tabs\n      activeKey={activeKey}\n      onChange={({ activeKey }) => {\n        setActiveKey(activeKey as FormElementsTabProps)\n      }}\n      overrides={tabsOverrides}\n    >\n      <Tab\n        overrides={getTabOverrides(tabOverrides)}\n        title={\n          <TabTitle>\n            {formatMessage(messages.rolesAndPermissionTabLabel)}\n          </TabTitle>\n        }\n      >\n        <TabWrapper>\n          <RolesAndPermissionSettings />\n        </TabWrapper>\n      </Tab>\n    </Tabs>\n  )\n}\n","import { useEffect, FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Select } from '@jifflenow/brightui/select'\nimport { Prompt } from 'react-router-dom'\nimport { FormRenderProps } from 'react-final-form'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { Container, Footer } from '../common'\nimport { StyledFormSurvey } from '../common'\nimport { SurveyStatusField } from './SurveyStatusField'\nimport { FormProps } from './types'\nimport {\n  FieldWrapper,\n  Flex,\n  SectionTitle,\n  SelectOptionsDesc,\n  SelectWrapper,\n} from './styled-components'\nimport { RolesAndPermissionFormValues } from './types'\nimport { SurveyTab } from './SurveyTab'\n\nconst messages = defineMessages({\n  surveyLabel: {\n    defaultMessage: 'Survey for',\n    description: 'Field label',\n  },\n  placeholderSurveyLabel: {\n    defaultMessage: 'Select survey',\n    description: 'placeholder text',\n  },\n  SurveyDesc: {\n    defaultMessage:\n      'Only the surveys enabled for this engagement type are listed here.',\n    description: 'Description label',\n  },\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n})\n\nexport const Form: FC<\n  FormProps & FormRenderProps<RolesAndPermissionFormValues>\n> = ({\n  options,\n  surveyValue,\n  setSurveyValue,\n  handleSubmit,\n  dirty,\n  surveyMasterstatus,\n}) => {\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  return (\n    <StyledFormSurvey onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      <Container>\n        <FieldWrapper>\n          <Flex>\n            <SectionTitle>{formatMessage(messages.surveyLabel)}</SectionTitle>\n            <SelectWrapper>\n              <Select\n                clearable={false}\n                options={options}\n                value={surveyValue}\n                valueKey={'value'}\n                placeholder={formatMessage(messages.placeholderSurveyLabel)}\n                onChange={(option: any) => setSurveyValue(option.value)}\n                dataPendo=\"select-survey\"\n              />\n            </SelectWrapper>\n            <SurveyStatusField surveyMasterstatus={!!surveyMasterstatus} />\n          </Flex>\n          <SelectOptionsDesc>\n            {formatMessage(messages.SurveyDesc)}\n          </SelectOptionsDesc>\n          <SurveyTab />\n        </FieldWrapper>\n      </Container>\n      <Footer />\n    </StyledFormSurvey>\n  )\n}\n","import { useState, FC, useMemo } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { showErrorToast } from 'utils/toast'\nimport { useGetEngagementTypeSurveySettings } from 'gql'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form as FinalForm } from 'react-final-form'\nimport { showSuccessToast } from 'utils/toast'\nimport { mutateEngagementTypeSurveySettings, useApolloClient } from 'gql'\nimport { upsertEngagementTypeSurveySettingsVariables } from 'gql/types/upsertEngagementTypeSurveySettings'\nimport { FormProps } from './types'\nimport { RolesAndPermissionFormValues } from './types'\nimport { Form } from './Form'\n\nconst messages = defineMessages({\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n})\n\nconst isSameAsPreviousValue = (prevValues: string[], newValues: string[]) =>\n  prevValues.length === newValues.length &&\n  newValues.every(newValueItem => prevValues.includes(newValueItem))\n\nconst getAccessLevels = (accessLevels?: string[]) =>\n  accessLevels?.includes('INTERNAL')\n    ? ['INTERNAL', ...accessLevels.filter(id => id === 'EXTERNAL')]\n    : accessLevels\n\nexport const SurveyFormField: FC<FormProps> = ({\n  surveyValue,\n  options,\n  setSurveyValue,\n}) => {\n  const [showLoader, setShowLoader] = useState(false)\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  const {\n    refetch: refetchGetEngagementTypeSurveySettings,\n    getEngagementTypeSurveySettings,\n  } = useGetEngagementTypeSurveySettings({\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      engagementSurveyId: surveyValue[0].id.toString(),\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  const initialValues = useMemo(() => {\n    const { requestorAccessLevel, accessLevel, ...restValues } =\n      getEngagementTypeSurveySettings ?? {}\n\n    return {\n      ...restValues,\n      requestorAccessLevel: getAccessLevels(requestorAccessLevel),\n      accessLevel: getAccessLevels(accessLevel),\n    }\n  }, [getEngagementTypeSurveySettings])\n\n  const handleSubmit: Config<RolesAndPermissionFormValues>['onSubmit'] = async values => {\n    try {\n      setShowLoader(true)\n      const engagementTypeSurveyId = values.engagementTypeSurveyId\n\n      if (!engagementTypeSurveyId) {\n        return { [FORM_ERROR]: { code: 'GenericError' } }\n      }\n\n      const {\n        meetingHostCanTakeSurvey,\n        requestorShouldFillSurvey,\n        requestorAccessLevel,\n        accessLevel,\n        entityStatus,\n        status,\n      } = getEngagementTypeSurveySettings || {}\n\n      const variables: upsertEngagementTypeSurveySettingsVariables = {\n        ...(meetingHostCanTakeSurvey !== values.meetingHostCanTakeSurvey && {\n          meetingHostCanTakeSurvey: values.meetingHostCanTakeSurvey,\n        }),\n        ...(requestorShouldFillSurvey !== values.requestorShouldFillSurvey && {\n          requestorShouldFillSurvey: values.requestorShouldFillSurvey,\n        }),\n        ...(accessLevel &&\n          !isSameAsPreviousValue(values.accessLevel, accessLevel) && {\n            accessLevel: getAccessLevels(values.accessLevel),\n          }),\n        ...(requestorAccessLevel &&\n          !isSameAsPreviousValue(\n            values.requestorAccessLevel,\n            requestorAccessLevel\n          ) && {\n            requestorAccessLevel: getAccessLevels(values.requestorAccessLevel),\n          }),\n        ...(entityStatus &&\n          !isSameAsPreviousValue(values.entityStatus, entityStatus) && {\n            entityStatus: values.entityStatus,\n          }),\n        ...(status !== values.status && {\n          status: values.status,\n        }),\n        engagementTypeSurveyId,\n      }\n\n      await mutateEngagementTypeSurveySettings(client, {\n        variables,\n        refetchQueries: ['getEngagementTypeDetails'],\n      })\n      setShowLoader(false)\n      showSuccessToast(formatMessage(messages.successMessage))\n      refetchGetEngagementTypeSurveySettings()\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return getEngagementTypeSurveySettings ? (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<RolesAndPermissionFormValues>\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        render={props => (\n          <Form\n            {...props}\n            options={options}\n            surveyValue={surveyValue}\n            setSurveyValue={setSurveyValue}\n            surveyMasterstatus={\n              getEngagementTypeSurveySettings?.surveyMasterstatus\n            }\n          />\n        )}\n      />\n    </>\n  ) : null\n}\n","import { useState, VFC, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { showErrorToast } from 'utils/toast'\nimport { useGetEngagementTypeSurveys } from 'gql'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { Body, Header } from '../common'\nimport { useEngagementType } from '../EngagementTypeProvider'\nimport { SurveyOptions } from './types'\nimport { SurveyFormField } from './SurveyFormField'\n\nconst messages = defineMessages({\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nexport const Surveys: VFC = () => {\n  const { formatMessage } = useIntl()\n  const { id: engagementId } = useEngagementType().engagementType\n  const [options, setOptions] = useState<SurveyOptions>([])\n\n  const {\n    loading,\n    getEngagementTypeSurveys = [],\n  } = useGetEngagementTypeSurveys({\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      engagementId,\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  useEffect(() => {\n    setOptions(\n      getEngagementTypeSurveys.map(\n        ({ surveyMasterName, engagementTypeSurveyId }) => ({\n          label: surveyMasterName,\n          value: surveyMasterName,\n          id: engagementTypeSurveyId,\n        })\n      )\n    )\n  }, [getEngagementTypeSurveys])\n\n  const [surveyValue, setSurveyValue] = useState<SurveyOptions>([])\n  useEffect(() => {\n    options.length > 0 ? setSurveyValue([options[0]]) : setSurveyValue([])\n  }, [options])\n\n  return (\n    <>\n      {loading && <ModalSpinner />}\n      <Header />\n      <Body>\n        {surveyValue.length > 0 && (\n          <SurveyFormField\n            surveyValue={surveyValue}\n            options={options}\n            setSurveyValue={setSurveyValue}\n          />\n        )}\n      </Body>\n    </>\n  )\n}\n","import { VFC, ComponentType } from 'react'\nimport {\n  generatePath,\n  Redirect,\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n} from 'react-router-dom'\nimport { Paths as BasePaths } from 'components/Routes'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { useEngagementType } from './EngagementTypeProvider'\nimport { Paths } from './Paths'\nimport { LayoutsV1 } from './LayoutsV1'\nimport { LayoutsV2 } from './LayoutsV2'\n\nconst DefaultRedirect: VFC<{ path: Paths }> = ({ path }) => {\n  const { search } = useLocation()\n  const { eventName, engagementId } = useParams<{\n    engagementId: string\n    eventName: string\n  }>()\n\n  return (\n    <Redirect\n      to={`${generatePath(BasePaths.ENGAGEMENT_TYPE.path, {\n        eventName,\n        engagementId,\n      })}${path}${search}`}\n    />\n  )\n}\n\ntype Layout = { path: Paths; component: ComponentType }\n\nexport const Routes = () => {\n  const { configs, location, privileges } = useEventLocation()\n\n  const {\n    attributes: { version },\n  } = location!\n  const { enable_external_widget } = configs!\n\n  const {\n    masterEngagementType,\n  } = useEngagementType().engagementType.templateEngagementType\n\n  const getPath = (path: Paths | string) =>\n    `${BasePaths.ENGAGEMENT_TYPE.path}${path}`\n\n  const layouts: Layout[] = version === '1' ? LayoutsV1() : LayoutsV2()\n\n  // TODO: check for IRP enabled and privileges\n  const defaultRoutes = () => {\n    let route\n    if (\n      version === '1' &&\n      masterEngagementType !== MasterEngagementTypes.ConsecutiveMeeting &&\n      enable_external_widget === 'true'\n    ) {\n      route = Paths.INBOUND_REQUEST_FORM\n    } else if (version === '1' && privileges?.canManageNotifications) {\n      route = Paths.NOTIFICATIONS\n    } else {\n      route = Paths.BASICS\n    }\n\n    return route\n  }\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path={getPath('')}\n        render={() => <DefaultRedirect path={defaultRoutes()} />}\n      />\n      {layouts.map(({ path, component }, index) => (\n        <Route key={index} exact path={getPath(path)} component={component} />\n      ))}\n      <Route render={() => <DefaultRedirect path={defaultRoutes()} />} />\n    </Switch>\n  )\n}\n","import { ComponentType } from 'react'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { Paths } from './Paths'\nimport { Irp } from './Irp'\nimport { Notifications } from './Notifications'\nimport { NotificationsDetails } from './NotificationsDetails'\nimport { useEngagementType } from './EngagementTypeProvider'\nimport { OutboundMeeting } from './Forms/OutboundMeeting'\nimport { InboundMeeting } from './Forms/InboundMeeting'\nimport { Survey } from './Forms/Survey'\n\ntype Layout = { path: Paths; component: ComponentType }\n\nexport const LayoutsV1 = () => {\n  const { privileges, configs } = useEventLocation()\n  const {\n    engagementTypeSurveys,\n    engagementTypeSettings: {\n      enable_external_widget: enable_external_widget_setting,\n    },\n    engagementType: {\n      templateEngagementType: { masterEngagementType },\n      status: engagementTypeEnabled,\n    },\n  } = useEngagementType()\n  const { enable_external_widget } = configs!\n  const activeSurveys = engagementTypeSurveys.filter(({ status }) => status)\n\n  const layouts: Layout[] = [\n    ...(masterEngagementType !== MasterEngagementTypes.ConsecutiveMeeting &&\n    enable_external_widget === 'true'\n      ? [{ path: Paths.INBOUND_REQUEST_FORM, component: Irp }]\n      : []),\n\n    ...(engagementTypeEnabled && privileges?.canManageNotifications\n      ? [{ path: Paths.NOTIFICATIONS, component: Notifications }]\n      : []),\n    {\n      path: Paths.NOTIFICATIONS_DETAILS,\n      component: NotificationsDetails,\n    },\n    ...(engagementTypeEnabled &&\n    privileges?.canManageForms &&\n    privileges.canManageSelfServeSettings\n      ? [\n          { path: Paths.OUTBOUND_MEETING_FORM, component: OutboundMeeting },\n          ...(enable_external_widget === 'true' &&\n          enable_external_widget_setting === 'true'\n            ? [{ path: Paths.INBOUND_MEETING_FORM, component: InboundMeeting }]\n            : []),\n          ...(activeSurveys.length\n            ? [{ path: Paths.SURVEY_FORM, component: Survey }]\n            : []),\n        ]\n      : []),\n  ]\n\n  return layouts\n}\n","import { ComponentType } from 'react'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useMe } from 'providers/MeProvider'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { EngagementBasics } from './EngagementBasics'\nimport { TopicOptions } from './TopicOptions'\nimport { ApprovalProcess } from './ApprovalProcess'\nimport { Irp } from './Irp'\nimport { LocationTypes } from './LocationTypes'\nimport { SetAvailability } from './SetAvailability'\nimport { Paths } from './Paths'\nimport { Participants } from './Participants'\nimport { AdvancedSettings } from './AdvancedSettings'\nimport { CsmOnly } from './CsmOnly'\nimport { Notifications } from './Notifications'\nimport { NotificationsDetails } from './NotificationsDetails'\nimport { LinkSettings } from './LinkSettings'\nimport { Surveys } from './Surveys'\nimport { OutboundMeeting } from './Forms/OutboundMeeting'\nimport { InboundMeeting } from './Forms/InboundMeeting'\nimport { Survey } from './Forms/Survey'\nimport { useEngagementType } from './EngagementTypeProvider'\n\ntype Layout = { path: Paths; component: ComponentType }\n\n// eslint-disable-next-line complexity\nexport const LayoutsV2 = () => {\n  const {\n    engagementTypeSurveys,\n    engagementTypeSettings: {\n      enable_external_widget: enable_external_widget_setting,\n    },\n    engagementType: {\n      templateEngagementType: { masterEngagementType },\n      status: engagementTypeEnabled,\n    },\n  } = useEngagementType()\n  const { privileges, configs } = useEventLocation()\n  const {\n    enable_external_widget,\n    enable_topic,\n    enable_topic_to_activity,\n    enable_room_to_topic,\n    enable_user_to_topic,\n  } = configs!\n  const { role } = useMe().data.attributes\n\n  const activeSurveys = engagementTypeSurveys.filter(({ status }) => status)\n\n  const showSettings =\n    masterEngagementType !== MasterEngagementTypes.ConsecutiveMeeting\n\n  const layouts: Layout[] = [\n    { path: Paths.BASICS, component: EngagementBasics },\n    ...(showSettings\n      ? [\n          { path: Paths.SETTING, component: LocationTypes },\n          { path: Paths.SET_AVAILABILITY, component: SetAvailability },\n          { path: Paths.PARTICIPANTS, component: Participants },\n          ...(enable_topic === 'true' &&\n          enable_topic_to_activity === 'true' &&\n          (enable_room_to_topic === 'true' || enable_user_to_topic === 'true')\n            ? [{ path: Paths.TOPIC_OPTIONS, component: TopicOptions }]\n            : []),\n          { path: Paths.APPROVAL_PROCESS, component: ApprovalProcess },\n          { path: Paths.LINK_SETTINGS, component: LinkSettings },\n          ...(enable_external_widget === 'true'\n            ? [{ path: Paths.INBOUND_REQUEST_FORM, component: Irp }]\n            : []),\n          ...(privileges?.canManageSurvey &&\n          privileges.canManageSelfServeSettings &&\n          !!engagementTypeSurveys.length\n            ? [{ path: Paths.SURVEY, component: Surveys }]\n            : []),\n          { path: Paths.ADVANCED_SETTINGS, component: AdvancedSettings },\n          ...(engagementTypeEnabled &&\n          privileges?.canManageForms &&\n          privileges.canManageSelfServeSettings\n            ? [\n                {\n                  path: Paths.OUTBOUND_MEETING_FORM,\n                  component: OutboundMeeting,\n                },\n                ...(enable_external_widget === 'true' &&\n                enable_external_widget_setting === 'true'\n                  ? [\n                      {\n                        path: Paths.INBOUND_MEETING_FORM,\n                        component: InboundMeeting,\n                      },\n                    ]\n                  : []),\n                ...(activeSurveys.length\n                  ? [{ path: Paths.SURVEY_FORM, component: Survey }]\n                  : []),\n              ]\n            : []),\n          ...(role === 'CSM'\n            ? [{ path: Paths.CSM_ONLY, component: CsmOnly }]\n            : []),\n          ...(engagementTypeEnabled &&\n          privileges?.canManageNotifications &&\n          privileges.canManageSelfServeSettings\n            ? [{ path: Paths.NOTIFICATIONS, component: Notifications }]\n            : []),\n          {\n            path: Paths.NOTIFICATIONS_DETAILS,\n            component: NotificationsDetails,\n          },\n        ]\n      : []),\n  ]\n\n  return layouts\n}\n","import { FC } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Drawer } from 'ui-components/Drawer'\nimport { Paths } from 'components/Routes'\nimport { useMediaQuery } from 'utils/useMediaQuery'\n\nexport const EngagementTypeEditDrawer: FC = ({ children }) => {\n  const history = useHistory()\n  const { eventName } = useParams<{ eventName: string }>()\n\n  return (\n    <Drawer\n      size={useMediaQuery('medium') ? '90%' : '100%'}\n      isOpen\n      closeable={false}\n      onClose={() => {\n        history.push(\n          `${Paths.ENGAGEMENT_TYPES.path.replace(':eventName', eventName)}${\n            history.location.search\n          }`\n        )\n      }}\n    >\n      {children}\n    </Drawer>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Root = styled('div', ({ $theme: { mediaQuery } }) => ({\n  position: 'fixed',\n  top: '64px',\n  width: '100%',\n  zIndex: 1,\n  [mediaQuery.medium]: {\n    height: 'calc(100vh - 64px)',\n    width: 'auto',\n    overflowY: 'auto',\n  },\n}))\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { generatePath, useLocation, useParams } from 'react-router-dom'\nimport { Drawer, MenuOptions } from 'ui-components/Drawer'\nimport { Paths as BasePaths } from 'components/Routes'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { MasterEngagementTypes } from 'gql/types/globalTypes'\nimport { useMe } from 'providers/MeProvider'\nimport { useEngagementType } from './EngagementTypeProvider'\nimport { Paths } from './Paths'\nimport { Root } from './styled-components'\n\nconst menuItemLabels = defineMessages({\n  engagementBasics: {\n    defaultMessage: 'Engagement Basic Details',\n    description: 'Navigation icon label',\n  },\n  locationTypes: {\n    defaultMessage: 'Location Types',\n    description: 'Navigation icon label',\n  },\n  setting: {\n    defaultMessage: 'Setting',\n    description: 'Navigation icon label',\n  },\n  setTimeAvailability: {\n    defaultMessage: 'Set Availability',\n    description: 'Navigation icon label',\n  },\n  participants: {\n    defaultMessage: 'Participants Options',\n    description: 'Navigation icon label',\n  },\n  approvalProcess: {\n    defaultMessage: 'Approval Process',\n    description: 'Navigation icon label',\n  },\n  topicOptions: {\n    defaultMessage: 'Topic Options',\n    description: 'Navigation icon label',\n  },\n  topicTrackOptions: {\n    defaultMessage: 'Topic & Track Options',\n    description: 'Navigation icon label',\n  },\n  requestForm: {\n    defaultMessage: 'Request Form',\n    description: 'Navigation icon label',\n  },\n  inboundRequestForm: {\n    defaultMessage: 'Inbound Request Page',\n    description: 'Navigation icon label',\n  },\n  survey: {\n    defaultMessage: 'Surveys',\n    description: 'Navigation icon label',\n  },\n  advancedSettings: {\n    defaultMessage: 'Advanced Settings',\n    description: 'Navigation icon label',\n  },\n  csmOnly: {\n    defaultMessage: 'CSM Only',\n    description: 'Navigation icon label',\n  },\n  notifications: {\n    defaultMessage: 'Notifications',\n    description: 'Navigation icon label',\n  },\n  linkSettings: {\n    defaultMessage: 'Link Settings',\n    description: 'Navigation icon label',\n  },\n  sessionSettings: {\n    defaultMessage: 'Settings',\n    description: 'Navigation icon label',\n  },\n  formsLabel: {\n    defaultMessage: 'Forms',\n    description: 'Navigation icon label',\n  },\n  outboundMeetingLabel: {\n    defaultMessage: 'Outbound Meeting',\n    description: 'Navigation icon label',\n  },\n  inboundMeetingLabel: {\n    defaultMessage: 'Inbound Meeting',\n    description: 'Navigation icon label',\n  },\n  surveyLabel: {\n    defaultMessage: 'Survey',\n    description: 'Navigation icon label',\n  },\n})\n\ninterface MenuItems {\n  labelKey: keyof typeof menuItemLabels\n  path?: Paths\n  children?: MenuItems[]\n}\n\n// eslint-disable-next-line complexity\nexport const Nav: VFC = () => {\n  const { formatMessage } = useIntl()\n  const { search, pathname } = useLocation()\n\n  const { eventName, engagementId } = useParams<{\n    engagementId: string\n    eventName: string\n  }>()\n\n  const { role } = useMe().data.attributes\n\n  const {\n    engagementType: {\n      status,\n      templateEngagementType: { masterEngagementType },\n    },\n    ...rest\n  } = useEngagementType()\n  const { location, configs, privileges } = useEventLocation()\n\n  const {\n    attributes: { subType, version },\n  } = location!\n  const {\n    enable_external_widget,\n    enable_topic,\n    enable_topic_to_activity,\n    enable_room_to_topic,\n    enable_user_to_topic,\n  } = configs!\n\n  // const activeSurveys = engagementTypeSurveys.filter(({ status }) => status)\n  const isGeneralMeeting =\n    masterEngagementType === MasterEngagementTypes.General\n  const showSettings =\n    isGeneralMeeting ||\n    masterEngagementType === MasterEngagementTypes.TracksAndSession\n\n  const menuItems: MenuItems[] = [\n    ...(version === '1'\n      ? [\n          masterEngagementType !== MasterEngagementTypes.ConsecutiveMeeting &&\n            enable_external_widget === 'true' && {\n              labelKey: 'inboundRequestForm',\n              path: Paths.INBOUND_REQUEST_FORM,\n            },\n          status &&\n            privileges?.canManageNotifications && {\n              labelKey: 'notifications',\n              path: Paths.NOTIFICATIONS,\n            },\n          status &&\n            privileges?.canManageForms &&\n            privileges?.canManageSelfServeSettings && {\n              labelKey: 'formsLabel',\n              children: [\n                {\n                  labelKey: 'outboundMeetingLabel',\n                  path: Paths.OUTBOUND_MEETING_FORM,\n                },\n                enable_external_widget === 'true' &&\n                  rest.engagementTypeSettings.enable_external_widget ===\n                    'true' && {\n                    labelKey: 'inboundMeetingLabel',\n                    path: Paths.INBOUND_MEETING_FORM,\n                  },\n                !!rest.engagementTypeSurveys.filter(({ status }) => status)\n                  .length && {\n                  labelKey: 'surveyLabel',\n                  path: Paths.SURVEY_FORM,\n                },\n              ].filter(Boolean),\n            },\n        ]\n      : [\n          { labelKey: 'engagementBasics', path: Paths.BASICS },\n          ...(showSettings\n            ? [\n                { labelKey: 'approvalProcess', path: Paths.APPROVAL_PROCESS },\n                {\n                  labelKey: 'locationTypes',\n                  children: [\n                    { labelKey: 'setting', path: Paths.SETTING },\n                    {\n                      labelKey: 'setTimeAvailability',\n                      path: Paths.SET_AVAILABILITY,\n                    },\n                  ],\n                },\n                subType === 'Emeet' &&\n                  isGeneralMeeting && {\n                    labelKey: 'linkSettings',\n                    path: Paths.LINK_SETTINGS,\n                  },\n                status &&\n                  privileges?.canManageForms &&\n                  privileges.canManageSelfServeSettings && {\n                    labelKey: 'formsLabel',\n                    children: [\n                      {\n                        labelKey: 'outboundMeetingLabel',\n                        path: Paths.OUTBOUND_MEETING_FORM,\n                      },\n                      enable_external_widget === 'true' &&\n                        rest.engagementTypeSettings.enable_external_widget ===\n                          'true' && {\n                          labelKey: 'inboundMeetingLabel',\n                          path: Paths.INBOUND_MEETING_FORM,\n                        },\n                      !!rest.engagementTypeSurveys.filter(\n                        ({ status }) => status\n                      ).length && {\n                        labelKey: 'surveyLabel',\n                        path: Paths.SURVEY_FORM,\n                      },\n                    ].filter(Boolean),\n                  },\n                status &&\n                  privileges?.canManageNotifications &&\n                  privileges.canManageSelfServeSettings && {\n                    labelKey: 'notifications',\n                    path: Paths.NOTIFICATIONS,\n                  },\n                { labelKey: 'participants', path: Paths.PARTICIPANTS },\n                isGeneralMeeting\n                  ? enable_topic === 'true' &&\n                    enable_topic_to_activity === 'true' &&\n                    (enable_room_to_topic === 'true' ||\n                      enable_user_to_topic === 'true') && {\n                      labelKey: 'topicOptions',\n                      path: Paths.TOPIC_OPTIONS,\n                    }\n                  : {\n                      labelKey: 'topicTrackOptions',\n                      path: Paths.TOPIC_OPTIONS,\n                    },\n                enable_external_widget === 'true' && {\n                  labelKey: 'inboundRequestForm',\n                  path: Paths.INBOUND_REQUEST_FORM,\n                },\n                privileges?.canManageSurvey &&\n                  privileges.canManageSelfServeSettings &&\n                  !!rest.engagementTypeSurveys.length && {\n                    labelKey: 'survey',\n                    path: Paths.SURVEY,\n                  },\n                { labelKey: 'advancedSettings', path: Paths.ADVANCED_SETTINGS },\n                ...(role === 'CSM'\n                  ? [{ labelKey: 'csmOnly', path: Paths.CSM_ONLY }]\n                  : []),\n              ]\n            : []),\n        ]),\n  ].filter(Boolean) as MenuItems[]\n\n  const itemMapper = (isChild = false) => (item: MenuItems): MenuOptions => {\n    const { path, labelKey, children } = item\n\n    return {\n      label: formatMessage(menuItemLabels[labelKey]),\n      ...(children\n        ? { children: children.map(itemMapper(true)) }\n        : {\n            href: `${generatePath(BasePaths.ENGAGEMENT_TYPE.path, {\n              eventName,\n              engagementId,\n            })}${path}${search}`,\n          }),\n      isChild,\n      dataPendo: labelKey,\n      ...(labelKey === 'notifications' && {\n        isActive:\n          pathname.includes(Paths.NOTIFICATIONS) ||\n          pathname.includes(Paths.NOTIFICATIONS_DETAILS),\n      }),\n    }\n  }\n\n  const menuOptions = menuItems.map(itemMapper())\n\n  return (\n    <Root>\n      <Drawer.Nav options={menuOptions} />\n    </Root>\n  )\n}\n","import { VFC } from 'react'\nimport { Routes } from './Routes'\nimport { EngagementTypeProvider } from './EngagementTypeProvider'\nimport { EngagementTypeEditDrawer } from './EngagementTypeEditDrawer'\nimport { Nav } from './Nav'\n\nexport const EngagementTypeEdit: VFC = () => (\n  <EngagementTypeEditDrawer>\n    <EngagementTypeProvider>\n      <Nav />\n      <Routes />\n    </EngagementTypeProvider>\n  </EngagementTypeEditDrawer>\n)\n","import { VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport {\n  DrawerCloseButton,\n  DrawerTitle,\n  HeaderContainer,\n} from 'ui-components/Drawer'\nimport { HeaderProps } from './types'\n\nexport const Header: VFC<HeaderProps> = ({ onClose, copy }) => (\n  <HeaderContainer>\n    <DrawerCloseButton onClick={onClose} />\n    <DrawerTitle>\n      {copy ? (\n        <FormattedMessage\n          defaultMessage=\"Copy an Engagement Type\"\n          description=\"Drawer title\"\n        />\n      ) : (\n        <FormattedMessage\n          defaultMessage=\"Create New Engagement Type\"\n          description=\"Drawer title\"\n        />\n      )}\n    </DrawerTitle>\n  </HeaderContainer>\n)\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const successButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n      paddingLeft: sizing.scale600,\n      paddingRight: sizing.scale600,\n    }),\n  },\n}\n","import { styled } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\n\nexport const Body = styled('div', ({ $theme: { sizing } }) => ({\n  padding: sizing.scale800,\n}))\n\nexport const Header = styled('header', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale800,\n}))\n\nexport const Title = styled(\n  'h2',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Subtitle1,\n    color: colors.mono800,\n    marginTop: 0,\n    marginBottom: sizing.scale100,\n  })\n)\n\nexport const HelpText = styled('div', ({ $theme: { typography, colors } }) => ({\n  ...typography.ParagraphSmall,\n  color: colors.mono700,\n}))\n\nexport const FooterButton = styled(Button, {\n  minWidth: '128px',\n})\n\nexport const FieldWrapper = styled('div', {\n  width: '100%',\n  maxWidth: '280px',\n})\n","import { VFC } from 'react'\nimport { FormSpy } from 'react-final-form'\nimport { FormattedMessage } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { FooterContainer } from 'ui-components/Drawer'\nimport { FooterProps } from './types'\nimport { successButtonOverrides } from './overrides'\nimport { FooterButton } from './styled-components'\n\nexport const Footer: VFC<FooterProps> = ({ onCancelClick, copy }) => (\n  <FooterContainer>\n    <FormSpy subscription={{ validating: true }}>\n      {({ validating }) => (\n        <>\n          <FooterButton\n            type=\"button\"\n            kind={KIND.tertiary}\n            onClick={onCancelClick}\n            data-pendo=\"engagement-create-cancel\"\n          >\n            <FormattedMessage\n              defaultMessage=\"Cancel\"\n              description=\"Button label\"\n            />\n          </FooterButton>\n\n          <FooterButton\n            type=\"submit\"\n            disabled={validating}\n            overrides={successButtonOverrides}\n            data-pendo=\"engagement-create-submit\"\n          >\n            {copy ? (\n              <FormattedMessage\n                defaultMessage=\"Copy Engagement Type\"\n                description=\"Button label\"\n              />\n            ) : (\n              <FormattedMessage\n                defaultMessage=\"Create Engagement Type\"\n                description=\"Button label\"\n              />\n            )}\n          </FooterButton>\n        </>\n      )}\n    </FormSpy>\n  </FooterContainer>\n)\n","import { defineMessages, MessageDescriptor } from 'react-intl'\nimport {\n  CheckboxSelectionCallbackParams,\n  ColDef,\n  ValueFormatterParams,\n} from '@ag-grid-community/core'\nimport { formatDate } from 'utils/dates'\nimport { components } from 'types/openapi'\nimport { getEngagementTypes_getEngagementTypes_data } from 'gql/types/getEngagementTypes'\nimport { ColumnsDataType } from './types'\n\ntype EngagementTypesSearchResponse = components['schemas']['ActivityDetails']\n\nexport const columnHeaderNames: {\n  [key: string]: MessageDescriptor\n} = defineMessages<\n  Extract<\n    | keyof getEngagementTypes_getEngagementTypes_data\n    | keyof EngagementTypesSearchResponse,\n    | 'name'\n    | 'displayOrder'\n    | 'templateEngagementType'\n    | 'meetingTypeMasterName'\n    | 'createdAt'\n    | 'createdBy'\n    | 'status'\n  >\n>({\n  name: {\n    defaultMessage: 'Engagement Type',\n    description: 'Column header name',\n  },\n  displayOrder: {\n    defaultMessage: 'Display Order',\n    description: 'Column header name',\n  },\n  templateEngagementType: {\n    defaultMessage: 'Engagement Template',\n    description: 'Column header name',\n  },\n  meetingTypeMasterName: {\n    defaultMessage: 'Engagement Template',\n    description: 'Column header name',\n  },\n  createdBy: {\n    defaultMessage: 'Created By',\n    description: 'Column header name',\n  },\n  createdAt: {\n    defaultMessage: 'Date Created',\n    description: 'Column header name',\n  },\n  status: {\n    defaultMessage: 'Status',\n    description: 'Column header name',\n  },\n})\n\nexport const getColumnDefs = (version: string): ColDef[] =>\n  [\n    version === '2' && {\n      checkboxSelection: (args: CheckboxSelectionCallbackParams) =>\n        args.data.sagaCompleted,\n      lockPosition: true,\n      maxWidth: 50,\n      pinned: 'left',\n      resizable: false,\n      headerComponent: 'checkboxHeader',\n      headerComponentParams: {},\n    },\n    {\n      field: 'name',\n      sortable: true,\n    },\n    version === '2' && {\n      field: 'displayOrder',\n      sortable: true,\n      cellRenderer: 'displayOrderCell',\n    },\n    {\n      field:\n        version === '2' ? 'templateEngagementType' : 'meetingTypeMasterName',\n      sortable: true,\n      cellRenderer: 'engagementTemplateCell',\n    },\n    version === '2' && {\n      field: 'createdBy',\n      sortable: true,\n    },\n    {\n      field: 'createdAt',\n      sortable: true,\n      valueGetter: ({ data: { createdAt } }: ColumnsDataType) =>\n        new Date(createdAt),\n      valueFormatter: ({ value }: ValueFormatterParams) => formatDate(value),\n    },\n    {\n      field: 'status',\n      sortable: true,\n      cellRenderer: 'statusCell',\n    },\n    version === '2' && {\n      field: 'actions',\n      pinned: 'right',\n      resizable: false,\n      maxWidth: 50,\n      headerComponent: 'actionHeader',\n      headerComponentParams: { columnHeaderNames },\n      cellRenderer: 'actionCell',\n    },\n  ].filter(Boolean) as ColDef[]\n","import ContentLoader from 'react-content-loader'\nimport { styled, withStyle } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\nimport { ModalBody } from '@jifflenow/brightui/modal'\nimport { Paragraph2 } from '@jifflenow/brightui/typography'\n\nexport const Container = styled('div', ({ $theme: { sizing, colors } }) => ({\n  paddingBottom: sizing.scale600,\n  marginBottom: sizing.scale600,\n  borderBottomWidth: '1px',\n  borderBottomStyle: 'solid',\n  borderBottomColor: colors.mono300,\n}))\n\nexport const TemplateGroup = styled('div', {\n  display: 'flex',\n  flexWrap: 'wrap',\n})\n\nexport const TemplateCard = styled<{ $selected: boolean }, 'div'>(\n  'div',\n  ({ $theme: { sizing, colors }, $selected }) => ({\n    position: 'relative',\n    width: '152px',\n    height: '72px',\n    padding: sizing.scale300,\n    marginRight: sizing.scale600,\n    marginBottom: sizing.scale600,\n    borderRadius: sizing.scale100,\n    outline: 'none',\n    borderTopWidth: '1px',\n    borderBottomWidth: '1px',\n    borderLeftWidth: '1px',\n    borderRightWidth: '1px',\n    borderTopStyle: 'solid',\n    borderBottomStyle: 'solid',\n    borderLeftStyle: 'solid',\n    borderRightStyle: 'solid',\n    borderTopColor: $selected ? colors.primary : colors.white,\n    borderBottomColor: $selected ? colors.primary : colors.white,\n    borderLeftColor: $selected ? colors.primary : colors.white,\n    borderRightColor: $selected ? colors.primary : colors.white,\n    boxShadow: $selected\n      ? '0px 8px 16px rgba(74, 74, 74, 0.15)'\n      : '0px 0px 4px rgba(74, 74, 74, 0.25)',\n    ':hover': { boxShadow: '0px 8px 16px rgba(74, 74, 74, 0.15)' },\n    ':focus': { boxShadow: '0px 8px 16px rgba(74, 74, 74, 0.15)' },\n  })\n)\n\nexport const TemplateName = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Subtitle2,\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n}))\n\nexport const PreviewModalBody = withStyle(ModalBody, {\n  minHeight: '120px',\n})\n\nexport const SelectTemplateButton = styled(Button, {\n  minWidth: '164px',\n})\n\nexport const ErrorContainer = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: sizing.scale800,\n}))\n\nexport const ErrorInfo = styled('div', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale900,\n}))\n\nexport const ErrorMessage = styled(\n  Paragraph2,\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Paragraph2,\n    color: colors.mono800,\n    marginBottom: sizing.scale600,\n  })\n)\n\nexport const ButtonRetry = styled(Button, {\n  minWidth: '73px',\n})\n\nexport const StyledContentLoader = styled<\n  {\n    $width: number\n    $height: number\n    $marginRight: number\n    $marginBottom: number\n  },\n  typeof ContentLoader\n>(ContentLoader, ({ $width, $height, $marginRight, $marginBottom }) => ({\n  maxWidth: `${$width}px`,\n  maxHeight: `${$height}px`,\n  marginRight: `${$marginRight}px`,\n  marginBottom: `${$marginBottom}px`,\n}))\n\nexport const SliderContainer = styled('div', {\n  position: 'relative',\n  width: '100%',\n})\n\nexport const NoTemplatesAvailableMessage = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '100%',\n  minHeight: '152px',\n})\n\nexport const TemplateListErrorMessage = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Subtitle2,\n    color: colors.negative,\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: sizing.scale300,\n  })\n)\n\nexport const PreviewModalTemplateHeader = styled(\n  'div',\n  ({ $theme: { typography } }) => ({\n    ...typography.Subtitle1,\n  })\n)\n\nexport const EngagementDetailContainer = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    paddingBottom: sizing.scale900,\n  })\n)\n\nexport const EngagementDetailRow = styled('div', {\n  display: 'flex',\n})\n\nexport const ColumnLeft = styled('div', ({ $theme: { sizing } }) => ({\n  flex: 1,\n  paddingTop: sizing.scale300,\n  paddingBottom: sizing.scale300,\n}))\n\nexport const ColumnRight = withStyle(ColumnLeft, {\n  flex: 2,\n})\n\nexport const StyledDescription = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    overflow: 'hidden',\n    display: '-webkit-box',\n    '-webkit-box-orient': 'vertical',\n    '-webkit-line-clamp': 2,\n    position: 'relative',\n  })\n)\n\nexport const CheckedIndicator = styled(\n  'div',\n  ({ $theme: { colors, sizing } }) => ({\n    position: 'absolute',\n    top: '-5px',\n    right: '-6px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor: colors.primary,\n    borderRadius: sizing.scale600,\n    width: sizing.scale600,\n    height: sizing.scale600,\n    backgroundColor: colors.primary,\n  })\n)\n","import { IconOverrides } from '@jifflenow/brightui/icon'\nimport { ButtonOverrides } from '@jifflenow/brightui/button'\nimport { TagOverrides, KIND } from '@jifflenow/brightui/tag'\n\nexport const templateErrorIconOverride: IconOverrides = {\n  Svg: {\n    style: ({ $theme: { colors, sizing } }) => ({\n      strokeWidth: '1.5',\n      color: colors.negative,\n      marginRight: sizing.scale100,\n    }),\n  },\n}\n\nexport const statusTagOverrides: TagOverrides = {\n  Root: {\n    style: ({ $theme: { colors, sizing }, $kind }) => ({\n      backgroundColor:\n        $kind === KIND.positive ? colors.primary100 : colors.mono500,\n      color: $kind === KIND.positive ? colors.primary500 : colors.mono800,\n      height: sizing.scale600,\n      borderLeftStyle: 'none',\n      borderRightStyle: 'none',\n      borderTopStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopLeftRadius: sizing.scale0,\n      borderTopRightRadius: sizing.scale0,\n      borderBottomRightRadius: sizing.scale0,\n      borderBottomLeftRadius: sizing.scale0,\n      marginTop: 0,\n      marginBottom: 0,\n      marginRight: 0,\n      marginLeft: 0,\n    }),\n  },\n}\n\nexport const moreBtnOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { colors, sizing, typography } }) => ({\n      ...typography.Caption1,\n      backgroundColor: colors.white,\n      paddingTop: 0,\n      paddingRight: sizing.scale400,\n      paddingLeft: sizing.scale200,\n      paddingBottom: 0,\n      position: 'absolute',\n      top: '48px',\n      right: 0,\n      ':hover': {\n        backgroundColor: colors.white,\n      },\n      ':focus': {\n        backgroundColor: colors.white,\n      },\n      ':active': { boxShadow: 'none' },\n    }),\n  },\n}\n\nexport const checkedIconOverride: IconOverrides = {\n  Svg: {\n    style: ({ $theme: { colors } }) => ({\n      color: colors.white,\n      backgroundColor: 'transparent',\n      strokeWidth: '3',\n    }),\n  },\n}\n","import { VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { ErrorIcon } from 'ui-components/icons/ErrorIcon'\nimport { KIND } from '@jifflenow/brightui/button'\nimport {\n  ErrorContainer,\n  ErrorInfo,\n  ButtonRetry,\n  ErrorMessage,\n} from './styled-components'\nimport { ErrorProps } from './types'\n\nexport const Error: VFC<ErrorProps> = ({ onClick }) => (\n  <ErrorContainer>\n    <ErrorIcon size={128} />\n    <ErrorInfo>\n      <ErrorMessage>\n        <FormattedMessage\n          defaultMessage=\"Something went wrong. Please try again.\"\n          description=\"Error message\"\n        />\n      </ErrorMessage>\n      <ButtonRetry type=\"button\" kind={KIND.secondary} onClick={onClick}>\n        <FormattedMessage defaultMessage=\"Retry\" description=\"Button label\" />\n      </ButtonRetry>\n    </ErrorInfo>\n  </ErrorContainer>\n)\n","import { VFC } from 'react'\nimport { useStyletron } from '@jifflenow/brightui'\nimport { useSlides } from 'utils/useSlides'\nimport { SliderContainer, StyledContentLoader } from './styled-components'\n\nconst cardWidth = 136\nconst cardHeight = 68\nconst cardSpacing = 8\n\nconst LoadingCard: VFC = () => {\n  const [, theme] = useStyletron()\n  const contentLoaderOptions = {\n    width: cardWidth,\n    height: cardHeight,\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <StyledContentLoader\n      $width={cardWidth}\n      $height={cardHeight}\n      $marginRight={cardSpacing}\n      $marginBottom={cardSpacing}\n      {...contentLoaderOptions}\n    >\n      <rect y=\"0\" rx=\"4\" ry=\"4\" width={cardWidth} height={cardHeight} />\n    </StyledContentLoader>\n  )\n}\n\nexport const LoadingShimmer: VFC = () => {\n  const [ref, { slidesPerView }] = useSlides(0, cardWidth, cardSpacing)\n\n  return (\n    <SliderContainer ref={ref}>\n      {Array.from({ length: Math.floor(slidesPerView) * 2 }).map((_, i) => (\n        <LoadingCard key={i} />\n      ))}\n    </SliderContainer>\n  )\n}\n","import { FC, VFC, useState, KeyboardEvent, RefCallback } from 'react'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { StatefulTooltip } from '@jifflenow/brightui/tooltip'\nimport { Warning } from '@jifflenow/brightui/icon'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { Tag, VARIANT, KIND as TagKIND } from '@jifflenow/brightui/tag'\nimport {\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  SIZE,\n} from '@jifflenow/brightui/modal'\nimport { useEngagementTemplatesQuery } from 'gql'\nimport { Field, Validation } from 'ui-components/Field'\nimport { formatDate } from 'utils/dates'\nimport { CheckboxSelect } from '@jifflenow/brightui/icon'\nimport { columnHeaderNames } from '../../../EngagementTypesList/List/constants'\nimport {\n  Container,\n  TemplateCard,\n  TemplateName,\n  PreviewModalBody,\n  PreviewModalTemplateHeader,\n  SelectTemplateButton,\n  TemplateGroup,\n  NoTemplatesAvailableMessage,\n  TemplateListErrorMessage,\n  EngagementDetailContainer,\n  EngagementDetailRow,\n  ColumnLeft,\n  ColumnRight,\n  StyledDescription,\n  CheckedIndicator,\n} from './styled-components'\nimport {\n  CopyTemplatePreviewProps,\n  EngagementTemplatesProps,\n  TemplatePreviewProps,\n  TemplateProps,\n  TemplatesListProps,\n} from './types'\nimport {\n  templateErrorIconOverride,\n  statusTagOverrides,\n  moreBtnOverrides,\n  checkedIconOverride,\n} from './overrides'\nimport { Error } from './Error'\nimport { LoadingShimmer } from './LoadingShimmer'\n\nconst messages = defineMessages({\n  select: {\n    defaultMessage: 'Select',\n    description: 'Button label',\n  },\n  selected: {\n    defaultMessage: 'Selected',\n    description: 'Button label',\n  },\n  active: {\n    defaultMessage: 'Active',\n    description: 'Grid cell value',\n  },\n  inactive: {\n    defaultMessage: 'Inactive',\n    description: 'Grid cell value',\n  },\n})\n\nconst CopyTemplatePreview: VFC<CopyTemplatePreviewProps> = ({\n  copy,\n  template,\n  onClose,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Modal size={SIZE.medium} onClose={onClose} isOpen>\n      <ModalHeader>{copy?.name}</ModalHeader>\n      <PreviewModalBody>\n        <EngagementDetailContainer>\n          <EngagementDetailRow>\n            <ColumnLeft>{formatMessage(columnHeaderNames.name)}</ColumnLeft>\n            <ColumnRight>{copy?.name}</ColumnRight>\n          </EngagementDetailRow>\n          <EngagementDetailRow>\n            <ColumnLeft>\n              {formatMessage(columnHeaderNames.templateEngagementType)}\n            </ColumnLeft>\n            <ColumnRight>{copy?.templateEngagementType.name}</ColumnRight>\n          </EngagementDetailRow>\n          <EngagementDetailRow>\n            <ColumnLeft>\n              {formatMessage(columnHeaderNames.createdBy)}\n            </ColumnLeft>\n            <ColumnRight>{copy?.createdBy}</ColumnRight>\n          </EngagementDetailRow>\n          <EngagementDetailRow>\n            <ColumnLeft>\n              {formatMessage(columnHeaderNames.createdAt)}\n            </ColumnLeft>\n            <ColumnRight>{formatDate(new Date(copy?.createdAt))}</ColumnRight>\n          </EngagementDetailRow>\n          <EngagementDetailRow>\n            <ColumnLeft>{formatMessage(columnHeaderNames.status)}</ColumnLeft>\n            <ColumnRight>\n              <Tag\n                closeable={false}\n                variant={VARIANT.light}\n                overrides={statusTagOverrides}\n                kind={copy?.status ? TagKIND.positive : TagKIND.negative}\n              >\n                {formatMessage(messages[copy?.status ? 'active' : 'inactive'])}\n              </Tag>\n            </ColumnRight>\n          </EngagementDetailRow>\n        </EngagementDetailContainer>\n        <PreviewModalTemplateHeader>{template.name}</PreviewModalTemplateHeader>\n        {template.description}\n      </PreviewModalBody>\n    </Modal>\n  )\n}\n\nconst TemplatePreview: VFC<TemplatePreviewProps> = ({\n  template,\n  onClose,\n  onTemplateSelect,\n}) => (\n  <Modal size={SIZE.medium} onClose={onClose} isOpen>\n    <ModalHeader>{template.name}</ModalHeader>\n    <PreviewModalBody>{template.description}</PreviewModalBody>\n    <ModalFooter>\n      <SelectTemplateButton\n        type=\"button\"\n        kind={KIND.secondary}\n        onClick={onTemplateSelect}\n      >\n        <FormattedMessage\n          defaultMessage=\"Select This Template\"\n          description=\"Button label\"\n        />\n      </SelectTemplateButton>\n    </ModalFooter>\n  </Modal>\n)\n\nconst Template: VFC<TemplateProps> = ({\n  onSelect,\n  selected,\n  copy,\n  template,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const handleTemplateSelect = () => {\n    setIsOpen(false)\n    onSelect(template.id)\n  }\n\n  const showPreview = () => {\n    setIsOpen(true)\n  }\n\n  const handleEnter = (e: KeyboardEvent<HTMLDivElement>) => {\n    e.code === 'Enter' && e.target instanceof HTMLDivElement && showPreview()\n  }\n\n  const SelectedIndicator = () => (\n    <CheckedIndicator>\n      <CheckboxSelect size={10} overrides={checkedIconOverride} />\n    </CheckedIndicator>\n  )\n\n  const [showMore, setShowMore] = useState(false)\n  const refCallback: RefCallback<HTMLElement> = el =>\n    el && setShowMore(el.scrollHeight > el.offsetHeight)\n\n  const Description = () => (\n    <>\n      <StyledDescription ref={refCallback}>\n        {template.description}\n      </StyledDescription>\n      {showMore && (\n        <Button\n          kind={KIND.minimal}\n          overrides={moreBtnOverrides}\n          onClick={e => {\n            e.stopPropagation()\n            showPreview()\n            e.preventDefault()\n          }}\n        >\n          <FormattedMessage defaultMessage=\"more\" description=\"Button label\" />\n        </Button>\n      )}\n    </>\n  )\n\n  return (\n    <>\n      {isOpen &&\n        (copy ? (\n          <CopyTemplatePreview\n            onClose={() => setIsOpen(false)}\n            template={template}\n            copy={copy}\n          />\n        ) : (\n          <TemplatePreview\n            onClose={() => setIsOpen(false)}\n            onTemplateSelect={handleTemplateSelect}\n            template={template}\n          />\n        ))}\n\n      <TemplateCard\n        role=\"radio\"\n        aria-checked={selected}\n        tabIndex={0}\n        onClick={handleTemplateSelect}\n        onKeyPress={handleEnter}\n        $selected={selected}\n        data-pendo={template.id}\n      >\n        {selected && <SelectedIndicator />}\n        <StatefulTooltip content={copy ? copy.name : template.name} showArrow>\n          <TemplateName>{copy ? copy.name : template.name}</TemplateName>\n        </StatefulTooltip>\n        <Description />\n      </TemplateCard>\n    </>\n  )\n}\n\nconst TemplatesListError = () => (\n  <TemplateListErrorMessage>\n    <Warning overrides={templateErrorIconOverride} />\n    <FormattedMessage\n      defaultMessage=\"Required: Please select a template\"\n      description=\"Error message\"\n    />\n  </TemplateListErrorMessage>\n)\n\nconst TemplatesList: FC<TemplatesListProps> = ({\n  input: { value, onChange },\n  meta: { error, touched },\n  copy,\n}) => {\n  const {\n    loading,\n    templates,\n    error: fetchError,\n    refetch,\n  } = useEngagementTemplatesQuery({\n    notifyOnNetworkStatusChange: true,\n  })\n\n  if (loading) {\n    return <LoadingShimmer />\n  }\n\n  if (fetchError) {\n    return <Error onClick={() => refetch()} />\n  }\n\n  if (!templates?.length) {\n    return (\n      <NoTemplatesAvailableMessage>\n        <FormattedMessage\n          defaultMessage=\"No templates available\"\n          description=\"Empty info message\"\n        />\n      </NoTemplatesAvailableMessage>\n    )\n  }\n\n  return (\n    <>\n      {touched && error && <TemplatesListError />}\n      <TemplateGroup role=\"radiogroup\">\n        {(copy\n          ? templates.filter(({ id }) => id === copy.templateEngagementTypeId)\n          : templates\n        ).map(template => (\n          <Template\n            key={template.id}\n            template={template}\n            selected={template.id === value}\n            onSelect={id => onChange(id)}\n            copy={copy}\n          />\n        ))}\n      </TemplateGroup>\n    </>\n  )\n}\n\nexport const EngagementTemplates: FC<EngagementTemplatesProps> = ({ copy }) => (\n  <Container>\n    <Field<string>\n      name=\"templateId\"\n      render={props => <TemplatesList {...props} copy={copy} />}\n      validations={[Validation.REQUIRED]}\n    />\n  </Container>\n)\n","import { useEffect, VFC } from 'react'\nimport { useFormState } from 'react-final-form'\nimport { FormState } from 'final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { showErrorToast, clearToast } from 'utils/toast'\nimport { FormValues } from './types'\n\nconst toastMessages = defineMessages({\n  GenericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nexport const FormError: VFC = () => {\n  const { formatMessage } = useIntl()\n  const {\n    dirtySinceLastSubmit,\n    submitError,\n  }: FormState<FormValues> = useFormState({\n    subscription: {\n      dirtySinceLastSubmit: true,\n      submitError: true,\n    },\n  })\n\n  useEffect(() => {\n    if (dirtySinceLastSubmit) {\n      clearToast()\n    } else {\n      if (submitError) {\n        showErrorToast(formatMessage(toastMessages.GenericError))\n      }\n    }\n  }, [dirtySinceLastSubmit, submitError, formatMessage])\n\n  return null\n}\n","import { VFC, FC, useState, useEffect, useMemo } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { Form as FinalForm } from 'react-final-form'\nimport createFocusDecorator from 'final-form-focus'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { Option } from '@jifflenow/brightui/select'\nimport { useDrawer } from 'ui-components/Drawer'\nimport { useWizard } from 'ui-components/Wizard'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { commonMessages, roles as roleLabel } from 'utils/messages'\nimport {\n  mutateCreateEngagementType,\n  mutateDuplicateEngagementType,\n  useApolloClient,\n  useEngagementTypesGrandTotalQuery,\n  useFetchRolesForRequestEngagement,\n} from 'gql'\nimport { createEngagementTypeVariables } from 'gql/types/createEngagementType'\nimport { duplicateEngagementTypeVariables } from 'gql/types/duplicateEngagementType'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { showErrorToast } from 'utils/toast'\nimport {\n  EngagementNameField,\n  RolesField,\n  EngagementDescriptionField,\n  DisplayOrderField,\n} from '../../common'\nimport { Header as PageHeader } from './Header'\nimport { Footer } from './Footer'\nimport { EngagementTemplates } from './EngagementTemplates'\nimport {\n  FormValues,\n  FormProps,\n  EngagementTypeFormProps,\n  FormHeaderProps,\n} from './types'\nimport { FormError } from './FormError'\nimport {\n  Body,\n  Title,\n  Header,\n  HelpText,\n  FieldWrapper,\n} from './styled-components'\n\nconst messages = defineMessages({\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  formHeaderCreate: {\n    defaultMessage: 'Select Engagement Template',\n    description: 'Section title',\n  },\n  formHeaderCopy: {\n    defaultMessage: 'Selected engagement type',\n    description: 'Section title',\n  },\n  formHelpText: {\n    defaultMessage:\n      'Select one of the following templates to create new engagement type.',\n    description: 'Help text',\n  },\n  copyDrawerHeader: {\n    defaultMessage: 'Copy of {name}',\n    description: 'Help text',\n  },\n  engagementNameLabel: {\n    defaultMessage: 'Name of Engagement Type',\n    description: 'Field label',\n  },\n  engagementDescriptionLabel: {\n    defaultMessage: 'Description',\n    description: 'Field label',\n  },\n  copyEngagementNameLabel: {\n    defaultMessage: 'Name of Engagement Type copy',\n    description: 'Field label',\n  },\n})\n\nconst modalLabels = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Your changes will be lost.',\n    description: 'Modal heading',\n  },\n  modalMessage: {\n    defaultMessage: 'Would you like to stay?',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Leave',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Stay',\n    description: 'Button label',\n  },\n})\n\nconst FormHeader: FC<FormHeaderProps> = ({ copy }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Header>\n      <Title>\n        {formatMessage(messages[copy ? 'formHeaderCopy' : 'formHeaderCreate'])}\n      </Title>\n      {!copy && <HelpText>{formatMessage(messages.formHelpText)}</HelpText>}\n    </Header>\n  )\n}\n\nconst EngagementTypeForm: FC<EngagementTypeFormProps> = ({\n  handleSubmit,\n  dirty,\n  children,\n  ...rest\n}) => {\n  const { formatMessage } = useIntl()\n  const { closeDrawer } = useDrawer()\n  const unload = useBeforeUnload()\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  const handleDrawerClose = () => {\n    if (dirty) {\n      setShowConfirmation(true)\n      return\n    }\n    closeDrawer()\n  }\n\n  const handleDialogClose = () => setShowConfirmation(false)\n\n  const handleDialogCancel = () => {\n    setShowConfirmation(false)\n    closeDrawer()\n  }\n\n  return (\n    <form onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      {showConfirmation && (\n        <ConfirmationDialog\n          heading={formatMessage(modalLabels.modalHeader)}\n          message={formatMessage(modalLabels.modalMessage)}\n          cancelLabel={formatMessage(modalLabels.cancelButtonLabel)}\n          successLabel={formatMessage(modalLabels.successButtonLabel)}\n          onClose={handleDialogClose}\n          onCancel={handleDialogCancel}\n          onSuccess={handleDialogClose}\n        />\n      )}\n      <PageHeader onClose={handleDrawerClose} {...rest} />\n      <Body>\n        <FormHeader {...rest} />\n        <EngagementTemplates {...rest} />\n        <FieldWrapper>\n          <EngagementNameField\n            label={formatMessage(\n              messages[\n                rest.copy ? 'copyEngagementNameLabel' : 'engagementNameLabel'\n              ]\n            )}\n            isCopy={!!rest.copy}\n          />\n          <EngagementDescriptionField\n            label={formatMessage(messages.engagementDescriptionLabel)}\n          />\n          {children}\n        </FieldWrapper>\n        <FormError />\n      </Body>\n      <Footer onCancelClick={handleDrawerClose} {...rest} />\n    </form>\n  )\n}\n\nconst focusDecorator = createFocusDecorator<FormValues>()\n\nconst RoleMapper = ({ id }: Option) => id as string\n\nexport const Form: VFC<FormProps> = ({ onCreateSuccess, copy }) => {\n  const { formatMessage } = useIntl()\n  const { nextStep } = useWizard()\n  const client = useApolloClient()\n\n  const [showLoader, setShowLoader] = useState(false)\n\n  const { roles = [] } = useFetchRolesForRequestEngagement({\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async values => {\n    try {\n      const {\n        templateId,\n        name,\n        roles: selectedRoles,\n        description,\n        displayOrder,\n      } = values\n      const defaultRoles = selectedRoles.some(({ id }) => id === 'ALL')\n        ? ['ALL']\n        : selectedRoles.filter(({ id }) => id !== 'MM').map(RoleMapper)\n\n      const commonParams = {\n        name,\n        defaultRoles,\n        description,\n        displayOrder,\n      }\n      setShowLoader(true)\n      if (copy) {\n        const { templateEngagementTypeId, id: copyEngagementTypeId } = copy\n        const variables: duplicateEngagementTypeVariables = {\n          ...commonParams,\n          templateEngagementTypeId,\n          copyEngagementTypeId,\n        }\n        await mutateDuplicateEngagementType(client, { variables })\n      } else {\n        const variables: createEngagementTypeVariables = {\n          ...commonParams,\n          templateEngagementTypeId: templateId,\n        }\n        await mutateCreateEngagementType(client, { variables })\n      }\n      setShowLoader(false)\n      onCreateSuccess(name)\n      nextStep()\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  const { getEngagementTypes } = useEngagementTypesGrandTotalQuery({\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      page: {},\n      filters: {},\n    },\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const { grandTotal = 0 } = getEngagementTypes ?? {}\n\n  const initialValues: FormValues | {} = useMemo(() => {\n    if (copy) {\n      const {\n        name,\n        defaultRoles,\n        description,\n        templateEngagementTypeId: templateId,\n      } = copy!\n\n      return {\n        name: formatMessage(messages.copyDrawerHeader, { name }),\n        description,\n        templateId,\n        displayOrder: grandTotal + 1,\n\n        roles: defaultRoles.some(id => id === 'ALL')\n          ? [\n              {\n                label: formatMessage(commonMessages.allMyAttendees),\n                id: 'ALL',\n              },\n            ]\n          : [\n              {\n                label: formatMessage(roleLabel.MM),\n                id: 'MM',\n                clearableValue: false,\n              },\n              ...roles\n                .filter(({ roleCompanyid }) =>\n                  defaultRoles.some(roleId => roleId === roleCompanyid)\n                )\n                .map(\n                  ({ roleCompanyid, roleDisplayName }): Option => ({\n                    label: formatMessage(roleLabel[roleDisplayName]),\n                    id: roleCompanyid,\n                  })\n                ),\n            ],\n      }\n    } else {\n      return {\n        name: '',\n        displayOrder: grandTotal + 1,\n        roles: [\n          {\n            label: formatMessage(commonMessages.allMyAttendees),\n            id: 'ALL',\n          },\n          {\n            label: formatMessage(roleLabel.MM),\n            id: 'MM',\n            clearableValue: false,\n          },\n        ],\n      }\n    }\n  }, [copy, formatMessage, roles, grandTotal])\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<FormValues>\n        decorators={[focusDecorator]}\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        render={props => (\n          <EngagementTypeForm {...props} copy={copy}>\n            <RolesField roles={roles} />\n            <DisplayOrderField grandTotal={grandTotal + 1} />\n          </EngagementTypeForm>\n        )}\n      />\n    </>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\n\nexport const Root = styled('div', ({ $theme: { mediaQuery, sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100vh',\n  paddingLeft: sizing.scale800,\n  paddingRight: sizing.scale800,\n  [mediaQuery.medium]: {\n    paddingLeft: '250px',\n    justifyContent: 'flex-start',\n  },\n}))\n\nexport const Container = styled('div', {\n  width: '402px',\n  maxWidth: '100%',\n})\n\nexport const MessageContainer = styled('div', ({ $theme: { sizing } }) => ({\n  position: 'relative',\n  paddingLeft: '40px',\n  marginTop: sizing.scale1600,\n  marginBottom: sizing.scale1000,\n}))\n\nexport const SuccessMessage = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.font650,\n    lineHeight: sizing.scale850,\n  })\n)\n\nexport const SuccessMessageDescription = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.font400,\n    color: colors.mono700,\n    marginTop: sizing.scale200,\n  })\n)\n\nexport const CheckIconContainer = styled(\n  'div',\n  ({ $theme: { colors, sizing } }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    width: sizing.scale800,\n    height: sizing.scale800,\n    top: sizing.scale300,\n    left: 0,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor: colors.positive100,\n    borderRadius: sizing.scale600,\n    backgroundColor: colors.positive100,\n  })\n)\n\nexport const ActionButton = styled(Button, {\n  minWidth: '119px',\n})\n","import { IconOverrides } from '@jifflenow/brightui/icon'\n\nexport const checkedIconOverride: IconOverrides = {\n  Svg: {\n    style: ({ $theme: { colors } }) => ({\n      color: colors.white,\n      backgroundColor: 'transparent',\n      strokeWidth: '3',\n    }),\n  },\n}\n","import { VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { CheckboxSelect } from '@jifflenow/brightui/icon'\nimport { useDrawer } from 'ui-components/Drawer'\nimport { SuccessIcon } from 'ui-components/icons/SuccessIcon'\nimport {\n  ActionButton,\n  CheckIconContainer,\n  Container,\n  MessageContainer,\n  SuccessMessageDescription,\n  Root,\n  SuccessMessage,\n} from './styled-components'\nimport { checkedIconOverride } from './overrides'\nimport { CreateSuccessProps } from './types'\n\nconst CheckIcon = () => (\n  <CheckIconContainer>\n    <CheckboxSelect size={10} overrides={checkedIconOverride} />\n  </CheckIconContainer>\n)\n\nconst ActionButtons = () => {\n  const { closeDrawer } = useDrawer()\n\n  return (\n    <ActionButton type=\"button\" onClick={() => closeDrawer()}>\n      <FormattedMessage defaultMessage=\"Close\" description=\"Button label\" />\n    </ActionButton>\n  )\n}\n\nexport const CreateSuccess: VFC<CreateSuccessProps> = ({\n  engagementName: name,\n}) => (\n  <Root>\n    <Container>\n      <SuccessIcon size={208} />\n      <MessageContainer>\n        <CheckIcon />\n        <SuccessMessage>\n          <FormattedMessage\n            defaultMessage=\"{name} engagement type creation request submitted successfully\"\n            description=\"Success message\"\n            values={{ name }}\n          />\n        </SuccessMessage>\n        <SuccessMessageDescription>\n          <FormattedMessage\n            defaultMessage=\"Engagement type will be ready in sometime\"\n            description=\"Success message\"\n          />\n        </SuccessMessageDescription>\n      </MessageContainer>\n      <ActionButtons />\n    </Container>\n  </Root>\n)\n","import { VFC, useState } from 'react'\nimport { Drawer } from 'ui-components/Drawer'\nimport { Wizard } from 'ui-components/Wizard'\nimport { CreateEngagementDrawerProps } from './types'\nimport { Form } from './Form'\nimport { CreateSuccess } from './CreateSuccess'\nimport { FormProps } from './Form/types'\n\nexport const CreateEngagementDrawer: VFC<CreateEngagementDrawerProps> = ({\n  copy,\n  onCreate,\n  ...rest\n}) => {\n  const [engagementName, setEngagementName] = useState('')\n\n  const handleCreateSuccess: FormProps['onCreateSuccess'] = name => {\n    setEngagementName(name)\n    onCreate?.()\n  }\n\n  return (\n    <Drawer closeable={false} size=\"90%\" {...rest}>\n      <Wizard>\n        <Form onCreateSuccess={handleCreateSuccess} copy={copy} />\n        <CreateSuccess engagementName={engagementName} />\n      </Wizard>\n    </Drawer>\n  )\n}\n","import { useState, VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Button } from '@jifflenow/brightui/button'\nimport { CreateEngagementDrawer } from '../CreateEngagementDrawer'\nimport { NewEngagementButtonProps } from './types'\n\nexport const NewEngagementButton: VFC<NewEngagementButtonProps> = ({\n  onCreate,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <>\n      <CreateEngagementDrawer\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        onCreate={onCreate}\n      />\n      <Button\n        onClick={() => setIsOpen(true)}\n        data-pendo=\"engagement-list/create-new\"\n      >\n        <FormattedMessage\n          defaultMessage=\"+ New Engagement Type\"\n          description=\"Button label\"\n        />\n      </Button>\n    </>\n  )\n}\n","import { FC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport {\n  NoRowsIcon,\n  ErrorIcon,\n  NoRowsContainer,\n  NoRowsText,\n  ButtonRetry,\n} from 'components/ag-grid'\nimport { NewEngagementButton } from '../NewEngagementButton'\nimport { NoRowsAndErrorOverlayProps } from './types'\n\nexport const NoRowsAndError: FC<NoRowsAndErrorOverlayProps> = ({\n  agGridReact,\n  refetch,\n}) => {\n  const showError = agGridReact.props.rowData === undefined\n\n  const { version } = useEventLocation().location!.attributes\n\n  return (\n    <NoRowsContainer>\n      {showError ? <ErrorIcon size={93} /> : <NoRowsIcon size={93} />}\n      <NoRowsText>\n        {showError ? (\n          <FormattedMessage\n            defaultMessage=\"Something went wrong. Please try again.\"\n            description=\"Error message\"\n          />\n        ) : (\n          <FormattedMessage\n            defaultMessage=\"No engagement types to show\"\n            description=\"Empty state of the list\"\n          />\n        )}\n      </NoRowsText>\n      {showError ? (\n        <ButtonRetry type=\"button\" kind={KIND.secondary} onClick={refetch}>\n          <FormattedMessage defaultMessage=\"Retry\" description=\"Button label\" />\n        </ButtonRetry>\n      ) : (\n        version !== '1' && <NewEngagementButton onCreate={refetch} />\n      )}\n    </NoRowsContainer>\n  )\n}\n","import { VFC } from 'react'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { defineMessages, useIntl } from 'react-intl'\n\nconst messages = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Are you sure you want to delete the Engagement Type(s)?',\n    description: 'Modal header',\n  },\n  modalMessage: {\n    defaultMessage: 'Please note: This action cannot be reverted.',\n    description: 'Confirmation messages',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'No',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Yes',\n    description: 'Button label',\n  },\n})\n\nexport const DeleteConfirmationDialog: VFC<{\n  onClose: () => void\n  onConfirm: () => void\n}> = ({ onClose, onConfirm }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <ConfirmationDialog\n      heading={formatMessage(messages.modalHeader)}\n      message={formatMessage(messages.modalMessage)}\n      cancelLabel={formatMessage(messages.cancelButtonLabel)}\n      successLabel={formatMessage(messages.successButtonLabel)}\n      closeable\n      onClose={onClose}\n      onCancel={onClose}\n      onSuccess={onConfirm}\n    />\n  )\n}\n","import { FC, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { QueryObserverBaseResult } from 'react-query'\nimport { ICellRendererParams } from '@ag-grid-community/core'\nimport { PLACEMENT, StatefulPopover } from '@jifflenow/brightui/popover'\nimport { StatefulMenu, OnItemSelect } from '@jifflenow/brightui/menu'\nimport { IconButton } from '@jifflenow/brightui/button'\nimport { ThreeDots } from '@jifflenow/brightui/icon'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport {\n  useEngagementTypeStatusMutation,\n  useDeleteEngagementTypeMutation,\n} from 'gql'\nimport {\n  getEngagementTypes_getEngagementTypes_data,\n  getEngagementTypes_getEngagementTypes_data_actions,\n} from 'gql/types/getEngagementTypes'\nimport {\n  ThreeDotButtonOverrides,\n  InlineMenuOverrides,\n  PopoverOverrides,\n} from 'components/ag-grid'\nimport { EngagementActionErrorCodes } from 'gql/types/globalTypes'\nimport { CreateEngagementDrawer } from '../../CreateEngagementDrawer'\nimport { DeleteConfirmationDialog } from '../DeleteConfirmationDialog'\nimport { ActionItem } from './types'\n\nconst messages = defineMessages({\n  viewEditDetails: {\n    defaultMessage: 'View/Edit Details',\n    description: 'Grid row action label',\n  },\n  makeActive: {\n    defaultMessage: 'Make Active',\n    description: 'Grid row action label',\n  },\n  makeInactive: {\n    defaultMessage: 'Make Inactive',\n    description: 'Grid row action label',\n  },\n  delete: {\n    defaultMessage: 'Delete',\n    description: 'Grid row action label',\n  },\n  duplicate: {\n    defaultMessage: 'Duplicate',\n    description: 'Grid row action label',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  inactiveSuccess: {\n    defaultMessage: '{name} inactivated successfully',\n    description: 'Grid row action label',\n  },\n  activeSuccess: {\n    defaultMessage: '{name} activated successfully',\n    description: 'Grid row action label',\n  },\n  deleteSuccess: {\n    defaultMessage: '{name} deleted successfully',\n    description: 'Grid row action label',\n  },\n})\n\nconst errorMessages = defineMessages<EngagementActionErrorCodes>({\n  ENGAGEMENT_TYPE_DELETE_ASSOCIATED_MEETING_EXISTS: {\n    defaultMessage:\n      'Engagement type cannot be deleted as it has active meetings.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_DELETE_ASSOCIATED_SESSION_EXISTS: {\n    defaultMessage:\n      'Engagement type cannot be deleted as it has active sessions.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_DEACTIVATE_ASSOCIATED_MEETING_EXISTS: {\n    defaultMessage:\n      'Engagement type cannot be deactivated as it has active meetings.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_DEACTIVATE_ASSOCIATED_SESSION_EXISTS: {\n    defaultMessage:\n      'Engagement type cannot be deactivated as it has active sessions.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_DEACTIVATE_ASSOCIATED_TRACK_EXISTS: {\n    defaultMessage:\n      'Engagement type cannot be deactivated as it is mapped to tracks.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_DELETE_ASSOCIATED_TRACK_EXISTS: {\n    defaultMessage:\n      'Engagement type cannot be deleted as it is mapped to tracks.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_ALREADY_DELETED: {\n    defaultMessage: 'Engagement type already deleted.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_CREATION_FAILED: {\n    defaultMessage: 'Engagement type creation failed.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_DUPLICATION_FAILED: {\n    defaultMessage: 'Engagement type duplication failed.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_INVALID_EVENT_LOCATION: {\n    defaultMessage: 'Invalid event location.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_NOT_FOUND: {\n    defaultMessage: 'Engagement type not found.',\n    description: 'Error message',\n  },\n  ENGAGEMENT_TYPE_SAGA_NOT_COMPLETE: {\n    defaultMessage: 'Engagement type creation in progress.',\n    description: 'Error message',\n  },\n})\n\nconst aria = defineMessages({\n  labelEngagementMore: {\n    defaultMessage: 'Engagement more option',\n    description: 'Actions on this engagement type',\n  },\n})\n\nconst onItemSelect: OnItemSelect = args => args.item.onItemSelect?.(args)\n\nconst Content: FC<\n  ICellRendererParams & {\n    value: getEngagementTypes_getEngagementTypes_data_actions\n    data: getEngagementTypes_getEngagementTypes_data\n    refetch?: QueryObserverBaseResult['refetch']\n    onRowDelete?: () => void\n  }\n> = ({ value, data, node, api, refetch, onRowDelete }) => {\n  const { formatMessage } = useIntl()\n  const { search, pathname } = useLocation()\n  const [isOpen, setIsOpen] = useState(false)\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const { mutateStatus } = useEngagementTypeStatusMutation({\n    onError: () => {\n      api.hideOverlay()\n      showErrorToast(formatMessage(messages.genericError))\n    },\n    onCompleted: ({ updateEngagementType }) => {\n      refetch?.()\n      api.hideOverlay()\n      if (updateEngagementType.__typename === 'EngagementType') {\n        showSuccessToast(\n          formatMessage(\n            messages[\n              updateEngagementType.status ? 'activeSuccess' : 'inactiveSuccess'\n            ],\n            { name: data.name }\n          )\n        )\n      } else if (updateEngagementType.__typename === 'EngagementTypeErrors') {\n        const errors = updateEngagementType.errors.map(({ code }) =>\n          formatMessage(errorMessages[code])\n        )\n        showErrorToast(errors.join('\\n'))\n      }\n    },\n  })\n\n  const { deleteItem } = useDeleteEngagementTypeMutation({\n    onError: () => {\n      api.hideOverlay()\n      showErrorToast(formatMessage(messages.genericError))\n    },\n    onCompleted: ({ deleteEngagementType }) => {\n      api.hideOverlay()\n      if (deleteEngagementType.__typename === 'EngagementTypeErrors') {\n        const errors = deleteEngagementType.errors.map(({ code }) =>\n          formatMessage(errorMessages[code])\n        )\n        showErrorToast(errors.join('\\n'))\n      } else {\n        onRowDelete?.()\n        api.applyTransaction({ remove: [node.data] })\n        showSuccessToast(\n          formatMessage(messages.deleteSuccess, { name: data.name })\n        )\n      }\n    },\n  })\n\n  const updateStatus = () => {\n    api.showLoadingOverlay()\n    mutateStatus({ variables: { enabled: !data.status, uuid: data.uuid } })\n  }\n\n  const deleteEngagementType = () => {\n    setShowConfirmation(false)\n    api.showLoadingOverlay()\n    deleteItem({ variables: { uuid: data.uuid } })\n  }\n\n  const onClose = () => setShowConfirmation(false)\n\n  const menu: ActionItem[] = [\n    {\n      label: formatMessage(messages.viewEditDetails),\n      href: `${pathname}/${data.uuid}${search}`,\n      dataPendo: 'engagement-type/view-edit',\n    },\n    value.canActivate && {\n      label: formatMessage(messages.makeActive),\n      onItemSelect: updateStatus,\n      dataPendo: 'engagement-type/make-active',\n    },\n    value.canDeactivate && {\n      label: formatMessage(messages.makeInactive),\n      onItemSelect: updateStatus,\n      dataPendo: 'engagement-type/make-inactive',\n    },\n    value.canDelete && {\n      label: formatMessage(messages.delete),\n      onItemSelect: () => setShowConfirmation(true),\n      dataPendo: 'engagement-type/delete',\n    },\n    value.canDuplicate && {\n      label: formatMessage(messages.duplicate),\n      onItemSelect: () => setIsOpen(true),\n      dataPendo: 'engagement-type/duplicate',\n    },\n  ].filter(Boolean) as ActionItem[]\n\n  return (\n    <>\n      <StatefulMenu\n        items={menu}\n        onItemSelect={onItemSelect}\n        overrides={InlineMenuOverrides}\n      />\n      {isOpen && (\n        <CreateEngagementDrawer\n          isOpen\n          onClose={() => setIsOpen(false)}\n          onCreate={() => refetch?.()}\n          copy={data}\n        />\n      )}\n      {showConfirmation && (\n        <DeleteConfirmationDialog\n          onClose={onClose}\n          onConfirm={deleteEngagementType}\n        />\n      )}\n    </>\n  )\n}\n\nexport const ActionCell: FC<ICellRendererParams> = props => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <StatefulPopover\n      popoverMargin={8}\n      content={<Content {...props} />}\n      placement={PLACEMENT.bottomRight}\n      overrides={PopoverOverrides}\n    >\n      <IconButton\n        size={20}\n        overrides={ThreeDotButtonOverrides}\n        aria-label={formatMessage(aria.labelEngagementMore)}\n        disabled={!props.data.sagaCompleted}\n      >\n        <ThreeDots />\n      </IconButton>\n    </StatefulPopover>\n  )\n}\n","import { SelectOverrides } from '@jifflenow/brightui/select'\nimport { TagOverrides as Overrides, KIND } from '@jifflenow/brightui/tag'\n\nexport const TagOverrides: Overrides = {\n  Root: {\n    style: ({ $theme: { colors, sizing }, $kind }) => {\n      const borderColor =\n        $kind === KIND.positive ? colors.primary500 : colors.mono700\n\n      return {\n        color: $kind === KIND.positive ? colors.primary500 : colors.mono700,\n        borderTopColor: borderColor,\n        borderRightColor: borderColor,\n        borderBottomColor: borderColor,\n        borderLeftColor: borderColor,\n        height: sizing.scale600,\n        borderTopLeftRadius: sizing.scale400,\n        borderTopRightRadius: sizing.scale400,\n        borderBottomRightRadius: sizing.scale400,\n        borderBottomLeftRadius: sizing.scale400,\n      }\n    },\n  },\n}\n\nexport const selectOverrides: SelectOverrides = {\n  ControlContainer: {\n    style: {\n      borderLeftStyle: 'none',\n      borderRightStyle: 'none',\n      borderTopStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n  },\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Tag, VARIANT, KIND } from '@jifflenow/brightui/tag'\nimport { TagOverrides } from './overrides'\nimport { StatusCellProps } from './types'\n\nconst messages = defineMessages({\n  active: {\n    defaultMessage: 'Active',\n    description: 'Grid cell value',\n  },\n  inactive: {\n    defaultMessage: 'Inactive',\n    description: 'Grid cell value',\n  },\n})\n\nexport const StatusCell: FC<StatusCellProps> = ({ value }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Tag\n      closeable={false}\n      variant={VARIANT.outlined}\n      overrides={TagOverrides}\n      kind={value ? KIND.positive : KIND.negative}\n    >\n      {formatMessage(messages[value ? 'active' : 'inactive'])}\n    </Tag>\n  )\n}\n","import { FC, useState } from 'react'\nimport { useApolloClient } from '@apollo/client'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useQueryClient } from 'react-query'\nimport { Select, Value } from '@jifflenow/brightui/select'\nimport { ICellRendererParams } from '@ag-grid-community/core'\nimport { showErrorToast } from 'utils/toast'\nimport { mutateUpdateEngagementType } from 'gql'\nimport { selectOverrides } from './overrides'\n\nconst messages = defineMessages({\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nexport const DisplayOrderCell: FC<\n  ICellRendererParams & {\n    grandTotal: number\n  }\n> = ({ value: displayOrder, data, api, grandTotal }) => {\n  const queryClient = useQueryClient()\n  const client = useApolloClient()\n  const { formatMessage } = useIntl()\n  const options = [...Array(grandTotal)].map((_, i) => ({\n    label: i + 1,\n    id: i + 1,\n  }))\n\n  const [value, setValue] = useState([\n    { label: displayOrder, id: displayOrder },\n  ])\n\n  const onChangeHandler = async ({ value }: { value: Value }) => {\n    try {\n      setValue([{ label: value[0].id, id: value[0].id }])\n      api.showLoadingOverlay()\n      await mutateUpdateEngagementType(client, {\n        variables: {\n          uuid: data.uuid,\n          displayOrder: Number(value[0].id),\n        },\n      })\n      queryClient.refetchQueries('getEngagementTypes')\n    } catch (error) {\n      api.hideOverlay()\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  return (\n    <Select\n      disabled={!data.sagaCompleted}\n      overrides={selectOverrides}\n      options={options}\n      clearable={false}\n      value={value}\n      onChange={onChangeHandler}\n    />\n  )\n}\n","import { ReactElement, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  MasterEngagementTypes,\n  TemplateEngagementTypes,\n} from 'gql/types/globalTypes'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { EngagementTemplateProps, EngagementTypeMasterProps } from './types'\n\nconst archiveTemplateNames = defineMessages<keyof typeof MasterEngagementTypes>(\n  {\n    ConsecutiveMeeting: {\n      defaultMessage: 'Consecutive Meeting',\n      description: 'Engagement template name',\n    },\n    General: {\n      defaultMessage: 'General Meetings',\n      description: 'Engagement template name',\n    },\n    TracksAndSession: {\n      defaultMessage: 'Sessions and Briefings',\n      description: 'Engagement template name',\n    },\n  }\n)\n\nexport const EngagementTemplate: VFC<\n  EngagementTemplateProps | EngagementTypeMasterProps\n> = value => {\n  const { formatMessage } = useIntl()\n  const { version } = useEventLocation().location!.attributes\n\n  if (version === '2') {\n    const {\n      value: { name, masterEngagementType, type },\n    } = value as EngagementTemplateProps\n\n    return ((type === TemplateEngagementTypes.ArchivedEvent\n      ? formatMessage(archiveTemplateNames[masterEngagementType])\n      : name) as unknown) as ReactElement\n  } else {\n    const { value: engagementTypeMaster } = value as EngagementTypeMasterProps\n\n    return (engagementTypeMaster as unknown) as ReactElement\n  }\n}\n","import { FC } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { List as AgGridList } from 'components/ag-grid'\nimport { RowClickedEvent, RowDataChangedEvent } from '@ag-grid-community/core'\nimport { getEngagementTypes_getEngagementTypes_data } from 'gql/types/getEngagementTypes'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { NoRowsAndError } from './NoRowsAndError'\nimport { ActionCell } from './ActionCell'\nimport { StatusCell } from './StatusCell'\nimport { EngagementTypesSearchResponse, ListProps } from './types'\nimport { DisplayOrderCell } from './DisplayOrderCell'\nimport { EngagementTemplate } from './EngagementTemplate'\nimport { columnHeaderNames, getColumnDefs } from './constants'\n\nconst messages = defineMessages({\n  sagaNotCompleted: {\n    defaultMessage:\n      'Engagement type creation in progress. Please refresh and retry in some time.',\n    description: 'Hover message',\n  },\n})\n\nexport const List: FC<\n  ListProps<\n    getEngagementTypes_getEngagementTypes_data | EngagementTypesSearchResponse\n  >\n> = props => {\n  const { formatMessage } = useIntl()\n  const history = useHistory()\n  const { search, pathname } = useLocation()\n\n  const { location, configs, privileges } = useEventLocation()\n  const { version } = location!.attributes\n  const { enable_external_widget } = configs!\n\n  const onRowClicked = ({ data, event }: RowClickedEvent) => {\n    const rowElement = event?.target as Element\n    if (\n      version === '2' &&\n      data.sagaCompleted &&\n      !rowElement.closest('[col-id=actions]') &&\n      !rowElement.closest('[col-id=displayOrder]')\n    ) {\n      history.push(`${pathname}/${data.uuid}${search}`)\n    } else if (\n      version === '1' &&\n      data.meetingTypeMasterName !== 'Consecutive Meetings' &&\n      (enable_external_widget === 'true' || privileges?.canManageNotifications)\n    ) {\n      history.push(`${pathname}/${data.id}${search}`)\n    }\n  }\n\n  const constants = {\n    columnHeaderNames,\n    columnDefs: getColumnDefs(version),\n  }\n\n  const onRowDataChanged = ({ api }: RowDataChangedEvent) => {\n    api.forEachNode(node => {\n      if (!node.data.sagaCompleted) {\n        const rows = document.querySelectorAll(`[row-id=\"${node.data.uuid}\"]`)\n        rows.forEach(row => {\n          row.setAttribute('title', formatMessage(messages.sagaNotCompleted))\n        })\n      }\n    })\n  }\n\n  return (\n    <AgGridList\n      {...props}\n      data={\n        version === '2'\n          ? (props.data as getEngagementTypes_getEngagementTypes_data[])\n          : (props.data as EngagementTypesSearchResponse[])\n      }\n      constants={constants}\n      frameworkComponents={{\n        ...(version === '2' && { actionCell: ActionCell }),\n        statusCell: StatusCell,\n        ...(version === '2' && { displayOrderCell: DisplayOrderCell }),\n        noRowsAndError: NoRowsAndError,\n        engagementTemplateCell: EngagementTemplate,\n      }}\n      onRowClicked={onRowClicked}\n      onRowDataChanged={onRowDataChanged}\n    />\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const Root = styled('header', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingLeft: sizing.scale800,\n  paddingRight: sizing.scale800,\n  paddingTop: sizing.scale200,\n  paddingBottom: sizing.scale200,\n}))\n\nexport const Container = styled('div', {})\n\nexport const RightContainer = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport const InputControl = styled(FormControl, ({ $theme: { sizing } }) => ({\n  paddingLeft: sizing.scale600,\n  paddingRight: sizing.scale600,\n}))\n\nexport const Title = styled('h2', ({ $theme: { typography, colors } }) => ({\n  ...typography.HeadingXSmall,\n  color: colors.mono800,\n  margin: 0,\n}))\n\nexport const PageHint = styled('div', ({ $theme: { typography, sizing } }) => ({\n  ...typography.ParagraphSmall,\n  paddingTop: sizing.scale200,\n}))\n","import { VFC } from 'react'\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl'\nimport { Input } from '@jifflenow/brightui/input'\nimport { Search } from '@jifflenow/brightui/icon'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { NewEngagementButton } from '../NewEngagementButton'\nimport {\n  Container,\n  RightContainer,\n  InputControl,\n  Root,\n  Title,\n  PageHint,\n} from './styled-components'\nimport { HeaderProps } from './types'\n\nconst messages = defineMessages({\n  search: {\n    defaultMessage: 'Search',\n    description: 'Placeholder text',\n  },\n})\n\nexport const Header: VFC<HeaderProps> = ({\n  itemCount,\n  onSearch,\n  search,\n  onCreate,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const { version } = useEventLocation().location!.attributes\n\n  return (\n    <Root>\n      <Container>\n        <Title>\n          <FormattedMessage\n            defaultMessage=\"Engagement Types · {count, number}\"\n            description=\"Section title\"\n            values={{ count: itemCount }}\n          />\n        </Title>\n        {version === '2' && (\n          <PageHint>\n            <FormattedMessage\n              defaultMessage=\"Manage engagement type creation, modification and activation.\"\n              description=\"Section sub title\"\n            />\n          </PageHint>\n        )}\n      </Container>\n      <RightContainer>\n        <InputControl>\n          <Input\n            type=\"search\"\n            value={search}\n            IconAfter={Search}\n            onChange={onSearch}\n            placeholder={formatMessage(messages.search)}\n            name=\"engagement-list/search\"\n          />\n        </InputControl>\n        {version !== '1' && <NewEngagementButton onCreate={onCreate} />}\n      </RightContainer>\n    </Root>\n  )\n}\n","import { useState } from 'react'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router-dom'\nimport { TextFilter } from '@jifflenow/brightui/filter'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { engagementTypesCreatedByUsersQueryFn } from 'rest'\nimport { useDebounce } from 'utils/debounce'\nimport { UsersFilterProps } from 'components/ag-grid'\n\nexport const UsersFilter = ({\n  value,\n  label,\n  onChange,\n  dataPendo,\n}: UsersFilterProps) => {\n  const locationId = useEventLocation().location!.id\n  const { eventName } = useParams<{ eventName: string }>()\n  const [searchText, setSearchText] = useState('')\n  const search = useDebounce(searchText, 400)\n\n  const { isLoading, data } = useQuery(\n    [\n      'engagementTypesCreatedByUsers',\n      {\n        path: {\n          eventName,\n        },\n        query: {\n          location_uuid: locationId,\n          search_term: search,\n        },\n      },\n    ],\n    engagementTypesCreatedByUsersQueryFn,\n    { enabled: !!search }\n  )\n\n  const options =\n    !search || !data\n      ? []\n      : data.data.map(({ id, attributes: { firstName, lastName } }) => ({\n          id,\n          label: `${firstName} ${lastName}`,\n        }))\n\n  return (\n    <TextFilter\n      label={label}\n      onChange={onChange}\n      options={options}\n      value={value}\n      asyncOptions\n      searchText={searchText}\n      onSearch={setSearchText}\n      isLoading={isLoading}\n      dataPendo={dataPendo}\n    />\n  )\n}\n","import { useState } from 'react'\nimport { TextFilter } from '@jifflenow/brightui/filter'\nimport { getMeetingTypeMastersQueryFn, useQuery } from 'rest'\nimport { useEngagementTemplatesForLocationQuery } from 'gql'\nimport { fetchTemplatesForLocation_fetchTemplatesForLocation } from 'gql/types/fetchTemplatesForLocation'\nimport { TemplateOptions, TemplatesFilterProps } from 'components/ag-grid'\nimport { useEventLocation } from 'providers/LocationProvider'\n\n// TODO: Handle error and loading case once design direction is finalized\nexport const TemplatesFilter = ({\n  label,\n  value,\n  onChange,\n  dataPendo,\n}: TemplatesFilterProps) => {\n  const {\n    systemName: eventName,\n    version,\n  } = useEventLocation().location!.attributes\n\n  const { data: { data: v1Templates = [] } = {} } = useQuery(\n    ['getMeetingTypeMasters', { eventName }],\n    getMeetingTypeMastersQueryFn,\n    { enabled: version === '1' }\n  )\n\n  const {\n    templates: v2Templates = [],\n  } = useEngagementTemplatesForLocationQuery({\n    notifyOnNetworkStatusChange: true,\n    skip: version === '1',\n  })\n\n  const templates = version === '1' ? v1Templates : v2Templates\n\n  const [searchText, setSearchText] = useState('')\n\n  return (\n    <TextFilter\n      searchable\n      label={label}\n      onChange={onChange}\n      asyncOptions={false}\n      searchText={searchText}\n      onSearch={setSearchText}\n      options={templates.map(({ id, name }: TemplateOptions) => ({\n        id,\n        label: name,\n      }))}\n      value={(templates as fetchTemplatesForLocation_fetchTemplatesForLocation[])\n        .filter(({ id }) => value.indexOf(id) > -1)\n        .map(({ id, name }) => ({ id, label: name }))}\n      dataPendo={dataPendo}\n    />\n  )\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { TextFilter, Option } from '@jifflenow/brightui/filter'\nimport {\n  filterOverrides,\n  FiltersContainer,\n  FilterItem,\n  DataOptions,\n  Options,\n  FilterProps,\n} from 'components/ag-grid'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useEngagementTypePreferences } from '../../EngagementTypePreferencesProvider'\nimport { UsersFilter } from './UsersFilter'\nimport { TemplatesFilter } from './TemplatesFilter'\n\nconst messages = defineMessages({\n  status: {\n    defaultMessage: 'Status',\n    description: 'Filter label',\n  },\n  engagementTemplate: {\n    defaultMessage: 'Engagement Template',\n    description: 'Filter label',\n  },\n  createdBy: {\n    defaultMessage: 'Created By',\n    description: 'Filter label',\n  },\n  active: {\n    defaultMessage: 'Active',\n    description: 'Filter option label',\n  },\n  inactive: {\n    defaultMessage: 'Inactive',\n    description: 'Filter option label',\n  },\n})\n\nconst idMapper = (option: Option) => option.id\nconst statusOptions: string[] = ['active', 'inactive']\n\nexport const Filters: FC<FilterProps> = ({ onChange }) => {\n  const { formatMessage } = useIntl()\n  const { patchPreferences, preferences } = useEngagementTypePreferences()\n  const { version } = useEventLocation().location!.attributes\n\n  const {\n    statuses = [],\n    createdBy = [],\n    templateEngagementTypes = [],\n  } = preferences\n  const optionMapper = (o: DataOptions) => ({ id: o.uuid, label: o.name })\n  const strOptionMapper = (text: string) => ({\n    id: text,\n    label: formatMessage(messages[text as keyof typeof messages]),\n  })\n\n  return (\n    <FiltersContainer>\n      <FilterItem>\n        <TextFilter\n          value={statuses.map(strOptionMapper)}\n          overrides={filterOverrides}\n          label={formatMessage(messages.status)}\n          onChange={(statuses: Option) => {\n            onChange()\n            patchPreferences({ statuses: statuses.map(idMapper) })\n          }}\n          options={statusOptions.map(strOptionMapper)}\n          dataPendo=\"engagement-list/status-filter\"\n        />\n      </FilterItem>\n      <FilterItem>\n        <TemplatesFilter\n          label={formatMessage(messages.engagementTemplate)}\n          value={templateEngagementTypes}\n          onChange={(templates: Option) => {\n            onChange()\n            patchPreferences({\n              templateEngagementTypes: templates.map(idMapper),\n            })\n          }}\n          dataPendo=\"engagement-list/template-filter\"\n        />\n      </FilterItem>\n      {version === '2' && (\n        <FilterItem>\n          <UsersFilter\n            label={formatMessage(messages.createdBy)}\n            value={createdBy.map(optionMapper)}\n            onChange={(users: Option) => {\n              onChange()\n              patchPreferences({\n                createdBy: users.map(({ id, label }: Options) => ({\n                  uuid: id,\n                  name: label,\n                })),\n              })\n            }}\n            dataPendo=\"engagement-list/createdby-filter\"\n          />\n        </FilterItem>\n      )}\n    </FiltersContainer>\n  )\n}\n","import { ModalOverrides } from '@jifflenow/brightui/modal'\n/* z-index is required here as this popup is shown along with a toast message */\nexport const modalOverrides: ModalOverrides = {\n  Root: { style: { zIndex: 1 } },\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { Button as BaseButton } from '@jifflenow/brightui/button'\nimport { ModalBody as BaseModalBody } from '@jifflenow/brightui/modal'\nimport {\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n} from '@jifflenow/brightui/icon'\nimport { Anchor as baseAnchor } from 'ui-components/Anchor'\n\nexport const Root = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  paddingTop: sizing.scale100,\n  paddingBottom: sizing.scale100,\n}))\n\nexport const SelectionInfoContainer = styled('div', () => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n}))\n\nexport const ActionContainer = styled('div', () => ({\n  display: 'flex',\n}))\n\nexport const SelectionInfo = styled(\n  'div',\n  ({ $theme: { typography, sizing, colors } }) => ({\n    ...typography.ParagraphSmall,\n    color: colors.mono700,\n    marginBottom: sizing.scale200,\n  })\n)\n\nexport const Button = styled(BaseButton, ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale100,\n  marginRight: sizing.scale100,\n}))\n\nexport const MessageRoot = styled('div', () => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  minWidth: '420px',\n}))\n\nexport const ModalHintText = styled(\n  'div',\n  ({ $theme: { typography, sizing, colors } }) => ({\n    ...typography.ParagraphSmall,\n    color: colors.mono900,\n    marginBottom: sizing.scale600,\n  })\n)\n\nexport const MessageRow = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  paddingTop: sizing.scale400,\n  paddingBottom: sizing.scale400,\n}))\n\nexport const StyledCheckCircleOutlined = styled(\n  CheckCircleOutlined,\n  ({ $theme: { sizing, colors } }) => ({\n    color: colors.positive,\n    backgroundColor: colors.positive50,\n    borderRadius: sizing.scale400,\n  })\n)\n\nexport const StyledCloseCircleOutlined = styled(\n  CloseCircleOutlined,\n  ({ $theme: { sizing, colors } }) => ({\n    color: colors.negative,\n    backgroundColor: colors.negative50,\n    borderRadius: sizing.scale400,\n  })\n)\n\nexport const Name = styled(\n  'div',\n  ({ $theme: { typography, sizing, colors } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono900,\n    marginLeft: sizing.scale600,\n    width: '250px',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  })\n)\n\nexport const MeetingCounts = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono900,\n    width: '80px',\n  })\n)\n\nexport const ModalBody = withStyle(BaseModalBody, {\n  maxHeight: '250px',\n})\n\nexport const Anchor = styled(\n  baseAnchor,\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Paragraph1,\n    color: colors.primaryA,\n    marginTop: sizing.scale0,\n    marginLeft: sizing.scale1200,\n    cursor: 'pointer',\n  })\n)\n","import { FC, useState } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { stringifyUrl } from 'query-string'\nimport { useParams } from 'react-router-dom'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { Modal, ModalHeader, SIZE } from '@jifflenow/brightui/modal'\nimport { Paths } from 'components/Routes/Paths'\nimport { MessageProps } from './types'\nimport { modalOverrides } from './modalOverrides'\nimport {\n  Button,\n  MessageRoot,\n  MessageRow,\n  ModalHintText,\n  StyledCheckCircleOutlined,\n  StyledCloseCircleOutlined,\n  Name,\n  MeetingCounts,\n  ModalBody,\n  Anchor,\n  ActionContainer,\n} from './styled-components'\n\nconst messages = defineMessages({\n  view: {\n    defaultMessage: 'View',\n    description: 'Button text',\n  },\n  meetingCount: {\n    defaultMessage:\n      '{count, number} {count, plural, one {meeting} other {meetings}} ',\n    description: 'Modal body',\n  },\n})\n// TODO: Refactor: try to trigger toasts here by receiving other details as props\nexport const Message: FC<MessageProps> = ({ message, hint, details }) => {\n  const { formatMessage } = useIntl()\n  const { eventName } = useParams<{ eventName: string }>()\n  const [isOpen, setIsOpen] = useState(false)\n  const messageList = details?.sort((first, second) =>\n    first.success === second.success ? 0 : first.success ? -1 : 1\n  )\n\n  return (\n    <MessageRoot>\n      {message}\n      {!!details?.length && (\n        <>\n          <Button kind={KIND.secondary} onClick={() => setIsOpen(true)}>\n            {formatMessage(messages.view)}\n          </Button>\n          <Modal\n            isOpen={isOpen}\n            size={SIZE.medium}\n            overrides={modalOverrides}\n            onClose={() => setIsOpen(false)}\n          >\n            <ModalHeader>{message}</ModalHeader>\n            <ModalBody>\n              {hint && <ModalHintText>{formatMessage(hint)}</ModalHintText>}\n              {messageList?.map(\n                ({ success, name, associatedMeetings }, index) => (\n                  <MessageRow key={index}>\n                    {success ? (\n                      <StyledCheckCircleOutlined size=\"20px\" />\n                    ) : (\n                      <StyledCloseCircleOutlined size=\"20px\" />\n                    )}\n                    <Name>{name}</Name>\n                    <MeetingCounts>\n                      {formatMessage(messages.meetingCount, {\n                        count: associatedMeetings,\n                      })}\n                    </MeetingCounts>\n                    {!success && (\n                      <ActionContainer>\n                        <Anchor\n                          href={stringifyUrl({\n                            query: {\n                              current_location_uuid: new URLSearchParams(\n                                window.location.search\n                              ).get('location'),\n                            },\n                            url: Paths.LEGACY_EVENT_MEETINGS.path.replace(\n                              ':eventName',\n                              eventName\n                            ),\n                          })}\n                        >\n                          {formatMessage(messages.view)}\n                        </Anchor>\n                      </ActionContainer>\n                    )}\n                  </MessageRow>\n                )\n              )}\n            </ModalBody>\n          </Modal>\n        </>\n      )}\n    </MessageRoot>\n  )\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useBulkActiveEngagementTypeMutation } from 'gql'\nimport { bulkActivateEngagementType as Data } from 'gql/types/bulkActivateEngagementType'\nimport { Message } from './Message'\nimport { BulkButtonProps } from './types'\nimport { Button } from './styled-components'\n\nconst messages = defineMessages({\n  allActive: {\n    defaultMessage: 'Make all active',\n    description: 'Button text',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nconst showToast = ({ bulkActivateEngagementType }: Data) => {\n  const { failureCount, successCount } = bulkActivateEngagementType\n  failureCount === 0\n    ? showSuccessToast(\n        <Message\n          message={\n            <FormattedMessage\n              defaultMessage=\"{successCount, number} engagement {successCount, plural, one {type} other {types}} activated successfully\"\n              description=\"Toast message\"\n              values={{ successCount }}\n            />\n          }\n        />\n      )\n    : showErrorToast(\n        <Message\n          message={\n            <FormattedMessage\n              defaultMessage=\"Engagement types activation failed\"\n              description=\"Toast message\"\n            />\n          }\n        />\n      )\n}\n\nexport const MakeActiveButton: FC<BulkButtonProps> = props => {\n  const { gridApi, variables, resetToFirstPage } = props\n  const { formatMessage } = useIntl()\n  const { mutateBulkActive } = useBulkActiveEngagementTypeMutation({\n    onCompleted: data => {\n      resetToFirstPage()\n      showToast(data)\n    },\n    onError: () => {\n      gridApi.hideOverlay()\n      showErrorToast(<Message message={formatMessage(messages.genericError)} />)\n    },\n  })\n\n  return (\n    <Button\n      kind={KIND.secondary}\n      onClick={() => {\n        gridApi.showLoadingOverlay()\n        mutateBulkActive({ variables })\n      }}\n    >\n      {formatMessage(messages.allActive)}\n    </Button>\n  )\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useBulkInactiveEngagementTypeMutation } from 'gql'\nimport { bulkInactivateEngagementType as Data } from 'gql/types/bulkInactivateEngagementType'\nimport { Message } from './Message'\nimport { BulkButtonProps } from './types'\nimport { Button } from './styled-components'\n\nconst messages = defineMessages({\n  allInactive: {\n    defaultMessage: 'Make all inactive',\n    description: 'Button text',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  hintText: {\n    defaultMessage:\n      'Engagement types with any meetings in the past or upcoming cannot be inactivated. Please clear associated meetings before inactivation.',\n    description: 'Modal hint text',\n  },\n})\n\nconst showToast = ({ bulkInactivateEngagementType: data }: Data) => {\n  const { totalCount, failureCount, successCount, engagementTypeDetails } = data\n  failureCount === 0\n    ? showSuccessToast(\n        <Message\n          message={\n            <FormattedMessage\n              defaultMessage=\"{successCount, number} engagement {successCount, plural, one {type} other {types}} inactivated successfully\"\n              description=\"Toast message\"\n              values={{ successCount }}\n            />\n          }\n        />\n      )\n    : failureCount === totalCount\n    ? showErrorToast(\n        <Message\n          hint={messages.hintText}\n          details={engagementTypeDetails}\n          message={\n            <FormattedMessage\n              defaultMessage=\"Engagement types inactivation failed\"\n              description=\"Toast message\"\n            />\n          }\n        />\n      )\n    : showErrorToast(\n        <Message\n          hint={messages.hintText}\n          details={engagementTypeDetails}\n          message={\n            <FormattedMessage\n              defaultMessage=\"Failed to inactivate {failureCount, number} out of {totalCount, number} engagement {totalCount, plural, one {type} other {types}}\"\n              description=\"Toast message\"\n              values={{ failureCount, totalCount }}\n            />\n          }\n        />,\n        { autoHideDuration: 0 }\n      )\n}\n\nexport const MakeInactiveButton: FC<BulkButtonProps> = props => {\n  const { gridApi, variables, resetToFirstPage } = props\n  const { formatMessage } = useIntl()\n  const { mutateBulkInactive } = useBulkInactiveEngagementTypeMutation({\n    onCompleted: data => {\n      resetToFirstPage()\n      showToast(data)\n    },\n    onError: () => {\n      gridApi.hideOverlay()\n      showErrorToast(<Message message={formatMessage(messages.genericError)} />)\n    },\n  })\n\n  return (\n    <Button\n      kind={KIND.secondary}\n      onClick={() => {\n        gridApi.showLoadingOverlay()\n        mutateBulkInactive({ variables })\n      }}\n    >\n      {formatMessage(messages.allInactive)}\n    </Button>\n  )\n}\n","import { FC, useState } from 'react'\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl'\nimport { PLACEMENT, StatefulPopover } from '@jifflenow/brightui/popover'\nimport { StatefulMenu, OnItemSelect } from '@jifflenow/brightui/menu'\nimport { ThreeDots } from '@jifflenow/brightui/icon'\nimport { IconButton } from '@jifflenow/brightui/button'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useBulkDeleteEngagementTypeMutation } from 'gql'\nimport { bulkDeleteEngagementTypes as Data } from 'gql/types/bulkDeleteEngagementTypes'\nimport {\n  PopoverOverrides,\n  InlineMenuOverrides,\n  ThreeDotButtonOverrides,\n} from 'components/ag-grid'\nimport { DeleteConfirmationDialog } from '../DeleteConfirmationDialog'\nimport { BulkButtonProps } from './types'\nimport { Message } from './Message'\n\nconst messages = defineMessages({\n  allDelete: {\n    defaultMessage: 'Delete all',\n    description: 'Button label',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  hintText: {\n    defaultMessage:\n      'Engagement types with any meetings in the past or upcoming cannot be deleted. Please clear associated meetings before deletion.',\n    description: 'Modal hint text',\n  },\n})\n\nconst onItemSelect: OnItemSelect = args => args.item.onItemSelect?.(args)\n\nconst showToast = ({ bulkDeleteEngagementTypes: data }: Data) => {\n  const { totalCount, failureCount, successCount, engagementTypeDetails } = data\n  failureCount === 0\n    ? showSuccessToast(\n        <Message\n          message={\n            <FormattedMessage\n              defaultMessage=\"{successCount, number} engagement {successCount, plural, one {type has} other {types have}} been deleted successfully\"\n              description=\"Toast message\"\n              values={{ successCount }}\n            />\n          }\n        />\n      )\n    : failureCount === totalCount\n    ? showErrorToast(\n        <Message\n          hint={messages.hintText}\n          details={engagementTypeDetails}\n          message={\n            <FormattedMessage\n              defaultMessage=\"Engagement types deletion failed\"\n              description=\"Toast message\"\n            />\n          }\n        />\n      )\n    : showErrorToast(\n        <Message\n          hint={messages.hintText}\n          details={engagementTypeDetails}\n          message={\n            <FormattedMessage\n              defaultMessage=\"{failureCount, number} out of {totalCount, number} engagement {totalCount, plural, one {type} other {types}} deletion failed\"\n              description=\"Toast message\"\n              values={{ failureCount, totalCount }}\n            />\n          }\n        />,\n        { autoHideDuration: 0 }\n      )\n}\n\nexport const DeleteButton: FC<BulkButtonProps> = props => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n  const { gridApi, variables, resetToFirstPage } = props\n  const { mutateBulkDelete } = useBulkDeleteEngagementTypeMutation({\n    onCompleted: data => {\n      resetToFirstPage()\n      showToast(data)\n    },\n    onError: () => {\n      gridApi.hideOverlay()\n      showErrorToast(<Message message={formatMessage(messages.genericError)} />)\n    },\n  })\n\n  const onClose = () => setIsOpen(false)\n\n  const onConfirm = () => {\n    setIsOpen(false)\n    gridApi.showLoadingOverlay()\n    mutateBulkDelete({ variables })\n  }\n\n  return (\n    <>\n      <StatefulPopover\n        popoverMargin={8}\n        content={\n          <StatefulMenu\n            items={[\n              {\n                label: formatMessage(messages.allDelete),\n                onItemSelect: () => {\n                  setIsOpen(true)\n                },\n              },\n            ]}\n            onItemSelect={onItemSelect}\n            overrides={InlineMenuOverrides}\n          />\n        }\n        placement={PLACEMENT.bottomRight}\n        overrides={PopoverOverrides}\n      >\n        <IconButton size={20} overrides={ThreeDotButtonOverrides}>\n          <ThreeDots />\n        </IconButton>\n      </StatefulPopover>\n      {isOpen && (\n        <DeleteConfirmationDialog onClose={onClose} onConfirm={onConfirm} />\n      )}\n    </>\n  )\n}\n","import { FC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { EngagementTypeAllowedStatusKeys } from 'gql/types/globalTypes'\nimport { useSelection } from 'components/ag-grid'\nimport { useEngagementTypePreferences } from '../../EngagementTypePreferencesProvider'\nimport { MakeActiveButton } from './MakeActiveButton'\nimport { MakeInactiveButton } from './MakeInactiveButton'\nimport { DeleteButton } from './DeleteButton'\nimport { BulkActionsProps } from './types'\nimport {\n  Root,\n  SelectionInfoContainer,\n  ActionContainer,\n  SelectionInfo,\n} from './styled-components'\n\nexport const BulkActions: FC<BulkActionsProps> = props => {\n  const { totalItems, appliedSearchTerm, ...restProps } = props\n  const { getSelectedItems, isSelectAll, getExcludedItems } = useSelection()\n  const { preferences } = useEngagementTypePreferences()\n  const { createdBy, statuses, templateEngagementTypes } = preferences\n\n  const bulkActionVariables = () => ({\n    uuids: getSelectedItems(),\n    isSelectAll: isSelectAll(),\n    excludedUuids: getExcludedItems(),\n    searchTerm: appliedSearchTerm,\n    filters: {\n      templateEngagementTypes,\n      createdBy: createdBy?.map(({ uuid }) => uuid),\n      status: statuses as EngagementTypeAllowedStatusKeys[],\n    },\n  })\n\n  return (\n    <Root>\n      <SelectionInfoContainer>\n        <SelectionInfo>\n          <FormattedMessage\n            defaultMessage=\"{count, number} engagement {count, plural, one {type} other {types}} selected\"\n            description=\"Section title\"\n            values={{\n              count: isSelectAll()\n                ? totalItems && totalItems - getExcludedItems().length\n                : getSelectedItems().length,\n            }}\n          />\n        </SelectionInfo>\n      </SelectionInfoContainer>\n      <ActionContainer>\n        <MakeActiveButton variables={bulkActionVariables()} {...restProps} />\n        <MakeInactiveButton variables={bulkActionVariables()} {...restProps} />\n        <DeleteButton variables={bulkActionVariables()} {...restProps} />\n      </ActionContainer>\n    </Root>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const RootContainer = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n})\n\nexport const Footer = styled('footer', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  position: 'sticky',\n  left: 0,\n  bottom: 0,\n  paddingRight: sizing.scale600,\n}))\n\nexport const SubHeaderRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingLeft: sizing.scale800,\n  paddingRight: sizing.scale800,\n  height: '62px',\n}))\n","import { defineMessages, useIntl } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useMe } from 'providers/MeProvider'\nimport { DocumentTitle } from 'ui-components/DocumentTitle'\n\nconst messages = defineMessages({\n  engagementTypes: {\n    defaultMessage: 'Engagement Types',\n    description: 'Page title',\n  },\n})\n\nexport const EngagementListTitle = () => {\n  const { formatMessage } = useIntl()\n  const { companyName } = useMe().meta\n  const { displayName: eventName } =\n    useEventLocation().location?.attributes ?? {}\n\n  return (\n    <DocumentTitle\n      title={`${formatMessage(\n        messages.engagementTypes\n      )} - ${eventName} - ${companyName}`}\n    />\n  )\n}\n","import { VFC, useState, ChangeEvent } from 'react'\nimport { QueryFunction, useQuery } from 'react-query'\nimport { GridApi } from '@ag-grid-community/core'\nimport { queryEngagementTypes, useApolloClient } from 'gql'\nimport { Pagination, KIND } from '@jifflenow/brightui/pagination'\nimport { useRouteMatch } from 'react-router-dom'\nimport { useDebounce } from 'utils/debounce'\nimport { usePageSizes } from 'utils/usePageSizes'\nimport {\n  EngagementTypeAllowedStatusKeys,\n  AllowedSortFormat,\n  EngagementTypeAllowedSortKeys,\n} from 'gql/types/globalTypes'\nimport { Paths } from 'components/Routes/Paths'\nimport { PAGE_SIZE, useSelection } from 'components/ag-grid'\nimport { EventMainHeader } from 'components/EventMainHeader'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport {\n  getEngagementTypesVariables,\n  getEngagementTypes_getEngagementTypes_data,\n} from 'gql/types/getEngagementTypes'\nimport { getEngagementTypesList } from 'rest'\nimport { useEngagementTypePreferences } from '../EngagementTypePreferencesProvider'\nimport { EngagementTypeEdit } from '../EngagementTypeEdit'\nimport { List } from './List'\nimport { Header } from './Header'\nimport { Filters } from './Filters'\nimport { BulkActions } from './BulkActions'\nimport { Footer, RootContainer, SubHeaderRoot } from './styled-components'\nimport { EngagementListTitle } from './EngagementListTitle'\nimport {\n  ActivitySortBy,\n  EngagementTypesSearchResponse,\n  GetEngagementTypesQueryParams,\n  GetEngagementTypesQueryParamsType,\n  GetEngagementTypesQueryResponseType,\n} from './types'\n\nconst getEngagementTypesQueryFunc = (\n  client: any\n): QueryFunction<\n  GetEngagementTypesQueryResponseType,\n  ['getEngagementTypes', string, GetEngagementTypesQueryParamsType]\n> => async ({ queryKey: [, version, { ...queryParams }] }) => {\n  if (version === '2') {\n    const data = (\n      await queryEngagementTypes(client, {\n        variables: queryParams as getEngagementTypesVariables,\n        fetchPolicy: 'network-only',\n      })\n    ).data!.getEngagementTypes\n\n    return data\n  } else {\n    const { data, meta } = await getEngagementTypesList(\n      queryParams as GetEngagementTypesQueryParams\n    )\n\n    return { data, page: meta.page }\n  }\n}\n\nexport const EngagementTypesList: VFC = () => {\n  const client = useApolloClient()\n  const [gridApi, setGridApi] = useState<GridApi | null>(null)\n  const [search, setSearch] = useState<string>('')\n  const searchTerm = useDebounce(search.trim(), 500)\n  const { deselectAll, getSelectedItems, isSelectAll } = useSelection()\n  const [pageNumber, setPageNumber] = useState<number>(1)\n\n  const {\n    version,\n    systemName: eventName,\n  } = useEventLocation().location!.attributes\n\n  const matchEngagementTypesPath = useRouteMatch({\n    exact: true,\n    path: Paths.ENGAGEMENT_TYPES.path,\n  })\n\n  const resetToFirstPage = () => {\n    setPageNumber(1)\n    version === '2' && deselectAll()\n  }\n\n  const listPreferences = useEngagementTypePreferences()\n\n  const {\n    sortBy,\n    sortOrder,\n    statuses,\n    createdBy,\n    templateEngagementTypes,\n    pageSize,\n  } = listPreferences.preferences\n\n  const [currentPageSize, setCurrentPageSize] = useState(pageSize ?? PAGE_SIZE)\n\n  const {\n    isLoading,\n    isFetching,\n    refetch,\n    data: { page, data, grandTotal = 0 } = {},\n  } = useQuery(\n    [\n      'getEngagementTypes',\n      version,\n      version === '2'\n        ? {\n            searchTerm,\n            page: { size: currentPageSize, number: pageNumber },\n            sortOrder: sortOrder as AllowedSortFormat,\n            sortBy: sortBy as EngagementTypeAllowedSortKeys,\n            filters: {\n              templateEngagementTypes,\n              createdBy: createdBy?.map(({ uuid }) => uuid),\n              status: statuses as EngagementTypeAllowedStatusKeys[],\n            },\n          }\n        : {\n            path: {\n              eventName,\n            },\n            query: {\n              search_term: searchTerm,\n              pageParams: pageNumber.toString(),\n              perPageParams: currentPageSize.toString(),\n              sortBy: sortBy as ActivitySortBy,\n              ...(statuses?.length === 1 && {\n                active: statuses[0] === 'active',\n              }),\n              'meeting_type_master_uuids[]': templateEngagementTypes,\n            },\n          },\n    ],\n    getEngagementTypesQueryFunc(client),\n    {\n      onSuccess: () => gridApi?.hideOverlay(),\n      onError: () => gridApi?.showNoRowsOverlay(),\n    }\n  )\n\n  const { total = 0 } = page ?? {}\n  const pageSizes = usePageSizes(total)\n\n  const refetchAndResetToFirstPage = () => {\n    pageNumber === 1 && refetch()\n    resetToFirstPage()\n  }\n\n  if (isLoading || isFetching) {\n    gridApi?.showLoadingOverlay()\n  }\n\n  const rowDeleteHandler = () => {\n    if (data!.length !== 1 || pageNumber === 1) {\n      refetch()\n    } else {\n      setPageNumber(prevPageNumber => prevPageNumber - 1)\n    }\n  }\n\n  return (\n    <RootContainer>\n      {matchEngagementTypesPath && <EngagementListTitle />}\n      <EventMainHeader />\n      <Header\n        search={search}\n        itemCount={total}\n        onSearch={(e: ChangeEvent<HTMLInputElement>) => {\n          resetToFirstPage()\n          setSearch(e.target.value)\n        }}\n        onCreate={() => refetch()}\n      />\n      <SubHeaderRoot>\n        <Filters onChange={resetToFirstPage} />\n        {version === '2' && (isSelectAll() || getSelectedItems().length) ? (\n          <BulkActions\n            gridApi={gridApi!}\n            totalItems={total}\n            appliedSearchTerm={searchTerm}\n            resetToFirstPage={refetchAndResetToFirstPage}\n          />\n        ) : null}\n      </SubHeaderRoot>\n      <List\n        gridApi={gridApi}\n        setGridApi={setGridApi}\n        onSort={resetToFirstPage}\n        paginationPageSize={currentPageSize}\n        onRowDelete={rowDeleteHandler}\n        {...listPreferences}\n        {...{ refetch, grandTotal }}\n        data={\n          version === '2'\n            ? (data as getEngagementTypes_getEngagementTypes_data[])\n            : (data as EngagementTypesSearchResponse['data'])\n        }\n      />\n      <Footer>\n        {total > PAGE_SIZE && (\n          <Pagination\n            kind={KIND.light}\n            totalItems={total}\n            pageSizes={pageSizes}\n            currentPageSize={currentPageSize}\n            currentPageNumber={pageNumber}\n            onPageNumberChange={setPageNumber}\n            onPageSizeChange={pageSize => {\n              setCurrentPageSize(pageSize)\n              setPageNumber(1)\n              listPreferences.patchPreferences({ pageSize })\n            }}\n          />\n        )}\n      </Footer>\n      {useRouteMatch(Paths.ENGAGEMENT_TYPE.path) && <EngagementTypeEdit />}\n    </RootContainer>\n  )\n}\n","import { VFC } from 'react'\nimport { ListSelectionProvider } from 'components/ag-grid'\nimport { EngagementTypePreferencesProvider } from './EngagementTypePreferencesProvider'\nimport { EngagementTypesList } from './EngagementTypesList'\n\nexport const EngagementTypes: VFC = () => (\n  <EngagementTypePreferencesProvider>\n    <ListSelectionProvider>\n      <EngagementTypesList />\n    </ListSelectionProvider>\n  </EngagementTypePreferencesProvider>\n)\n","import { styled, withStyle } from '@jifflenow/brightui'\n\nexport const Root = styled('div', ({ $theme: { sizing, mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flexShrink: 0,\n  justifyContent: 'center',\n  marginBottom: sizing.scale100,\n  minHeight: '70px',\n  paddingLeft: sizing.scale1200,\n  paddingRight: sizing.scale600,\n  [mediaQuery.medium]: {\n    paddingLeft: sizing.scale700,\n    paddingRight: sizing.scale500,\n  },\n}))\n\nconst FlexContainer = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport const Wrapper = styled('div', ({ $theme: { colors } }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderBottomWidth: '1px',\n  borderBottomStyle: 'solid',\n  borderBottomColor: colors.mono300,\n}))\n\nexport const EventDetails = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: sizing.scale600,\n}))\n\nexport const StatusWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale400,\n}))\n\nexport const EventName = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.HeadingSmall,\n    color: colors.mono900,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  })\n)\n\nexport const LocationDetails = withStyle(\n  FlexContainer,\n  ({ $theme: { sizing } }) => ({\n    justifyContent: 'space-between',\n    paddingBottom: sizing.scale0,\n  })\n)\n\nexport const EventInfo = withStyle(FlexContainer, {})\n\nconst StyledText = styled('div', ({ $theme: { typography, colors } }) => ({\n  ...typography.font400,\n  color: colors.mono700,\n}))\n\nexport const EventDates = withStyle(StyledText, ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale600,\n}))\n\nexport const TimeIconWrapper = withStyle(FlexContainer, {\n  marginRight: '7px',\n})\n\nexport const TimeZone = withStyle(StyledText, {})\n\nexport const LogoWrapper = styled('div', {\n  display: 'flex',\n})\n\nexport const SandboxWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale300,\n  marginRight: sizing.scale600,\n  marginTop: sizing.scale700,\n}))\n\nexport const SandboxText = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Caption2,\n    backgroundColor: colors.warning50,\n    borderColor: colors.warning,\n    borderRadius: sizing.scale100,\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    fontSize: sizing.scale400,\n    paddingBottom: sizing.scale100,\n    paddingLeft: sizing.scale300,\n    paddingRight: sizing.scale300,\n    paddingTop: sizing.scale100,\n  })\n)\n","import { VFC, useMemo } from 'react'\nimport { DateTime } from 'luxon'\nimport { FormattedMessage } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { EventStatus } from 'components/Events'\nimport { formatDateRange, formatToStartOfTheDay } from 'utils/dates'\nimport { TimeZoneOutlined } from '@jifflenow/brightui/icon'\nimport { Logo } from 'components/Common/Logo'\nimport {\n  Root,\n  EventDetails,\n  LocationDetails,\n  EventName,\n  StatusWrapper,\n  TimeZone,\n  EventDates,\n  TimeIconWrapper,\n  EventInfo,\n  Wrapper,\n  LogoWrapper,\n  SandboxText,\n  SandboxWrapper,\n} from './styled-components'\n\nexport const EventMainHeader: VFC = () => {\n  const {\n    attributes: {\n      displayName,\n      filterStatus,\n      mode,\n      timeZone,\n      startDate,\n      endDate,\n      address,\n    },\n  } = useEventLocation().location!\n\n  const eventTimeZone = useMemo(\n    () => (timeZone ? DateTime.local().setZone(timeZone).offsetNameLong : ''),\n    [timeZone]\n  )\n\n  const urlPath = window.location.pathname\n  const sandboxInstance =\n    urlPath.includes('sandbox-') || urlPath.includes('staging-')\n\n  return (\n    <Wrapper>\n      <Root>\n        <EventDetails>\n          <StatusWrapper>\n            <EventStatus status={filterStatus} mode={mode} />\n          </StatusWrapper>\n          <EventName>{displayName}</EventName>\n        </EventDetails>\n        <LocationDetails>\n          <EventInfo>\n            <EventDates>\n              {`${formatDateRange(\n                formatToStartOfTheDay(startDate),\n                formatToStartOfTheDay(endDate)\n              )} | ${address}`}\n            </EventDates>\n            <TimeIconWrapper>\n              <TimeZoneOutlined />\n            </TimeIconWrapper>\n            <TimeZone>{eventTimeZone}</TimeZone>\n          </EventInfo>\n        </LocationDetails>\n      </Root>\n      <LogoWrapper>\n        {sandboxInstance && (\n          <SandboxWrapper>\n            <SandboxText>\n              <FormattedMessage\n                defaultMessage=\"You are currently using the sandbox instance.{br}Intended for use with Test Data only.\"\n                description=\"Warning text\"\n                values={{\n                  br: <br />,\n                }}\n              />\n            </SandboxText>\n          </SandboxWrapper>\n        )}\n        <Logo />\n      </LogoWrapper>\n    </Wrapper>\n  )\n}\n","import { useCallback } from 'react'\nimport { QueryFunction, useQuery, UseQueryOptions } from 'react-query'\nimport { fetchEngagementTypes_fetchEngagementTypes } from 'gql/types/fetchEngagementTypes'\nimport { fetchEngagementTypesQuery, useApolloClient } from 'gql'\nimport { fetchEngagementTypes } from 'rest'\n\ntype ParamsType = {\n  eventName: string\n  version: string\n  showOnlyNonConsecutiveEngagementTypes?: boolean\n  showIrpEnabled?: boolean\n}\n\ntype QueryFuncResponseType = Omit<\n  fetchEngagementTypes_fetchEngagementTypes & {\n    irp_enabled?: boolean\n    uuid?: string\n  },\n  '__typename'\n>[]\n\nexport const useEngagementTypesQuery = (\n  params: ParamsType,\n  options?: Omit<\n    UseQueryOptions<\n      QueryFuncResponseType,\n      Error,\n      QueryFuncResponseType,\n      ['getEngagementTypeSettings', ParamsType]\n    >,\n    'queryKey' | 'queryFn'\n  >\n) => {\n  const client = useApolloClient()\n\n  const callback = useCallback<\n    QueryFunction<\n      QueryFuncResponseType,\n      ['getEngagementTypeSettings', ParamsType]\n    >\n  >(\n    async ({\n      queryKey: [\n        ,\n        {\n          version,\n          eventName,\n          showIrpEnabled,\n          showOnlyNonConsecutiveEngagementTypes,\n        },\n      ],\n    }) => {\n      if (version === '2') {\n        const {\n          data: { fetchEngagementTypes },\n        } = await fetchEngagementTypesQuery(client, {\n          variables: {\n            ...(showOnlyNonConsecutiveEngagementTypes && {\n              showOnlyNonConsecutiveEngagementTypes: true,\n            }),\n            showCompleted: true,\n          },\n          fetchPolicy: 'network-only',\n        })\n\n        return fetchEngagementTypes\n      } else {\n        const data = await fetchEngagementTypes({\n          path: { eventName },\n          query: {\n            ...(showIrpEnabled && { show_irp_enabled: 'true' }),\n            ...(showOnlyNonConsecutiveEngagementTypes && {\n              show_only_non_consecutive_engagement_types: 'true',\n            }),\n          },\n        })\n\n        return data.data\n      }\n    },\n    [client]\n  )\n\n  return useQuery(['getEngagementTypeSettings', params], callback, options)\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const CopyContentWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  width: 'fit-content',\n  marginTop: sizing.scale500,\n}))\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const copyButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: sizing.scale0,\n    }),\n  },\n}\n","import { FC } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { CopyOutlined } from '@jifflenow/brightui/icon'\nimport { Paragraph1 } from '@jifflenow/brightui/typography'\nimport { Button } from '@jifflenow/brightui/button'\nimport {\n  PLACEMENT,\n  StatefulTooltip,\n  TRIGGER_TYPE,\n} from '@jifflenow/brightui/tooltip'\nimport { CopyEmbedSourceCodeProps } from './types'\nimport { CopyContentWrapper } from './styled-components'\nimport { copyButtonOverrides } from './overrides'\n\nconst messages = defineMessages({\n  copiedLabel: {\n    defaultMessage: 'Copied',\n    description: 'Field label',\n  },\n})\n\nexport const CopyEmbedSourceCode: FC<CopyEmbedSourceCodeProps> = ({\n  buttonLabel,\n  link,\n  title,\n  disabled,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Paragraph1>{title}</Paragraph1>\n      <StatefulTooltip\n        content={() => formatMessage(messages.copiedLabel)}\n        placement={PLACEMENT.bottom}\n        triggerType={TRIGGER_TYPE.click}\n        focusLock={false}\n        showArrow\n      >\n        <CopyContentWrapper>\n          <CopyToClipboard text={link}>\n            <Button\n              startEnhancer={CopyOutlined}\n              kind=\"minimal\"\n              type=\"button\"\n              overrides={copyButtonOverrides}\n              disabled={disabled}\n            >\n              {buttonLabel}\n            </Button>\n          </CopyToClipboard>\n        </CopyContentWrapper>\n      </StatefulTooltip>\n    </>\n  )\n}\n","import { SelectOverrides } from '@jifflenow/brightui/select'\nimport { TimePickerOverrides } from '@jifflenow/brightui/timepicker'\n\nconst selectOverrides: SelectOverrides = {\n  Root: {\n    style: ({ $theme: { typography } }) => ({\n      ...typography.Paragraph2,\n      minWidth: '98px',\n    }),\n  },\n  ControlContainer: {\n    style: ({ $theme: { colors }, $error }) => ({\n      borderLeftStyle: 'none',\n      borderRightStyle: 'none',\n      borderTopStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n      backgroundColor: $error ? colors.negative50 : colors.mono300,\n    }),\n  },\n  ValueContainer: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingTop: sizing.scale300,\n      paddingBottom: sizing.scale300,\n    }),\n  },\n  SingleValue: {\n    style: ({\n      $disabled,\n      $error,\n      $isFocused,\n      $isPseudoFocused,\n      $theme: { colors },\n    }) => {\n      const borderColor = $disabled\n        ? colors.inputBorder\n        : $error && $isFocused\n        ? colors.borderFocus\n        : $error\n        ? colors.inputBorderError\n        : $isFocused || $isPseudoFocused\n        ? colors.borderFocus\n        : ''\n\n      return {\n        display: 'flex',\n        alignItems: 'center',\n        ...(borderColor\n          ? {\n              backgroundColor: colors.primary50,\n              borderBottomColor: borderColor,\n              borderBottomStyle: 'solid',\n              borderBottomWidth: '1px',\n              display: 'flex',\n              alignItems: 'center',\n            }\n          : null),\n      }\n    },\n  },\n  Dropdown: {\n    style: ({ $theme: { colors } }) => ({\n      outline: 'none',\n      maxHeight: '144px',\n      border: `1px solid ${colors.mono600}`,\n    }),\n  },\n\n  DropdownContainer: {\n    style: {\n      outline: 'none',\n      width: '76px',\n    },\n  },\n  DropdownListItem: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: sizing.scale400,\n      paddingRight: sizing.scale300,\n    }),\n  },\n  Popover: {\n    props: {\n      overrides: {\n        Body: {\n          style: { zIndex: 1 },\n        },\n      },\n    },\n  },\n  InputContainer: {\n    style: ({ $theme: { sizing } }) => ({\n      display: 'flex',\n      flexBasis: sizing.scale0,\n      flexGrow: 1,\n    }),\n  },\n}\n\nexport const timePickerOverrides = ({\n  noResultsMsg,\n}: {\n  noResultsMsg: string\n}): TimePickerOverrides => ({\n  Select: {\n    props: {\n      overrides: selectOverrides,\n      noResultsMsg,\n    },\n  },\n})\n","import { styled } from '@jifflenow/brightui'\nimport { IconButton } from '@jifflenow/brightui/button'\n\nexport const Root = styled('div', {\n  display: 'flex',\n  flexDirection: 'row',\n})\n\nexport const Error = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.font300,\n    color: colors.negative,\n    marginTop: sizing.scale200,\n    width: '195px',\n  })\n)\n\nexport const StyledIconButton = styled(\n  IconButton,\n  ({ $theme: { sizing } }) => ({\n    marginLeft: sizing.scale0,\n    minWidth: '26px',\n  })\n)\n\nexport const ToText = styled<{ $hasError?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { colors, typography, sizing }, $hasError }) => ({\n    ...typography.Paragraph2,\n    backgroundColor: $hasError ? colors.negative50 : colors.mono300,\n    paddingTop: sizing.scale300,\n    paddingBottom: sizing.scale300,\n  })\n)\n\nexport const MobileToText = styled('div', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale200,\n  marginRight: sizing.scale200,\n  display: 'flex',\n  alignItems: 'center',\n}))\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const getButtonOverrides = (\n  error: string | undefined\n): ButtonOverrides => ({\n  BaseButton: {\n    style: ({ $theme: { colors } }) => ({\n      backgroundColor: error ? colors.negative50 : colors.mono300,\n      borderLeftStyle: 'none',\n      borderTopStyle: 'none',\n      borderRightStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopRightRadius: 'none',\n      borderBottomRightRadius: 'none',\n      borderTopLeftRadius: 'none',\n      borderBottomLeftRadius: 'none',\n    }),\n  },\n})\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { TimePicker } from '@jifflenow/brightui/timepicker'\nimport { Trash } from '@jifflenow/brightui/icon'\nimport { useMediaQuery } from 'utils/useMediaQuery'\nimport { RangeTimeSlotProps } from './types'\nimport { timePickerOverrides } from './timePickerOverrides'\nimport {\n  Root,\n  Error,\n  StyledIconButton,\n  ToText,\n  MobileToText,\n} from './styled-components'\nimport { getButtonOverrides } from './buttonOverrides'\n\nconst getJSDate = (date: string) => new Date(date)\n\nconst messages = defineMessages({\n  to: {\n    defaultMessage: 'to',\n    description: 'Separator text for start and end times',\n  },\n  noResultsMsg: {\n    defaultMessage: 'Invalid time',\n    description: 'Label text',\n  },\n})\n\nexport const RangeTimeSlot: VFC<RangeTimeSlotProps> = props => {\n  const { formatMessage } = useIntl()\n  const { start, end, error, onStartChange, onEndChange, onDelete } = props\n\n  const noResultsMsg = formatMessage(messages.noResultsMsg)\n\n  return (\n    <>\n      <Root>\n        <TimePicker\n          value={getJSDate(start)}\n          onChange={date => onStartChange(date)}\n          creatable\n          overrides={timePickerOverrides({ noResultsMsg })}\n          error={!!error}\n        />\n        {useMediaQuery('medium') ? (\n          <ToText $hasError={!!error}>{formatMessage(messages.to)}</ToText>\n        ) : (\n          <MobileToText>–</MobileToText>\n        )}\n\n        <TimePicker\n          value={getJSDate(end)}\n          onChange={date => onEndChange(date)}\n          creatable\n          overrides={timePickerOverrides({ noResultsMsg })}\n          error={!!error}\n        />\n        <StyledIconButton\n          size={18}\n          overrides={getButtonOverrides(error)}\n          onClick={() => onDelete()}\n        >\n          <Trash />\n        </StyledIconButton>\n      </Root>\n      {error ? <Error>{error}</Error> : null}\n    </>\n  )\n}\n","import { Icon, IconProps } from '@jifflenow/brightui/icon'\n\nexport const SuccessIcon = (props: IconProps) => (\n  <Icon width=\"208\" height=\"207\" viewBox=\"0 0 208 207\" {...props}>\n    <ellipse cx=\"106\" cy=\"202.5\" rx=\"87\" ry=\"4.5\" fill=\"#ECEBEA\" />\n    <circle opacity=\".05\" cx=\"109.5\" cy=\"81.5\" r=\"81.5\" fill=\"#0096FF\" />\n    <path stroke=\"#C4C5CC\" strokeDasharray=\"5 5 5 5\" d=\"M161 35.5h47\" />\n    <path\n      stroke=\"#0096FF\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      d=\"m100.54 53.304-9.606-7.012M112.792 44.266l-.132-16.11M127.902 50.386l4.924-7.748\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M152.13 133.492a8.09 8.09 0 0 1 8.087 8.087 8.086 8.086 0 0 1-8.087 8.087h-5.391a8.09 8.09 0 0 1 8.087 8.087c0 4.47-3.623 5.392-8.087 5.392h-35.044c-15.37 0-18.87-2.696-37.739-5.392v-45.826c13.209 0 35.044-24.26 35.044-45.826 0-8.524 11.796-11.7 16.174 3.876 2.695 9.602-5.392 28.472-5.392 28.472h43.131a8.09 8.09 0 0 1 8.087 8.087c0 4.469-3.623 10.782-8.087 10.782h-5.392a8.09 8.09 0 0 1 8.087 8.087 8.086 8.086 0 0 1-8.087 8.087h-5.391z\"\n      fill=\"#fff\"\n    />\n    <path\n      d=\"M152.13 133.492v0a8.09 8.09 0 0 1 8.087 8.087 8.086 8.086 0 0 1-8.087 8.087h-5.391a8.09 8.09 0 0 1 8.087 8.087c0 4.47-3.623 5.392-8.087 5.392h-35.044c-15.37 0-18.87-2.696-37.739-5.392v-45.826c13.209 0 35.044-24.26 35.044-45.826 0-8.524 11.796-11.7 16.174 3.876 2.695 9.602-5.392 28.472-5.392 28.472h43.131a8.09 8.09 0 0 1 8.087 8.087c0 4.469-3.623 10.782-8.087 10.782h-5.392a8.09 8.09 0 0 1 8.087 8.087 8.086 8.086 0 0 1-8.087 8.087h-5.391\"\n      stroke=\"#000\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"#fff\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M47 168.536h26.957V103.84H47v64.696z\"\n      fill=\"#0096FF\"\n      stroke=\"#000\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M63.175 155.058a2.696 2.696 0 1 0 0 5.392 2.696 2.696 0 0 0 0-5.392z\"\n      fill=\"#fff\"\n    />\n    <path\n      d=\"m156.5 64 1.01 3.11h3.27l-2.645 1.921 1.01 3.11-2.645-1.922-2.645 1.922 1.01-3.11-2.645-1.922h3.27L156.5 64z\"\n      fill=\"#C9C7C5\"\n    />\n    <path\n      d=\"m62.5 52 .786 2.418h2.543l-2.058 1.495.786 2.419-2.057-1.495-2.057 1.495.786-2.419-2.058-1.495h2.543L62.5 52z\"\n      fill=\"#0096FF\"\n    />\n    <path stroke=\"#C4C5CC\" strokeDasharray=\"5 5 5 5\" d=\"M0 72.5h47\" />\n  </Icon>\n)\n","import { defineMessages } from 'react-intl'\nimport { RolesDisplayNames } from 'gql/types/globalTypes'\n\nexport const roles = defineMessages<RolesDisplayNames>({\n  CSM: {\n    defaultMessage: 'CSM',\n    description: 'Field label',\n  },\n  MM: {\n    defaultMessage: 'Meeting Manager',\n    description: 'Field label',\n  },\n  JMM: {\n    defaultMessage: 'Junior MM',\n    description: 'Field label',\n  },\n  EA: {\n    defaultMessage: 'Executive Admin',\n    description: 'Field label',\n  },\n  AM: { defaultMessage: 'Requestor', description: 'Field label' },\n  EX: { defaultMessage: 'Attendee', description: 'Field label' },\n  Partner: {\n    defaultMessage: 'Partner',\n    description: 'Field label',\n  },\n  EWSIntegration: {\n    defaultMessage: 'EWS Integration',\n    description: 'Field label',\n  },\n  Integration: {\n    defaultMessage: 'Integration',\n    description: 'Field label',\n  },\n  SfdcIntegration: {\n    defaultMessage: 'Salesforce Integration',\n    description: 'Field label',\n  },\n  ET: {\n    defaultMessage: 'External Attendee',\n    description: 'Field label',\n  },\n  SystemUser: {\n    defaultMessage: 'System User',\n    description: 'Field label',\n  },\n})\n\nexport const commonMessages = defineMessages({\n  allMyAttendees: {\n    defaultMessage: 'All Roles',\n    description: 'Option label',\n  },\n})\n\nexport const weekDays = defineMessages({\n  Monday: {\n    defaultMessage: 'Monday',\n    description: 'Week day name',\n  },\n  Tuesday: {\n    defaultMessage: 'Tuesday',\n    description: 'Week day name',\n  },\n  Wednesday: {\n    defaultMessage: 'Wednesday',\n    description: 'Week day name',\n  },\n  Thursday: {\n    defaultMessage: 'Thursday',\n    description: 'Week day name',\n  },\n  Friday: {\n    defaultMessage: 'Friday',\n    description: 'Week day name',\n  },\n  Saturday: {\n    defaultMessage: 'Saturday',\n    description: 'Week day name',\n  },\n  Sunday: {\n    defaultMessage: 'Sunday',\n    description: 'Week day name',\n  },\n})\n","import { useState, useEffect } from 'react'\n\nexport const useBeforeUnload = () => {\n  const [showBeforeUnloadPopup, setShowBeforeUnloadPopup] = useState(false)\n\n  useEffect(() => {\n    const handler = (event: BeforeUnloadEvent) => {\n      event.preventDefault()\n      event.returnValue = ''\n    }\n\n    if (showBeforeUnloadPopup) {\n      window.addEventListener('beforeunload', handler)\n    } else {\n      window.removeEventListener('beforeunload', handler)\n    }\n\n    return () => {\n      window.removeEventListener('beforeunload', handler)\n    }\n  }, [showBeforeUnloadPopup])\n\n  return setShowBeforeUnloadPopup\n}\n","import { useMemo } from 'react'\n\nexport const usePageSizes = (\n  totalItems: number,\n  PAGE_SIZES = [10, 20, 50, 100]\n) => {\n  const pageSizes = useMemo(() => {\n    const pageSizeIndex = PAGE_SIZES.findIndex(size => size >= totalItems)\n\n    return PAGE_SIZES.slice(\n      0,\n      (pageSizeIndex === -1 ? PAGE_SIZES.length - 1 : pageSizeIndex) + 1\n    )\n  }, [PAGE_SIZES, totalItems])\n\n  return pageSizes\n}\n"],"names":["FormControl","styled","Control","marginBottom","$theme","sizing","scale700","StyledHeader","typography","breakpoints","$isHidden","marginTop","display","scale800","maxWidth","font350","fontWeight","medium","scale600","flexBasis","Hr","colors","borderBottomColor","mono400","borderBottomStyle","borderBottomWidth","StyledPageBreak","font650","font550","EngagementTypeContext","createContext","undefined","EngagementTypeProvider","children","useEventLocation","location","attributes","systemName","version","engagementRes","useEngagementTypeQuery","variables","uuid","useParams","engagementId","notifyOnNetworkStatusChange","skip","useEngagementTypeQueryHelper","detailRes","engagementType","settings","useEngagementTypeDetails","engagementTypeId","id","names","loading","error","refetch","engagementTypeSurveys","getEngagementTypeSurveys","engagementTypeSettings","getEngagementTypeSettings","engagementTypeDetails","reduce","acc","name","value","useEngagementTypeDetailsHelper","getEngagementType","engagementResV1","useQuery","path","eventName","engagementTypeUuid","fetchEngagementType","enabled","detailResV1","query","fetchEngagementTypeSettingsRestQuery","surveysResV1","fetchSurveys","data","tval","getEngagementTypeV1","useMemo","surveysData","description","displayOrder","status","templateEngagementType","masterEngagementType","meetingTypeMasterName","MasterEngagementTypes","onButtonClick","isLoading","Provider","useEngagementType","context","useContext","GenerateRedirectLink","label","search","useLocation","url","startsWith","generatePath","BasePaths","rel","target","href","messages","defineMessages","warningLabel","defaultMessage","confirmLabel","EngagementModal","title","dependentLinks","onClose","onConfirm","formatMessage","useIntl","group","result","currentValue","isOpen","size","Object","keys","map","key","index","$version","link","onClick","WarningMessage","Paragraph1","scale300","FooterButton","Button","minWidth","WarningList","paddingLeft","color","primaryA","ListItem","Paragraph2","StyledListItemAnchor","Anchor","textDecoration","StyledRightArrow","transform","okButtonOverrides","BaseButton","style","marginLeft","cancelled_calendar_to_internal_attendee","cancelled_calendar_to_external_attendee","cancel_email_int_attendee_mst","email_to_mm_on_meeting_cancellation","email_to_req_on_meeting_cancellation","mail_actions","ReasonForCancellationDialog","pendoName","heading","message","buttonLabel","origin","window","baseUrl","basename","activity_uuid","URLSearchParams","get","SIZE","closeable","item","type","overrides","InfoTooltip","content","showArrow","overviewTooltipOverride","InfoIconOverride","positive","on","off","negative","EngagementTypeToggle","bold","infoTooltip","disabled","inverted","useState","showConfirmation","setShowConfirmation","warningHeader","warningMessage","render","input","onChange","meta","submitError","$error","$bold","ariaLabel","checked","e","EngagementTypeToggleWithDesc","desc","hint","EngagementTypeInput","placeholder","min","required","Field","parse","validations","Validation","modalLabels","modalHeader","modalMessage","cancelButtonLabel","successButtonLabel","Footer","reset","useForm","handleDialogClose","ConfirmationDialog","cancelLabel","successLabel","onCancel","onSuccess","subscription","validating","submitting","dirty","kind","KIND","successButtonOverrides","ModalDesc","font200","mono700","marginRight","CopyEngagementTypeRoot","modalButtonOverrides","width","EngagementCheckBoxField","isActive","handleChange","values","modalTitle","modalDesc","genericError","all","CopyEngagementType","setIsSelectAll","isSelectAll","setExcludeEngagementUuids","setToEngagementUuids","setEngagementType","useFetchByMasterEngagementTypeAndLocation","parseInt","fetchPolicy","onError","showErrorToast","fetchByMasterEngagementTypeAndLocation","useEffect","__typename","filter","engagement","length","engagementOptions","findIndex","element","activeEngagement","splice","engagementTypeSettingsLabels","locationTypes","setting","setTimeAvailability","participants","approvalProcess","topicOptions","topicTrackOptions","forms","inboundRequestForm","survey","advancedSettings","csmOnly","linkSettings","notifications","outboundMeetingRequestForm","inboundMeetingRequestForm","surveyForms","CopyEngagementTypeSettings","setSettingsToCopy","enable_external_widget_setting","enable_external_widget","isGeneralMeeting","configs","privileges","subType","enable_topic","enable_topic_to_activity","enable_room_to_topic","enable_user_to_topic","engagementTypeSettingsOptions","eventRole","useMe","labelKey","EngagementSettingsGroupNames","canManageSurvey","Boolean","useEngagementTypeSettingsItems","engagementTypeSettingsItems","canManageForms","canManageSelfServeSettings","canManageNotifications","setEngagementTypeSettings","engagementMenuSettings","engagementSettings","engagementSettingsOptions","successMessage","modalTitle2","CopySettings","client","useApolloClient","toEngagementUuids","excludeEngagementUuids","settingsToCopyStatus","setSettingsToCopyStatus","settingsToCopy","showLoader","setShowLoader","handleSubmit","configsToUpdate","fromEngagementUuid","mutateCopyEngagementSettingToEngagements","showSuccessToast","settingsLabel","searchPlaceholder","Header","closeDrawer","useDrawer","setValue","setIsOpen","history","useHistory","useRouteMatch","exact","Paths","params","route","useEngagementTypesQuery","showIrpEnabled","showOnlyNonConsecutiveEngagementTypes","fetchEngagementTypes","options","slice","sort","a","b","showCopyTo","$hasMenu","Drawer","filterOptions","filterValue","excludeOptions","matchProp","push","handleOnChange","searchable","clearable","selectOverrides","onBlur","usePageTitle","engagementTypeName","displayName","companyName","useDocumentTitle","Inner","paddingTop","scale500","paddingRight","paddingBottom","Svg","mono600","Root","SingleValue","component","props","flexDirection","height","overflow","StyledForm","StyledFormSurvey","Body","mediaQuery","flexGrow","Container","scale2400","NotificationLoaderContainer","HeaderContainer","withStyle","DrawerHeaderContainer","boxShadow","flexShrink","FooterContainer","DrawerFooterContainer","flex","FieldLabelContainer","FieldLabel","Subtitle1","mono900","FieldToggleLabel","mono800","FieldToggleWrapper","alignItems","justifyContent","scale100","scale650","FieldToggleWithDescWrapper","flexWrap","FieldToggleDescWrapper","GenericError","LabelSmall","negative700","DurationLabel","scale200","DurationFieldRoot","DurationError","ToggleContainer","scale400","EngagementToggleDesc","Caption1","EngagementToggleHint","Caption2","ToggleContainerWithDesc","DurationHoursContainer","scale1000","Flex","MeetingDurationInput","DurationMinsContainer","MeetingBreakDurationLabel","MinsLabel","IrpReqPageLink","List","scale0","StyledWarningTitle","font300","cursor","fontSize","scale550","lineHeight","outline","InfoTooltipContainer","verticalAlign","CopyBtn","CopyBtnWrapper","INITIAL_STATE","sortBy","sortOrder","Context","ENGAGEMENT_TYPES_PREFERENCES","preferences","patchPreferences","EngagementTypesPreferencesFetcher","onResolve","location_uuid","engagementTypesPreferencesQueryFn","res","ErrorPage","Spinner","EngagementTypePreferencesProvider","setPreferences","handleLocalStorageChange","JSON","newValue","addEventListener","removeEventListener","initPreferences","initialPreferences","localStorage","setItem","stringify","payload","pref","merge","arrayMerge","_","s","patch","subSystem","then","usePreferences","useEngagementTypePreferences","_objectDestructuringEmpty","obj","TypeError","DefaultLocationPreferenceType","FormControlStyled","FormControlStyledToggleContainer","Heading","IrpBody","FormFieldWrapper","DurationContainer","Divider","borderTopWidth","borderTopStyle","borderTopColor","mono300","EngagementContainer","scale1600","textAlign","$disabled","pointerEvents","opacity","FormControlStyledBody","TextAreaContainer","IrpLinkWrapper","Subtitle","Subtitle3","SchedulingTitle","LinkDesc","irpLabel","irpDesc","irpSessionDesc","warningModalTitle","approvalProcessLabel","warningEnableLabel","EnableIRPField","dependentFieldValues","useField","isSession","approval_process","canEnableIrp","useCallback","EngagementLinkField","warning","chunks","getFrameCode","externalWidgetUrl","getCallToActionButtonCode","colour","buttonText","urlRequestLabel","sourceCodeIrpLabel","sourceCodeIrpActionLabel","embedIrpLabel","embedIrpActionLabel","requestMeetingLabel","irpUrlLabel","buttonDisabledInformation","IrpUrlField","theme","enable_external_widget_url","useFormState","activity_external_widget_url","enable_external_widget_url_form","disable_url","disableLink","showHelpText","CopyEmbedSourceCode","primary","durationDayPlaceholder","durationHourPlaceholder","durationMinsPlaceholder","DaysField","fieldValue","formatNumber","days","hours","mins","daysDropdownOptions","Array","from","i","unit","unitDisplay","searchInput","valueKey","dataPendo","HoursField","maxHours","hoursDropdownOptions","filteredHoursDropdownOptions","MinsField","minsDropdownOptions","filteredMinsDropdownOptions","TimeDurationSelect","multiDay","format","Math","floor","toString","MeetingBufferLabel","bufferTimeLabel","nextDayRequestLabel","schedulingLogicLabel","BufferTimeDuration","SchedulingLogic","align","ALIGN","SchedulingLogicField","instructionRadioOverride","instructionInputOverride","manualSchedulingLabel","MethodRequestManualField","enable_external_widget_auto_process","onChangeEnableExternalWidgetAutoProcess","enable_external_widget_auto_process_without_mapping","onChangeEnableExternalWidgetAutoProcessWithoutMapping","labelPlacement","mappedSchedulingLabel","mappingLabel","AutoProcessField","default_mapping","onChangeAutoProcessWithoutMapping","MethodRequestMappedField","unmappedSchedulingLabel","hideInternalAttendeeLabel","relaxRestrictionLabel","offsiteLabel","mstLabel","atLeastOneInternalAttendeeLabel","warningDisableLabel","AutoProcessWithoutMappingField","hide_internal_attendees_in_book_meeting","offsite_enabled","relax_internal_attendee_presence_for_mm","internal_attendee_presence","enable_manual_scheduling","getExternalReqWithoutMappingState","MethodRequestUnMappedField","irpMethodLabel","MethodRequestField","submitError1","submitError2","fieldError","touched","EngagementInputField","autoComplete","urlMeetNowLabel","irpInstantLabel","enableMeetNowLabel","meetNowButtonLabel","meetNowButtonPlaceholder","meetNowLabel","mappedOrUnMappedLabel","MeetNowField","irp_instant_meeting_url","enable_irp_instant_meeting_url","irp_instant_meeting_label","enable_irp_instant_meeting","getMeetNowState","topicOptionsLabel","unmappedUsersLabel","unmappedRoomsLabel","irpSuccessLabel","irpSuccessLabelPlaceholder","SuccessMessageFields","ExternalWidgetAutoProcessWithoutMapping","WidgetFormFields","FormFields","IrpContentLoader","useStyletron","loaderOptions","speed","primaryColor","mono200","secondaryColor","viewBox","y","x","rx","ry","Irp","promptMessage","sectionTitle","updateError","filedError","LoadingShimmer","Form","shimmerShown","useRef","current","onSubmit","noValidate","when","fieldNames","dependentFieldNames","filterEngagementSettings","response","fields","find","v","queryClient","useQueryClient","restQueryParam","queryKey","fetchEngagementTypeSettings","fetchEngagementTypeSettingsQuery","display_name","getEngagementTypeSettingsQueryFunc","refetchGetEngagementTypeSettings","fieldValues","dependentValues","initialValues","change","IrpConfigValues","forEach","findFieldValues","val","activity_setting","external_widget","upsertEngagementTypeSettings","refetchQueries","include","customValue","mutateBulkUpsertEngagementSettings","bulkUpsertEngagementSettings","failureCount","totalCount","successCount","success","errors","FORM_ERROR","code","Loader","Fragment","Title","HeadingXSmall","SubTitle","Wrapper","large","Action","SectionWrapper","ActionContainer","$isSurveyFirst","Section","borderRightColor","mono500","borderRightWidth","borderRightStyle","ActionSection","backgroundColor","$highlight","SectionHeader","PanelBody","ActionType","Label","minHeight","ActionTextWrapper","$isFirst","wordBreak","ActionWrapper","WarningWrapper","WarningText","$isVisible","warning50","borderColor","borderRadius","borderStyle","borderWidth","visibility","accordionOverrides","getBorderColor","getBorderStyle","getBorderWidth","panelOverrides","$expanded","white","PanelContainer","Content","getPadding","warningIconOverride","strokeWidth","tooltips","request_received","calendar_to_internal_attendee","calendar_to_external_attendee","update_calendar_to_internal_attendee","update_calendar_to_external_attendee","email_to_mm_on_meeting_create","request_email_int_attendee_mst","update_email_int_attendee_mst","email_to_mm_on_meeting_approval","email_to_mm_on_meeting_update","email_to_req_on_meeting_approval","email_to_req_on_meeting_update","calendar_to_internal_doctor","calendar_to_external_doctor","cancel_ics_to_internal_doctor","cancel_ics_to_external_doctor","email_to_req_on_participant_acceptance","email_to_mm_on_participant_acceptance","email_to_mm_on_participant_decline","email_to_req_on_participant_decline","email_to_mm_on_new_location_proposal","email_to_requestor_on_new_location_proposal_declined","external_request_received","email_to_requestor_on_external_request_approve","external_request_rejection_by_mm","external_request_auto_process_failed","email_external_request_cancellation","email_to_mm_on_external_meeting_invite","email_to_mm_on_request_create_reject","email_to_requestor","email_to_activity_manager_on_participant_decline","self_nomination_create_ics_internal_attendee","self_nomination_email_to_mm","self_nomination_create_email_internal_attendee","self_nomination_update_ics_internal_attendee","self_nomination_remove_ics_internal_attendee","self_nomination_remove_email_internal_attendee","displayNames","groupNominationTooltips","send_cancelled_notification_to_waitlisted_internal_attendees","send_cancelled_notification_to_waitlisted_external_attendees","waitlist_confirmation_email_to_requestor","waitlist_confirmation_email_to_mm","waitlist_confirmation_ics_to_internal_attendees","waitlist_confirmation_ics_to_external_attendees","waitlist_notification_for_internal_attendees","waitlist_notification_for_external_attendees","groupNominationDisplayNames","warningMessages","request","update","cancel","decline","waitlist","create","warningUserTypes","attendee","participant","ActionsBlocks","actionTypes","sectionName","headers","actionType","setActionType","tempNotificationId","setTempNotificationId","headerIndex","setHeaderIndex","userType","toLowerCase","pi","actionColumns","actionColumn","notificationId","templateType","isCalendar","includes","keyName","popoverMargin","to","currentTarget","br","meetingManagerTooltip","Sections","header","general_categories","defineMessage","session_categories","pre_session_survey","post_session_survey","request_for_post_event_meeting_surveys","Survey","surveyTemplate","surveyHeader","NotificationsForm","mailActions","nonSession","categories","actionSet","flatMap","category","newActionTypes","columnsPresent","newActionColumns","actions","action","present","has","modifiedActionColumns","actionName","mailAction","getCategories","Set","actionsActiveMap","active","accordion","initialState","expanded","renderAll","formattedName","pageTitle","getMailActionsQueryFn","mutateAsync","useMutation","putEngagementMailActionsQueryFn","bodyParams","items","Notifications","BackButtonText","NotificationsDetails","setBeforeUnload","useBeforeUnload","setDirty","handleMessage","event","searchParams","src","border","frameBorder","onLoad","animated","useFormsDirty","padding","Iframe","FormBuilder","survey_uuid","surveyId","survey_master_name","surveyMasterName","current_location_uuid","engagement_type_uuid","stringifyUrl","form_name","skipEmptyString","outboundMeetingForm","OutboundMeeting","inboundMeetingForm","InboundMeeting","FilterLabel","SurveyDropDownRoot","surveyDropdownOverride","surveyForm","surveyFilterLabel","confirmationMessages","discardLabel","keepLabel","setSurvey","tempSelection","setTempSelection","surveyMasterUuid","SpinnerContainer","StyledSpinnerNext","borderLeftWidth","borderLeftColor","roleLabel","roleSearchPlaceholder","RolesField","roles","dropdownOptions","commonMessages","roleCompanyid","roleDisplayName","multi","backspaceClearsInputValue","engagementNamePlaceholder","engagementNameExistsError","EngagementNameField","isCopy","setLoading","initial","trim","validateUrl","fn","lastArg","lastResult","arg","rest","simpleMemoize","searchName","queryValidEngagementTypeName","isValidEngagementTypeName","validate","asyncValidatorReducer","formatOnBlur","After","engagementDescriptionPlaceholder","EngagementDescriptionField","optionLabel","DisplayOrderField","grandTotal","count","FieldWrapper","engagementNameLabel","EngagementTemplateField","basics","engagementDescriptionLabel","engagementTypeUpdateSuccess","focusDecorator","createFocusDecorator","unload","RoleMapper","EngagementBasics","defaultRoles","engagementTemplateName","useFetchRolesForRequestEngagement","getEngagementTypes","useEngagementTypesGrandTotalQuery","page","filters","selectedRoles","some","mutateUpdateEngagementType","onQueryUpdated","clearableValue","roleId","decorators","useSettingsLoader","shown","updateQueryResults","updateQuery","settingsSuccess","existingSettings","updatedSetting","StyledHeading","StyledHeadingDesc","BorderStyled","TopicOptionsBody","SectionTitle","togglesLabel","labelUnmappedUsers","labelUnmappedRooms","labelAllRoomsMapped","labelSelfNominate","labelAllowInternalAttendeeNomination","TopicOptionsLoader","sectionTitleDesc","fieldErrorMessage","topicOptionsLabels","showLoading","TopicOptions","useGetEngagementTypeSettings","StyledInstructionTitle","StyledInstructionDesc","NestedRadio","labelInstant","labelAutoApprovedAfterAllAccept","labelManualApprovedICSOnMeetingApproval","labelManualApprovedICSOnMeetingRequest","labelManualApprovedICSOnSession","labelNoInternalAttendeeMeetingApproved","labelNoInternalAttendeeMeetingPending","IRPLabel","manualForGroupNominations","MeetingStatus","ApprovalStatus","ApprovalProcessContentLoader","helpText","instructionLabel","AdditionalInstructionLabel","ApprovalProcess","LocationTypeBody","ToggleWrapper","DurationWrapper","InputFlexWrapper","InputFieldContainer","FieldSeparator","timeIncrementTitle","timeCanOnlyDecreaseError","timeCannotBeMoreThanMinMaxError","MinuteField","TimeIncrement","hasActiveMeetings","min_duration","offsite_min_duration","booth_tour_enabled","booth_tour_min_duration","validateMeetingsPresent","validateLocationDurations","args","validation","SelectOptions","minDurationLabel","maxDurationLabel","durationRestrictionLabel","OnSiteFormField","offSitesLabel","offSitesLabelPlaceholder","autoUnMappedLabel","OffSitesFormField","boothTourLocationLabel","bootTourLocationPlaceholder","boothTourLocationAddressLabel","bootTourLocationAddressPlaceholder","designatedLocationLabel","designatedLocationDesc","BoothTourSettings","disableMappingLabel","BoothTour","defaultLocationLabel","defaultLocationPlaceholder","roomsLabel","boothTourLabel","ROOM","BOOTH_TOUR","VCON","DefaultLocationDropdown","renderProps","conferences","vconPreference","option","integration_uuid","integration_name","integration_adapter_uuid","DefaultLocationField","useGetConferences","onSiteLabel","onSiteDesc","offSitesDesc","LocationTypesContentLoader","calendarsTitle","minTimeIncrementError","maxDurationError","noButtonLabel","yesButtonLabel","booth_tour_default_location","booth_tour_default_name","handleResponse","sendIcs","dangerouslySetInnerHTML","__html","preventDefault","LocationTypes","useEngagementMeetingData","engagementMeetingData","cleanLocationVconPreference","defaultLocationVconPreferenceValue","default_location_preference","default_location_vcon_preference","locationPreference","prevValues","field","prevLocationPreference","prevLocationVconPreference","newValues","oldValue","defaultLocationPreference","defaultLocationVconPreference","max_duration","offsite_max_duration","booth_tour_max_duration","minTimeIncrement","minimum_timeslot","minError","maxError","CopySlotsModalBodyWrapper","ModalDescription","CopyRoomCheckBox","CopyRoomSlotsRoot","scale900","CopySlotsRoot","ConfirmationMessage","SetAvailabilityHeaderContainer","StyledButtonWrapper","float","StyledButtonLabel","CopyRoomAvailabilityButton","zIndex","CopyButtonLabel","TabsRoot","mono100","position","scale750","top","whiteSpace","TabList","StyledTabList","TabBar","NoteMessage","availabilitySelectOverride","ControlContainer","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","tabOverrides","TabPanel","borderLeftStyle","buttonOverrides","iconButtonOverrides","CopyModalFooter","handleCopySlots","copyButtonDisabled","referenceISODate","getDateFromMinute","minutes","hour","minute","DateTime","startOf","set","day","getMinutes","date","getTimeFromDate","toISOTime","includeOffset","getFullMinutes","getISODateFromTime","time","toISODate","toISO","getPlusISOTime","plus","getISOTimeFromJSDate","getJSDate","toJSDate","getISODateFromDateAndTime","getISODateString","getDate","getDateStringFromJSDate","diffInISODates","prev","next","diff","getPlusISOStringDate","getFormattedTimeFromDate","toFormat","getEndDateOfDay","CopyDaySlotsTo","setChecked","weekDay","weekwise","addCopyDestinationDays","formatDate","modalOverrides","CopyAvailability","sourceWeekDay","availabilities","setAvailabilities","modalProps","targetWeekDays","setTargetWeekDays","availabilityDate","copyAvailabilityLabel","availability","availabilityDay","slots","availableSlots","WeekDayRoot","borderBottom","WeekDayTitle","SlotsRoot","ActionsContainer","TitleActionsContainer","TimeSlotWrapper","AvailabilityDay","restProps","lastSlotEndsAt12AM","end","toLocaleString","weekday","prevEndTime","newStartDate","addSlotsToAvailability","start","handleCopySlotsToOtherDays","deleteAllSlots","RangeTimeSlot","onDelete","deleteSingleSlot","deleteSlot","onStartChange","newDate","editSlotStartTime","onEndChange","editSlotEndTime","overlapError","endTimeLessThanStartTime","Availability","setHandleDiscard","copySource","setCopySource","newAvailabilities","setNewAvailabilities","oldAvailabilities","setOldAvailabilities","newSlot","available","indexesToDelete","checkForOverlaps","endOf","range","currentRangeIndex","endTimeToCompare","hasOverlap","rangeStart","rangeEnd","rangeEndToCompare","indexToUpdate","startTime","startDateTime","toMillis","Date","idx","endTime","is12AM","toISOString","daysMap","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","getSlots","dayIndex","array","onSaveClick","onDiscardClick","hasError","AVAILABILITY","EXCEPTION","availabilitySelectOptions","availabilityOptions","AvailabilitySelect","availabilitySelectLabel","indexOf","handleStatusChange","getValueLabel","CopyDaySlotsToRoom","activeTab","roomChecked","setRoomChecked","offsiteChecked","setOffsiteChecked","boothTourChecked","setBoothTourChecked","boothTour","CopyRoomAvailability","getModalLabel","copyConfirmation","setCopyConfirmation","setCopyButtonDisabled","conflictRoomLabels","setConflictRoomLabels","roomAvailabilityLabel","confirmationModalHeader","confirmationModalMessage","saveButtonLabel","Room","RoomAvailabilityLocationTypes","Offsite","copyRoomData","fromAvailabilityLocationType","toAvailabilityLocationType","validateCopy","validateRoomAvailabilitiesToCopyQuery","validateRoomAvailabilitiesToCopy","conflictRooms","room","conflictRoom","isValid","availabilityLocationType","handleCopy","mutateCopyRoomAvailabilities","rooms","join","NoException","Text","getExceptionsInMinutes","exceptions","timeRanges","endDateTime","exceptionDate","overflowY","maxHeight","borderLeft","StyledModalBody","ModalBody","borderTop","AddExceptionRoot","CalendarRoot","UnavailableText","addSlots","unavailable","ExceptionModalBody","currentDate","calendarDates","timeSlots","setTimeSlots","setCalendarDates","initialCalendarRange","calendarRange","setCalendarRange","timeSlot","dates","datesToExtract","currentTimeSlot","currentSlotIndex","curStart","curEnd","selectRange","allowPartialRange","minDate","preferredStartTime","preferredStartDT","startEnhancer","PlusCircleOutlined","slotIndex","slot","changeSlotStartTime","changeSlotEndTime","onDone","addException","editException","AddEditException","setExceptions","listedExceptionEditIndex","listedExceptions","isEditingException","isSlotEndingAt12AM","AddExceptionButton","minutesMapper","getGroupedExceptionDates","accExceptions","exception","lastAccumulatedException","poppedLastException","pop","ListHeader","ExceptionList","listStyleType","ExceptionListItem","ExceptionDate","ExceptionTime","ExceptionActions","Unavailable","ListItemRoot","ListExceptions","exceptionEditIndex","setExceptionEditIndex","groupedExceptions","exceptionIndex","formatDateRange","indexToDelete","datesToDelete","handleDelete","noException","Exceptions","locationType","newExceptions","setNewExceptions","oldExceptions","setOldExceptions","useRoomExceptionsQuery","getRoomExceptions","dateBasedTimeRanges","timeRange","accRanges","dateKey","getExceptions","oldException","setAvailability","copyRoomAvailabilityLabel","unsavedChangesConfirmationMessage","unsavedChangesConfirmationMessageToCopy","confirmationMessageToAvailabilityDates","confirmationMessageToExceptions","discardButtonLabel","availablityNoteMessage","RoomAvailability","useRoomAvailabilitiesQuery","getRoomAvailabilities","getRecurringAvailabilities","getNonRecurringAvailabilities","SetAvailability","availabilityConfirmation","setAvailabilityConfirmation","setStatus","statusToBeChanged","setStatusToBeChanged","setActiveTab","copyChange","setCopyChange","tabToBeChanged","setTabToBeChanged","unsavedChangesConfirmation","setUnsavedChangesConfirmation","handleDiscard","startDate","endDate","getDurationInDays","availabilityLocationTypes","handleDiscardChangesDialogClose","availabilityExceptionsData","lastIndexOf","copyButton","checkAvailabilityExceptions","validateRoomAvailabilitiesQuery","validateRoomAvailabilities","handleSave","validateRoomExceptionsQuery","validateRoomExceptions","mutateRoomAvailabilities","mutateRoomExceptions","TabHighlight","TabBorder","activeKey","getTabOverrides","onCancelClick","goBack","engagementSettingErrors","MAKE_OPTIONAL_PARTICIPANT_CONFIG_ERROR","ParticipantsTitle","ParticipantsSectionTitle","ParticipantsSectionDesc","ParticipantsBody","$first","MeetingHostLabel","ParticipantsLoader","hideInternalAttendeesInBookMeetingLabel","internalAttendeePresenceLabel","relaxInternalAttendeePresenceForMmLabel","atLeastOneAttendeeRolePresenceLabel","allowRequestorToAddInternalAttendeeLabel","sendVerificationEmailToAttendeeLabel","allowRequestorToNominateThemselves","InternalAttendee","hideExternalAttendeesInBookMeetingLabel","externalAttendeePresenceLabel","allExternalAttendeesVisibleLabel","relaxExternalAttendeePresenceForMmLabel","externalAttendeesVisibleAddedByMmLabel","allowUserToAddNewExternalAttendeeLabel","externalIcsOptOutLabel","dialogTitle","dialogMessage","labelConfirm","labelCancel","ExternalIcs","showWarning","setShowWarning","externalIcsOptOut","changeExternalIcsOptOut","initialExternalIcsOptOut","ExternalAttendee","meetingHostInputLabel","meetingHostInputPlaceholder","enableMeetingHost","atLeastOneMeetingHostLabel","assignRequestorAsHostLabel","assignMappedUserAsHostLabel","mapAttendeeAsHostLabel","allowRequestorsToEditMeetingHostLabel","allowMeetingHostToManageMeetingLabel","allowMeetingHostToEditMeetingLabel","notificationToMeetingHostLabel","MeetingHost","radioGroupOverrides","RadioGroupRoot","defaultModeForAllAttendeesLabel","AttendeeModeSelect","in_person_attendance_custom_label","virtual_attendance_custom_label","AttendeeMode","enable_mode_of_attendance","OptionalParticipant","unMappedSchedulingLabel","FormField","dependentFields","isGeneralMeetingType","hideInternalAttendeesOnChange","hideInternalValue","InternalAttendeeOnChange","InternalAttendeeValue","relaxInternalAttendeeOnChange","relaxInternalAttendeeValue","Participants","errorCode","AdvancedSettingsLoader","AdvancedSettingsTitle","InputWrapper","StyledFormControl","CommentsListFieldWrap","CommentsListHelpText","Note","SelectContainer","MeetingTypeHelpText","ChangeMeetingTypeSelectContainer","Info","ModalContentWrapper","contentPrimary","AreYouAttendingToggle","AdvancedSettingsTextArea","closeButtonOverride","CommentsListField","note","comments","handleInputChange","newComment","comment","handleRemoveOption","allMms","allJmms","meetingManager","juniorMM","jmmMappedWithTopic","jmmMappedToMeetingTypes","executiveAdmin","filterRole","userRole","role","optionMapper","firstName","lastName","CopyNotificationsSelect","eventUsers","setDropdownOptions","__ungrouped","selectedValues","CopyNotifications","attachDocumentOptions","includeBriefingDocs","briefingDocsInMobile","briefingDocsAsAttachment","briefingDocsAsLink","briefingDocsInNotificationTemplates","docAccessOnlyForLoggedIn","AttachDocument","include_briefing_docs","videoConferencing","timeZone","enableVideoConfLink","meetingTypeAvailability","enableTimeZoneSelection","vconDisableErrorMessage","fullDayMeetingTypeConfirmationMessage","labelYes","labelNo","VideoConference","open","setOpen","eventType","enableFullDayMeetingTypeAvailability","changeFullDayMeetingTypeAvailability","initialEnableFullDayMeetingTypeAvailability","EnableVcon","InstructionsModal","changeMeetingTypeTitle","changeMeetingType","actionsSelectPlaceholder","meetingTypeHelpText","changeMeetingTypeSubText","meetingTypeTooltip","selectAllEngagamentTypes","ChangeMeetingTypeSelect","meetingType","setOptions","actionValue","text","selectedOptions","typeId","ChangeMeetingType","enable_change_meeting_type","showInfo","setShowInfo","button","bookMeetingInstructionsTitle","showConflictsOnCalendarTitle","notificationsTitle","instructionsHeaderLabel","instructionsHeaderPlaceholder","instructionsBodyContentLabel","instructionsBodyContentPlaceholder","instructionAdditionalContentLabel","instructionAdditionalContentPlaceholder","declineCommentsLabel","declineCommentsHelpText","cancelCommentsLabel","cancelCommentsHelpText","commentNotes","commentsInputPlaceholder","displayFilledCustomerInfoOnly","sendIcsReplyToRequestor","ccNotificationReplyToTitle","sendRequestorMailToEa","sendAttendeeIcsToEa","sendCopyOfMmEmailToEaParticipant","privilegesTitle","approvalPrivilegeTitle","eaCanApproveOrCancelMeeting","editPrivilegeTitle","eaCanEditMeeting","allowNonMMToEditMeeting","creatorPrivilegesTitle","creatorAttendMeeting","areYouAttendingLabel","showAllRequestors","allowRequestorsToReinvite","virtualEvent","dependentSettings","AdvancedSettings","useAllEventUsers","locationId","number","eventRoles","changeMeetingTypeQueryFn","isRefetching","refetchChangeMeetingTypes","changeMeetingTypeMutationFn","change_meeting_type_links","select_all_engagement_types","activities","selected","transfer_activities","CsmOnlyTitle","TabToggleWrapper","UrlFormControl","MeetingBreakDurationSelect","openNewTab","urlLabel","urlParameters","no_action","redirect","actionDropdownOptions","ActionsField","formValue","setUrlParameters","urlParameterOptions","setUrlParameterOptions","initialized","url_parameters","parameter","open_new_tab","param","MeetingSummitHookSelect","BreakDurationInput","identity","mappingsTitle","defaultMapping","assignTopic","assignTopicMandatory","assignAttendees","assignInternalAttendees","assignExternalAttendees","blockAttendeeCalendar","assignRoom","blockRoomCalendar","enableManualSchedulingLabel","autoScheduleMappedRequestLabel","mappingDecorator","createDecorator","updates","assign_attendees","block_attendee_calendar","assign_room","block_room_calendar","assign_topic_mandatory","allValues","assign_internal_attendees","Mappings","mapping_module","canEnableMappings","canDisableMappings","DemoSubTopicFields","demo_topic","field_name","subTopicFields","subTopicOptions","DemoTopicField","FieldLoader","CustomFields","useSummitClient","getEngagementTypeCustomFormQueryFn","meetingTypeName","selectFields","meeting_request_form","guidedTour","enableGuidedTour","quickDemo","GuidedTour","eventGuidedTourSurvey","guided_tour_survey","quick_demo","enableManualScheduling","showOnsiteRoomJmmAbove","blockUserCalendarOnAcceptance","sendMstEmailsToEa","sendMstMailToAttendee","sendMstMailToAttendeeTooltip","enableMappingsLabel","manualSchedulingDecorator","show_onsite_room_jmm_above","block_user_calendar_on_acceptance","send_mst_mails_to_ea","send_mst_mail_to_attendee_managed_by_ea","ManualScheduling","canEnableManualScheduling","meetingSubmitHookTitle","meetingBreakEnabled","meetingBreakHelpText","meetingBreakMeetingDuration","meetingBreakDurationLabel","meetingSummitHookLabel","showMeetingBreakNotification","shallowEqual","object1","object2","keys1","keys2","initialSubTopics","demoSubTopicData","meetingDurationError","meetingHookSetting","demoSubTopics","formRenderProps","CsmOnly","refetchEngagementTypeSettings","meetingHookField","demoSubTopicsField","DemoSubTopicData","cleanMeetingHookData","MeetingHookValue","demo_sub_topics","subTopicConfigName","hookValue","meeting_break_meeting_duration","meeting_break_duration","FieldsWrapper","Description","InputFieldWrapper","scale950","defaultDurationLabel","meetingExpiryLabel","meetingExpiryDescLabel","autoExpertLabel","topicMappedLabel","hasMappedTopicsLabel","hasUserMappedToTopicLabel","DaysInput","useAutoSelectExpertData","autoSelectExpert","refetchAutoSelectExpertSettings","reload","validateAutoSelectExpertSettings","topicEnabled","hasMappedTopics","hasUserMappedToTopic","LinkSettingsContentLoader","availabilityDurationError","inboundLinkExpiryError","lessThanMinDaysError","availabilityDurationLessError","LinkSettings","default_availability_duration","inbound_link_expiry","minDays","MIN_DAYS","SurveyStatusField","surveyMasterstatus","HeaderDesc","SelectWrapper","scale850","SelectOptionsDesc","TabWrapper","MaxHeight","RolesSurveyWrapper","RolesTitle","ParagraphMedium","CheckBoxWrapper","RolesFieldWrapper","tabsOverrides","Select","SelectField","postMeetingInternalLabel","enableSurveyLabel","whoTakeSurveyLabel","meetingHostLabel","meetingRequestorLabel","requesterRoleLabel","participantsRoleLabel","allInternalRoles","RolesAndPermissionSettings","useFetchAllCompanyRoles","surveyLabel","rolesAndPermissionTabLabel","SurveyTab","FormElementsTabProps","setActiveKey","placeholderSurveyLabel","SurveyDesc","surveyValue","setSurveyValue","isSameAsPreviousValue","every","newValueItem","getAccessLevels","accessLevels","SurveyFormField","useGetEngagementTypeSurveySettings","engagementSurveyId","refetchGetEngagementTypeSurveySettings","getEngagementTypeSurveySettings","requestorAccessLevel","accessLevel","restValues","engagementTypeSurveyId","meetingHostCanTakeSurvey","requestorShouldFillSurvey","entityStatus","mutateEngagementTypeSurveySettings","Surveys","useGetEngagementTypeSurveys","DefaultRedirect","Routes","getPath","layouts","engagementTypeEnabled","activeSurveys","LayoutsV1","showSettings","LayoutsV2","defaultRoutes","EngagementTypeEditDrawer","useMediaQuery","menuItemLabels","engagementBasics","requestForm","sessionSettings","formsLabel","outboundMeetingLabel","inboundMeetingLabel","Nav","pathname","menuOptions","itemMapper","isChild","EngagementTypeEdit","copy","HelpText","ParagraphSmall","columnHeaderNames","createdBy","createdAt","getColumnDefs","checkboxSelection","sagaCompleted","lockPosition","pinned","resizable","headerComponent","headerComponentParams","sortable","cellRenderer","valueGetter","valueFormatter","TemplateGroup","TemplateCard","$selected","TemplateName","Subtitle2","textOverflow","PreviewModalBody","SelectTemplateButton","ErrorContainer","ErrorInfo","ErrorMessage","ButtonRetry","StyledContentLoader","ContentLoader","$width","$height","$marginRight","$marginBottom","SliderContainer","NoTemplatesAvailableMessage","TemplateListErrorMessage","PreviewModalTemplateHeader","EngagementDetailContainer","EngagementDetailRow","ColumnLeft","ColumnRight","StyledDescription","CheckedIndicator","right","templateErrorIconOverride","statusTagOverrides","$kind","primary100","primary500","moreBtnOverrides","checkedIconOverride","Error","ErrorIcon","cardWidth","LoadingCard","contentLoaderOptions","useSlides","ref","slidesPerView","select","inactive","CopyTemplatePreview","template","variant","VARIANT","TagKIND","TemplatePreview","onTemplateSelect","Template","onSelect","handleTemplateSelect","showPreview","SelectedIndicator","showMore","setShowMore","refCallback","el","scrollHeight","offsetHeight","stopPropagation","tabIndex","onKeyPress","HTMLDivElement","TemplatesListError","TemplatesList","useEngagementTemplatesQuery","templates","fetchError","templateEngagementTypeId","EngagementTemplates","toastMessages","FormError","dirtySinceLastSubmit","clearToast","formHeaderCreate","formHeaderCopy","formHelpText","copyDrawerHeader","copyEngagementNameLabel","FormHeader","EngagementTypeForm","handleDrawerClose","onCreateSuccess","nextStep","useWizard","templateId","commonParams","copyEngagementTypeId","mutateDuplicateEngagementType","mutateCreateEngagementType","MessageContainer","SuccessMessage","SuccessMessageDescription","font400","CheckIconContainer","left","positive100","ActionButton","CheckIcon","ActionButtons","CreateSuccess","engagementName","SuccessIcon","CreateEngagementDrawer","onCreate","setEngagementName","Wizard","NewEngagementButton","NoRowsAndError","agGridReact","showError","rowData","DeleteConfirmationDialog","viewEditDetails","makeActive","makeInactive","delete","duplicate","inactiveSuccess","activeSuccess","deleteSuccess","errorMessages","ENGAGEMENT_TYPE_DELETE_ASSOCIATED_MEETING_EXISTS","ENGAGEMENT_TYPE_DELETE_ASSOCIATED_SESSION_EXISTS","ENGAGEMENT_TYPE_DEACTIVATE_ASSOCIATED_MEETING_EXISTS","ENGAGEMENT_TYPE_DEACTIVATE_ASSOCIATED_SESSION_EXISTS","ENGAGEMENT_TYPE_DEACTIVATE_ASSOCIATED_TRACK_EXISTS","ENGAGEMENT_TYPE_DELETE_ASSOCIATED_TRACK_EXISTS","ENGAGEMENT_TYPE_ALREADY_DELETED","ENGAGEMENT_TYPE_CREATION_FAILED","ENGAGEMENT_TYPE_DUPLICATION_FAILED","ENGAGEMENT_TYPE_INVALID_EVENT_LOCATION","ENGAGEMENT_TYPE_NOT_FOUND","ENGAGEMENT_TYPE_SAGA_NOT_COMPLETE","aria","labelEngagementMore","onItemSelect","node","api","onRowDelete","useEngagementTypeStatusMutation","hideOverlay","onCompleted","updateEngagementType","mutateStatus","useDeleteEngagementTypeMutation","deleteEngagementType","applyTransaction","remove","deleteItem","updateStatus","showLoadingOverlay","menu","canActivate","canDeactivate","canDelete","canDuplicate","InlineMenuOverrides","ActionCell","placement","PLACEMENT","PopoverOverrides","ThreeDotButtonOverrides","TagOverrides","StatusCell","DisplayOrderCell","onChangeHandler","Number","archiveTemplateNames","ConsecutiveMeeting","General","TracksAndSession","EngagementTemplate","TemplateEngagementTypes","sagaNotCompleted","constants","columnDefs","frameworkComponents","actionCell","statusCell","displayOrderCell","noRowsAndError","engagementTemplateCell","onRowClicked","rowElement","closest","onRowDataChanged","forEachNode","document","querySelectorAll","row","setAttribute","RightContainer","InputControl","margin","PageHint","itemCount","onSearch","IconAfter","Search","UsersFilter","searchText","setSearchText","useDebounce","search_term","engagementTypesCreatedByUsersQueryFn","asyncOptions","TemplatesFilter","getMeetingTypeMastersQueryFn","v1Templates","useEngagementTemplatesForLocationQuery","engagementTemplate","idMapper","statusOptions","Filters","statuses","templateEngagementTypes","strOptionMapper","filterOverrides","o","users","SelectionInfoContainer","SelectionInfo","MessageRoot","ModalHintText","MessageRow","StyledCheckCircleOutlined","CheckCircleOutlined","positive50","StyledCloseCircleOutlined","CloseCircleOutlined","negative50","Name","MeetingCounts","BaseModalBody","baseAnchor","scale1200","view","meetingCount","Message","details","messageList","first","second","associatedMeetings","allActive","MakeActiveButton","gridApi","resetToFirstPage","mutateBulkActive","useBulkActiveEngagementTypeMutation","bulkActivateEngagementType","showToast","allInactive","hintText","MakeInactiveButton","mutateBulkInactive","useBulkInactiveEngagementTypeMutation","bulkInactivateEngagementType","autoHideDuration","allDelete","DeleteButton","mutateBulkDelete","useBulkDeleteEngagementTypeMutation","bulkDeleteEngagementTypes","BulkActions","totalItems","appliedSearchTerm","useSelection","getSelectedItems","getExcludedItems","bulkActionVariables","uuids","excludedUuids","searchTerm","RootContainer","bottom","SubHeaderRoot","engagementTypes","EngagementListTitle","DocumentTitle","EngagementTypesList","setGridApi","setSearch","deselectAll","pageNumber","setPageNumber","matchEngagementTypesPath","listPreferences","pageSize","PAGE_SIZE","currentPageSize","setCurrentPageSize","pageParams","perPageParams","queryParams","queryEngagementTypes","getEngagementTypesList","getEngagementTypesQueryFunc","showNoRowsOverlay","isFetching","total","pageSizes","usePageSizes","EventMainHeader","onSort","paginationPageSize","prevPageNumber","currentPageNumber","onPageNumberChange","onPageSizeChange","EngagementTypes","FlexContainer","EventDetails","StatusWrapper","EventName","HeadingSmall","LocationDetails","EventInfo","StyledText","EventDates","TimeIconWrapper","TimeZone","LogoWrapper","SandboxWrapper","SandboxText","filterStatus","mode","address","eventTimeZone","setZone","offsetNameLong","urlPath","sandboxInstance","formatToStartOfTheDay","Logo","callback","fetchEngagementTypesQuery","showCompleted","show_irp_enabled","show_only_non_consecutive_engagement_types","CopyContentWrapper","copyButtonOverrides","copiedLabel","triggerType","TRIGGER_TYPE","focusLock","CopyToClipboard","CopyOutlined","ValueContainer","$isFocused","$isPseudoFocused","inputBorder","borderFocus","inputBorderError","primary50","Dropdown","DropdownContainer","DropdownListItem","Popover","InputContainer","timePickerOverrides","noResultsMsg","StyledIconButton","IconButton","ToText","$hasError","MobileToText","getButtonOverrides","creatable","cx","cy","fill","r","stroke","strokeDasharray","d","strokeLinecap","fillRule","clipRule","strokeLinejoin","CSM","MM","JMM","EA","AM","EX","Partner","EWSIntegration","Integration","SfdcIntegration","ET","SystemUser","allMyAttendees","weekDays","showBeforeUnloadPopup","setShowBeforeUnloadPopup","handler","returnValue","PAGE_SIZES","pageSizeIndex"],"sourceRoot":""}