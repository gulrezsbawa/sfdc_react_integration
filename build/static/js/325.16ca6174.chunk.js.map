{"version":3,"file":"static/js/325.16ca6174.chunk.js","mappings":"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","sources":["components/SharedLinks/LinkDetails/Tabs.tsx","components/SharedLinks/SharedLinkPreferencesProvider.tsx","components/SharedLinks/overrides.ts","ui-components/DrawerPane/overrides.ts","ui-components/DrawerPane/DrawerPane.tsx","ui-components/DrawerPane/styled-components.ts","ui-components/DrawerPane/PrimaryActionButton.tsx","ui-components/DrawerPane/DrawerPaneButtons.tsx","components/LoadingShimmer/LoadingShimmer.tsx","components/SharedLinks/LinkDetails/Loader.tsx","ui-components/Menu/overrides.ts","components/SharedLinks/common/styled-components.ts","components/SharedLinks/common/overrides.ts","components/SharedLinks/common/CancellationReasonField.tsx","components/SharedLinks/common/FormFields.tsx","components/SharedLinks/common/CancelConfirmation.tsx","components/SharedLinks/common/Remind.tsx","components/SharedLinks/LinkDetails/LinkActionsMenu.tsx","components/SharedLinks/LinkDetails/styled-components.ts","components/SharedLinks/LinkDetails/Header.tsx","components/SharedLinks/LinkDetails/overrides.ts","components/SharedLinks/LinkDetails/Participants.tsx","components/SharedLinks/LinkDetails/MeetingInfoTab.tsx","components/SharedLinks/LinkList.tsx","components/SharedLinks/LinkDetails/AvailableSlots.tsx","components/SharedLinks/LinkDetails/FooterAction.tsx","components/SharedLinks/LinkDetails/icons/CalendarCancelled.tsx","components/SharedLinks/LinkDetails/icons/LinkIcon.tsx","components/SharedLinks/LinkDetails/LinkStatus.tsx","components/SharedLinks/LinkDetails/icons/CalendarScheduled.tsx","components/SharedLinks/LinkDetails/icons/CalendarPending.tsx","components/SharedLinks/LinkDetails/LinkDetails.tsx","components/SharedLinks/scheduleMeeting.ts","components/SharedLinks/List/constants.ts","components/SharedLinks/List/NoRowsAndError.tsx","components/SharedLinks/List/InlineActions/InlineActions.tsx","components/SharedLinks/List/tagOverrides.ts","components/SharedLinks/List/StatusCell.tsx","components/SharedLinks/List/LinkTypeCell.tsx","components/SharedLinks/List/List.tsx","components/SharedLinks/Header/styled-components.ts","components/SharedLinks/Header/Header.tsx","components/SharedLinks/Filters/StatusFilter.tsx","components/SharedLinks/Filters/TypeFilter.tsx","components/SharedLinks/Filters/ParticipantsFilter.tsx","components/SharedLinks/Filters/EngagementTypesFilter.tsx","components/SharedLinks/Filters/Filters.tsx","components/SharedLinks/LinkListTitle.tsx","components/SharedLinks/styled-components.ts","components/SharedLinks/SharedLinks.tsx","ui-components/ThreeDotsPopover/overrides.tsx","ui-components/ThreeDotsPopover/styled-components.tsx","ui-components/ThreeDotsPopover/ThreeDotsPopover.tsx"],"sourcesContent":["import { useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  getTabOverrides,\n  Tab,\n  Tabs as BaseTabs,\n  TabTitle,\n} from '@jifflenow/brightui/tabs-motion'\nimport { tabsOverrides, tabOverrides } from 'ui-components/DrawerPane/overrides'\nimport { Participants } from './Participants'\nimport { MeetingInfoTab } from './MeetingInfoTab'\nimport { TabsProps } from './types'\n\nconst messages = defineMessages({\n  attendeesLabel: {\n    defaultMessage: 'Participants',\n    description: 'Tab heading',\n  },\n  meetingInfoLabel: {\n    defaultMessage: 'Meeting Information',\n    description: 'Tab heading',\n  },\n})\n\nenum TabKeys {\n  PARTICIPANTS = 'participants',\n  MEETING_INFO = 'meetingInfo',\n}\n\nexport const Tabs: VFC<TabsProps> = ({ linkDetails }) => {\n  const { formatMessage } = useIntl()\n\n  const [activeKey, setActiveKey] = useState<TabKeys>(TabKeys.PARTICIPANTS)\n\n  return (\n    <BaseTabs\n      activeKey={activeKey}\n      onChange={({ activeKey }) => {\n        setActiveKey(activeKey as TabKeys)\n      }}\n      activateOnFocus={false}\n      overrides={tabsOverrides}\n    >\n      <Tab\n        key={TabKeys.PARTICIPANTS}\n        title={<TabTitle>{formatMessage(messages.attendeesLabel)}</TabTitle>}\n        overrides={getTabOverrides(tabOverrides)}\n        data-pendo={`tab-${TabKeys.PARTICIPANTS}`}\n      >\n        <Participants linkDetails={linkDetails} />\n      </Tab>\n      <Tab\n        key={TabKeys.MEETING_INFO}\n        title={<TabTitle>{formatMessage(messages.meetingInfoLabel)}</TabTitle>}\n        overrides={getTabOverrides(tabOverrides)}\n        data-pendo={`tab-${TabKeys.MEETING_INFO}`}\n      >\n        <MeetingInfoTab {...linkDetails} />\n      </Tab>\n    </BaseTabs>\n  )\n}\n","import {\n  useContext,\n  FC,\n  useMemo,\n  useState,\n  useEffect,\n  createContext,\n} from 'react'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport merge from 'deepmerge'\nimport {\n  IfRejected,\n  useSharedLinkPreferences,\n  patchSharedLinkPreferences as patch,\n} from 'rest'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { components } from 'types/openapi'\nimport {\n  FilterPreferences,\n  FilterPreferencesResponse,\n  PatchPreferencesType,\n  Preferences,\n  SortByPreferencesType,\n} from './types'\n\ntype PatchPreferences = components['schemas']['PatchListFilterPreferences']\ntype ContextT = {\n  preferences: Preferences\n  patchPreferences: (preferences: Partial<Preferences>) => void\n}\ntype GeneralNameAndUuidFormat = components['schemas']['GeneralNameAndUuidFormat']\n\nconst getUuids = ({ uuid }: GeneralNameAndUuidFormat) => uuid\nconst getPatchValues = (values: Preferences): PatchPreferences => ({\n  data: {\n    sharedLinks: {\n      ...values,\n      participants: values.participants.map(getUuids),\n      engagementTypes: values.engagementTypes.map(getUuids),\n    },\n  },\n})\n\nconst INITIAL_STATE: Preferences = {\n  sortBy: 'expiry',\n  statuses: ['pending', 'expired'],\n  linkTypes: ['singleUse'],\n  engagementTypes: [],\n  participants: [],\n}\nconst Context = createContext<ContextT | null>(null)\nconst SHARED_LINKS_PREFERENCES = 'sharedLinksPreferences'\n\nconst Provider: FC<ContextT> = ({\n  children,\n  preferences,\n  patchPreferences,\n}) => {\n  const value = useMemo<ContextT>(() => ({ preferences, patchPreferences }), [\n    preferences,\n    patchPreferences,\n  ])\n\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n\nconst usePreferences = () => {\n  const [preferences, setPreferences] = useState<Preferences>({} as Preferences)\n\n  useEffect(() => {\n    const handleLocalStorageChange = (e: StorageEvent) => {\n      if (e.key === SHARED_LINKS_PREFERENCES) {\n        setPreferences(JSON.parse(e.newValue || '{}'))\n      }\n    }\n    window.addEventListener('storage', handleLocalStorageChange)\n    return () => {\n      window.removeEventListener('storage', handleLocalStorageChange)\n    }\n  }, [setPreferences])\n\n  const initPreferences = (data: FilterPreferencesResponse) => {\n    const preferences = data?.data?.sharedLinks ?? {}\n    const initialPreferences = Object.keys(INITIAL_STATE).reduce<Preferences>(\n      (acc, key) => ({\n        ...acc,\n        [key]:\n          preferences[key as keyof FilterPreferences['sharedLinks']] ??\n          INITIAL_STATE[key as keyof Preferences],\n      }),\n      INITIAL_STATE\n    )\n    setPreferences(initialPreferences)\n    window.localStorage.setItem(\n      SHARED_LINKS_PREFERENCES,\n      JSON.stringify(initialPreferences)\n    )\n  }\n\n  const patchPreferences = (payload: PatchPreferencesType) => {\n    const { sortBy, sortOrder } = payload\n    if (sortBy) {\n      const isSortByExpiresAt =\n        sortBy === ('expiresAt' as SortByPreferencesType)\n      payload.sortBy =\n        isSortByExpiresAt && sortOrder === 'ASC'\n          ? 'expiry'\n          : isSortByExpiresAt && sortOrder === 'DESC'\n          ? '-expiry'\n          : sortBy === 'createdAt' && sortOrder === 'DESC'\n          ? `-${sortBy}`\n          : sortBy\n    }\n    const pref = merge(preferences, payload, { arrayMerge: (_, s) => s })\n    setPreferences(pref)\n    patch(getPatchValues(pref)).then(() =>\n      window.localStorage.setItem(\n        SHARED_LINKS_PREFERENCES,\n        JSON.stringify(pref)\n      )\n    )\n  }\n\n  return { preferences, initPreferences, patchPreferences }\n}\n\nconst SharedLinkPreferencesFetcher: FC<{\n  onResolve: (data: FilterPreferencesResponse) => void\n}> = props => {\n  const state = useSharedLinkPreferences(props)\n\n  return (\n    <>\n      {!state.isSettled && <ModalSpinner />}\n      <IfRejected state={state}>\n        {() => <ErrorPage onButtonClick={state.reload} />}\n      </IfRejected>\n    </>\n  )\n}\n\nexport const SharedLinkPreferencesProvider: FC = ({ children }) => {\n  const { preferences, initPreferences, patchPreferences } = usePreferences()\n\n  return Object.keys(preferences).length === 0 ? (\n    <SharedLinkPreferencesFetcher onResolve={initPreferences} />\n  ) : (\n    <Provider preferences={preferences} patchPreferences={patchPreferences}>\n      {children}\n    </Provider>\n  )\n}\n\nexport const useSharedLinksPreferences = () => {\n  const context = useContext(Context)!\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error(\n      'useSharedLinksPreferences must be used within a SharedLinkPreferencesProvider'\n    )\n  }\n\n  return context\n}\n","import { TabsOverrides, TabOverrides } from '@jifflenow/brightui/tabs-motion'\n\nexport const tabsOverrides: TabsOverrides = {\n  TabList: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: sizing.scale600,\n      paddingRight: sizing.scale600,\n      paddingBottom: 0,\n      marginBottom: 0,\n    }),\n  },\n  TabHighlight: {\n    style: ({ $theme: { sizing } }) => ({\n      borderRadius: sizing.scale0,\n    }),\n  },\n  TabBorder: {\n    style: { display: 'none' },\n  },\n}\n\nexport const tabOverrides: TabOverrides = {\n  TabPanel: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingTop: sizing.scale600,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n    }),\n  },\n}\n","import { DrawerOverrides } from '@jifflenow/brightui/drawer'\nimport { TabsOverrides, TabOverrides } from '@jifflenow/brightui/tabs-motion'\nimport { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const tabsOverrides: TabsOverrides = {\n  TabList: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: sizing.scale600,\n      paddingRight: sizing.scale600,\n      paddingBottom: 0,\n      marginBottom: 0,\n    }),\n  },\n  TabHighlight: {\n    style: ({ $theme: { sizing } }) => ({\n      borderRadius: sizing.scale0,\n    }),\n  },\n  TabBorder: {\n    style: ({ $theme: { colors } }) => ({\n      height: '1px',\n      backgroundColor: colors.mono400,\n    }),\n  },\n}\n\nexport const tabOverrides: TabOverrides = {\n  TabPanel: {\n    style: ({ $theme: { sizing, colors } }) => ({\n      backgroundColor: colors.mono200,\n      paddingTop: sizing.scale600,\n      paddingLeft: sizing.scale600,\n      paddingRight: sizing.scale600,\n      paddingBottom: 0,\n    }),\n  },\n}\n\nexport const getDrawerOverrides = (isWebApp?: boolean): DrawerOverrides => ({\n  DrawerContainer: {\n    style: {\n      ...(isWebApp ? { maxWidth: '360px' } : {}),\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0,\n    },\n  },\n})\n\nexport const footerActionButtonOverride: ButtonOverrides = {\n  BaseButton: {\n    style: {\n      minWidth: '100%',\n    },\n  },\n}\n\nexport const backButtonOverride: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginRight: sizing.scale500,\n      paddingTop: sizing.scale0,\n      paddingRight: sizing.scale0,\n      paddingBottom: sizing.scale0,\n      paddingLeft: sizing.scale0,\n      width: sizing.scale800,\n      height: sizing.scale800,\n    }),\n  },\n}\n","import { FC } from 'react'\nimport { Drawer } from '../Drawer'\nimport { getDrawerOverrides } from './overrides'\n\ntype DrawerPaneProps = {\n  onClose: () => void\n  isWebApp?: boolean\n}\n\nexport const DrawerPane: FC<DrawerPaneProps> = ({\n  children,\n  onClose,\n  isWebApp,\n}) => (\n  <Drawer\n    size=\"100%\"\n    isOpen\n    onClose={onClose}\n    overrides={getDrawerOverrides(isWebApp)}\n  >\n    {children}\n  </Drawer>\n)\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { HeaderContainer as DrawerHeaderContainer } from '../Drawer'\n\nexport const HeaderContainer = withStyle(\n  DrawerHeaderContainer,\n  ({ $theme: { sizing } }) => ({\n    alignItems: 'flex-start',\n    boxShadow: 'none',\n    flexShrink: 0,\n    paddingTop: sizing.scale600,\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    position: 'relative',\n  })\n)\n\nexport const ActionContainer = styled('div', {\n  marginLeft: 'auto',\n})\n\nexport const HeaderColumn = styled('div', {\n  flex: '1 1 0%',\n  minWidth: 0,\n})\n\nexport const HeaderRow = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport const DrawerTitle = styled('header', ({ $theme: { typography } }) => ({\n  ...typography.HeadingXSmall,\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n}))\n\nexport const FooterActionContainer = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    position: 'sticky',\n    bottom: 0,\n    padding: sizing.scale600,\n  })\n)\n","import { FC } from 'react'\nimport { Button as BaseButton, KIND } from '@jifflenow/brightui/button'\nimport { FooterActionContainer } from './styled-components'\nimport { footerActionButtonOverride } from './overrides'\nimport { PrimaryActionButtonProps } from './types'\n\nexport const PrimaryActionButton: FC<PrimaryActionButtonProps> = ({\n  children,\n  onClick,\n  dataPendo,\n}) => (\n  <FooterActionContainer>\n    <BaseButton\n      type=\"button\"\n      kind={KIND.secondary}\n      overrides={footerActionButtonOverride}\n      onClick={onClick}\n      data-pendo={dataPendo}\n    >\n      {children}\n    </BaseButton>\n  </FooterActionContainer>\n)\n","import { VFC } from 'react'\nimport { IconButtonProps } from '@jifflenow/brightui/button'\nimport { DrawerBackButton } from '../Drawer/DrawerButton'\nimport { backButtonOverride } from './overrides'\n\nexport const DrawerPaneBackButton: VFC<Partial<IconButtonProps>> = props => (\n  <DrawerBackButton overrides={backButtonOverride} size={24} {...props} />\n)\n","import { FC } from 'react'\nimport ContentLoader, { IContentLoaderProps } from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\nimport { useAppSource } from 'providers/AppSourceProvider'\n\nexport type LoadingShimmerProps = IContentLoaderProps\n\nexport const LoadingShimmer: FC<LoadingShimmerProps> = ({\n  children,\n  ...restProps\n}) => {\n  const { platform } = useAppSource()\n  const [, { colors }] = useStyletron()\n\n  const contentLoaderOptions: LoadingShimmerProps = {\n    speed: 2,\n    primaryColor: colors.mono200,\n    secondaryColor: colors.mono300,\n    height: '140',\n    ...restProps,\n    animate: platform !== 'mobile',\n  }\n\n  return <ContentLoader {...contentLoaderOptions}>{children}</ContentLoader>\n}\n","import { LoadingShimmer, LoadingShimmerProps } from 'components/LoadingShimmer'\n\nexport const Loader = () => {\n  const options: LoadingShimmerProps = {\n    width: '320',\n    height: '1000',\n    viewBox: '0 0 320 1000',\n  }\n\n  return (\n    <LoadingShimmer {...options}>\n      <rect y=\"0\" x=\"16\" width=\"20\" height=\"22\" />\n      <rect y=\"4\" x=\"52\" width=\"140\" height=\"18\" />\n      <rect y=\"26\" x=\"52\" width=\"160\" height=\"22\" rx=\"10\" ry=\"10\" />\n      <rect y=\"4\" x=\"294\" width=\"3\" height=\"16\" />\n\n      <rect y=\"70\" x=\"16\" width=\"16\" height=\"16\" rx=\"10\" ry=\"10\" />\n      <rect y=\"72\" x=\"40\" width=\"150\" height=\"14\" />\n      <rect y=\"90\" x=\"40\" width=\"80\" height=\"10\" />\n\n      <rect y=\"124\" x=\"16\" width=\"16\" height=\"16\" rx=\"10\" ry=\"10\" />\n      <rect y=\"126\" x=\"40\" width=\"100\" height=\"14\" />\n      <rect y=\"144\" x=\"40\" width=\"200\" height=\"10\" />\n\n      <rect y=\"180\" x=\"16\" width=\"16\" height=\"16\" rx=\"10\" ry=\"10\" />\n      <rect y=\"180\" x=\"42\" width=\"80\" height=\"16\" />\n\n      <rect y=\"225\" x=\"28\" width=\"60\" height=\"10\" />\n      <rect y=\"225\" x=\"110\" width=\"120\" height=\"10\" />\n      <rect y=\"240\" x=\"28\" width=\"70\" height=\"3\" />\n\n      <rect y=\"264\" x=\"16\" width=\"120\" height=\"12\" />\n\n      <rect y=\"296\" x=\"16\" width=\"16\" height=\"16\" rx=\"10\" ry=\"10\" />\n      <rect y=\"296\" x=\"42\" width=\"120\" height=\"14\" />\n      <rect y=\"300\" x=\"294\" width=\"3\" height=\"16\" />\n      <rect y=\"316\" x=\"42\" width=\"100\" height=\"10\" />\n\n      <rect y=\"346\" x=\"16\" width=\"16\" height=\"16\" rx=\"10\" ry=\"10\" />\n      <rect y=\"346\" x=\"42\" width=\"100\" height=\"14\" />\n      <rect y=\"350\" x=\"294\" width=\"3\" height=\"16\" />\n      <rect y=\"366\" x=\"42\" width=\"130\" height=\"10\" />\n\n      <rect y=\"406\" x=\"16\" width=\"130\" height=\"12\" />\n\n      <rect y=\"436\" x=\"16\" width=\"16\" height=\"16\" rx=\"10\" ry=\"10\" />\n      <rect y=\"436\" x=\"42\" width=\"120\" height=\"14\" />\n      <rect y=\"440\" x=\"294\" width=\"3\" height=\"16\" />\n      <rect y=\"456\" x=\"42\" width=\"100\" height=\"10\" />\n\n      <rect y=\"486\" x=\"16\" width=\"16\" height=\"16\" rx=\"10\" ry=\"10\" />\n      <rect y=\"486\" x=\"42\" width=\"100\" height=\"14\" />\n      <rect y=\"490\" x=\"294\" width=\"3\" height=\"16\" />\n      <rect y=\"516\" x=\"42\" width=\"130\" height=\"10\" />\n    </LoadingShimmer>\n  )\n}\n","import { MenuOverrides } from '@jifflenow/brightui/menu'\n\nexport const menuOverrides: MenuOverrides = {\n  List: {\n    style: ({ $theme: { colors } }) => ({\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: colors.mono400,\n      minWidth: '100px',\n    }),\n  },\n  Option: {\n    style: ({ $theme: { sizing, typography } }) => ({\n      ...typography.Paragraph2,\n      paddingLeft: sizing.scale500,\n      paddingRight: sizing.scale500,\n    }),\n  },\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { ModalBody } from '@jifflenow/brightui/modal'\n\nexport const FooterButton = styled(Button, {\n  minWidth: '99px',\n})\n\nexport const FormControlStyled = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale800,\n  })\n)\n\nexport const Note = styled('span', ({ $theme: { typography } }) => ({\n  ...typography.Paragraph1,\n}))\n\nexport const StyledModalBody = withStyle(ModalBody, {\n  display: 'flex',\n  flexDirection: 'column',\n})\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const successButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n","import { useCallback, useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { FieldRenderProps } from 'react-final-form'\nimport { Textarea } from '@jifflenow/brightui/textarea'\nimport { Select, Value } from '@jifflenow/brightui/select'\nimport { Field, Validation } from 'ui-components/Field'\nimport { FormControlStyled } from './styled-components'\n\nconst messages = defineMessages({\n  otherReasonPlaceholder: {\n    defaultMessage: 'Type here',\n    description: 'Placeholder text',\n  },\n})\n\nconst OtherReasons: VFC<FieldRenderProps<string>> = ({\n  input,\n  meta: { touched, error },\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <FormControlStyled error={touched && error}>\n      <Textarea\n        {...input}\n        placeholder={formatMessage(messages.otherReasonPlaceholder)}\n        inputProps={{ 'data-pendo': 'meetings/cancel-other-reasons' }}\n      />\n    </FormControlStyled>\n  )\n}\n\nexport const CancellationReasonField: VFC<FieldRenderProps<string>> = ({\n  input,\n  meta: { touched, error },\n  options,\n  label,\n}) => {\n  const [value, setValue] = useState<Value>([])\n\n  const handleChange = useCallback((value: Value) => {\n    setValue(value)\n    input.onChange(value[0].id)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    handleChange([options[0]])\n  }, [handleChange, options])\n\n  return (\n    <>\n      <FormControlStyled label={label} error={touched && error}>\n        <Select\n          {...input}\n          clearable={false}\n          id=\"reason\"\n          options={options}\n          value={value}\n          onChange={({ value }: { value: Value[] }) => handleChange(value)}\n          data-pendo=\"shared-links/cancel-reasons\"\n        />\n      </FormControlStyled>\n\n      {input.value === 'other' ? (\n        <Field\n          name=\"other\"\n          render={OtherReasons}\n          validations={[Validation.REQUIRED]}\n        />\n      ) : null}\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form } from 'react-final-form'\nimport { useMutation } from 'react-query'\nimport createDecorator from 'final-form-calculate'\nimport {\n  cancelInboundLinkMutationFn,\n  deleteInboundLinkMutationFn,\n  useSummitV1Client,\n} from 'rest'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport {\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  SIZE,\n} from '@jifflenow/brightui/modal'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { Field, Validation } from 'ui-components/Field'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { MinWidthButton } from 'ui-components/common/styled-components'\nimport { Note, StyledModalBody } from './styled-components'\nimport { FormFieldProps, FormValues } from './types'\nimport { successButtonOverrides } from './overrides'\nimport { CancellationReasonField } from './CancellationReasonField'\n\nconst messages = defineMessages({\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  cancelConfirmation: {\n    defaultMessage: 'Are you sure you want to cancel the link?',\n    description: 'Modal heading',\n  },\n  deleteConfirmation: {\n    defaultMessage: 'Are you sure you want to delete the link?',\n    description: 'Modal heading',\n  },\n  cancelScheduled: {\n    defaultMessage:\n      'Your link will be canceled and already scheduled upcoming meetings will also be canceled',\n    description: 'Modal heading',\n  },\n  deleteScheduled: {\n    defaultMessage:\n      'Your link will be deleted and already scheduled upcoming meetings will also be canceled',\n    description: 'Modal heading',\n  },\n  cancelLinkSuccessMessage: {\n    defaultMessage: 'The link is canceled successfully.',\n    description: 'Success message',\n  },\n  deleteLinkSuccessMessage: {\n    defaultMessage: 'The link is deleted successfully.',\n    description: 'Success message',\n  },\n  optionOtherReason: {\n    defaultMessage: 'Other reasons',\n    description: 'Option label',\n  },\n  enabledCancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Discard',\n  },\n  enabledSuccessButtonLabel: {\n    defaultMessage: 'Proceed',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Yes',\n    description: 'Button label',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'No',\n    description: 'Button label',\n  },\n  cancellationLabel: {\n    defaultMessage: 'Please mention the reason for cancellation',\n    description: 'Field label',\n  },\n  deletionLabel: {\n    defaultMessage: 'Please mention the reason for deletion',\n    description: 'Field label',\n  },\n})\n\nconst nameDecorator = createDecorator({\n  field: 'reason',\n  updates: {\n    other: () => '',\n  },\n})\n\nexport const FormFields: VFC<FormFieldProps> = ({\n  eventName,\n  status,\n  token,\n  action,\n  reasons,\n  enabled,\n  onClose,\n  onSuccess,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const client = useSummitV1Client(eventName)\n\n  const {\n    mutateAsync: mutateCancelLink,\n    isLoading: cancelInProgress,\n  } = useMutation('cancelLink', cancelInboundLinkMutationFn({ token, client }))\n\n  const {\n    mutateAsync: mutateDeleteLink,\n    isLoading: declineInProgress,\n  } = useMutation('declineLink', deleteInboundLinkMutationFn({ token, client }))\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async ({\n    reason,\n    other,\n  }) => {\n    const cancel_comments = other ? other : reason\n    try {\n      let result\n      if (action === 'canCancel') {\n        result = await mutateCancelLink({ cancel_comments })\n        showSuccessToast(formatMessage(messages.cancelLinkSuccessMessage))\n      }\n      if (action === 'canDelete') {\n        result = await mutateDeleteLink({ cancel_comments })\n        showSuccessToast(formatMessage(messages.deleteLinkSuccessMessage))\n      }\n      onSuccess(action, result)\n      return undefined\n    } catch (error) {\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  const options = [\n    ...reasons.map(reason => ({ label: reason, id: reason })),\n    { label: formatMessage(messages.optionOtherReason), id: 'other' },\n  ]\n\n  return (\n    <>\n      {(declineInProgress || cancelInProgress) && <ModalSpinner />}\n      <Form<FormValues>\n        // TODO: Awaiting fix for this [bug](https://github.com/final-form/final-form-calculate/issues/38)\n        // to remove `ts-expect-error`.\n        // @ts-expect-error\n        decorators={[nameDecorator]}\n        onSubmit={handleSubmit}\n        render={({ handleSubmit }) => (\n          <Modal size={SIZE.small} onClose={onClose} isOpen>\n            <form onSubmit={handleSubmit}>\n              <ModalHeader>\n                {formatMessage(\n                  messages[\n                    action === 'canCancel'\n                      ? status === 'scheduled'\n                        ? 'cancelScheduled'\n                        : 'cancelConfirmation'\n                      : status === 'scheduled'\n                      ? 'deleteScheduled'\n                      : 'deleteConfirmation'\n                  ]\n                )}\n              </ModalHeader>\n              <StyledModalBody>\n                {enabled && status === 'scheduled' && (\n                  <Field\n                    label={formatMessage(\n                      messages[\n                        action === 'canCancel'\n                          ? 'cancellationLabel'\n                          : 'deletionLabel'\n                      ]\n                    )}\n                    name=\"reason\"\n                    render={CancellationReasonField}\n                    options={options}\n                    validations={[Validation.REQUIRED]}\n                  />\n                )}\n                <Note>\n                  <FormattedMessage\n                    defaultMessage=\"Please note: This action cannot be reverted.\"\n                    description=\"Help text\"\n                  />\n                </Note>\n              </StyledModalBody>\n              <ModalFooter>\n                <MinWidthButton\n                  type=\"button\"\n                  kind={KIND.tertiary}\n                  onClick={onClose}\n                  data-pendo=\"shared-link/discard-cancel-reasons\"\n                >\n                  {formatMessage(\n                    messages[\n                      enabled && status === 'scheduled'\n                        ? 'enabledCancelButtonLabel'\n                        : 'cancelButtonLabel'\n                    ]\n                  )}\n                </MinWidthButton>\n                <MinWidthButton\n                  type=\"submit\"\n                  overrides={successButtonOverrides}\n                  data-pendo=\"shared-link/submit-cancel-reasons\"\n                >\n                  {formatMessage(\n                    messages[\n                      enabled && status === 'scheduled'\n                        ? 'enabledSuccessButtonLabel'\n                        : 'successButtonLabel'\n                    ]\n                  )}\n                </MinWidthButton>\n              </ModalFooter>\n            </form>\n          </Modal>\n        )}\n      />\n    </>\n  )\n}\n","import { useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { showErrorToast } from 'utils/toast'\nimport { useEngagementTypeSettingsByUuid } from 'gql'\nimport { getEngagementTypeSettingsByUuid_getEngagementTypeSettingsByUuid_value_CustomNameValue as CustomNameValue } from 'gql/types/getEngagementTypeSettingsByUuid'\nimport {\n  CancelOptions,\n  CancelOptionsResponse,\n  CancelConfirmationProps,\n} from './types'\nimport { FormFields } from './FormFields'\n\nconst messages = defineMessages({\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nexport const CancelConfirmation: VFC<CancelConfirmationProps> = props => {\n  const { formatMessage } = useIntl()\n\n  const { engagementTypeUuid, currentLocationUuid, onClose } = props\n\n  const [cancelOptions, setCancelOptions] = useState<\n    CancelOptions | undefined\n  >()\n\n  const { loading, engagementTypeSettings } = useEngagementTypeSettingsByUuid({\n    variables: {\n      engagementTypeUuid,\n      names: ['cancel_comments_enabled', 'predefined_cancel_comments'],\n    },\n    context: {\n      headers: { 'X-Location-Uuid': currentLocationUuid },\n    },\n    onError: () => {\n      onClose()\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  useEffect(() => {\n    if (engagementTypeSettings) {\n      const values = engagementTypeSettings.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: (value as CustomNameValue).value,\n        }),\n        {}\n      )\n\n      setCancelOptions({\n        cancel_comments_enabled: (values as CancelOptionsResponse)\n          .cancel_comments_enabled,\n        predefined_cancel_comments: JSON.parse(\n          (values as CancelOptionsResponse).predefined_cancel_comments\n        ),\n      })\n    }\n  }, [engagementTypeSettings])\n\n  if (loading || !cancelOptions) {\n    return <ModalSpinner />\n  }\n\n  return (\n    <FormFields\n      {...props}\n      enabled={cancelOptions.cancel_comments_enabled === 'true'}\n      reasons={cancelOptions.predefined_cancel_comments}\n    />\n  )\n}\n","import { useMemo, VFC } from 'react'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form } from 'react-final-form'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { useMutation } from 'react-query'\nimport { KIND } from '@jifflenow/brightui/button'\nimport {\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  ModalBody,\n  SIZE,\n} from '@jifflenow/brightui/modal'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { Select, Option, Value } from '@jifflenow/brightui/select'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { showSuccessToast, showErrorToast } from 'utils/toast'\nimport { Field, Validation } from 'ui-components/Field'\nimport { remindParticipantsMutationFn, useSummitV1Client } from 'rest'\nimport { RemindProps } from './types'\nimport { FooterButton } from './styled-components'\nimport { successButtonOverrides } from './overrides'\n\nconst messages = defineMessages({\n  labelAll: {\n    defaultMessage: 'All',\n    description: 'Dropdown option',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  successMessage: {\n    defaultMessage: 'Participants are reminded successfully.',\n    description: 'Success message',\n  },\n})\n\nexport const Remind: VFC<RemindProps> = ({\n  token,\n  eventName,\n  attendees,\n  onClose,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const summitClient = useSummitV1Client(eventName)\n\n  const { mutateAsync, isLoading } = useMutation(\n    'remindParticipants',\n    remindParticipantsMutationFn({ token, client: summitClient })\n  )\n\n  const handleSubmit: Config<{\n    participants: string[]\n  }>['onSubmit'] = async values => {\n    try {\n      const { participants } = values\n      await mutateAsync({\n        userUuids: participants.some(id => id === 'All')\n          ? attendees.map(({ uuid }) => uuid!)\n          : participants,\n      })\n      onClose()\n      showSuccessToast(formatMessage(messages.successMessage))\n      return undefined\n    } catch (error) {\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  const dropdownOptions = [\n    ...attendees.map(\n      ({ uuid: id, email: label }): Option => ({\n        label,\n        id,\n      })\n    ),\n    attendees.length && {\n      label: formatMessage(messages.labelAll),\n      id: 'All',\n    },\n  ].filter(Boolean) as Option[]\n\n  const participantIds: string[] = useMemo(\n    () => attendees.map(({ uuid }) => uuid!),\n    [attendees]\n  )\n\n  return (\n    <div onClick={e => e.stopPropagation()}>\n      {isLoading && <ModalSpinner />}\n      <Modal isOpen size={SIZE.small} onClose={onClose}>\n        <Form\n          onSubmit={handleSubmit}\n          initialValues={{ participants: participantIds }}\n          render={({ handleSubmit }) => (\n            <form onSubmit={handleSubmit} noValidate>\n              <ModalHeader>\n                <FormattedMessage\n                  defaultMessage=\"Send a reminder to following participants\"\n                  description=\"Dialog header\"\n                />\n              </ModalHeader>\n              <ModalBody>\n                <Field<(string | number | undefined)[] | undefined>\n                  name=\"participants\"\n                  format={(value: Option['id'][] | undefined) =>\n                    value\n                      ? dropdownOptions.filter(\n                          option => value.indexOf(option.id) + 1\n                        )\n                      : []\n                  }\n                  parse={(value: Option[]) =>\n                    value.length\n                      ? value.some(({ id }) => id === 'All')\n                        ? ['All']\n                        : value.map((option: Option) => option.id)\n                      : undefined\n                  }\n                  render={({ input, meta: { touched, error } }) => (\n                    <FormControl error={touched && error}>\n                      <Select\n                        {...input}\n                        multi\n                        id=\"managedUsers\"\n                        options={dropdownOptions}\n                        backspaceClearsInputValue\n                        onChange={({ value }: { value: Value[] }) =>\n                          input.onChange(value)\n                        }\n                        required\n                      />\n                    </FormControl>\n                  )}\n                  validations={[Validation.REQUIRED]}\n                />\n              </ModalBody>\n              <ModalFooter>\n                <FooterButton kind={KIND.tertiary} onClick={onClose}>\n                  <FormattedMessage\n                    defaultMessage=\"Cancel\"\n                    description=\"Button label\"\n                  />\n                </FooterButton>\n                <FooterButton type=\"submit\" overrides={successButtonOverrides}>\n                  <FormattedMessage\n                    defaultMessage=\"Send\"\n                    description=\"Button label\"\n                  />\n                </FooterButton>\n              </ModalFooter>\n            </form>\n          )}\n        />\n      </Modal>\n    </div>\n  )\n}\n","import { VFC, useState } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useMutation, useQueryClient } from 'react-query'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { StatefulMenu, OnItemSelect } from '@jifflenow/brightui/menu'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { showSuccessToast, showErrorToast } from 'utils/toast'\nimport { renewInboundLinkMutationFn, useSummitV1Client } from 'rest'\nimport { components } from 'types/openapi'\nimport { menuOverrides } from 'ui-components/Menu/overrides'\nimport { ThreeDotsPopover } from 'ui-components/ThreeDotsPopover'\nimport { CancelConfirmation, LinkInfo, Remind } from '../common'\nimport {\n  ConfirmationActions,\n  LinkActionsMenuProps,\n  OptionsMenuProps,\n  SharedLinkMenuItem,\n} from './types'\n\ntype SharedLink = components['schemas']['SharedLink']\ntype LinkActions = SharedLink['relationships']['actions']\ntype SuccessMessageActions = Extract<\n  keyof LinkActions,\n  'canRenewExpiry' | 'canCancel' | 'canDelete'\n>\n\nconst messages = defineMessages({\n  editLink: {\n    defaultMessage: 'Edit',\n    description: 'Menu option',\n  },\n  scheduleLink: {\n    defaultMessage: 'Schedule',\n    description: 'Menu option',\n  },\n  copyLink: {\n    defaultMessage: 'Copy link',\n    description: 'Menu option',\n  },\n  remindParticipants: {\n    defaultMessage: 'Remind',\n    description: 'Menu option',\n  },\n  renewLink: {\n    defaultMessage: 'Renew',\n    description: 'Menu option',\n  },\n  cancel: {\n    defaultMessage: 'Cancel',\n    description: 'Menu option',\n  },\n  delete: {\n    defaultMessage: 'Delete',\n    description: 'Menu option',\n  },\n  linkCopied: {\n    defaultMessage: 'Link copied to clipboard',\n    description: 'Success message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  cancelConfirmation: {\n    defaultMessage: 'Are you sure you want to cancel the link?',\n    description: 'Modal heading',\n  },\n})\n\nconst actionSuccessMessage = defineMessages<SuccessMessageActions>({\n  canRenewExpiry: {\n    defaultMessage: 'The link is renewed successfully',\n    description: 'Success message',\n  },\n  canCancel: {\n    defaultMessage: 'The link is canceled successfully.',\n    description: 'Success message',\n  },\n  canDelete: {\n    defaultMessage: 'The link is deleted successfully.',\n    description: 'Success message',\n  },\n})\n\nconst onItemSelect: OnItemSelect = args => args.item.onItemSelect?.(args)\n\nconst OptionsMenu: VFC<OptionsMenuProps> = ({\n  close,\n  onLinkEdit,\n  onScheduleMeeting,\n  ...rest\n}) => {\n  const { formatMessage } = useIntl()\n  const queryClient = useQueryClient()\n\n  const {\n    id: token,\n    link,\n    eventName,\n    status,\n    actions: {\n      canEdit,\n      canCopy,\n      canRemindParticipants,\n      canRenewExpiry,\n      canCancel,\n      canDelete,\n      canScheduleMeeting,\n    },\n    attendees,\n    currentLocationUuid,\n    engagementTypeUuid,\n  } = rest\n\n  const summitClient = useSummitV1Client(eventName)\n\n  const [action, setAction] = useState<ConfirmationActions>()\n  const [showRemind, setShowRemind] = useState(false)\n\n  const handleError = () => {\n    showErrorToast(formatMessage(messages.genericError))\n    close()\n  }\n\n  const handleSuccess = (action: SuccessMessageActions) => {\n    showSuccessToast(formatMessage(actionSuccessMessage[action]))\n    queryClient.invalidateQueries('sharedLinkDetails')\n    queryClient.invalidateQueries('sharedLinks')\n    close()\n  }\n\n  const params = { client: summitClient, token }\n\n  const { mutate: renewLink, isLoading: renewLinkInProgress } = useMutation(\n    'renewLink',\n    renewInboundLinkMutationFn,\n    {\n      onSuccess: () => handleSuccess('canRenewExpiry'),\n      onError: handleError,\n    }\n  )\n\n  const externalAttendees = attendees.filter(({ type }) => type === 'external')\n\n  const menu: SharedLinkMenuItem[] = [\n    canEdit && {\n      label: formatMessage(messages.editLink),\n      dataPendo: 'shared-links/edit-link',\n      onItemSelect: () => {\n        onLinkEdit?.()\n        close()\n      },\n    },\n    canCopy && {\n      label: (\n        <CopyToClipboard\n          text={link}\n          onCopy={() => {\n            showSuccessToast(formatMessage(messages.linkCopied))\n            close()\n          }}\n        >\n          <span>{formatMessage(messages.copyLink)}</span>\n        </CopyToClipboard>\n      ),\n      dataPendo: 'shared-links/copy-link',\n    },\n    canScheduleMeeting && {\n      label: formatMessage(messages.scheduleLink),\n      dataPendo: 'shared-links/schedule-link',\n      onItemSelect: () => {\n        onScheduleMeeting?.()\n        close()\n      },\n    },\n    canRemindParticipants &&\n      externalAttendees.length && {\n        label: formatMessage(messages.remindParticipants),\n        onItemSelect: () => setShowRemind(true),\n      },\n    canRenewExpiry && {\n      label: formatMessage(messages.renewLink),\n      dataPendo: 'shared-links/renew-link',\n      onItemSelect: () => renewLink(params),\n    },\n    canCancel && {\n      label: formatMessage(messages.cancel),\n      dataPendo: 'shared-links/cancel-link',\n      onItemSelect: () => setAction('canCancel'),\n    },\n    canDelete && {\n      label: formatMessage(messages.delete),\n      dataPendo: 'shared-links/delete-link',\n      onItemSelect: () => setAction('canDelete'),\n    },\n  ].filter(Boolean) as SharedLinkMenuItem[]\n\n  const linkActionInProgress = renewLinkInProgress\n\n  const linkInfo: LinkInfo = {\n    status,\n    token,\n    eventName,\n    currentLocationUuid,\n    engagementTypeUuid,\n  }\n\n  return (\n    <>\n      {action && (\n        <CancelConfirmation\n          onClose={() => setAction(undefined)}\n          onSuccess={handleSuccess}\n          action={action}\n          {...linkInfo}\n        />\n      )}\n      {showRemind && (\n        <Remind\n          token={token}\n          eventName={eventName}\n          attendees={externalAttendees}\n          onClose={() => setShowRemind(false)}\n        />\n      )}\n      {linkActionInProgress && <ModalSpinner />}\n      <StatefulMenu\n        items={menu}\n        onItemSelect={onItemSelect}\n        overrides={menuOverrides}\n      />\n    </>\n  )\n}\n\nexport const LinkActionsMenu: VFC<LinkActionsMenuProps> = props => {\n  const { actions } = props\n\n  const showActions = Object.keys(actions).some(\n    action => actions[action as keyof LinkActions]\n  )\n\n  return showActions ? (\n    <ThreeDotsPopover\n      content={({ close }) => <OptionsMenu close={close} {...props} />}\n    />\n  ) : null\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { Status } from './types'\n\nexport const InfoRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  marginBottom: sizing.scale650,\n  paddingLeft: sizing.scale600,\n  paddingRight: sizing.scale600,\n}))\n\nexport const InfoIconRoot = styled('div', ({ $theme: { sizing } }) => ({\n  paddingTop: sizing.scale0,\n}))\n\nexport const InfoContent = styled('div', ({ $theme: { sizing } }) => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  marginLeft: sizing.scale300,\n}))\n\nexport const LinkDetailsRoot = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n})\n\nexport const LinkDetailsContent = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: '1 0 auto',\n  marginTop: sizing.scale600,\n  overflowY: 'auto',\n}))\n\nexport const InfoLabel = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.LabelSmall,\n    marginBottom: sizing.scale100,\n  })\n)\n\nexport const MeetingSlot = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.LabelSmall,\n    marginBottom: sizing.scale200,\n  })\n)\n\nexport const InfoDescription = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n  })\n)\n\nexport const ParticipantsList = styled('ul', {\n  padding: 0,\n  margin: 0,\n})\n\nexport const ParticipantsListItem = styled('li', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  marginBottom: sizing.scale800,\n}))\n\nexport const ParticipantEmail = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.LabelSmall,\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n}))\n\nexport const ParticipantDetails = styled('div', {\n  minWidth: 0,\n})\n\nexport const ParticipantActions = styled('div', {\n  display: 'flex',\n})\n\nexport const TagInfo = styled('div', {\n  display: 'flex',\n  flexWrap: 'wrap',\n})\n\nexport const Tag = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Caption1,\n    backgroundColor: colors.primary500,\n    color: colors.white,\n    borderRadius: '21px',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    paddingLeft: sizing.scale300,\n    paddingRight: sizing.scale300,\n    paddingTop: sizing.scale0,\n    paddingBottom: sizing.scale0,\n    textTransform: 'capitalize',\n    marginRight: sizing.scale100,\n    marginTop: sizing.scale100,\n  })\n)\n\nexport const Column = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n})\n\nexport const ColumnFullWidth = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: '100%',\n})\n\nexport const Row = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  marginBottom: sizing.scale650,\n}))\n\nexport const LinkStatus = styled<{ $status: Status }, 'div'>(\n  'div',\n  ({ $status, $theme: { colors, sizing } }) => {\n    const statusColor: Record<Status, string> = {\n      pending: colors.warning,\n      scheduled: colors.positive,\n      cancelled: colors.negative,\n      expired: colors.negative,\n    }\n\n    return {\n      backgroundColor: statusColor[$status],\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      bottom: 0,\n      height: sizing.scale100,\n    }\n  }\n)\n\nexport const CancelledLabel = styled(\n  'span',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.ParagraphSmall,\n    color: colors.negative,\n  })\n)\n\nexport const RequestFormFieldValue = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.LabelSmall,\n    marginBottom: sizing.scale400,\n  })\n)\n\nexport const RequestFormFieldName = withStyle(\n  RequestFormFieldValue,\n  ({ $theme: { colors } }) => ({\n    color: colors.mono700,\n  })\n)\n","import { VFC } from 'react'\nimport {\n  ActionContainer,\n  DrawerPaneBackButton,\n  DrawerTitle,\n  HeaderColumn,\n  HeaderContainer,\n  HeaderRow,\n} from 'ui-components/DrawerPane'\nimport { AutoTooltip } from 'ui-components/AutoTooltip'\nimport { useDrawer } from 'ui-components/Drawer'\nimport { HeaderProps } from './types'\nimport { LinkActionsMenu } from './LinkActionsMenu'\nimport { LinkActionsMenuProps } from './types'\nimport { LinkStatus } from './styled-components'\n\nexport const Header: VFC<HeaderProps> = ({\n  linkDetails,\n  secondaryActions,\n  onLinkEdit,\n  onScheduleMeeting,\n}) => {\n  const { closeDrawer } = useDrawer()\n\n  const {\n    id,\n    attributes: {\n      primaryId,\n      meetingWith,\n      link,\n      status,\n      relationships: {\n        location: {\n          systemName: eventName,\n          displayName,\n          uuid: currentLocationUuid,\n        },\n        attendees,\n        engagementType: { uuid: engagementTypeUuid },\n      },\n    },\n  } = linkDetails\n\n  const actionsMenuProps: LinkActionsMenuProps = {\n    id,\n    link,\n    actions: secondaryActions,\n    eventName,\n    status,\n    onLinkEdit,\n    onScheduleMeeting,\n    attendees,\n    currentLocationUuid,\n    engagementTypeUuid,\n  }\n\n  return (\n    <HeaderContainer>\n      <DrawerPaneBackButton onClick={() => closeDrawer()} />\n      <HeaderColumn>\n        <HeaderRow>\n          <AutoTooltip content={meetingWith} showArrow>\n            <DrawerTitle>{meetingWith}</DrawerTitle>\n          </AutoTooltip>\n        </HeaderRow>\n        <HeaderRow>\n          &#35;{primaryId}&nbsp;&#124;&nbsp;{displayName}\n        </HeaderRow>\n      </HeaderColumn>\n\n      <ActionContainer>\n        <LinkActionsMenu {...actionsMenuProps} />\n      </ActionContainer>\n      <LinkStatus $status={status} />\n    </HeaderContainer>\n  )\n}\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\nimport { AccordionOverrides, SharedProps } from '@jifflenow/brightui/accordion'\nimport { IconOverrides } from '@jifflenow/brightui/icon'\n\nexport const accordionOverride: AccordionOverrides<SharedProps> = {\n  Root: {\n    style: ({ $theme: { colors } }) => ({\n      borderTopWidth: '1px',\n      borderBottomWidth: '1px',\n      borderLeftWidth: '1px',\n      borderRightWidth: '1px',\n      borderTopStyle: 'solid',\n      borderLeftStyle: 'solid',\n      borderRightStyle: 'solid',\n      borderBottomStyle: 'solid',\n      borderTopColor: colors.mono400,\n      borderBottomColor: colors.mono400,\n      borderLeftColor: colors.mono400,\n      borderRightColor: colors.mono400,\n    }),\n  },\n  Header: {\n    style: ({ $theme: { colors, sizing } }) => ({\n      backgroundColor: colors.mono200,\n      color: colors.mono900,\n      paddingLeft: sizing.scale500,\n      paddingRight: sizing.scale500,\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      borderBottomColor: colors.mono400,\n      ':hover': { color: colors.mono900 },\n    }),\n  },\n  PanelContainer: {\n    style: {\n      borderBottomStyle: 'none',\n    },\n  },\n  Content: {\n    style: ({ $theme: { sizing, colors } }) => ({\n      paddingLeft: sizing.scale500,\n      paddingRight: sizing.scale500,\n      paddingBottom: sizing.scale400,\n      paddingTop: sizing.scale400,\n      backgroundColor: colors.mono200,\n    }),\n  },\n}\n\nexport const getMeetingLinkButtonOverrides = (\n  showAsBlock: boolean\n): ButtonOverrides => ({\n  BaseButton: {\n    style: ({ $theme: { colors, sizing, typography } }) => ({\n      ...typography.LabelSmall,\n      ...(showAsBlock\n        ? {\n            display: 'block',\n            marginBottom: sizing.scale300,\n            backgroundColor: colors.mono200,\n          }\n        : null),\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n    }),\n  },\n})\n\nexport const linkInfoIconOverride: IconOverrides = {\n  Svg: {\n    style: ({ $theme: { colors } }) => ({\n      color: colors.mono700,\n    }),\n  },\n}\n\nexport const optionalIconOverride: IconOverrides = {\n  Svg: {\n    style: ({ $theme: { sizing, colors } }) => ({\n      marginRight: sizing.scale100,\n      color: colors.mono700,\n    }),\n  },\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useMutation, useQueryClient } from 'react-query'\nimport { StatefulMenu, OnItemSelect } from '@jifflenow/brightui/menu'\nimport { PersonOutlined, Person } from '@jifflenow/brightui/icon'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { AutoTooltip } from 'ui-components/AutoTooltip'\nimport { menuOverrides } from 'ui-components/Menu/overrides'\nimport { ThreeDotsPopover } from 'ui-components/ThreeDotsPopover'\nimport {\n  remindParticipantsMutationFn,\n  removeParticipantsMutationFn,\n  useSummitV1Client,\n} from 'rest'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport {\n  ParticipantEmail,\n  ParticipantsList,\n  ParticipantsListItem,\n  ParticipantDetails,\n  ParticipantActions,\n  TagInfo,\n  Tag,\n} from './styled-components'\nimport { optionalIconOverride } from './overrides'\nimport {\n  ParticipantsAction,\n  ParticipantActionsMenuProps,\n  ParticipantsProps,\n  ParticipantsOptionsMenuProps,\n  SharedLinkMenuItem,\n} from './types'\n\nconst messages = defineMessages({\n  remindSuccessMessage: {\n    defaultMessage: 'Reminded participant successfully',\n    description: 'Participant remind success message',\n  },\n  removeSuccessMessage: {\n    defaultMessage: 'Removed participant successfully',\n    description: 'Participant remove success message',\n  },\n  remindLabel: {\n    defaultMessage: 'Remind',\n    description: 'Menu option',\n  },\n  removeLabel: {\n    defaultMessage: 'Remove',\n    description: 'Menu option',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  meetingHostLabel: {\n    defaultMessage: 'Meeting Host',\n    description: 'Label',\n  },\n})\n\nconst onItemSelect: OnItemSelect = args => args.item.onItemSelect?.(args)\n\nconst ParticipantsOptionsMenu: VFC<ParticipantsOptionsMenuProps> = ({\n  close,\n  ...rest\n}) => {\n  const { formatMessage } = useIntl()\n  const queryClient = useQueryClient()\n\n  const {\n    id: token,\n    eventName,\n    actions: { canRemindParticipants, canEdit },\n    userUuid,\n  } = rest\n\n  const client = useSummitV1Client(eventName)\n\n  const handleError = () => {\n    showErrorToast(formatMessage(messages.genericError))\n    close()\n  }\n\n  const handleSuccess = (action: keyof ParticipantsAction) => {\n    switch (action) {\n      case 'canRemindParticipants':\n        showSuccessToast(formatMessage(messages.remindSuccessMessage))\n        break\n      case 'canEdit':\n        showSuccessToast(formatMessage(messages.removeSuccessMessage))\n        break\n    }\n\n    queryClient.invalidateQueries('sharedLinkDetails')\n    close()\n  }\n\n  const params = { client, token }\n\n  const {\n    mutate: remindParticipants,\n    isLoading: remindInProgress,\n  } = useMutation('remindParticipants', remindParticipantsMutationFn(params), {\n    onSuccess: () => handleSuccess('canRemindParticipants'),\n    onError: handleError,\n  })\n\n  const {\n    mutate: removeParticipants,\n    isLoading: removeInProgress,\n  } = useMutation('remindParticipants', removeParticipantsMutationFn, {\n    onSuccess: () => handleSuccess('canEdit'),\n    onError: handleError,\n  })\n\n  const linkActionInProgress = remindInProgress || removeInProgress\n\n  const menu: SharedLinkMenuItem[] = ([\n    canRemindParticipants && {\n      label: formatMessage(messages.remindLabel),\n      dataPendo: 'shared-links/remind-participants',\n      onItemSelect: () => remindParticipants({ userUuids: [userUuid] }),\n    },\n    canEdit && {\n      label: formatMessage(messages.removeLabel),\n      dataPendo: 'shared-links/remove-participant',\n      onItemSelect: () => removeParticipants({ ...params, uuid: userUuid }),\n    },\n  ].filter(Boolean) as unknown) as SharedLinkMenuItem[]\n\n  return (\n    <>\n      {linkActionInProgress && <ModalSpinner />}\n      <StatefulMenu\n        items={menu}\n        onItemSelect={onItemSelect}\n        overrides={menuOverrides}\n      />\n    </>\n  )\n}\n\nconst ParticipantActionsMenu: VFC<ParticipantActionsMenuProps> = props => {\n  const { actions } = props\n\n  const showActions = Object.keys(actions).some(\n    action => actions[action as keyof ParticipantsAction]\n  )\n\n  return showActions ? (\n    <ThreeDotsPopover\n      content={({ close }) => (\n        <ParticipantsOptionsMenu close={close} {...props} />\n      )}\n    />\n  ) : null\n}\n\nexport const Participants: VFC<ParticipantsProps> = ({ linkDetails }) => {\n  const { formatMessage } = useIntl()\n\n  const {\n    id,\n    attributes: {\n      link,\n      relationships: {\n        location: { systemName: eventName },\n        actions: { canRemindParticipants, canEdit },\n        attendees,\n      },\n    },\n  } = linkDetails\n\n  return (\n    <ParticipantsList>\n      {attendees?.map(({ email, uuid, optional, meetingHost }) => {\n        const actionsMenuProps: ParticipantActionsMenuProps = {\n          id,\n          link,\n          actions: {\n            canRemindParticipants,\n            canEdit,\n          },\n          eventName,\n          userUuid: uuid!,\n        }\n\n        return (\n          <ParticipantsListItem key={email}>\n            <ParticipantDetails>\n              <AutoTooltip content={email} showArrow>\n                <ParticipantEmail>{email}</ParticipantEmail>\n              </AutoTooltip>\n              <TagInfo>\n                {meetingHost && (\n                  <Tag>{formatMessage(messages.meetingHostLabel)}</Tag>\n                )}\n              </TagInfo>\n            </ParticipantDetails>\n            <ParticipantActions>\n              {optional ? (\n                <PersonOutlined overrides={optionalIconOverride} />\n              ) : (\n                <Person overrides={optionalIconOverride} />\n              )}\n              <ParticipantActionsMenu {...actionsMenuProps} />\n            </ParticipantActions>\n          </ParticipantsListItem>\n        )\n      })}\n    </ParticipantsList>\n  )\n}\n","import { Fragment, VFC } from 'react'\nimport { useQuery } from 'react-query'\nimport { getEngagementTypeCustomFormQueryFn, useSummitClient } from 'rest'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport {\n  RequestFormFieldName,\n  RequestFormFieldValue,\n} from './styled-components'\nimport { MeetingInfoTabProps } from './types'\n\nexport const MeetingInfoTab: VFC<MeetingInfoTabProps> = props => {\n  const {\n    relationships: {\n      location: { systemName: eventName },\n      engagementType: { uuid },\n    },\n    customFields,\n  } = props.attributes\n\n  const client = useSummitClient()\n\n  const { isLoading, isFetching, data, error, refetch } = useQuery(\n    [\n      'engagementTypeCustomForm',\n      {\n        path: {\n          eventName,\n        },\n        query: {\n          uuid,\n        },\n      },\n    ],\n    getEngagementTypeCustomFormQueryFn(client)\n  )\n\n  if (isLoading || isFetching) {\n    return <ModalSpinner />\n  }\n  if (error || !data) {\n    return <ErrorPage onButtonClick={() => refetch()} />\n  }\n\n  const meetingTypeName = Object.keys(data.data)[0]\n  const fields =\n    data.data[meetingTypeName].forms?.external_activity_custom_form || []\n\n  const fieldLabels: Record<string, string> = fields.reduce(\n    (acc, { field_name, label }) => ({ ...acc, [field_name]: label }),\n    {}\n  )\n\n  return (\n    <>\n      {Object.keys(customFields ?? {}).map((key, i) => {\n        const value = customFields![key]\n\n        return (\n          <Fragment key={i}>\n            <RequestFormFieldName>{fieldLabels[key]}</RequestFormFieldName>\n            <RequestFormFieldValue>\n              {Array.isArray(value) ? (\n                value.join(', ')\n              ) : (\n                <div dangerouslySetInnerHTML={{ __html: value }} />\n              )}\n            </RequestFormFieldValue>\n          </Fragment>\n        )\n      })}\n    </>\n  )\n}\n","import { VFC, useState, useEffect, ChangeEvent } from 'react'\nimport { stringifyUrl } from 'query-string'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useQuery } from 'react-query'\nimport { GridApi } from '@ag-grid-community/core'\nimport { getSharedLinksQueryFn } from 'rest'\nimport { StatefulTooltip, PLACEMENT } from '@jifflenow/brightui/tooltip'\nimport { Pagination, KIND } from '@jifflenow/brightui/pagination'\nimport {\n  getTabOverrides,\n  Tab,\n  Tabs,\n  TabTitle,\n} from '@jifflenow/brightui/tabs-motion'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { IconButton, SIZE } from '@jifflenow/brightui/button'\nimport { Export } from '@jifflenow/brightui/icon'\nimport { useRouteMatch, useParams, useLocation } from 'react-router-dom'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useDebounce } from 'utils/debounce'\nimport { Paths } from 'components/Routes/Paths'\nimport { useSelection, PAGE_SIZE } from 'components/ag-grid'\nimport { components } from 'types/openapi'\nimport { tabOverrides, tabsOverrides } from './overrides'\nimport { useSharedLinksPreferences } from './SharedLinkPreferencesProvider'\nimport { List } from './List'\nimport { Header } from './Header'\nimport { Filters } from './Filters'\nimport { LinkListTitle } from './LinkListTitle'\nimport { Footer, SubHeaderRoot } from './styled-components'\n\ntype GeneralNameAndUuidFormat = components['schemas']['GeneralNameAndUuidFormat']\n\nenum TabKeys {\n  LINKS = 'links',\n  MEETINGS = 'meetings',\n}\n\nconst getUuids = ({ uuid }: GeneralNameAndUuidFormat) => uuid\n\nconst aria = defineMessages({\n  labelExportLinks: {\n    defaultMessage: 'Export links',\n    description: 'Aria label',\n  },\n})\n\nconst messages = defineMessages({\n  labelExportLinks: {\n    defaultMessage: 'Export',\n    description: 'Button label',\n  },\n})\n\nconst tabTitles = defineMessages<TabKeys>({\n  links: {\n    defaultMessage: 'Shared links',\n    description: 'Tab title',\n  },\n  meetings: {\n    defaultMessage: 'Meetings',\n    description: 'Tab title',\n  },\n})\n\nexport const LinkList: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  const [activeTab, setActiveTab] = useState<TabKeys>(TabKeys.LINKS)\n  const [gridApi, setGridApi] = useState<GridApi | null>(null)\n  const [search, setSearch] = useState<string>('')\n  const searchTerm = useDebounce(search.trim(), 500)\n  const { deselectAll } = useSelection()\n  const [pageNumber, setPageNumber] = useState<number>(1)\n\n  const { eventName } = useParams<{ eventName: string }>()\n\n  const location = useEventLocation().location!\n\n  const matchLinkListPath = useRouteMatch({\n    exact: true,\n    path: Paths.LINKS.path,\n  })\n\n  const resetToFirstPage = () => {\n    setPageNumber(1)\n    deselectAll()\n  }\n\n  const listPreferences = useSharedLinksPreferences()\n\n  const {\n    sortBy,\n    statuses,\n    linkTypes,\n    participants,\n    engagementTypes,\n  } = listPreferences.preferences\n\n  const linkListQueryParams = {\n    page: { size: PAGE_SIZE, number: pageNumber },\n    search_term: searchTerm,\n    'filter[emeetLocationUuid][]': [\n      new URLSearchParams(useLocation().search).get('location')!,\n    ],\n    sortBy,\n    'statuses[]': statuses,\n    'linkTypes[]': linkTypes,\n    'participants[]': participants.map(getUuids),\n    'engagementTypes[]': engagementTypes.map(getUuids),\n  }\n\n  const { isLoading, data, refetch: fetchList } = useQuery(\n    ['sharedLinks', linkListQueryParams],\n    getSharedLinksQueryFn({ eventName }),\n    {\n      onError: () => gridApi?.showNoRowsOverlay(),\n    }\n  )\n\n  const { size = PAGE_SIZE, total = 0 } = data?.meta.page ?? {}\n\n  useEffect(() => {\n    isLoading ? gridApi?.showLoadingOverlay() : gridApi?.hideOverlay()\n  }, [gridApi, isLoading])\n\n  return (\n    <>\n      {matchLinkListPath && <LinkListTitle />}\n      <Header\n        search={search}\n        itemCount={total}\n        onSearch={(e: ChangeEvent<HTMLInputElement>) => {\n          resetToFirstPage()\n          setSearch(e.target.value)\n        }}\n      />\n      <Tabs\n        activeKey={activeTab}\n        onChange={({ activeKey }) => {\n          setActiveTab(activeKey as TabKeys)\n          if (activeKey === 'meetings') {\n            window.location.href = stringifyUrl({\n              url: Paths.LEGACY_EVENT_MEETINGS.path.replace(\n                ':eventName',\n                location.attributes.systemName\n              ),\n              query: { current_location_uuid: location.id },\n            })\n          }\n        }}\n        activateOnFocus={false}\n        overrides={tabsOverrides}\n      >\n        <Tab\n          key={TabKeys.MEETINGS}\n          title={<TabTitle>{formatMessage(tabTitles.meetings)}</TabTitle>}\n          overrides={getTabOverrides(tabOverrides)}\n        >\n          {/* Placeholder spinner until the browser redirects to legacy meeting list page */}\n          <ModalSpinner />\n        </Tab>\n        <Tab\n          key={TabKeys.LINKS}\n          title={<TabTitle>{formatMessage(tabTitles.links)}</TabTitle>}\n          overrides={getTabOverrides(tabOverrides)}\n        >\n          <SubHeaderRoot>\n            <Filters onChange={resetToFirstPage} />\n            <StatefulTooltip\n              content={formatMessage(messages.labelExportLinks)}\n              showArrow\n              placement={PLACEMENT.bottom}\n            >\n              <IconButton\n                type=\"button\"\n                aria-label={formatMessage(aria.labelExportLinks)}\n                size={SIZE.large}\n                onClick={() => {\n                  const { page, ...restQuery } = linkListQueryParams\n\n                  window.open(\n                    stringifyUrl(\n                      {\n                        url: `${window.location.origin}/${eventName}/exporter/UserInboundLink`,\n                        query: {\n                          'page[number]': page?.number,\n                          'page[size]': page?.size,\n                          modName: 'UserInboundLinks::UserInboundLink',\n                          ...restQuery,\n                        },\n                      },\n                      { skipEmptyString: true }\n                    ),\n                    '_blank'\n                  )\n                }}\n              >\n                <Export />\n              </IconButton>\n            </StatefulTooltip>\n          </SubHeaderRoot>\n          <List\n            gridApi={gridApi}\n            setGridApi={setGridApi}\n            onSort={resetToFirstPage}\n            {...listPreferences}\n            {...{ data: data?.data, refetch: fetchList }}\n          />\n          <Footer>\n            {total > size && (\n              <Pagination\n                kind={KIND.light}\n                totalItems={total}\n                fixedPageSize={PAGE_SIZE}\n                currentPageSize={PAGE_SIZE}\n                currentPageNumber={pageNumber}\n                onPageNumberChange={setPageNumber}\n              />\n            )}\n          </Footer>\n        </Tab>\n      </Tabs>\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Accordion, Panel } from '@jifflenow/brightui/accordion'\nimport { TimeOutlined } from '@jifflenow/brightui/icon'\nimport {\n  formatDateRange,\n  formatDateTimeRange,\n  formatToStartOfTheDay,\n} from 'utils/dates'\nimport {\n  Column,\n  InfoDescription,\n  InfoLabel,\n  MeetingSlot,\n} from './styled-components'\nimport { accordionOverride } from './overrides'\nimport { AvailableSlotsProps } from './types'\nimport { LinkInfo } from './LinkDetails'\n\nconst messages = defineMessages({\n  slotsLabel: {\n    defaultMessage: '{count} {count, plural, one {slot} other {slots}}',\n    description: 'available slots label',\n  },\n})\n\nconst getRange = (timeRanges: AvailableSlotsProps['timeRanges'] = []) => ({\n  startDate: timeRanges.map(({ startTime }) => startTime).sort()[0],\n  endDate: timeRanges\n    .map(({ endTime }) => endTime)\n    .sort()\n    .reverse()[0],\n})\n\nconst RangeView: VFC<AvailableSlotsProps> = ({ timeRanges = [], timeZone }) => {\n  const { startDate, endDate } = getRange(timeRanges)\n\n  return (\n    <>\n      <InfoLabel>\n        {formatDateRange(\n          formatToStartOfTheDay(startDate),\n          formatToStartOfTheDay(endDate)\n        )}\n      </InfoLabel>\n      <InfoDescription>{timeZone}</InfoDescription>\n    </>\n  )\n}\n\nconst AccordionView: VFC<AvailableSlotsProps> = ({\n  timeRanges = [],\n  timeZone,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const { startDate, endDate } = getRange(timeRanges)\n\n  const getAccordionHeader = () => (\n    <Column>\n      <InfoLabel>\n        {formatDateRange(\n          formatToStartOfTheDay(startDate),\n          formatToStartOfTheDay(endDate)\n        )}\n        &nbsp;&ndash;&nbsp;\n        {formatMessage(messages.slotsLabel, { count: timeRanges.length })}\n      </InfoLabel>\n      <InfoDescription>{timeZone}</InfoDescription>\n    </Column>\n  )\n\n  return (\n    <Accordion overrides={accordionOverride}>\n      <Panel title={getAccordionHeader()}>\n        {timeRanges.map(({ startTime, endTime }, i) => (\n          <MeetingSlot key={i}>\n            {formatDateTimeRange(new Date(startTime), new Date(endTime))}\n          </MeetingSlot>\n        ))}\n      </Panel>\n    </Accordion>\n  )\n}\n\nexport const AvailableSlots: VFC<AvailableSlotsProps> = props => {\n  const { timeRanges = [] } = props\n\n  const isRange =\n    timeRanges?.length === 1 &&\n    /^\\d{4}-\\d{2}-\\d{2}$/u.test(timeRanges[0].startTime)\n\n  return timeRanges.length ? (\n    <LinkInfo Icon={TimeOutlined}>\n      {isRange ? <RangeView {...props} /> : <AccordionView {...props} />}\n    </LinkInfo>\n  ) : null\n}\n","import { VFC, useState } from 'react'\nimport { useMutation } from 'react-query'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { renewInboundLinkMutationFn, useSummitV1Client } from 'rest'\nimport { PrimaryActionButton } from 'ui-components/DrawerPane'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { Remind } from '../common'\nimport { FooterActionProps } from './types'\n\nconst messages = defineMessages({\n  remindSuccessMessage: {\n    defaultMessage: 'Reminded participants successfully',\n    description: 'Success message',\n  },\n  renewLinkSuccessMessage: {\n    defaultMessage: 'Link renewed successfully',\n    description: 'Success message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  renewLabel: {\n    defaultMessage: 'Renew',\n    description: 'Button label',\n  },\n  remindLabel: {\n    defaultMessage: 'Remind',\n    description: 'Button label',\n  },\n  editLabel: {\n    defaultMessage: 'Edit',\n    description: 'Button label',\n  },\n})\n\nexport const FooterAction: VFC<FooterActionProps> = ({\n  linkDetails,\n  primaryActions,\n  externalAttendees,\n  onLinkEdit,\n}) => {\n  const { formatMessage } = useIntl()\n  const [showRemind, setShowRemind] = useState(false)\n\n  const {\n    attributes: {\n      uuid: token,\n      relationships: {\n        location: { systemName: eventName },\n      },\n    },\n  } = linkDetails\n  const { canRemindParticipants, canRenewExpiry, canEdit } = primaryActions\n\n  const summitClient = useSummitV1Client(eventName)\n\n  const handleError = () => {\n    showErrorToast(formatMessage(messages.genericError))\n  }\n\n  const params = { client: summitClient, token }\n\n  const { mutate: renewLink, isLoading: renewInProgress } = useMutation(\n    'renewLink',\n    renewInboundLinkMutationFn,\n    {\n      onSuccess: () => {\n        showSuccessToast(formatMessage(messages.renewLinkSuccessMessage))\n      },\n      onError: handleError,\n    }\n  )\n\n  return (\n    <>\n      {renewInProgress && <ModalSpinner />}\n      {canRemindParticipants ? (\n        <>\n          {showRemind && (\n            <Remind\n              token={token}\n              eventName={eventName}\n              attendees={externalAttendees}\n              onClose={() => setShowRemind(false)}\n            />\n          )}\n          <PrimaryActionButton\n            onClick={() => setShowRemind(true)}\n            dataPendo=\"shared-links/remind-participants\"\n          >\n            {formatMessage(messages.remindLabel)}\n          </PrimaryActionButton>\n        </>\n      ) : canRenewExpiry ? (\n        <PrimaryActionButton\n          onClick={() => renewLink(params)}\n          dataPendo=\"shared-links/renew-link\"\n        >\n          {formatMessage(messages.renewLabel)}\n        </PrimaryActionButton>\n      ) : canEdit ? (\n        <PrimaryActionButton\n          onClick={() => onLinkEdit?.()}\n          dataPendo=\"shared-links/edit-link\"\n        >\n          {formatMessage(messages.editLabel)}\n        </PrimaryActionButton>\n      ) : null}\n    </>\n  )\n}\n","import { Icon, IconProps } from '@jifflenow/brightui/icon'\n\nexport const CalendarCancelled = (props: IconProps) => (\n  <Icon width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" color=\"none\" {...props}>\n    <path\n      d=\"M3.435 2.219H1v12.783h14V2.219h-2.434\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      clipRule=\"evenodd\"\n      d=\"M3.434 3.435H5.26V1H3.434v2.435zM10.742 3.435h1.826V1h-1.826v2.435z\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M5.258 2.219h5.478M1 5.258h14M5.5 12.563l5-5M10.5 12.563l-5-5\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </Icon>\n)\n","import { Icon, IconProps } from '@jifflenow/brightui/icon'\n\nexport const LinkIcon = (props: IconProps) => (\n  <Icon width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" color=\"none\" {...props}>\n    <path\n      d=\"m9.456 8.33.059.058a1.365 1.365 0 0 0 1.93 0l2.707-2.706c.796-.797.796-2.1 0-2.897l-1.2-1.2a2.053 2.053 0 0 0-2.896 0L7.349 4.293a1.366 1.366 0 0 0 0 1.931l.059.058M6.043 7.646l-.059-.058a1.364 1.364 0 0 0-1.93 0l-2.707 2.706a2.055 2.055 0 0 0 0 2.897l1.2 1.2c.796.796 2.1.796 2.896 0l2.707-2.707a1.366 1.366 0 0 0 0-1.931l-.059-.06M5.094 10.642l5.309-5.31\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </Icon>\n)\n","import { FC, VFC } from 'react'\nimport { DateTime } from 'luxon'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { IconProps } from '@jifflenow/brightui/icon'\nimport { LinkButton, KIND } from '@jifflenow/brightui/button'\nimport { Accordion, Panel } from '@jifflenow/brightui/accordion'\nimport { LinkStatusProps, Status } from './types'\nimport { LinkInfo } from './LinkDetails'\nimport {\n  ColumnFullWidth,\n  InfoContent,\n  InfoIconRoot,\n  InfoLabel,\n  InfoRoot,\n  Row,\n  CancelledLabel,\n} from './styled-components'\nimport { CalendarCancelled, CalendarPending, CalendarScheduled } from './icons'\nimport { MeetingLinkProps } from './types'\nimport {\n  accordionOverride,\n  getMeetingLinkButtonOverrides,\n  linkInfoIconOverride,\n} from './overrides'\n\nconst messages = defineMessages({\n  expiresOnLabel: {\n    defaultMessage: 'Expires on {date}',\n    description: 'Link Expiry information',\n  },\n  expiredLabel: {\n    defaultMessage: 'Expired on {date}',\n    description: 'Link expired label',\n  },\n  scheduledLabel: {\n    defaultMessage: 'Scheduled',\n    description: 'Link status label',\n  },\n  cancelledLabel: {\n    defaultMessage: 'Cancelled',\n    description: 'Link status label',\n  },\n  meetingLabel: {\n    defaultMessage: 'Meeting #{id}',\n    description: 'Meeting id label',\n  },\n  meetingLabelWithCount: {\n    defaultMessage:\n      '{count} {count, plural, one {meeting} other {meetings}} (of {meetingsQuota})',\n    description: 'Meeting with count label',\n  },\n  cancelledMeetingLabelWithCount: {\n    defaultMessage:\n      '{count} {count, plural, one {meeting} other {meetings}} cancelled',\n    description: 'Cancelled Meeting with count label',\n  },\n})\n\nconst formatDate = (date: string) =>\n  DateTime.fromISO(date).toLocaleString(DateTime.DATETIME_FULL)\n\nconst iconMap: Record<Status, FC<IconProps>> = {\n  scheduled: CalendarScheduled,\n  pending: CalendarPending,\n  cancelled: CalendarCancelled,\n  expired: CalendarCancelled,\n}\n\nconst MeetingLink: VFC<MeetingLinkProps> = ({\n  meetingId: id,\n  showAsBlock = false,\n  onClick,\n  status,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <LinkButton\n      size={14}\n      type=\"button\"\n      kind={KIND.minimal}\n      overrides={getMeetingLinkButtonOverrides(showAsBlock)}\n      data-pendo=\"shared-links-detail/meeting-link\"\n      onClick={onClick}\n    >\n      {formatMessage(messages.meetingLabel, { id })}&nbsp;\n      {status === 'cancelled' ? (\n        <CancelledLabel>\n          {` (${formatMessage(messages.cancelledLabel, { id })})`}\n        </CancelledLabel>\n      ) : null}\n    </LinkButton>\n  )\n}\n\nexport const LinkStatus: VFC<LinkStatusProps> = ({\n  linkDetails,\n  onMeetingClick,\n}) => {\n  const { formatMessage } = useIntl()\n  const {\n    attributes: {\n      expiredOn,\n      status,\n      meetingsQuota,\n      scheduledMeetings,\n      numberOfScheduledMeetings,\n    },\n  } = linkDetails\n\n  const Icon = iconMap[status]\n\n  if (meetingsQuota > 1) {\n    if (status === 'expired' || status === 'scheduled') {\n      return (\n        <InfoRoot>\n          <ColumnFullWidth>\n            <Row>\n              <InfoIconRoot>\n                <Icon size={14} overrides={linkInfoIconOverride} />\n              </InfoIconRoot>\n              <InfoContent>\n                <InfoLabel>\n                  {status === 'expired'\n                    ? formatMessage(messages.expiredLabel, {\n                        date: formatDate(expiredOn),\n                      })\n                    : null}\n                  {status === 'scheduled' ? (\n                    <>\n                      {formatMessage(messages.scheduledLabel)}\n                      &nbsp;&bull;&nbsp;\n                      {formatMessage(messages.expiresOnLabel, {\n                        date: formatDate(expiredOn),\n                      })}\n                    </>\n                  ) : null}\n                </InfoLabel>\n              </InfoContent>\n            </Row>\n\n            {scheduledMeetings && (\n              <Accordion overrides={accordionOverride}>\n                <Panel\n                  title={\n                    <InfoLabel>\n                      {formatMessage(messages.meetingLabelWithCount, {\n                        count: numberOfScheduledMeetings,\n                        meetingsQuota,\n                      })}\n                    </InfoLabel>\n                  }\n                >\n                  {scheduledMeetings.map(({ id, uuid, status }) => (\n                    <MeetingLink\n                      key={id}\n                      meetingId={id}\n                      status={status}\n                      showAsBlock\n                      onClick={() => onMeetingClick?.(uuid)}\n                    />\n                  ))}\n                </Panel>\n              </Accordion>\n            )}\n          </ColumnFullWidth>\n        </InfoRoot>\n      )\n    }\n  }\n\n  if (status === 'pending' || status === 'expired') {\n    return (\n      <LinkInfo Icon={Icon}>\n        <InfoLabel>\n          {formatMessage(\n            messages[status === 'pending' ? 'expiresOnLabel' : 'expiredLabel'],\n            {\n              date: formatDate(expiredOn),\n            }\n          )}\n        </InfoLabel>\n      </LinkInfo>\n    )\n  }\n\n  if (status === 'scheduled') {\n    const activeMeeting = scheduledMeetings?.find(\n      ({ status }) => status !== 'cancelled'\n    )\n\n    const cancelledMeetings = scheduledMeetings?.filter(\n      ({ status }) => status === 'cancelled'\n    )\n\n    return (\n      <>\n        <LinkInfo Icon={Icon}>\n          <InfoLabel>\n            {formatMessage(messages.scheduledLabel)}&nbsp;\n            {activeMeeting && (\n              <MeetingLink\n                meetingId={activeMeeting.id}\n                status={activeMeeting.status}\n                onClick={() => onMeetingClick?.(activeMeeting.uuid)}\n              />\n            )}\n          </InfoLabel>\n        </LinkInfo>\n        {cancelledMeetings?.length ? (\n          <InfoRoot>\n            <Accordion overrides={accordionOverride}>\n              <Panel\n                title={\n                  <InfoLabel>\n                    {formatMessage(messages.cancelledMeetingLabelWithCount, {\n                      count: cancelledMeetings.length,\n                    })}\n                  </InfoLabel>\n                }\n              >\n                {cancelledMeetings.map(({ id, uuid }) => (\n                  <MeetingLink\n                    key={id}\n                    meetingId={id}\n                    showAsBlock\n                    onClick={() => onMeetingClick?.(uuid)}\n                  />\n                ))}\n              </Panel>\n            </Accordion>\n          </InfoRoot>\n        ) : null}\n      </>\n    )\n  }\n\n  return (\n    <LinkInfo Icon={Icon}>\n      <InfoLabel>{formatMessage(messages.cancelledLabel)}</InfoLabel>\n    </LinkInfo>\n  )\n}\n","import { Icon, IconProps } from '@jifflenow/brightui/icon'\n\nexport const CalendarScheduled = (props: IconProps) => (\n  <Icon width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" color=\"none\" {...props}>\n    <path\n      d=\"m11.66 7.691-4.565 4.87-2.13-2.13\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M3.435 2.219H1v12.783h14V2.219h-2.434\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      clipRule=\"evenodd\"\n      d=\"M3.434 3.435H5.26V1H3.434v2.435zM10.742 3.435h1.826V1h-1.826v2.435z\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M5.258 2.219h5.478M1 5.258h14\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </Icon>\n)\n","import { Icon, IconProps } from '@jifflenow/brightui/icon'\n\nexport const CalendarPending = (props: IconProps) => (\n  <Icon width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" color=\"none\" {...props}>\n    <path\n      d=\"M3.435 2.219H1v12.783h14V2.219h-2.434\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      clipRule=\"evenodd\"\n      d=\"M3.434 3.435H5.26V1H3.434v2.435zM10.742 3.435h1.826V1h-1.826v2.435z\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M5.258 2.219h5.478M1 5.258h14\"\n      stroke=\"#706E6B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <circle cx=\"4.977\" cy=\"9.57\" r=\".875\" fill=\"#706E6B\" />\n    <circle cx=\"8.012\" cy=\"9.57\" r=\".875\" fill=\"#706E6B\" />\n    <circle cx=\"11.063\" cy=\"9.57\" r=\".875\" fill=\"#706E6B\" />\n  </Icon>\n)\n","import { FC, VFC } from 'react'\nimport { useQuery } from 'react-query'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { components } from 'types/openapi'\nimport {\n  LocationOutlined,\n  MeetingsOutlined,\n  Message,\n  TopicOutlined,\n  VideoOutlined,\n} from '@jifflenow/brightui/icon'\nimport { DrawerPane } from 'ui-components/DrawerPane'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { getSharedLinkDetailsQueryFn, useSummitV1Client } from 'rest'\nimport { Loader } from './Loader'\nimport { Header } from './Header'\nimport {\n  LinkDetailsDrawerProps,\n  LinkDetailsProps,\n  LinkDetailsViewProps,\n  LinkInfoProps,\n} from './types'\nimport {\n  InfoContent,\n  InfoDescription,\n  InfoIconRoot,\n  InfoLabel,\n  InfoRoot,\n  LinkDetailsContent,\n  LinkDetailsRoot,\n} from './styled-components'\nimport { Tabs } from './Tabs'\nimport { AvailableSlots } from './AvailableSlots'\nimport { FooterAction } from './FooterAction'\nimport { LinkStatus } from './LinkStatus'\nimport { LinkIcon } from './icons'\nimport { linkInfoIconOverride } from './overrides'\n\ntype LocationType = components['schemas']['LocationType']\n\nconst messages = defineMessages({\n  requestorLabel: {\n    defaultMessage: 'Requestor',\n    description: 'Requestor placeholder',\n  },\n  preferredLabel: {\n    defaultMessage: 'Preferred',\n    description: 'Preferred placeholder',\n  },\n  slotsLabel: {\n    defaultMessage: '{count} slots',\n    description: 'Available slots label',\n  },\n  meetingsQuotaLabel: {\n    defaultMessage: '{meetingsQuota} Use',\n    description: 'Meetings Quota placeholder',\n  },\n  unlimitedUseLabel: {\n    defaultMessage: 'Unlimited Use (999)',\n    description: 'Unlimited use placeholder',\n  },\n})\n\nconst roomLabels = defineMessages<Exclude<LocationType, 'offsite'>>({\n  room: {\n    defaultMessage: 'Room',\n    description: 'Room placeholder',\n  },\n  boothTour: {\n    defaultMessage: 'Designated Location',\n    description: 'Booth tour placeholder',\n  },\n})\n\nexport const LinkInfo: FC<LinkInfoProps> = ({ Icon, children }) => (\n  <InfoRoot>\n    <InfoIconRoot>\n      <Icon size={16} overrides={linkInfoIconOverride} />\n    </InfoIconRoot>\n    <InfoContent>{children}</InfoContent>\n  </InfoRoot>\n)\n\nconst LinkDetailsView: VFC<LinkDetailsViewProps> = ({\n  linkDetails,\n  onLinkEdit,\n  onMeetingClick,\n  isWebApp,\n  onScheduleMeeting,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const {\n    attributes: {\n      status,\n      requestorInfo,\n      locationPreference,\n      timeRanges,\n      proposedTimeZone,\n      meetingsQuota,\n      isUnlimitedUse,\n      preferredVconLink,\n      relationships: { topic, actions, engagementType, attendees },\n    },\n  } = linkDetails\n\n  let primaryActions = {}\n  let secondaryActions = actions\n\n  const externalAttendees = attendees.filter(({ type }) => type === 'external')\n\n  if (status === 'pending') {\n    const { canRemindParticipants, ...rest } = actions\n    primaryActions = {\n      canRemindParticipants:\n        canRemindParticipants && !!externalAttendees.length,\n    }\n    secondaryActions = rest\n  } else if (status === 'expired' || status === 'cancelled') {\n    const { canRenewExpiry, ...rest } = actions\n    primaryActions = { canRenewExpiry }\n    secondaryActions = rest\n  } else if (status === 'scheduled') {\n    const { canEdit, ...rest } = actions\n    primaryActions = { canEdit }\n    secondaryActions = rest\n  }\n\n  // TODO: Hide edit on web app till edit on webapp is introduced\n  if (isWebApp) {\n    primaryActions = { ...primaryActions, canEdit: false }\n    secondaryActions = { ...secondaryActions, canEdit: false }\n  }\n\n  return (\n    <LinkDetailsRoot>\n      <Header\n        linkDetails={linkDetails}\n        secondaryActions={secondaryActions}\n        onLinkEdit={onLinkEdit}\n        onScheduleMeeting={onScheduleMeeting}\n      />\n      <LinkDetailsContent>\n        <LinkStatus linkDetails={linkDetails} onMeetingClick={onMeetingClick} />\n        <LinkInfo Icon={MeetingsOutlined}>\n          <InfoLabel>{engagementType.displayName}</InfoLabel>\n        </LinkInfo>\n        {topic && (\n          <LinkInfo Icon={TopicOutlined}>\n            <InfoLabel>{topic.displayName}</InfoLabel>\n          </LinkInfo>\n        )}\n        <AvailableSlots timeRanges={timeRanges} timeZone={proposedTimeZone} />\n        {requestorInfo && (\n          <LinkInfo Icon={Message}>\n            <InfoLabel>{requestorInfo.name}</InfoLabel>\n            <InfoDescription>\n              {formatMessage(messages.requestorLabel)}\n            </InfoDescription>\n          </LinkInfo>\n        )}\n        {locationPreference && (\n          <LinkInfo Icon={LocationOutlined}>\n            {locationPreference.locationType === 'offsite' ? (\n              <InfoLabel>\n                {locationPreference.offsiteLocation?.name}&nbsp;\n                {locationPreference.offsiteLocation?.address}\n              </InfoLabel>\n            ) : (\n              <>\n                <InfoLabel>\n                  {formatMessage(roomLabels[locationPreference.locationType])}\n                </InfoLabel>\n                <InfoDescription>\n                  {formatMessage(messages.preferredLabel)}\n                </InfoDescription>\n              </>\n            )}\n          </LinkInfo>\n        )}\n        {preferredVconLink && (\n          <LinkInfo Icon={VideoOutlined}>\n            <InfoLabel>{preferredVconLink.conferenceName}</InfoLabel>\n            <InfoDescription>\n              {formatMessage(messages.preferredLabel)}\n            </InfoDescription>\n          </LinkInfo>\n        )}\n        <LinkInfo Icon={LinkIcon}>\n          <InfoLabel>\n            {isUnlimitedUse\n              ? formatMessage(messages.unlimitedUseLabel)\n              : formatMessage(messages.meetingsQuotaLabel, { meetingsQuota })}\n          </InfoLabel>\n        </LinkInfo>\n        <Tabs linkDetails={linkDetails} />\n      </LinkDetailsContent>\n      <FooterAction\n        externalAttendees={externalAttendees}\n        linkDetails={linkDetails}\n        primaryActions={primaryActions}\n        onLinkEdit={onLinkEdit}\n      />\n    </LinkDetailsRoot>\n  )\n}\n\nconst LinkDetails: VFC<LinkDetailsProps> = ({ link, ...rest }) => {\n  const {\n    id: token,\n    relationships: {\n      location: { systemName: eventName },\n    },\n  } = link\n\n  const summitClient = useSummitV1Client(eventName)\n\n  const {\n    isLoading,\n    isFetching,\n    isFetchedAfterMount,\n    data,\n    error,\n    refetch,\n  } = useQuery(\n    ['sharedLinkDetails', { token }],\n    getSharedLinkDetailsQueryFn(summitClient)\n  )\n\n  if (isLoading || (isFetching && isFetchedAfterMount)) {\n    return <Loader />\n  }\n  if (error || !data) {\n    return <ErrorPage onButtonClick={() => refetch()} />\n  }\n\n  return <LinkDetailsView linkDetails={data} {...rest} />\n}\n\nexport const LinkDetailsDrawer: VFC<LinkDetailsDrawerProps> = ({\n  onClose,\n  ...restProps\n}) => (\n  <DrawerPane onClose={onClose} isWebApp={restProps.isWebApp}>\n    <LinkDetails {...restProps} />\n  </DrawerPane>\n)\n","import { stringifyUrl } from 'query-string'\nimport { components } from 'types/openapi'\n\ntype SharedLink = components['schemas']['SharedLink']\n\nexport const scheduleMeeting = (sharedLink: SharedLink) => {\n  const {\n    id: sharedLinkUuid,\n    meetingWith: meeting_with,\n    relationships: {\n      location: { systemName: eventName, uuid: current_location_uuid },\n      engagementType: { id: activity_uuid },\n      attendees = [],\n      topic: { uuid: topic_uuid } = {},\n    },\n  } = sharedLink\n\n  window.open(\n    stringifyUrl(\n      {\n        url: `${window.location.origin}/${eventName}/meeting_request/new`,\n        query: {\n          current_location_uuid,\n          activity_uuid,\n          meeting_with,\n          sharedLinkUuid,\n          'user_uuids[]': attendees.map(({ uuid }) => uuid),\n          topic_uuid,\n        },\n      },\n      { skipEmptyString: true }\n    ),\n    '_blank'\n  )\n}\n","import { defineMessages, MessageDescriptor } from 'react-intl'\nimport { ColDef } from '@ag-grid-community/core'\nimport { formatDate } from 'utils/dates'\n\nexport const columnHeaderNames: {\n  [key: string]: MessageDescriptor\n} = defineMessages({\n  primaryId: {\n    defaultMessage: 'ID',\n    description: 'Column header name',\n  },\n  meetingWith: {\n    defaultMessage: 'Meeting title',\n    description: 'Column header name',\n  },\n  location: {\n    defaultMessage: 'Location',\n    description: 'Column header name',\n  },\n  linkType: {\n    defaultMessage: 'Type',\n    description: 'Column header name',\n  },\n  status: {\n    defaultMessage: 'Status',\n    description: 'Column header name',\n  },\n  expiresAt: {\n    defaultMessage: 'Expiry Date',\n    description: 'Column header name',\n  },\n  createdBy: {\n    defaultMessage: 'Created by',\n    description: 'Column header name',\n  },\n  createdAt: {\n    defaultMessage: 'Created at',\n    description: 'Column header name',\n  },\n})\n\nexport const columnDefs: ColDef[] = [\n  // TODO: enable checkbox once bulk actions are implemented\n  // {\n  //   checkboxSelection: true,\n  //   lockPosition: true,\n  //   maxWidth: 50,\n  //   pinned: 'left',\n  //   resizable: false,\n  //   headerComponent: 'checkboxHeader',\n  //   headerComponentParams: {},\n  // },\n  {\n    field: 'primaryId',\n    maxWidth: 60,\n    sortable: false,\n    resizable: true,\n  },\n  {\n    field: 'meetingWith',\n    sortable: false,\n  },\n  {\n    field: 'location',\n    sortable: false,\n    valueGetter: ({ data: { relationships } }) =>\n      relationships?.location?.displayName,\n  },\n  {\n    field: 'linkType',\n    sortable: false,\n    cellRenderer: 'linkTypeCell',\n  },\n  {\n    field: 'status',\n    sortable: false,\n    cellRenderer: 'statusCell',\n  },\n  {\n    field: 'expiresAt',\n    sortable: true,\n    valueGetter: ({ data: { expiresAt } }) => new Date(expiresAt),\n    valueFormatter: ({ value }) => formatDate(value),\n  },\n  {\n    field: 'createdBy',\n    sortable: false,\n    valueGetter: ({ data: { relationships } }) =>\n      relationships?.createdBy?.name,\n  },\n  {\n    field: 'createdAt',\n    sortable: true,\n    valueGetter: ({ data: { createdAt } }) => new Date(createdAt),\n    valueFormatter: ({ value }) => formatDate(value),\n  },\n  {\n    field: 'actions',\n    pinned: 'right',\n    resizable: false,\n    maxWidth: 50,\n    cellRenderer: 'actionCell',\n    headerComponent: 'actionHeader',\n    headerComponentParams: { columnHeaderNames },\n    valueGetter: ({ data: { relationships } }) => relationships?.actions,\n  },\n]\n","import { FC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport {\n  NoRowsIcon,\n  ErrorIcon,\n  NoRowsContainer,\n  NoRowsText,\n  ButtonRetry,\n} from 'components/ag-grid'\nimport { NoRowsAndErrorOverlayProps } from './types'\n\nexport const NoRowsAndError: FC<NoRowsAndErrorOverlayProps> = ({\n  agGridReact,\n  refetch,\n}) => {\n  const showError = agGridReact.props.rowData === undefined\n\n  return (\n    <NoRowsContainer>\n      {showError ? <ErrorIcon size={93} /> : <NoRowsIcon size={93} />}\n      <NoRowsText>\n        {showError ? (\n          <FormattedMessage\n            defaultMessage=\"Something went wrong. Please try again.\"\n            description=\"Error message\"\n          />\n        ) : (\n          <FormattedMessage\n            defaultMessage=\"No links to show\"\n            description=\"Empty state of the list\"\n          />\n        )}\n      </NoRowsText>\n      {showError && (\n        <ButtonRetry type=\"button\" kind={KIND.secondary} onClick={refetch}>\n          <FormattedMessage defaultMessage=\"Retry\" description=\"Button label\" />\n        </ButtonRetry>\n      )}\n    </NoRowsContainer>\n  )\n}\n","import { FC, useState } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useMutation } from 'react-query'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { ICellRendererParams } from '@ag-grid-community/core'\nimport { PLACEMENT } from '@jifflenow/brightui/popover'\nimport { StatefulMenu, OnItemSelect } from '@jifflenow/brightui/menu'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { renewInboundLinkMutationFn, useSummitV1Client } from 'rest'\nimport { showSuccessToast, showErrorToast } from 'utils/toast'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { InlineMenuOverrides } from 'components/ag-grid'\nimport { ThreeDotsPopover } from 'ui-components/ThreeDotsPopover'\nimport { Remind } from 'components/SharedLinks/common/Remind'\nimport {\n  CancelConfirmation,\n  ConfirmationActions,\n  LinkInfo,\n  SuccessCallback,\n} from '../../common'\nimport { scheduleMeeting } from '../../scheduleMeeting'\nimport { InlineActionContentProps, ActionItem, SharedLink } from './types'\n\nconst messages = defineMessages({\n  schedule: {\n    defaultMessage: 'Schedule',\n    description: 'Grid row action label',\n  },\n  renew: {\n    defaultMessage: 'Renew',\n    description: 'Grid row action label',\n  },\n  remind: {\n    defaultMessage: 'Remind',\n    description: 'Grid row action label',\n  },\n  labelCancel: {\n    defaultMessage: 'Cancel',\n    description: 'Grid row action label',\n  },\n  labelDelete: {\n    defaultMessage: 'Delete',\n    description: 'Grid row action label',\n  },\n  copy: {\n    defaultMessage: 'Copy link',\n    description: 'Grid row action label',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  copied: {\n    defaultMessage: 'Link copied to clipboard',\n    description: 'Grid row action label',\n  },\n  linkRenewSuccessMessage: {\n    defaultMessage: 'The link is renewed successfully.',\n    description: 'Grid row action label',\n  },\n})\n\nconst aria = defineMessages({\n  labelEngagementMore: {\n    defaultMessage: 'Shared link list more option',\n    description: 'Inline actions',\n  },\n})\n\nconst onItemSelect: OnItemSelect = args => args.item.onItemSelect?.(args)\n\nconst Content: FC<InlineActionContentProps> = props => {\n  const { formatMessage } = useIntl()\n  const [showRemind, setShowRemind] = useState(false)\n  const [action, setAction] = useState<ConfirmationActions>()\n\n  const { value, data, onClose, node, api } = props\n  const {\n    id: token,\n    status,\n    relationships: {\n      attendees,\n      engagementType: { id: engagementTypeUuid },\n    },\n  } = data\n\n  const {\n    id: currentLocationUuid,\n    attributes: { systemName },\n  } = useEventLocation().location!\n\n  const summitClient = useSummitV1Client(systemName)\n\n  const externalAttendees = attendees.filter(({ type }) => type === 'external')\n\n  const { mutate: renewLink, isLoading: renewLinkInProgress } = useMutation(\n    'renewLink',\n    renewInboundLinkMutationFn,\n    {\n      onSuccess: ({ status, expiresAt }) => {\n        node.setData({ ...data, status, expiresAt })\n        showSuccessToast(formatMessage(messages.linkRenewSuccessMessage))\n      },\n      onError: () => {\n        showErrorToast(formatMessage(messages.genericError))\n      },\n    }\n  )\n\n  const menu: ActionItem[] = [\n    value.canScheduleMeeting && {\n      label: formatMessage(messages.schedule),\n      onItemSelect: () => scheduleMeeting(data),\n    },\n    value.canCopy && {\n      label: (\n        <CopyToClipboard\n          text={data.link}\n          onCopy={() => {\n            showSuccessToast(formatMessage(messages.copied))\n            onClose()\n          }}\n        >\n          <span>{formatMessage(messages.copy)}</span>\n        </CopyToClipboard>\n      ),\n    },\n    externalAttendees.length &&\n      value.canRemindParticipants && {\n        label: formatMessage(messages.remind),\n        onItemSelect: () => setShowRemind(true),\n      },\n    value.canRenewExpiry && {\n      label: formatMessage(messages.renew),\n      onItemSelect: () => renewLink({ client: summitClient, token }),\n    },\n    value.canCancel && {\n      label: formatMessage(messages.labelCancel),\n      onItemSelect: () => setAction('canCancel'),\n    },\n    value.canDelete && {\n      label: formatMessage(messages.labelDelete),\n      onItemSelect: () => setAction('canDelete'),\n    },\n  ].filter(Boolean) as ActionItem[]\n\n  const handleSuccess: SuccessCallback<SharedLink> = (\n    action: ConfirmationActions,\n    result\n  ) => {\n    if (action === 'canCancel') {\n      node.setDataValue('status', result?.status)\n    }\n    if (action === 'canDelete') {\n      api.applyTransaction({ remove: [node.data] })\n    }\n    onClose()\n  }\n\n  const linkInfo: LinkInfo = {\n    status,\n    token,\n    eventName: systemName,\n    currentLocationUuid,\n    engagementTypeUuid,\n  }\n\n  const showLoader = renewLinkInProgress\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      {showRemind && (\n        <Remind\n          token={token}\n          eventName={systemName}\n          attendees={externalAttendees}\n          onClose={() => setShowRemind(false)}\n        />\n      )}\n      {action && (\n        <CancelConfirmation\n          onClose={() => setAction(undefined)}\n          onSuccess={handleSuccess}\n          action={action}\n          {...linkInfo}\n        />\n      )}\n      <StatefulMenu\n        items={menu}\n        onItemSelect={onItemSelect}\n        overrides={InlineMenuOverrides}\n      />\n    </>\n  )\n}\n\nexport const InlineActions: FC<ICellRendererParams> = props => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <ThreeDotsPopover\n      popoverMargin={8}\n      placement={PLACEMENT.bottomRight}\n      content={({ close }) => <Content {...props} onClose={close} />}\n      ariaLabel={formatMessage(aria.labelEngagementMore)}\n    />\n  )\n}\n","import { TagOverrides as Overrides } from '@jifflenow/brightui/tag'\n\nexport const TagOverrides: Overrides = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      height: sizing.scale700,\n      borderTopLeftRadius: sizing.scale400,\n      borderTopRightRadius: sizing.scale400,\n      borderBottomRightRadius: sizing.scale400,\n      borderBottomLeftRadius: sizing.scale400,\n    }),\n  },\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Tag, VARIANT, KIND } from '@jifflenow/brightui/tag'\nimport { TagOverrides } from './tagOverrides'\nimport { StatusCellProps, Status } from './types'\n\nconst messages = defineMessages({\n  pending: {\n    defaultMessage: 'Pending',\n    description: 'Grid cell value',\n  },\n  scheduled: {\n    defaultMessage: 'Scheduled',\n    description: 'Grid cell value',\n  },\n  expired: {\n    defaultMessage: 'Expired',\n    description: 'Grid cell value',\n  },\n  cancelled: {\n    defaultMessage: 'Canceled',\n    description: 'Grid cell value',\n  },\n})\n\nconst kind: Record<Status, keyof typeof KIND> = {\n  pending: 'warning',\n  expired: 'negative',\n  scheduled: 'positive',\n  cancelled: 'neutral',\n}\n\nexport const StatusCell: FC<StatusCellProps> = ({ value }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Tag\n      closeable={false}\n      variant={VARIANT.outlined}\n      overrides={TagOverrides}\n      kind={kind[value]}\n    >\n      {formatMessage(messages[value as keyof typeof messages])}\n    </Tag>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ICellRendererParams } from '@ag-grid-community/core'\nimport { components } from 'types/openapi'\n\ntype LinkType = components['schemas']['InboundLinkType']\n\nconst messages = defineMessages<LinkType>({\n  singleUse: {\n    defaultMessage: 'Single-use',\n    description: 'Link type cell value',\n  },\n  multiUse: {\n    defaultMessage: 'Multi-use',\n    description: 'Link type cell value',\n  },\n})\n\nexport const LinkType: VFC<ICellRendererParams> = prop => {\n  const { formatMessage } = useIntl()\n\n  return <>{formatMessage(messages[prop.value as LinkType])}</>\n}\n","import { FC, useState } from 'react'\nimport { RowClickedEvent } from '@ag-grid-community/core'\nimport { List as AgGridList } from 'components/ag-grid'\nimport { components } from 'types/openapi'\nimport { LinkDetails } from '../LinkDetails'\nimport { scheduleMeeting } from '../scheduleMeeting'\nimport * as constants from './constants'\nimport { NoRowsAndError } from './NoRowsAndError'\nimport { InlineActions } from './InlineActions'\nimport { StatusCell } from './StatusCell'\nimport { LinkType } from './LinkTypeCell'\nimport { ListProps } from './types'\n\ntype SharedLinks = components['schemas']['SharedLinks']['data']\ntype Link = components['schemas']['SharedLink']\n\nexport const List: FC<ListProps<SharedLinks>> = props => {\n  const [link, setLink] = useState<Link>()\n\n  const onRowClicked = ({ data, event }: RowClickedEvent) =>\n    !(event?.target as Element).closest('[col-id=actions]') && setLink(data)\n\n  const handleMeetingClick = (meetingUuid: string) => {\n    const {\n      relationships: {\n        location: { systemName: eventName, uuid },\n      },\n    } = link!\n    window.open(\n      `${window.location.origin}/${eventName}/meeting_request/${meetingUuid}/edit?current_location_uuid=${uuid}`,\n      '_blank'\n    )\n  }\n\n  return (\n    <>\n      <AgGridList\n        {...props}\n        constants={constants}\n        frameworkComponents={{\n          actionCell: InlineActions,\n          linkTypeCell: LinkType,\n          statusCell: StatusCell,\n          noRowsAndError: NoRowsAndError,\n        }}\n        onRowClicked={onRowClicked}\n      />\n      {link && (\n        <LinkDetails\n          link={link}\n          onMeetingClick={handleMeetingClick}\n          onScheduleMeeting={() => scheduleMeeting(link)}\n          onClose={() => setLink(undefined)}\n          isWebApp\n        />\n      )}\n    </>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const Root = styled('header', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingLeft: sizing.scale800,\n  paddingRight: sizing.scale800,\n  paddingTop: sizing.scale800,\n  paddingBottom: sizing.scale200,\n}))\n\nexport const Container = styled('div', {})\n\nexport const RightContainer = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport const InputControl = styled(FormControl, ({ $theme: { sizing } }) => ({\n  paddingLeft: sizing.scale600,\n  paddingRight: sizing.scale600,\n}))\n\nexport const Title = styled('h2', ({ $theme: { typography, colors } }) => ({\n  ...typography.HeadingXSmall,\n  color: colors.mono800,\n  margin: 0,\n}))\n","import { VFC } from 'react'\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl'\nimport { Input } from '@jifflenow/brightui/input'\nimport { Search } from '@jifflenow/brightui/icon'\nimport {\n  Container,\n  RightContainer,\n  InputControl,\n  Root,\n  Title,\n} from './styled-components'\nimport { HeaderProps } from './types'\n\nconst messages = defineMessages({\n  search: {\n    defaultMessage: 'Search',\n    description: 'Placeholder text',\n  },\n})\n\nexport const Header: VFC<HeaderProps> = ({ itemCount, onSearch, search }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Root>\n      <Container>\n        <Title>\n          <FormattedMessage\n            defaultMessage=\"Shared links · {count, number}\"\n            description=\"Section title\"\n            values={{ count: itemCount }}\n          />\n        </Title>\n      </Container>\n      <RightContainer>\n        <InputControl>\n          <Input\n            type=\"search\"\n            value={search}\n            IconAfter={Search}\n            onChange={onSearch}\n            placeholder={formatMessage(messages.search)}\n          />\n        </InputControl>\n      </RightContainer>\n    </Root>\n  )\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { TextFilter } from '@jifflenow/brightui/filter'\nimport { filterOverrides, FilterItem } from 'components/ag-grid'\nimport { components } from 'types/openapi'\nimport { StaticFilterProps } from './types'\n\ntype InboundLinkStatus = components['schemas']['InboundLinkStatus']\n\nconst labels = defineMessages<InboundLinkStatus>({\n  scheduled: {\n    defaultMessage: 'Scheduled',\n    description: 'Options label',\n  },\n  expired: {\n    defaultMessage: 'Expired',\n    description: 'Options label',\n  },\n  cancelled: {\n    defaultMessage: 'Canceled',\n    description: 'Options label',\n  },\n  pending: {\n    defaultMessage: 'Pending',\n    description: 'Options label',\n  },\n})\n\nconst filterValues: InboundLinkStatus[] = [\n  'pending',\n  'expired',\n  'scheduled',\n  'cancelled',\n]\n\nexport const StatusFilter: FC<StaticFilterProps> = ({\n  onChange,\n  value,\n  label,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const strOptionMapper = (text: string) => ({\n    id: text,\n    label: formatMessage(labels[text as keyof typeof labels]),\n  })\n\n  return (\n    <FilterItem>\n      <TextFilter\n        label={label}\n        onChange={onChange}\n        value={value.map(strOptionMapper)}\n        options={filterValues.map(strOptionMapper)}\n        overrides={filterOverrides}\n      />\n    </FilterItem>\n  )\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { TextFilter } from '@jifflenow/brightui/filter'\nimport { FilterItem } from 'components/ag-grid'\nimport { components } from 'types/openapi'\nimport { StaticFilterProps } from './types'\n\ntype InboundLinkType = components['schemas']['InboundLinkType']\n\nconst labels = defineMessages<InboundLinkType>({\n  singleUse: {\n    defaultMessage: 'Single use',\n    description: 'Options label',\n  },\n  multiUse: {\n    defaultMessage: 'Multi use',\n    description: 'Options label',\n  },\n})\n\nconst filterValues: InboundLinkType[] = ['singleUse', 'multiUse']\n\nexport const TypeFilter: FC<StaticFilterProps> = ({\n  onChange,\n  value,\n  label,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const mapper = (id: string) => ({\n    id,\n    label: formatMessage(labels[id as keyof typeof labels]),\n  })\n\n  return (\n    <FilterItem>\n      <TextFilter\n        label={label}\n        value={value.map(mapper)}\n        onChange={onChange}\n        options={filterValues.map(mapper)}\n      />\n    </FilterItem>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useQuery } from 'react-query'\nimport { TextFilter } from '@jifflenow/brightui/filter'\nimport { FilterItem, Options } from 'components/ag-grid'\nimport { getMeetingFilterOptions } from 'rest'\nimport { useDebounce } from 'utils/debounce'\nimport { FilterProps } from './types'\n\nexport const ParticipantsFilter = ({ value, label, onChange }: FilterProps) => {\n  const { eventName } = useParams<{ eventName: string }>()\n  const [searchText, setSearchText] = useState('')\n  const [options, setOptions] = useState<Options[]>([])\n\n  const search = useDebounce(searchText)\n\n  const { isLoading, refetch } = useQuery(\n    [\n      'meetingFilterOption',\n      { field: 'attendee_field', response_format: 'object', term: search },\n    ],\n    getMeetingFilterOptions({ eventName }),\n    {\n      enabled: false,\n      onSuccess: data => {\n        setOptions(\n          (data?.data ?? []).map(({ name, uuid }) => ({\n            id: uuid,\n            label: name,\n          }))\n        )\n      },\n    }\n  )\n\n  useEffect(() => {\n    !search ? setOptions([]) : refetch()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search])\n\n  return (\n    <FilterItem>\n      <TextFilter\n        label={label}\n        onChange={onChange}\n        options={options}\n        value={value}\n        asyncOptions\n        searchText={searchText}\n        onSearch={setSearchText}\n        isLoading={isLoading}\n      />\n    </FilterItem>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { TextFilter } from '@jifflenow/brightui/filter'\nimport { FilterItem, Options } from 'components/ag-grid'\nimport { getEngagementTypes, useQuery } from 'rest'\nimport { useDebounce } from 'utils/debounce'\nimport { useParams } from 'react-router-dom'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { FilterProps } from './types'\n\nexport const EngagementTypesFilter = ({\n  value,\n  label,\n  onChange,\n}: FilterProps) => {\n  const { eventName } = useParams<{ eventName: string }>()\n  const { id: locationId } = useEventLocation().location!\n  const [searchText, setSearchText] = useState('')\n  const [options, setOptions] = useState<Options[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const search = useDebounce(searchText)\n\n  const { refetch: fetchEngagementTypes } = useQuery(\n    [\n      'getEngagementTypeFilterOption',\n      { term: search, locations: [locationId] },\n    ],\n    getEngagementTypes({ eventName }),\n    {\n      enabled: false,\n      onSuccess: ({ data }) => {\n        setOptions(data.map(({ name, uuid }) => ({ id: uuid, label: name })))\n        setIsLoading(false)\n      },\n    }\n  )\n\n  useEffect(() => {\n    !search ? setOptions([]) : fetchEngagementTypes()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search])\n\n  return (\n    <FilterItem>\n      <TextFilter\n        label={label}\n        onChange={onChange}\n        options={options}\n        value={value}\n        asyncOptions\n        searchText={searchText}\n        onSearch={setSearchText}\n        isLoading={isLoading}\n      />\n    </FilterItem>\n  )\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Option } from '@jifflenow/brightui/filter'\nimport { FiltersContainer, DataOptions, Options } from 'components/ag-grid'\nimport { useSharedLinksPreferences } from '../SharedLinkPreferencesProvider'\nimport { StatusFilter } from './StatusFilter'\nimport { TypeFilter } from './TypeFilter'\nimport { ParticipantsFilter } from './ParticipantsFilter'\nimport { EngagementTypesFilter } from './EngagementTypesFilter'\n// import { CreatedByFilter } from './CreatedByFilter'\nimport { FiltersProps } from './types'\n\nconst messages = defineMessages({\n  status: {\n    defaultMessage: 'Status',\n    description: 'Filter label',\n  },\n  type: {\n    defaultMessage: 'Link type',\n    description: 'Filter label',\n  },\n  participants: {\n    defaultMessage: 'Participants',\n    description: 'Filter label',\n  },\n\n  engagementTypes: {\n    defaultMessage: 'Meeting types',\n    description: 'Filter option label',\n  },\n  createdBy: {\n    defaultMessage: 'Created By',\n    description: 'Filter option label',\n  },\n})\n\nconst optionMapper = (o: DataOptions) => ({ id: o.uuid, label: o.name })\nconst idMapper = (option: Option) => option.id\n\nexport const Filters: FC<FiltersProps> = ({ onChange }) => {\n  const { formatMessage } = useIntl()\n  const { patchPreferences, preferences } = useSharedLinksPreferences()\n  const {\n    statuses = [],\n    linkTypes = [],\n    participants = [],\n    engagementTypes = [],\n  } = preferences\n\n  return (\n    <FiltersContainer>\n      <StatusFilter\n        value={statuses}\n        label={formatMessage(messages.status)}\n        onChange={(statuses: Option) => {\n          onChange()\n          patchPreferences({\n            statuses: statuses.map(idMapper),\n          })\n        }}\n      />\n      <TypeFilter\n        value={linkTypes}\n        label={formatMessage(messages.type)}\n        onChange={(types: Option) => {\n          onChange()\n          patchPreferences({\n            linkTypes: types.map(idMapper),\n          })\n        }}\n      />\n      <ParticipantsFilter\n        label={formatMessage(messages.participants)}\n        value={participants.map(optionMapper)}\n        onChange={(users: Option) => {\n          onChange()\n          patchPreferences({\n            participants: users.map(({ id, label }: Options) => ({\n              uuid: id,\n              name: label,\n            })),\n          })\n        }}\n      />\n      <EngagementTypesFilter\n        label={formatMessage(messages.engagementTypes)}\n        value={engagementTypes.map(optionMapper)}\n        onChange={(engagementTypes: Option) => {\n          onChange()\n          patchPreferences({\n            engagementTypes: engagementTypes?.map(({ id, label }: Options) => ({\n              uuid: id,\n              name: label,\n            })),\n          })\n        }}\n      />\n      {/* TODO: Enable the filters once api is done */}\n      {/* <CreatedByFilter\n        label={formatMessage(messages.createdBy)}\n        value={engagementTypes.map(optionMapper)}\n        onChange={(users: Option) => {\n          onChange()\n          patchPreferences({\n            participants: users.map(({ id, label }: Options) => ({\n              uuid: id,\n              name: label,\n            })),\n          })\n        }}\n      /> */}\n    </FiltersContainer>\n  )\n}\n","import { defineMessages, useIntl } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useMe } from 'providers/MeProvider'\nimport { DocumentTitle } from 'ui-components/DocumentTitle'\n\nconst messages = defineMessages({\n  linkList: {\n    defaultMessage: 'Link List',\n    description: 'Page title',\n  },\n})\n\nexport const LinkListTitle = () => {\n  const { formatMessage } = useIntl()\n  const { companyName } = useMe().meta\n  const { displayName: eventName } =\n    useEventLocation().location?.attributes ?? {}\n\n  return (\n    <DocumentTitle\n      title={`${formatMessage(\n        messages.linkList\n      )} - ${eventName} - ${companyName}`}\n    />\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Footer = styled('footer', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  paddingRight: sizing.scale600,\n}))\n\nexport const SubHeaderRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingLeft: sizing.scale800,\n  paddingRight: sizing.scale800,\n  height: '62px',\n}))\n","import { VFC } from 'react'\nimport { ListSelectionProvider } from 'components/ag-grid'\nimport { SharedLinkPreferencesProvider } from './SharedLinkPreferencesProvider'\nimport { LinkList } from './LinkList'\n\nexport const SharedLinks: VFC = () => (\n  <SharedLinkPreferencesProvider>\n    <ListSelectionProvider>\n      <LinkList />\n    </ListSelectionProvider>\n  </SharedLinkPreferencesProvider>\n)\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\nimport { PopoverOverrides as Overrides } from '@jifflenow/brightui/popover'\n\nexport const threeDotButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { colors } }) => ({\n      borderLeftStyle: 'none',\n      borderTopStyle: 'none',\n      borderRightStyle: 'none',\n      borderBottomStyle: 'none',\n      color: colors.mono800,\n      backgroundColor: 'transparent',\n      paddingTop: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      marginRight: 0,\n      ':hover': {\n        color: colors.mono1000,\n        backgroundColor: 'transparent',\n      },\n    }),\n  },\n}\n\nexport const popoverOverrides: Overrides = {\n  Body: {\n    style: ({ $theme: { lighting, colors } }) => ({\n      boxShadow: lighting.shadow600,\n      border: `1px solid ${colors.mono300}`,\n    }),\n  },\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Root = styled('div', {\n  display: 'flex',\n  flexShrink: 1,\n})\n","import { VFC } from 'react'\nimport { StatefulPopover } from '@jifflenow/brightui/popover'\nimport { IconButton } from '@jifflenow/brightui/button'\nimport { ThreeDots } from '@jifflenow/brightui/icon'\nimport { popoverOverrides, threeDotButtonOverrides } from './overrides'\nimport { PopOverProps } from './types'\nimport { Root } from './styled-components'\n\nexport const ThreeDotsPopover: VFC<PopOverProps> = props => (\n  <Root onClick={e => e.stopPropagation()}>\n    <StatefulPopover overrides={popoverOverrides} focusLock {...props}>\n      <IconButton\n        size={20}\n        overrides={threeDotButtonOverrides}\n        aria-label={props.ariaLabel}\n      >\n        <ThreeDots />\n      </IconButton>\n    </StatefulPopover>\n  </Root>\n)\n"],"names":["TabKeys","getUuids","uuid","INITIAL_STATE","sortBy","statuses","linkTypes","engagementTypes","participants","Context","createContext","SHARED_LINKS_PREFERENCES","Provider","children","preferences","patchPreferences","value","useMemo","usePreferences","useState","setPreferences","useEffect","handleLocalStorageChange","e","key","JSON","parse","newValue","window","addEventListener","removeEventListener","initPreferences","data","sharedLinks","initialPreferences","Object","keys","reduce","acc","localStorage","setItem","stringify","payload","sortOrder","isSortByExpiresAt","values","pref","merge","arrayMerge","_","s","patch","map","then","SharedLinkPreferencesFetcher","props","state","useSharedLinkPreferences","isSettled","IfRejected","ErrorPage","onButtonClick","reload","SharedLinkPreferencesProvider","length","onResolve","useSharedLinksPreferences","context","useContext","tabsOverrides","TabList","style","sizing","$theme","paddingLeft","scale600","paddingRight","paddingBottom","marginBottom","TabHighlight","borderRadius","scale0","TabBorder","display","tabOverrides","TabPanel","paddingTop","height","backgroundColor","colors","mono400","mono200","getDrawerOverrides","isWebApp","DrawerContainer","maxWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","footerActionButtonOverride","BaseButton","minWidth","backButtonOverride","marginRight","scale500","width","scale800","DrawerPane","onClose","Drawer","size","isOpen","overrides","HeaderContainer","withStyle","DrawerHeaderContainer","alignItems","boxShadow","flexShrink","position","ActionContainer","styled","marginLeft","HeaderColumn","flex","HeaderRow","DrawerTitle","typography","HeadingXSmall","overflow","whiteSpace","textOverflow","FooterActionContainer","bottom","padding","PrimaryActionButton","onClick","dataPendo","type","kind","KIND","DrawerPaneBackButton","LoadingShimmer","restProps","platform","useAppSource","useStyletron","contentLoaderOptions","speed","primaryColor","secondaryColor","mono300","animate","Loader","viewBox","y","x","rx","ry","menuOverrides","List","borderWidth","borderStyle","borderColor","Option","Paragraph2","FooterButton","Button","FormControlStyled","FormControl","Note","Paragraph1","StyledModalBody","ModalBody","flexDirection","successButtonOverrides","messages","defineMessages","otherReasonPlaceholder","defaultMessage","OtherReasons","input","meta","touched","error","formatMessage","useIntl","placeholder","inputProps","CancellationReasonField","options","label","setValue","handleChange","useCallback","onChange","id","clearable","Field","name","render","validations","Validation","genericError","cancelConfirmation","deleteConfirmation","cancelScheduled","deleteScheduled","cancelLinkSuccessMessage","deleteLinkSuccessMessage","optionOtherReason","enabledCancelButtonLabel","enabledSuccessButtonLabel","successButtonLabel","cancelButtonLabel","cancellationLabel","deletionLabel","nameDecorator","createDecorator","field","updates","other","FormFields","eventName","status","token","action","reasons","enabled","onSuccess","client","useSummitV1Client","useMutation","cancelInboundLinkMutationFn","mutateCancelLink","mutateAsync","cancelInProgress","isLoading","deleteInboundLinkMutationFn","mutateDeleteLink","declineInProgress","handleSubmit","reason","cancel_comments","result","showSuccessToast","undefined","showErrorToast","FORM_ERROR","code","decorators","onSubmit","SIZE","CancelConfirmation","engagementTypeUuid","currentLocationUuid","cancelOptions","setCancelOptions","useEngagementTypeSettingsByUuid","variables","names","headers","onError","loading","engagementTypeSettings","cancel_comments_enabled","predefined_cancel_comments","labelAll","successMessage","Remind","attendees","summitClient","remindParticipantsMutationFn","userUuids","some","dropdownOptions","email","filter","Boolean","participantIds","stopPropagation","initialValues","noValidate","format","option","indexOf","multi","backspaceClearsInputValue","required","editLink","scheduleLink","copyLink","remindParticipants","renewLink","cancel","delete","linkCopied","actionSuccessMessage","canRenewExpiry","canCancel","canDelete","onItemSelect","args","item","OptionsMenu","close","onLinkEdit","onScheduleMeeting","rest","queryClient","useQueryClient","link","actions","canEdit","canCopy","canRemindParticipants","canScheduleMeeting","setAction","showRemind","setShowRemind","handleSuccess","invalidateQueries","params","renewInboundLinkMutationFn","mutate","renewLinkInProgress","externalAttendees","menu","CopyToClipboard","text","onCopy","linkActionInProgress","linkInfo","items","LinkActionsMenu","ThreeDotsPopover","content","InfoRoot","scale650","InfoIconRoot","InfoContent","scale300","LinkDetailsRoot","LinkDetailsContent","marginTop","overflowY","InfoLabel","LabelSmall","scale100","MeetingSlot","scale200","InfoDescription","Caption1","color","mono700","ParticipantsList","margin","ParticipantsListItem","justifyContent","ParticipantEmail","ParticipantDetails","ParticipantActions","TagInfo","flexWrap","Tag","primary500","white","textTransform","Column","ColumnFullWidth","Row","LinkStatus","$status","pending","warning","scheduled","positive","cancelled","negative","expired","left","right","CancelledLabel","ParagraphSmall","RequestFormFieldValue","scale400","RequestFormFieldName","Header","linkDetails","secondaryActions","closeDrawer","useDrawer","attributes","primaryId","meetingWith","relationships","location","systemName","displayName","actionsMenuProps","engagementType","AutoTooltip","showArrow","accordionOverride","Root","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopStyle","borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","mono900","PanelContainer","Content","getMeetingLinkButtonOverrides","showAsBlock","linkInfoIconOverride","Svg","optionalIconOverride","remindSuccessMessage","removeSuccessMessage","remindLabel","removeLabel","meetingHostLabel","ParticipantsOptionsMenu","userUuid","handleError","remindInProgress","removeParticipantsMutationFn","removeParticipants","removeInProgress","ParticipantActionsMenu","Participants","optional","meetingHost","MeetingInfoTab","customFields","useSummitClient","useQuery","path","query","getEngagementTypeCustomFormQueryFn","isFetching","refetch","meetingTypeName","fieldLabels","forms","external_activity_custom_form","field_name","i","Fragment","Array","isArray","join","dangerouslySetInnerHTML","__html","attendeesLabel","meetingInfoLabel","Tabs","PARTICIPANTS","activeKey","setActiveKey","activateOnFocus","title","getTabOverrides","MEETING_INFO","slotsLabel","getRange","timeRanges","startDate","startTime","sort","endDate","endTime","reverse","RangeView","timeZone","formatDateRange","formatToStartOfTheDay","AccordionView","count","formatDateTimeRange","Date","AvailableSlots","isRange","test","LinkInfo","Icon","TimeOutlined","renewLinkSuccessMessage","renewLabel","editLabel","FooterAction","primaryActions","renewInProgress","CalendarCancelled","d","stroke","strokeLinecap","strokeLinejoin","clipRule","LinkIcon","expiresOnLabel","expiredLabel","scheduledLabel","cancelledLabel","meetingLabel","meetingLabelWithCount","cancelledMeetingLabelWithCount","formatDate","date","DateTime","toLocaleString","iconMap","cx","cy","r","fill","MeetingLink","meetingId","onMeetingClick","expiredOn","meetingsQuota","scheduledMeetings","numberOfScheduledMeetings","activeMeeting","find","cancelledMeetings","requestorLabel","preferredLabel","meetingsQuotaLabel","unlimitedUseLabel","roomLabels","room","boothTour","LinkDetailsView","requestorInfo","locationPreference","proposedTimeZone","isUnlimitedUse","preferredVconLink","topic","MeetingsOutlined","TopicOutlined","Message","LocationOutlined","locationType","offsiteLocation","address","VideoOutlined","conferenceName","LinkDetails","getSharedLinkDetailsQueryFn","isFetchedAfterMount","LinkDetailsDrawer","scheduleMeeting","sharedLink","sharedLinkUuid","meeting_with","current_location_uuid","activity_uuid","topic_uuid","open","stringifyUrl","url","origin","skipEmptyString","columnHeaderNames","linkType","expiresAt","createdBy","createdAt","columnDefs","sortable","resizable","valueGetter","cellRenderer","valueFormatter","pinned","headerComponent","headerComponentParams","NoRowsAndError","agGridReact","showError","rowData","schedule","renew","remind","labelCancel","labelDelete","copy","copied","linkRenewSuccessMessage","aria","labelEngagementMore","node","api","useEventLocation","setData","showLoader","setDataValue","applyTransaction","remove","InlineMenuOverrides","InlineActions","popoverMargin","placement","PLACEMENT","ariaLabel","TagOverrides","scale700","StatusCell","closeable","variant","VARIANT","singleUse","multiUse","LinkType","prop","setLink","constants","frameworkComponents","actionCell","linkTypeCell","statusCell","noRowsAndError","onRowClicked","event","target","closest","meetingUuid","Container","RightContainer","InputControl","Title","mono800","search","itemCount","onSearch","IconAfter","Search","labels","filterValues","StatusFilter","strOptionMapper","filterOverrides","TypeFilter","mapper","ParticipantsFilter","useParams","searchText","setSearchText","setOptions","useDebounce","response_format","term","getMeetingFilterOptions","asyncOptions","EngagementTypesFilter","locationId","setIsLoading","fetchEngagementTypes","locations","getEngagementTypes","optionMapper","o","idMapper","Filters","types","users","linkList","LinkListTitle","companyName","useMe","DocumentTitle","Footer","SubHeaderRoot","labelExportLinks","tabTitles","links","meetings","LinkList","LINKS","activeTab","setActiveTab","gridApi","setGridApi","setSearch","searchTerm","trim","deselectAll","useSelection","pageNumber","setPageNumber","matchLinkListPath","useRouteMatch","exact","Paths","resetToFirstPage","listPreferences","linkListQueryParams","page","PAGE_SIZE","number","search_term","URLSearchParams","useLocation","get","getSharedLinksQueryFn","showNoRowsOverlay","fetchList","total","showLoadingOverlay","hideOverlay","href","MEETINGS","restQuery","modName","onSort","totalItems","fixedPageSize","currentPageSize","currentPageNumber","onPageNumberChange","SharedLinks","threeDotButtonOverrides","mono1000","popoverOverrides","Body","lighting","shadow600","border","focusLock"],"sourceRoot":""}