{"version":3,"file":"static/js/683.87e23071.chunk.js","mappings":"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","sources":["components/CustomFormFields/Fields/styled-components.ts","components/CustomFormFields/FormFields.ts","components/ProfileDrawer/providers/ProfileUserProvider.tsx","components/ProfileDrawer/providers/EventInfoProvider.tsx","components/ProfileDrawer/providers/NavProvider.tsx","components/ProfileDrawer/providers/ProfileSectionDirtyCheckProvider.tsx","components/ProfileDrawer/overrides.ts","components/ProfileDrawer/ProfileDrawerWrapper.tsx","components/ProfileDrawer/Common/styled-components.ts","components/ProfileDrawer/Common/CampaignFilter/CampaignProvider.tsx","components/ProfileDrawer/Common/CampaignFilter/overrides.ts","components/ProfileDrawer/Common/CampaignFilter/CampaignFilter.tsx","components/ProfileDrawer/Common/CampaignFilter/EventTypeFilter.tsx","components/ProfileDrawer/Common/EventTypeAndLocationFilter.tsx","components/ProfileDrawer/Common/Footer.tsx","components/ProfileDrawer/Common/UserStatus.tsx","components/ProfileDrawer/Common/overrides.tsx","components/ProfileDrawer/Common/Header.tsx","components/ProfileDrawer/Common/Mappings/ColumnCheckbox/styled-components.ts","components/ProfileDrawer/Common/Mappings/ColumnCheckbox/ColumnCheckbox.tsx","components/ProfileDrawer/Common/Mappings/RowCheckbox/RowCheckbox.tsx","components/ProfileDrawer/Common/Mappings/Footer/styled-components.tsx","components/ProfileDrawer/Common/Mappings/Loader.tsx","components/ProfileDrawer/Common/Mappings/EmptyMessage/styled-components.tsx","components/ProfileDrawer/Common/Mappings/EmptyMessage/EmptyMessage.tsx","components/ProfileDrawer/Common/Search.tsx","components/ProfileDrawer/providers/EventNameProvider.tsx","components/ProfileDrawer/Common/constants.ts","components/ProfileDrawer/Common/useEventTypeAndLocation.ts","components/ProfileDrawer/Common/CampaignFilterV2.tsx","components/ProfileDrawer/Common/EventTypesFilterV2.tsx","components/ProfileDrawer/EngagementTypes/styled-components.ts","components/ProfileDrawer/Common/EventSelectLabel.tsx","components/ProfileDrawer/Common/useDirtyCheckDialog.ts","components/ProfileDrawer/EngagementTypes/EngagementTypesFooter.tsx","components/ProfileDrawer/EngagementTypes/overrides.tsx","components/ProfileDrawer/EngagementTypes/MappingTable/styled-components.ts","components/ProfileDrawer/EngagementTypes/MappingTable/CanRequest.tsx","components/ProfileDrawer/EngagementTypes/MappingTable/CanParticipate.tsx","components/ProfileDrawer/EngagementTypes/MappingTable/RequestAll.tsx","components/ProfileDrawer/EngagementTypes/MappingTable/ParticipateAll.tsx","components/ProfileDrawer/EngagementTypes/MappingTable/overrides.ts","components/ProfileDrawer/EngagementTypes/MappingTable/EmptyMessage.tsx","components/ProfileDrawer/EngagementTypes/MappingTable/MappingTable.tsx","components/ProfileDrawer/EngagementTypes/PaginationContainer.tsx","components/ProfileDrawer/EngagementTypes/MappingsPage.tsx","components/ProfileDrawer/EngagementTypes/DefaultMappingSettings/styled-components.ts","components/ProfileDrawer/EngagementTypes/DefaultMappingSettings/ToggleSettings.tsx","components/ProfileDrawer/EngagementTypes/DefaultMappingSettings/DefaultMappings.tsx","components/ProfileDrawer/EngagementTypes/Tabs.tsx","components/ProfileDrawer/EngagementTypes/useEngagementTypes.ts","components/ProfileDrawer/EngagementTypes/EngagementTypesView.tsx","components/ProfileDrawer/EngagementTypes/EngagementTypesLocationView.tsx","components/ProfileDrawer/EngagementTypes/EngagementTypes.tsx","components/CustomFormFields/utils.ts","components/CustomFormFields/rules.ts","components/CustomFormFields/Fields/TextField.tsx","components/CustomFormFields/Fields/TextAreaField/TextareaLoader.tsx","components/CustomFormFields/Fields/TextAreaField/styled-components.ts","components/CustomFormFields/Fields/TextAreaField/TextareaError.tsx","components/CustomFormFields/Fields/TextAreaField/TextAreaField.tsx","components/CustomFormFields/types.ts","components/CustomFormFields/Fields/SelectField.tsx","components/CustomFormFields/Fields/CheckboxField.tsx","components/CustomFormFields/Fields/MultiSelectField.tsx","components/CustomFormFields/Fields/NonInputFields.tsx","components/CustomFormFields/CustomFormFields.tsx","components/ProfileDrawer/Profile/types.ts","utils/messageDispatcher.ts","components/ProfileDrawer/Profile/EditProfile/transformFields.ts","components/ProfileDrawer/Common/RoleChangeDialog/styled-components.tsx","components/ProfileDrawer/Common/RoleChangeDialog/overrides.ts","components/ProfileDrawer/Common/RoleChangeDialog/RoleChangeDialog.tsx","components/ProfileDrawer/Common/useEventType.ts","components/ProfileDrawer/Settings/styled-components.ts","components/ProfileDrawer/Settings/constants.ts","components/ProfileDrawer/Settings/RoleField.tsx","components/ProfileDrawer/Settings/MappedUserField.tsx","components/ProfileDrawer/Settings/ToggleField.tsx","components/ProfileDrawer/Settings/overrides.ts","components/ProfileDrawer/Settings/ModeOfAttendance.tsx","components/ProfileDrawer/Settings/TagCloudField.tsx","components/ProfileDrawer/Settings/TagCloud.tsx","components/ProfileDrawer/Settings/ActivityManager.tsx","components/ProfileDrawer/Settings/SettingsLoader.tsx","components/ProfileDrawer/Settings/MappedEngagementType.tsx","components/ProfileDrawer/Settings/MappedTopic.tsx","components/ProfileDrawer/Settings/CanManageSettings.tsx","ui-components/icons/RefetchIcon.tsx","components/ProfileDrawer/Settings/MappedCISUsersField.tsx","components/ProfileDrawer/Settings/CisSyncSetting.tsx","components/ProfileDrawer/Settings/SettingsForm.tsx","components/ProfileDrawer/Settings/Settings.tsx","components/ProfileDrawer/Profile/styled-components.ts","components/ProfileDrawer/Profile/Consents.tsx","components/ProfileDrawer/Profile/EditProfile/styled-components.ts","components/ProfileDrawer/Profile/EditProfile/Avatar/styled-components.tsx","components/ProfileDrawer/Profile/EditProfile/Avatar/overrides.ts","components/ProfileDrawer/Availability/Common/weekDayMappings.ts","components/ProfileDrawer/Profile/EditProfile/Avatar/ImageDeleteButton.tsx","components/ProfileDrawer/Profile/EditProfile/Avatar/DeleteAvatar.tsx","components/ProfileDrawer/Profile/EditProfile/Avatar/EditAvatar/styled-components.ts","components/ProfileDrawer/Profile/EditProfile/Avatar/EditAvatar/AvatarConsentField.tsx","components/ProfileDrawer/Profile/EditProfile/Avatar/EditAvatar/UploadAvatar.tsx","components/ProfileDrawer/Profile/EditProfile/Avatar/EditAvatar/EditAvatar.tsx","components/ProfileDrawer/Profile/EditProfile/Avatar/Avatar.tsx","components/ProfileDrawer/Profile/EditProfile/PersonalLinkEdit.tsx","components/ProfileDrawer/Profile/EditProfile/CanCreateInstance.tsx","components/ProfileDrawer/Profile/EditProfile/overrides.ts","components/ProfileDrawer/Profile/EditProfile/PrimaryEmail.tsx","components/ProfileDrawer/Profile/EditProfile/SecondaryEmail.tsx","components/ProfileDrawer/Profile/EditProfile/StandardFormFields.tsx","components/ProfileDrawer/Profile/EditProfile/CanManageSettings.tsx","components/ProfileDrawer/Profile/EditProfile/EditForm.tsx","components/ProfileDrawer/Profile/EditProfile/EditProfile.tsx","components/ProfileDrawer/Profile/ProfileTitle.tsx","components/ProfileDrawer/Profile/ViewProfile/overrides.ts","components/ProfileDrawer/Profile/ViewProfile/styled-components.ts","components/ProfileDrawer/Profile/ViewProfile/ViewProfile.tsx","components/ProfileDrawer/Profile/ProfileLoader.tsx","components/ProfileDrawer/Profile/Profile.tsx","components/ProfileDrawer/Topic/MappedTopicsSelectionsProvider.tsx","components/ProfileDrawer/Topic/UnMappedTopicsSelectionProvider.tsx","components/ProfileDrawer/Topic/styled-components.ts","components/ProfileDrawer/Topic/Common/styled-components.ts","components/ProfileDrawer/Topic/Common/overrides.tsx","components/ProfileDrawer/Topic/Common/MappingsList.tsx","components/ProfileDrawer/Topic/PaginationContainer.tsx","components/ProfileDrawer/Topic/Mapped/Mapped.tsx","components/ProfileDrawer/Topic/UnMapped/UnMapped.tsx","components/ProfileDrawer/Topic/overrides.tsx","components/ProfileDrawer/Topic/TopicsList.tsx","components/ProfileDrawer/Topic/TopicsType.tsx","components/ProfileDrawer/Topic/TopicsMapping.tsx","components/TimeZoneChange/styled-components.ts","components/TimeZoneChange/overrides.ts","components/TimeZoneChange/SelectCity.tsx","components/TimeZoneChange/useTimeZoneFromCity.ts","components/TimeZoneChange/SelectCityModal.tsx","components/TimeZoneChange/TimeZoneChange.tsx","components/ProfileDrawer/Common/EventDatesLabel.tsx","components/ProfileDrawer/Availability/DateTimeConversions.ts","components/ProfileDrawer/Availability/Availabilities/transform.ts","components/ProfileDrawer/Availability/AvailabilityProvider.tsx","components/ProfileDrawer/Availability/Common/Footer/styled-components.ts","components/ProfileDrawer/Availability/Common/Footer/CancelButton.tsx","components/ProfileDrawer/Availability/Common/Footer/SaveButton.tsx","components/ProfileDrawer/Availability/Common/Footer/Footer.tsx","components/ProfileDrawer/Availability/utilities.ts","components/ProfileDrawer/Availability/Availabilities/overrides.ts","components/ProfileDrawer/Availability/Availabilities/styled-components.ts","components/ProfileDrawer/Availability/Availabilities/AvailabilityDay.tsx","components/ProfileDrawer/Availability/styled-components.ts","components/ProfileDrawer/Availability/overrides.ts","components/ProfileDrawer/Availability/Availabilities/CopyDaySlotsTo.tsx","components/ProfileDrawer/Availability/Availabilities/CopyAvailability.tsx","components/ProfileDrawer/Availability/Availabilities/Availabilities.tsx","components/ProfileDrawer/Availability/Exceptions/Loader.tsx","components/ProfileDrawer/Availability/Exceptions/styled-components.ts","components/ProfileDrawer/Availability/Exceptions/overrides.ts","components/ProfileDrawer/Availability/Exceptions/AddEditException/overrides.ts","components/ProfileDrawer/Availability/Exceptions/AddEditException/styled-components.ts","components/ProfileDrawer/Availability/Exceptions/AddEditException/ExceptionModalBody.tsx","components/ProfileDrawer/Availability/Exceptions/AddEditException/Footer.tsx","components/ProfileDrawer/Availability/Exceptions/AddEditException/AddEditException.tsx","components/ProfileDrawer/Availability/Exceptions/AddExceptionButton.tsx","components/ProfileDrawer/Availability/Exceptions/groupExceptionDates.ts","components/ProfileDrawer/Availability/Exceptions/ListExceptions/styled-components.ts","components/ProfileDrawer/Availability/Exceptions/ListExceptions/ListItem.tsx","components/ProfileDrawer/Availability/Exceptions/ListExceptions/overrides.ts","components/ProfileDrawer/Availability/Exceptions/ListExceptions/ListExceptions.tsx","components/ProfileDrawer/Availability/Exceptions/data-adapters/time-zone.ts","components/ProfileDrawer/Availability/Exceptions/transformExceptionDates.ts","components/ProfileDrawer/Availability/types.ts","components/ProfileDrawer/Availability/Exceptions/Exceptions.tsx","components/ProfileDrawer/Availability/Exceptions/data-adapters/api.ts","components/ProfileDrawer/Availability/AvailabilityTabs.tsx","components/ProfileDrawer/Availability/CombinedAvailabilities/transform.ts","components/ProfileDrawer/Availability/CombinedAvailabilities/CopyCombinedAvailability.tsx","components/ProfileDrawer/Availability/CombinedAvailabilities/CombinedAvailabilityProvider.tsx","components/ProfileDrawer/Availability/CombinedAvailabilities/styled-components.ts","components/ProfileDrawer/Availability/CombinedAvailabilities/DateTimeConversions.ts","components/ProfileDrawer/Availability/CombinedAvailabilities/CombinedAvailabilityDate.tsx","components/ProfileDrawer/Availability/CombinedAvailabilities/CopyDateSlotsTo.tsx","components/ProfileDrawer/Availability/CombinedAvailabilities/DateRangeFilter.tsx","components/ProfileDrawer/Availability/CombinedAvailabilities/CombinedAvailabilities.tsx","components/ProfileDrawer/Availability/CombinedAvailabilities/CombinedAvailability.tsx","components/ProfileDrawer/Availability/Availability.tsx","components/ProfileDrawer/Integrations/styled-components.ts","components/ProfileDrawer/Integrations/SSOIntegration.tsx","components/ProfileDrawer/Integrations/IntegrationsLoader.tsx","components/ProfileDrawer/Integrations/overrides.ts","components/ProfileDrawer/Integrations/ActionButtons.tsx","components/ProfileDrawer/Integrations/Integration.tsx","components/ProfileDrawer/Integrations/Integrations.tsx","components/ProfileDrawer/Campaigns/Actions/styled-components.tsx","components/ProfileDrawer/Campaigns/Actions/ListActions.tsx","components/ProfileDrawer/Campaigns/Actions/Filters.tsx","components/ProfileDrawer/Campaigns/styled-components.tsx","components/ProfileDrawer/Campaigns/Item/NoItem.tsx","components/ProfileDrawer/Campaigns/Item/styled-components.ts","components/ProfileDrawer/Campaigns/Item/UserActions.tsx","components/ProfileDrawer/Campaigns/Item/EventCard.tsx","components/ProfileDrawer/Campaigns/Item/ItemsGrid.tsx","components/ProfileDrawer/Campaigns/Campaigns.tsx","components/ProfileDrawer/styled-components.ts","components/ProfileDrawer/Nav.tsx","components/ProfileDrawer/ProfileDrawer.tsx","ui-components/RangeTimeSlot/timePickerOverrides.ts","ui-components/RangeTimeSlot/styled-components.ts","ui-components/RangeTimeSlot/buttonOverrides.ts","ui-components/RangeTimeSlot/RangeTimeSlot.tsx","utils/messages.ts","utils/useBeforeUnload.ts","utils/usePageSizes.ts","../../ckeditor/src/hooks/useCKEditor.js"],"sourcesContent":["import { styled } from '@jifflenow/brightui'\nimport { FormControl as Control } from '@jifflenow/brightui/form-control'\n\nexport const FormControl = styled(Control, ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale700,\n}))\n\nexport const StyledHeader = styled<{ $isHidden?: boolean }, 'header'>(\n  'header',\n  ({ $theme: { typography, sizing, breakpoints }, $isHidden }) => ({\n    marginTop: 0,\n    display: $isHidden ? 'none' : 'block',\n    marginBottom: sizing.scale800,\n    maxWidth: '282px',\n    ...typography.font350,\n    fontWeight: 400,\n    [breakpoints.medium]: {\n      marginBottom: sizing.scale600,\n      flexBasis: '100%',\n    },\n  })\n)\n\nexport const Hr = styled<{ $isHidden?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { colors, sizing }, $isHidden }) => ({\n    flexBasis: '100%',\n    borderBottomColor: colors.mono400,\n    borderBottomStyle: 'solid',\n    borderBottomWidth: '1px',\n    marginTop: sizing.scale600,\n    marginBottom: sizing.scale600,\n    display: $isHidden ? 'none' : 'block',\n  })\n)\n\nexport const StyledPageBreak = styled<{ $isHidden?: boolean }, 'header'>(\n  'header',\n  ({ $theme: { typography, sizing, breakpoints }, $isHidden }) => ({\n    marginTop: 0,\n    marginBottom: sizing.scale800,\n    ...typography.font650,\n    display: $isHidden ? 'none' : 'block',\n    flexBasis: '100%',\n    maxWidth: '282px',\n    [breakpoints.medium]: {\n      ...typography.font550,\n      marginBottom: sizing.scale600,\n    },\n  })\n)\n","import { FieldTypeToFormFieldMappings } from './types'\nimport {\n  TextField,\n  TextAreaField,\n  CheckboxField,\n  SelectField,\n  MultiSelectField,\n  Header,\n  PageBreak,\n} from './Fields'\n\nexport enum FieldTypes {\n  TEXTFIELD = 'textfield',\n  TEXTAREA = 'textarea',\n  NUMBERFIELD = 'numberfield',\n  CHECKBOX = 'checkbox',\n  DROPDOWN = 'dropdown',\n  MULTISELECT_DROPDOWN = 'multiselect_dropdown',\n  PAGE_BREAK = 'page_break',\n  HEADER = 'header',\n}\n\nexport const fieldTypesMappings: FieldTypeToFormFieldMappings = {\n  [FieldTypes.TEXTFIELD]: TextField,\n  [FieldTypes.NUMBERFIELD]: TextField,\n  [FieldTypes.DROPDOWN]: SelectField,\n  [FieldTypes.TEXTAREA]: TextAreaField,\n  [FieldTypes.CHECKBOX]: CheckboxField,\n  [FieldTypes.MULTISELECT_DROPDOWN]: MultiSelectField,\n  [FieldTypes.HEADER]: Header,\n  [FieldTypes.PAGE_BREAK]: PageBreak,\n}\n","import { createContext, FC, useContext, useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { components } from 'types/openapi'\nimport { useFetchUser } from 'rest'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { Spinner } from 'ui-components/Spinner'\n\ntype UserResponse = components['schemas']['UserResponse']['data']\ntype UserContext = { data: UserResponse; refetch: () => void }\n\nconst Context = createContext<UserContext | undefined>(undefined)\n\nexport const ProfileUserProvider: FC = ({ children }) => {\n  const { userId: id } = useParams<{ userId: string }>()\n\n  const { isLoading: isPending, error, refetch, data } = useFetchUser(id)\n\n  const value = useMemo(\n    () => ({ data: data ? data.data : ({} as UserResponse), refetch }),\n    [data, refetch]\n  )\n\n  if (error) {\n    return <ErrorPage onButtonClick={() => refetch()} />\n  }\n\n  return (\n    <>\n      {!data && isPending && <Spinner />}\n      {data && <Context.Provider value={value}>{children}</Context.Provider>}\n    </>\n  )\n}\n\nexport const useProfileUser = () => {\n  const context = useContext(Context) as UserContext\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error('useProfileUser must be used within a ProfileUserProvider')\n  }\n\n  return context.data\n}\n\nexport const useRefetchUser = () => {\n  const context = useContext(Context) as UserContext\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error('useProfileUser must be used within a ProfileUserProvider')\n  }\n\n  return context.refetch\n}\n","import { createContext, FC, useContext, useEffect, useState } from 'react'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { useLocation } from 'react-router-dom'\nimport { useEventLocationQuery } from 'gql'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useEventTypes } from 'rest'\nimport { LocationData } from '../Common/types'\n\nconst Context = createContext<LocationData | undefined>(undefined)\n\nconst LocationFetcher: FC<{\n  onCompleted: (data: LocationData) => void\n}> = ({ onCompleted }) => {\n  const { isLoading: loading, data, error, refetch } = useEventTypes()\n  const locationId = new URLSearchParams(useLocation().search).get('location')\n\n  const {\n    loading: locationLoading,\n    roles: location,\n    error: locationError,\n    refetch: locationRefetch,\n  } = useEventLocationQuery({\n    variables: {\n      uuid: new URLSearchParams(useLocation().search).get('location')!,\n    },\n    skip: !locationId,\n  })\n\n  useEffect(() => {\n    locationId && data && location\n      ? onCompleted({\n          eventTypes: data,\n          location,\n        })\n      : data &&\n        !locationId &&\n        onCompleted({\n          eventTypes: data,\n          location: undefined,\n        })\n  }, [data, location, locationId, onCompleted])\n\n  if (error || locationError) {\n    return (\n      <ErrorPage\n        onButtonClick={() => (error ? refetch() : locationRefetch())}\n      />\n    )\n  }\n\n  if (loading || locationLoading) {\n    return <ModalSpinner noBackground />\n  }\n\n  return null\n}\n\nexport const EventInfoProvider: FC = ({ children }) => {\n  const [location, setLocation] = useState<LocationData | undefined>(undefined)\n\n  return !location ? (\n    <LocationFetcher onCompleted={data => setLocation(data)} />\n  ) : (\n    <Context.Provider value={location}>{children}</Context.Provider>\n  )\n}\n\nexport const useEventInfo = () => {\n  const context = useContext(Context) as LocationData\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error('useEventInfo must be used within a EventInfoProvider')\n  }\n\n  return context\n}\n","import {\n  createContext,\n  Dispatch,\n  FC,\n  useContext,\n  useMemo,\n  useReducer,\n} from 'react'\nimport { Keys } from '../types'\n\ntype State = {\n  selectedKey: Keys | undefined\n  tempSelectedKey: Keys | undefined\n}\n\ntype Action =\n  | { type: 'setSelectedKey'; payload: Keys }\n  | { type: 'setTempSelectedKey'; payload: Keys | undefined }\n\nconst initialState: State = {\n  selectedKey: undefined,\n  tempSelectedKey: undefined,\n}\n\nconst reducer = (state: State, action: Action): State => {\n  const { type } = action\n\n  switch (type) {\n    case 'setSelectedKey': {\n      return {\n        ...state,\n        selectedKey: action.payload,\n      }\n    }\n    case 'setTempSelectedKey': {\n      return {\n        ...state,\n        tempSelectedKey: action.payload,\n      }\n    }\n    default:\n      return state\n  }\n}\n\ntype NavState = {\n  state: State\n  dispatch: Dispatch<Action>\n}\n\nconst Context = createContext<NavState>({\n  state: initialState,\n  dispatch: () => {},\n})\n\nexport const NavProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const value = useMemo(() => ({ state, dispatch }), [state])\n\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n\nexport const useNavProvider = () => {\n  const context = useContext(Context)\n  /* istanbul ignore next */\n  if (context === undefined) {\n    throw new Error('useNavProvider must be used within a NavProvider')\n  }\n\n  return context\n}\n","import {\n  FC,\n  createContext,\n  useContext,\n  useMemo,\n  useState,\n  Dispatch,\n  SetStateAction,\n} from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { useNavProvider } from './NavProvider'\n\ntype DirtyCheck = {\n  isDirty: boolean\n  setIsDirty: Dispatch<SetStateAction<boolean>>\n  setShowConfirmation: Dispatch<SetStateAction<boolean>>\n  onCloseConfirmation: Dispatch<SetStateAction<(arg?: () => void) => void>>\n  onSuccessConfirmation: Dispatch<SetStateAction<(arg?: () => void) => any>>\n}\n\nconst messages = defineMessages({\n  confirmationHeader: {\n    defaultMessage: 'Unsaved Changes',\n    description: 'Modal heading',\n  },\n  confirmationMessage: {\n    defaultMessage:\n      'You have unsaved changes, would you like to save and continue?',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Save',\n    description: 'Button label',\n  },\n})\n\nconst Context = createContext<DirtyCheck>({\n  isDirty: false,\n  setIsDirty: () => {},\n  setShowConfirmation: () => {},\n  onCloseConfirmation: () => {},\n  onSuccessConfirmation: () => {},\n})\n\nexport const ProfileSectionDirtyCheckProvider: FC = ({ children }) => {\n  const { formatMessage } = useIntl()\n  const [isDirty, setIsDirty] = useState<boolean>(false)\n  const [showConfirmation, setShowConfirmation] = useState<boolean>(false)\n  const [onCancel, setOnCancel] = useState<(arg?: () => void) => void>(() => {})\n  const [onSuccess, setOnSuccess] = useState<(arg?: () => void) => any>(\n    () => {}\n  )\n\n  const {\n    state: { tempSelectedKey },\n    dispatch,\n  } = useNavProvider()\n\n  const handleClose = () => {\n    setShowConfirmation(false)\n    if (tempSelectedKey) {\n      dispatch({\n        type: 'setTempSelectedKey',\n        payload: undefined,\n      })\n    }\n  }\n\n  const handleSuccess = async () => {\n    setShowConfirmation(false)\n    const result = await onSuccess()\n    if (result === undefined) {\n      setIsDirty(false)\n      onCancel()\n    }\n  }\n\n  const handleCancel = () => {\n    setShowConfirmation(false)\n    onCancel()\n  }\n\n  const value = useMemo(\n    () => ({\n      isDirty,\n      setIsDirty,\n      setShowConfirmation,\n      onSuccessConfirmation: setOnSuccess,\n      onCloseConfirmation: setOnCancel,\n    }),\n    [isDirty]\n  )\n\n  return (\n    <Context.Provider value={value}>\n      {showConfirmation && (\n        <ConfirmationDialog\n          closeable\n          onClose={handleClose}\n          onCancel={handleCancel}\n          onSuccess={handleSuccess}\n          heading={formatMessage(messages.confirmationHeader)}\n          message={formatMessage(messages.confirmationMessage)}\n          cancelLabel={formatMessage(messages.cancelButtonLabel)}\n          successLabel={formatMessage(messages.successButtonLabel)}\n        />\n      )}\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport const useDirtyCheck = () => {\n  const context = useContext(Context)\n  /* istanbul ignore next */\n  if (context === undefined) {\n    throw new Error(\n      'useDirtyCheck must be used within a ProfileSectionDirtyCheckProvider'\n    )\n  }\n\n  return context\n}\n","import { DrawerOverrides } from '@jifflenow/brightui/drawer'\n\nexport const drawerOverrides: DrawerOverrides = {\n  DrawerContainer: {\n    style: {\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0,\n    },\n  },\n}\n","import { FC } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Drawer } from 'ui-components/Drawer'\nimport { useMediaQuery } from 'utils/useMediaQuery'\nimport { useAppSource, AppSource } from 'providers/AppSourceProvider'\nimport { drawerOverrides } from './overrides'\n\nexport const ProfileDrawerWrapper: FC = ({ children }) => {\n  const history = useHistory()\n  const { app } = useAppSource()\n\n  const isWideScale = app === AppSource.WideScale\n\n  return (\n    <Drawer\n      size={useMediaQuery('medium') && isWideScale ? '90%' : '100%'}\n      isOpen\n      closeable={false}\n      onClose={() => {\n        history.length === 1 ? history.replace('/') : history.goBack()\n      }}\n      animate={isWideScale}\n      overrides={isWideScale ? undefined : drawerOverrides}\n    >\n      {children}\n    </Drawer>\n  )\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { Button } from '@jifflenow/brightui/button'\nimport {\n  HeaderContainer as DrawerHeaderContainer,\n  FooterContainer as DrawerFooterContainer,\n} from 'ui-components/Drawer'\n\nexport const Root = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n})\n\nexport const Body = styled('div', ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: '1 1 0%',\n  overflowY: 'scroll',\n  [mediaQuery.medium]: {\n    paddingLeft: '223px',\n  },\n}))\n\nexport const Container = styled(\n  'div',\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    width: '100%',\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    paddingTop: '68px',\n    paddingBottom: sizing.scale700,\n    flex: '1 1 0%',\n    overflowY: 'scroll',\n    [mediaQuery.medium]: {\n      paddingLeft: '87px',\n      paddingRight: sizing.scale900,\n      paddingTop: sizing.scale850,\n      paddingBottom: sizing.scale850,\n    },\n  })\n)\n\nexport const HeaderContainer = withStyle<\n  typeof DrawerHeaderContainer,\n  { $hasMenu?: boolean }\n>(DrawerHeaderContainer, ({ $hasMenu }) => ({\n  boxShadow: $hasMenu ? 'none' : '0px 10px 20px rgba(216, 216, 216, 0.4);',\n  flexShrink: 0,\n}))\n\nexport const FooterContainer = withStyle(\n  DrawerFooterContainer,\n  ({ $theme: { mediaQuery } }) => ({\n    justifyContent: 'flex-end',\n    [mediaQuery.medium]: {\n      paddingLeft: '112px',\n      boxShadow: '0px -1px 8px rgba(216, 216, 216, 0.4)',\n    },\n  })\n)\n\nexport const PaginationWrapper = styled(\n  'div',\n  ({ $theme: { mediaQuery, sizing, colors } }) => ({\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: sizing.scale400,\n    paddingBottom: sizing.scale400,\n    paddingRight: sizing.scale900,\n    paddingLeft: sizing.scale900,\n    backgroundColor: colors.mono100,\n    [mediaQuery.medium]: {\n      justifyContent: 'flex-end',\n    },\n  })\n)\n\nexport const HeaderTitle = styled(\n  'div',\n  ({ $theme: { typography, mediaQuery } }) => ({\n    ...typography.HeadingSmall,\n    minWidth: '250px',\n    [mediaQuery.medium]: {\n      ...typography.HeadingMedium,\n    },\n  })\n)\n\nexport const CheckboxControl = styled(\n  FormControl,\n  ({ $theme: { colors } }) => ({\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: 0,\n    color: colors.mono700,\n  })\n)\n\nexport const PopoverMenuItem = styled('div', ({ $theme: { sizing } }) => ({\n  paddingBottom: sizing.scale500,\n  paddingLeft: sizing.scale600,\n  paddingRight: sizing.scale600,\n  paddingTop: sizing.scale500,\n}))\n\nexport const DesktopViewAction = styled(\n  'div',\n  ({ $theme: { mediaQuery } }) => ({\n    display: 'none',\n    [mediaQuery.medium]: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '100%',\n    },\n  })\n)\n\nexport const MobileViewAction = styled('div', ({ $theme: { mediaQuery } }) => ({\n  marginLeft: 'auto',\n  [mediaQuery.medium]: {\n    display: 'none',\n  },\n}))\n\nexport const FooterButton = styled(\n  Button,\n  ({ $theme: { sizing, mediaQuery } }) => ({\n    minWidth: '80px',\n    marginRight: sizing.scale400,\n    [mediaQuery.small]: {\n      minWidth: '133px',\n    },\n  })\n)\n\nexport const Title = styled(\n  'h2',\n  ({ $theme: { typography, sizing, colors } }) => ({\n    ...typography.Subtitle1,\n    color: colors.mono700,\n    paddingTop: sizing.scale200,\n    display: 'flex',\n    marginTop: 0,\n  })\n)\n\nexport const NoItemsRoot = styled('div', {\n  display: 'flex',\n  flexGrow: 1,\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nexport const NoItemsText = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono800,\n  })\n)\n\nexport const EventSelectWrapper = styled<{ $location: boolean }, 'div'>(\n  'div',\n  ({ $location }) => ({\n    display: 'flex',\n    minWidth: $location ? 0 : '204px',\n  })\n)\n\nexport const TitleContainer = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport const FilterContainer = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n  minWidth: '204px',\n})\n\nexport const SearchContainer = styled('div', {\n  marginLeft: 'auto',\n})\n\nexport const StatusText = styled('div', ({ $theme: { colors } }) => ({\n  color: colors.mono700,\n  textTransform: 'uppercase',\n}))\n\nexport const EventSelectLabelWrapper = styled(\n  'label',\n  ({ $theme: { typography, sizing, colors, mediaQuery } }) => ({\n    ...typography.Subtitle1,\n    display: 'flex',\n    color: colors.mono800,\n    marginBottom: sizing.scale200,\n    marginRight: sizing.scale600,\n    [mediaQuery.small]: {\n      marginBottom: 0,\n    },\n  })\n)\n\nexport const EventDatesLabelWrapper = styled(\n  'div',\n  ({ $theme: { sizing, mediaQuery } }) => ({\n    display: 'flex',\n    marginBottom: sizing.scale200,\n    [mediaQuery.small]: {\n      marginBottom: 0,\n    },\n  })\n)\n\nexport const Date = styled('div', {\n  fontWeight: 600,\n})\n\nexport const StatusWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale200,\n  marginRight: sizing.scale200,\n}))\n\nexport const EventName = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Subtitle1,\n    color: colors.mono900,\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  })\n)\n\nconst StyledText = styled('div', ({ $theme: { typography, colors } }) => ({\n  ...typography.font400,\n  color: colors.mono700,\n}))\n\nexport const EventDates = withStyle(StyledText, ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale200,\n  flex: 'none',\n}))\n\nexport const Option = styled('div', {\n  flex: 'none',\n})\n","import { createContext, FC, useContext, useState, useMemo } from 'react'\nimport { Campaign } from './types'\n\ntype ContextT = {\n  campaign: Campaign | null\n  setCampaign: (campaign: Campaign | null) => void\n}\nconst Context = createContext<ContextT | null>(null)\n\nexport const CampaignProvider: FC = ({ children }) => {\n  const [campaign, setCampaign] = useState<Campaign | null>(null)\n\n  const value = useMemo<ContextT>(() => ({ campaign, setCampaign }), [\n    campaign,\n    setCampaign,\n  ])\n\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n\nexport const useCampaign = () => {\n  const context = useContext(Context) as ContextT\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error('useCampaign must be used within a CampaignProvider')\n  }\n\n  return context\n}\n","import { SelectOverrides } from '@jifflenow/brightui/select'\nimport { PLACEMENT } from '@jifflenow/brightui/popover'\n\nexport const campaignFilterOverride: SelectOverrides = {\n  DropdownContainer: {\n    style: { minWidth: '204px' },\n  },\n  Popover: {\n    props: {\n      placement: PLACEMENT.bottomLeft,\n    },\n  },\n}\n","import { FC, useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { DateTime } from 'luxon'\nimport { Select, OnChangeParams, Option } from '@jifflenow/brightui/select'\nimport { useUserMappedCampaigns } from 'rest'\nimport { useIntl } from 'react-intl'\nimport { filterOptionLabel } from 'ui-components/common/messages'\nimport { useProfileUser } from '../../providers/ProfileUserProvider'\nimport { StatusText } from '../styled-components'\nimport { Campaign, Mode } from '../types'\nimport { useCampaign } from './CampaignProvider'\nimport { EventType } from './types'\nimport { campaignFilterOverride } from './overrides'\n\nconst optionsMapper = ({ location, displayName, mode }: Campaign) => ({\n  id: location,\n  label: displayName,\n  mode,\n})\n\nconst currentDate = DateTime.local()\n\nexport const CampaignFilter: FC<{\n  setDefaultValue?: boolean\n  eventType?: string\n  eventTypes?: EventType[]\n}> = ({ setDefaultValue = true, eventType, eventTypes }) => {\n  const userId = useProfileUser().id\n  const { campaign, setCampaign } = useCampaign()\n  const [options, setOptions] = useState<Campaign[]>([])\n  const { formatMessage } = useIntl()\n\n  const defaultLocation = new URLSearchParams(useLocation().search).get(\n    'location'\n  )\n\n  const { run: fetchCampaigns, isLoading } = useUserMappedCampaigns({\n    id: userId,\n    eventType: eventTypes?.length ? eventTypes : eventType,\n    // TODO: Check with Products for the date range, considered 2 years for now.\n    dateInterval: `${currentDate.toISODate()}--${currentDate\n      .plus({ years: 2 })\n      .toISODate()}`,\n    onResolve: ({ data }) => {\n      const campaigns = data.map(\n        ({ id, attributes: { systemName, ...rest } }) => ({\n          location: id,\n          eventName: systemName,\n          ...rest,\n        })\n      )\n\n      setOptions(campaigns)\n      setDefaultValue &&\n        setCampaign(\n          (defaultLocation &&\n            campaigns.find(({ location }) => location === defaultLocation)) ||\n            campaigns[0]\n        )\n    },\n  })\n\n  useEffect(() => {\n    fetchCampaigns({ eventTypes })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventTypes])\n\n  const OptionLabel = ({ option: { label, mode } }: Option) => (\n    <>\n      {label}\n      {mode && (\n        <StatusText>\n          {formatMessage(filterOptionLabel[mode as Mode])}\n        </StatusText>\n      )}\n    </>\n  )\n\n  return !defaultLocation ? (\n    <Select\n      searchInput\n      clearable={false}\n      onCloseResetsInput\n      onBlurResetsInput\n      placeholder=\"Select\"\n      isLoading={isLoading}\n      options={options.map(optionsMapper)}\n      value={(campaign ? [campaign] : []).map(optionsMapper)}\n      getOptionLabel={OptionLabel}\n      onChange={({ option }: OnChangeParams) => {\n        const campaign = options.find(\n          ({ location }) => location === option?.id\n        )!\n\n        setCampaign(campaign)\n      }}\n      overrides={campaignFilterOverride}\n    />\n  ) : null\n}\n","import { FC } from 'react'\nimport { useEventTypes } from 'rest'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { TextFilter, Option } from '@jifflenow/brightui/filter'\nimport { filterOverrides, typeOptions } from 'components/Events'\nimport { EventType } from './types'\n\nconst messages = defineMessages({\n  eventType: {\n    defaultMessage: 'Instance Type',\n    description: 'Filter Label for status of the event type',\n  },\n})\n\nconst toFilterTypeFormat = (option: string) => ({\n  id: option,\n  label: typeOptions[option],\n})\n\nexport const EventTypeFilter: FC<{\n  types: EventType[]\n  onChange: (val: EventType[]) => void\n}> = ({ types = [], onChange }) => {\n  const { formatMessage } = useIntl()\n  const { isLoading, data } = useEventTypes()\n\n  return (\n    <TextFilter\n      label={formatMessage(messages.eventType)}\n      onChange={newTypes => onChange(newTypes.map(({ id }) => id as EventType))}\n      options={data?.data.map(toFilterTypeFormat) || []}\n      overrides={filterOverrides}\n      value={types.map(toFilterTypeFormat)}\n      isLoading={isLoading}\n      filterOptions={(options: Option) =>\n        options.filter((i: { id: string }) => i.id !== 'Emeet')\n      }\n    />\n  )\n}\n","import { FC, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { CampaignFilter, EventTypeFilter, EventType } from './CampaignFilter'\n\nexport const EventTypeAndLocationFilter: FC<{\n  eventType?: string\n  eventTypes?: EventType[]\n}> = ({ eventType }) => {\n  const [eventTypes, setEventTypes] = useState([] as EventType[])\n  const location = new URLSearchParams(useLocation().search).get('location')\n\n  return (\n    <>\n      {eventType !== 'Emeet' && !location && (\n        <EventTypeFilter\n          types={eventTypes}\n          onChange={eventTypes => setEventTypes(eventTypes)}\n        />\n      )}\n      <CampaignFilter\n        eventType={eventType}\n        key={eventType}\n        eventTypes={eventTypes}\n      />\n    </>\n  )\n}\n","import { FC, useState } from 'react'\nimport { useMe } from 'providers/MeProvider'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { FormButtonsProps } from './types'\nimport { FooterButton, FooterContainer } from './styled-components'\n\nconst modalLabels = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Your changes will be lost.',\n    description: 'Modal heading',\n  },\n  modalMessage: {\n    defaultMessage: 'Keep changes?',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Keep',\n    description: 'Button label',\n  },\n})\n\nexport const Footer: FC<FormButtonsProps> = ({\n  isDisabled = false,\n  isLoading = false,\n  hasOnlyNext = false,\n  hasForm = false,\n  isLastItem,\n  onNext,\n  onDone,\n  onSave,\n  onDiscard,\n  onSaveAndNext,\n  pendoPrefix,\n}) => {\n  const { eMeetProfileSetupReminded } = useMe().meta\n  const { formatMessage } = useIntl()\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const handleFormReset = () => {\n    setShowConfirmation(false)\n    onDiscard?.()\n  }\n\n  return (\n    <FooterContainer>\n      {hasOnlyNext ? (\n        isLastItem ? (\n          <FooterButton\n            type=\"button\"\n            disabled={isDisabled}\n            isLoading={isLoading}\n            onClick={onDone}\n            data-pendo={`${pendoPrefix}/done`}\n          >\n            <FormattedMessage\n              defaultMessage=\"Done\"\n              description=\"Button label\"\n            />\n          </FooterButton>\n        ) : (\n          <FooterButton\n            type=\"button\"\n            disabled={isDisabled}\n            isLoading={isLoading}\n            onClick={onNext}\n            data-pendo={`${pendoPrefix}/next`}\n          >\n            <FormattedMessage\n              defaultMessage=\"Next\"\n              description=\"Button label\"\n            />\n          </FooterButton>\n        )\n      ) : (\n        <>\n          {showConfirmation && (\n            <ConfirmationDialog\n              heading={formatMessage(modalLabels.modalHeader)}\n              message={formatMessage(modalLabels.modalMessage)}\n              cancelLabel={formatMessage(modalLabels.cancelButtonLabel)}\n              successLabel={formatMessage(modalLabels.successButtonLabel)}\n              onClose={() => setShowConfirmation(false)}\n              onCancel={handleFormReset}\n              onSuccess={() => setShowConfirmation(false)}\n            />\n          )}\n          <FooterButton\n            type=\"button\"\n            kind={KIND.tertiary}\n            disabled={isDisabled}\n            onClick={() => setShowConfirmation(true)}\n            data-pendo={`${pendoPrefix}/discard`}\n          >\n            <FormattedMessage\n              defaultMessage=\"Discard\"\n              description=\"Button label\"\n            />\n          </FooterButton>\n          {eMeetProfileSetupReminded ? (\n            <FooterButton\n              type=\"button\"\n              disabled={isDisabled}\n              isLoading={isLoading}\n              onClick={onSave}\n              data-pendo={`${pendoPrefix}/save`}\n            >\n              <FormattedMessage\n                defaultMessage=\"Save\"\n                description=\"Button label\"\n              />\n            </FooterButton>\n          ) : null}\n          {isLastItem ? (\n            <FooterButton\n              type=\"submit\"\n              disabled={isDisabled}\n              isLoading={isLoading}\n              data-pendo={`${pendoPrefix}/save-and-done`}\n            >\n              <FormattedMessage\n                defaultMessage=\"Save And Done\"\n                description=\"Button label\"\n              />\n            </FooterButton>\n          ) : (\n            <FooterButton\n              type={hasForm ? 'submit' : 'button'}\n              disabled={isDisabled}\n              isLoading={isLoading}\n              onClick={hasForm ? undefined : onSaveAndNext}\n              data-pendo={`${pendoPrefix}/save-and-next`}\n            >\n              <FormattedMessage\n                defaultMessage=\"Save And Next\"\n                description=\"Button label\"\n              />\n            </FooterButton>\n          )}\n        </>\n      )}\n    </FooterContainer>\n  )\n}\n","import { useState, VFC } from 'react'\nimport { HttpError, patchUserProfile, usePortalV2Client } from 'rest'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { useQueryClient } from 'react-query'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { components } from 'types/openapi'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { CheckboxControl } from './styled-components'\n\ntype GeneralError = components['schemas']['GeneralError']\n\nconst messages = defineMessages({\n  label: {\n    defaultMessage: 'Active',\n    description: 'Button label',\n  },\n  success: {\n    defaultMessage: 'User status updated successfully.',\n    description: 'Success message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  modalHeader: {\n    defaultMessage: 'Are you sure?',\n    description: 'Header text',\n  },\n  modalMessage: {\n    defaultMessage: 'Inactive user cannot access Jifflenow.',\n    description: 'Message text',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Save',\n    description: 'Button label',\n  },\n})\n\nconst UserStatus: VFC = () => {\n  const { formatMessage } = useIntl()\n  const portalClient = usePortalV2Client()\n  const queryClient = useQueryClient()\n  const {\n    id: userId,\n    attributes: { active: isActive },\n  } = useProfileUser()\n  const [loading, setLoading] = useState(false)\n  const [showWarning, setShowWarning] = useState<boolean>(false)\n\n  const handleToggleChange = () => {\n    if (isActive) {\n      setShowWarning(true)\n    } else {\n      toggleActive()\n    }\n  }\n\n  const handleClose = () => {\n    setShowWarning(false)\n  }\n\n  const toggleActive = async () => {\n    setLoading(true)\n    try {\n      await patchUserProfile(portalClient, { active: !isActive }, userId)\n      queryClient.invalidateQueries('fetchUser')\n      setLoading(false)\n      setShowWarning(false)\n      showSuccessToast(formatMessage(messages.success))\n    } catch (e) {\n      setLoading(false)\n      if (e instanceof HttpError && e.response.status === 403) {\n        const errorMessage =\n          (e as GeneralError).errors[0].title ??\n          formatMessage(messages.genericError)\n        showErrorToast(errorMessage)\n        return\n      }\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  return (\n    <>\n      {loading && <ModalSpinner />}\n      {showWarning && (\n        <ConfirmationDialog\n          heading={formatMessage(messages.modalHeader)}\n          message={formatMessage(messages.modalMessage)}\n          cancelLabel={formatMessage(messages.cancelButtonLabel)}\n          successLabel={formatMessage(messages.successButtonLabel)}\n          onClose={handleClose}\n          onCancel={handleClose}\n          onSuccess={toggleActive}\n        />\n      )}\n      <CheckboxControl\n        label={formatMessage(messages.label)}\n        data-pendo=\"profile/is-active-toggle\"\n      >\n        <Checkbox\n          checkmarkType=\"toggle_round\"\n          id=\"user_active_status\"\n          checked={isActive}\n          onChange={handleToggleChange}\n          disabled={loading}\n          ariaLabel={formatMessage(messages.label)}\n        />\n      </CheckboxControl>\n    </>\n  )\n}\n\nexport default UserStatus\n","import { PopoverOverrides } from '@jifflenow/brightui/popover'\nimport { SelectOverrides } from '@jifflenow/brightui/select'\nimport { PLACEMENT } from '@jifflenow/brightui/popover'\n\nexport const popoverOverrides: PopoverOverrides = {\n  Body: {\n    style: ({ $theme: { colors, borders } }) => ({\n      backgroundColor: colors.white,\n      borderWidth: borders.radius100,\n      borderStyle: 'solid',\n      borderColor: colors.mono200,\n      borderBottomLeftRadius: borders.radius100,\n      borderBottomRightRadius: borders.radius100,\n      borderTopRightRadius: borders.radius100,\n      borderTopLeftRadius: borders.radius100,\n      boxShadow: '0px 10px 20px rgba(216, 216, 216, 0.4)',\n      minWidth: '156px',\n      zIndex: 1,\n    }),\n  },\n}\n\nexport const campaignFilterOverride: SelectOverrides = {\n  DropdownContainer: {\n    style: { minWidth: '204px' },\n  },\n  Popover: {\n    props: {\n      placement: PLACEMENT.bottomLeft,\n    },\n  },\n}\n","import { VFC } from 'react'\nimport { useMe } from 'providers/MeProvider'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { ThreeDots } from '@jifflenow/brightui/icon'\nimport { StatefulPopover, PLACEMENT } from '@jifflenow/brightui/popover'\nimport { DrawerCloseButton, useDrawer } from 'ui-components/Drawer'\nimport { useAppSource, AppSource } from 'providers/AppSourceProvider'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport UserStatus from './UserStatus'\nimport { popoverOverrides } from './overrides'\nimport {\n  HeaderTitle,\n  PopoverMenuItem,\n  MobileViewAction,\n  DesktopViewAction,\n  HeaderContainer,\n} from './styled-components'\n\nexport const Header: VFC = () => {\n  const { closeDrawer } = useDrawer()\n  const { app } = useAppSource()\n  const {\n    id: loggedInUserId,\n    attributes: {\n      privileges: { canMarkUsersActive },\n    },\n  } = useMe().data\n  const {\n    id: profileUserId,\n    attributes: { firstName = '', lastName = '' },\n  } = useProfileUser()\n\n  const myProfile = loggedInUserId === profileUserId\n\n  return (\n    <HeaderContainer $hasMenu>\n      {app === AppSource.WideScale && (\n        <DrawerCloseButton onClick={() => closeDrawer()} />\n      )}\n\n      {(firstName || lastName) && (\n        <HeaderTitle>{`${firstName} ${lastName}`}</HeaderTitle>\n      )}\n\n      {canMarkUsersActive && !myProfile && (\n        <>\n          <DesktopViewAction>\n            <UserStatus />\n          </DesktopViewAction>\n          <MobileViewAction>\n            <StatefulPopover\n              overrides={popoverOverrides}\n              placement={PLACEMENT.bottomRight}\n              content={() => (\n                <PopoverMenuItem>\n                  <UserStatus />\n                </PopoverMenuItem>\n              )}\n              returnFocus\n              autoFocus\n            >\n              <Button kind={KIND.minimal}>\n                <ThreeDots color=\"mono700\" size={24} />\n              </Button>\n            </StatefulPopover>\n          </MobileViewAction>\n        </>\n      )}\n    </HeaderContainer>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const TableHeaderRoot = styled('div', {\n  display: 'flex',\n})\n\nexport const ColumnTitle = styled('p', ({ $theme: { typography } }) => ({\n  ...typography.ParagraphMedium,\n  marginTop: 0,\n  marginBottom: 0,\n  marginLeft: 'auto',\n}))\n","import { VFC, ChangeEvent } from 'react'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { TableHeaderRoot, ColumnTitle } from './styled-components'\nimport { ColumnCheckboxProps } from './types'\n\nexport const ColumnCheckbox: VFC<ColumnCheckboxProps> = ({\n  label,\n  checked,\n  intermediate,\n  handleSelectAll,\n  handleDeselectAll,\n  showCheckbox,\n  columnName,\n  disabled,\n}) => {\n  const handleChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    if (target.checked) {\n      handleSelectAll({ [columnName]: true })\n    } else {\n      handleDeselectAll({ [columnName]: false })\n    }\n  }\n\n  return (\n    <TableHeaderRoot>\n      {showCheckbox ? (\n        <ColumnTitle>{label}</ColumnTitle>\n      ) : (\n        <Checkbox\n          checked={checked}\n          isIndeterminate={intermediate}\n          onChange={handleChange}\n          disabled={disabled}\n        >\n          {label}\n        </Checkbox>\n      )}\n    </TableHeaderRoot>\n  )\n}\n","import { VFC, ChangeEvent } from 'react'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { RowCheckboxProps } from './types'\n\nexport const RowCheckbox: VFC<RowCheckboxProps> = ({\n  rowId,\n  rowName,\n  rowChecked,\n  handleSelectItem,\n  disabled,\n  ariaLabel,\n}) => {\n  const handleChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    if (target.checked) {\n      handleSelectItem({ uuid: rowId, [rowName]: true })\n    } else {\n      handleSelectItem({ uuid: rowId, [rowName]: false })\n    }\n  }\n\n  return (\n    <Checkbox\n      checked={rowChecked}\n      onChange={handleChange}\n      disabled={disabled}\n      ariaLabel={ariaLabel}\n    />\n  )\n}\n","import { styled } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\n\nexport const FooterContainer = styled('div', ({ $theme: { sizing } }) => ({\n  height: sizing.scale1400,\n  boxShadow: '0px -1px 8px rgba(216, 216, 216, 0.4)',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  position: 'sticky',\n  bottom: 0,\n  left: 0,\n  paddingRight: sizing.scale600,\n}))\n\nexport const FooterButton = styled(Button, ({ $theme: { sizing } }) => ({\n  width: '99px',\n  height: sizing.scale900,\n  marginRight: sizing.scale300,\n}))\n","import { VFC, useImperativeHandle, forwardRef } from 'react'\nimport ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\nimport { FlexGrid, FlexGridItem } from '@jifflenow/brightui/flex-grid'\n\nconst LIST_CARD_HEIGHT = 64\n\nconst LoadingListCard: VFC<{ height: number }> = ({ height }) => {\n  const [, theme] = useStyletron()\n  const contentLoaderOptions = {\n    style: { width: '100%', height: `${height}` },\n    width: '1000',\n    height: '100',\n    viewBox: '0 0 1000 100',\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader {...contentLoaderOptions}>\n      <rect y=\"0\" rx={1} ry={20} width=\"1000\" height=\"100\" />\n    </ContentLoader>\n  )\n}\n\nexport const ListLoader = forwardRef((_, ref) => {\n  const [, theme] = useStyletron()\n  useImperativeHandle(ref, () => ({\n    getReactContainerStyle: () => ({\n      alignSelf: 'flex-start',\n      marginTop: theme.sizing.scale600,\n    }),\n  }))\n\n  return (\n    <FlexGrid\n      flexGridColumnCount={1}\n      overrides={{\n        Block: {\n          style: ({ $theme: { sizing } }) => ({\n            marginTop: sizing.scale100,\n            marginBottom: sizing.scale100,\n          }),\n        },\n      }}\n    >\n      {Array.from({ length: 8 }).map((_, i) => (\n        <FlexGridItem key={i}>\n          <LoadingListCard height={LIST_CARD_HEIGHT} />\n        </FlexGridItem>\n      ))}\n    </FlexGrid>\n  )\n})\n","import { styled } from '@jifflenow/brightui'\n\nexport const EmptyMessageRoot = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale1400,\n}))\n\nexport const EmptyMessageText = styled('p', {\n  display: 'flex',\n  justifyContent: 'center',\n})\n\nexport const ButtonWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: sizing.scale1000,\n}))\n","import { VFC } from 'react'\nimport { Button } from '@jifflenow/brightui/button'\nimport {\n  EmptyMessageRoot,\n  EmptyMessageText,\n  ButtonWrapper,\n} from './styled-components'\n\ntype EmptyMessageProps = {\n  onAddNew?: () => void\n  emptyMessage: string\n  addNewButtonMessage: string\n  showAddButton: boolean | undefined\n}\n\nexport const EmptyMessage: VFC<EmptyMessageProps> = ({\n  onAddNew,\n  emptyMessage,\n  addNewButtonMessage,\n  showAddButton,\n}) => (\n  <EmptyMessageRoot>\n    <EmptyMessageText>{emptyMessage}</EmptyMessageText>\n    {showAddButton && (\n      <ButtonWrapper>\n        <Button onClick={onAddNew}>{addNewButtonMessage}</Button>\n      </ButtonWrapper>\n    )}\n  </EmptyMessageRoot>\n)\n","import { ChangeEvent, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Input } from '@jifflenow/brightui/input'\nimport { Search as SearchIcon } from '@jifflenow/brightui/icon'\nimport { SearchProps } from './types'\n\nconst messages = defineMessages({\n  search: {\n    defaultMessage: 'Search',\n    description: 'Placeholder text',\n  },\n})\n\nexport const Search: VFC<SearchProps> = ({ search, onSearchChange }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Input\n      type=\"search\"\n      value={search}\n      IconAfter={SearchIcon}\n      onChange={(e: ChangeEvent<HTMLInputElement>) =>\n        onSearchChange?.(e.target.value)\n      }\n      placeholder={formatMessage(messages.search)}\n    />\n  )\n}\n","import { FC, createContext, useContext, useMemo } from 'react'\n\ntype EventNameType = { eventType?: string }\n\nconst EventName = createContext<EventNameType | null>(null)\n\nexport const EventNameProvider: FC<EventNameType> = ({\n  eventType,\n  children,\n}) => {\n  const value = useMemo(() => ({ eventType: eventType ?? '' }), [eventType])\n\n  return <EventName.Provider value={value}>{children}</EventName.Provider>\n}\n\nexport const useEventName = () => {\n  const context = useContext(EventName)\n  /* istanbul ignore next */\n  if (context === null && process.env.NODE_ENV !== 'production') {\n    throw new Error('useEventName must be used within a EventNameProvider')\n  }\n\n  return context!\n}\n","import { EventSubType, EventType } from './types'\n\nexport const subTypeToEventTypeMapping: Record<EventSubType, EventType> = {\n  Emeet: 'Emeet',\n  Jem: 'TradeShow',\n  Jfx: 'OngoingSales',\n  Jss: 'StaffScheduling',\n  Jbc: 'Ebc',\n}\n","import { useState } from 'react'\nimport { DateTime } from 'luxon'\nimport { useEventTypes, useUserMappedCampaignsV2 } from 'rest'\nimport { components } from 'types/openapi'\nimport { useEventName } from '../providers/EventNameProvider'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { useEventInfo } from '../providers/EventInfoProvider'\nimport { UseEventTypeAndLocationProps } from './types'\nimport { subTypeToEventTypeMapping } from './constants'\n\ntype EventType = components['schemas']['EventType']\n\nconst currentDate = DateTime.local()\n\nexport const useEventTypeAndLocation = (): UseEventTypeAndLocationProps => {\n  const eventType = useEventName().eventType\n  const { subType } = useEventInfo().location || {}\n\n  const [selectedEventTypes, setSelectedEventTypes] = useState<EventType[]>([])\n\n  const userId = useProfileUser().id\n  const {\n    isLoading: eventTypesLoading,\n    error: eventTypesError,\n    refetch: refetchEventTypes,\n    data: { data: eventTypes = [] } = {},\n  } = useEventTypes({ enabled: eventType !== 'Emeet' })\n\n  const {\n    isLoading: locationsLoading,\n    error: locationsError,\n    refetch: refetchLocations,\n    data: { data: locations = [] } = {},\n  } = useUserMappedCampaignsV2(\n    {\n      path: { userId },\n      query: {\n        'filter[dateInterval][]': [\n          `${currentDate.toISODate()}--${currentDate\n            .plus({ years: 2 })\n            .toISODate()}`,\n        ],\n        'filter[eventType][]':\n          eventType === 'Emeet'\n            ? ['Emeet']\n            : selectedEventTypes.length\n            ? selectedEventTypes\n            : subType\n            ? [subTypeToEventTypeMapping[subType]]\n            : eventTypes.filter(type => type !== 'Emeet'),\n      },\n    },\n    {\n      enabled:\n        eventType === 'Emeet' ||\n        !!selectedEventTypes.length ||\n        !!eventTypes.length,\n    }\n  )\n\n  return {\n    isLoading: eventTypesLoading || locationsLoading,\n    isError: eventTypesError || locationsError,\n    refetch: () => (eventTypesError ? refetchEventTypes() : refetchLocations()),\n    eventTypes:\n      eventType !== 'Emeet'\n        ? eventTypes.filter(type => type !== 'Emeet')\n        : ['Emeet'],\n    selectedEventTypes,\n    setSelectedEventTypes,\n    locations,\n  }\n}\n","import { VFC } from 'react'\nimport { Select, OnChangeParams, Option } from '@jifflenow/brightui/select'\nimport { useIntl } from 'react-intl'\nimport { filterOptionLabel } from 'ui-components/common/messages'\nimport { StatusText } from './styled-components'\nimport { campaignFilterOverride } from './overrides'\nimport { CampaignFilterV2Props, Location, Mode } from './types'\n\nconst optionsMapper = ({\n  id,\n  attributes: { displayName: label, mode },\n}: Location) => ({\n  id,\n  label,\n  mode,\n})\n\nexport const CampaignFilterV2: VFC<CampaignFilterV2Props> = ({\n  locations,\n  selectedLocations,\n  onChange,\n  isLoading,\n}) => {\n  const { formatMessage } = useIntl()\n  const options = locations.map(optionsMapper)\n  const value = selectedLocations.map(optionsMapper)\n  const handleChange = ({ value: [{ id }] }: OnChangeParams) =>\n    onChange(locations.filter(({ id: uuid }) => uuid === id))\n\n  const getLabel = ({ option: { label, mode } }: Option) => (\n    <>\n      {label}\n      {mode && (\n        <StatusText>\n          {formatMessage(filterOptionLabel[mode as Mode])}\n        </StatusText>\n      )}\n    </>\n  )\n\n  return (\n    <Select\n      searchInput\n      clearable={false}\n      onCloseResetsInput\n      onBlurResetsInput\n      placeholder=\"Select\"\n      isLoading={isLoading}\n      options={options}\n      value={value}\n      getOptionLabel={getLabel}\n      onChange={handleChange}\n      overrides={campaignFilterOverride}\n    />\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { TextFilter, Option } from '@jifflenow/brightui/filter'\nimport { Value } from '@jifflenow/brightui/select'\nimport { filterOverrides } from 'components/Events'\nimport {\n  EventType,\n  EventTypeDisplayNames,\n  EventTypesFilterV2Props,\n} from './types'\n\nconst messages = defineMessages({\n  eventType: {\n    defaultMessage: 'Instance Type',\n    description: 'Filter Label for status of the event type',\n  },\n})\n\nconst optionsMapping: Record<EventType, EventTypeDisplayNames> = {\n  TradeShow: 'eEvent',\n  Ebc: 'Ebc',\n  OngoingSales: 'eCampaign',\n  StaffScheduling: 'Staff Scheduling',\n  Emeet: 'Emeet',\n}\n\nconst formatOption = (name: EventType): Option => ({\n  id: name,\n  label: optionsMapping[name],\n})\n\nexport const EventTypesFilterV2: VFC<EventTypesFilterV2Props> = ({\n  eventTypes,\n  selectedEventTypes,\n  onChange,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const options = eventTypes.map(formatOption)\n  const value = selectedEventTypes.map(formatOption)\n\n  const handleChange = (values: Value) =>\n    onChange(values.map(({ id }) => id as EventType))\n\n  return (\n    <TextFilter\n      label={formatMessage(messages.eventType)}\n      onChange={handleChange}\n      options={options}\n      overrides={filterOverrides}\n      value={value}\n    />\n  )\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport {\n  Container as BodyContainer,\n  PaginationWrapper as BasePaginationWrapper,\n} from '../Common'\n\nexport const TabsRoot = styled('div', () => ({\n  display: 'flex',\n  position: 'relative',\n  flexGrow: 1,\n}))\n\nexport const MappingsPageRoot = styled('div', {\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n})\n\nexport const MappingsSettingContainer = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: sizing.scale600,\n    position: 'absolute',\n    right: 0,\n  })\n)\n\nexport const PageContainer = withStyle(BodyContainer, {\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n})\n\nexport const NoLocationsMessageRoot = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flex: '1 1 0%',\n})\n\nexport const NoLocationsMessage = styled(\n  'label',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono800,\n  })\n)\n\nexport const Container = withStyle(\n  BodyContainer,\n  ({ $theme: { mediaQuery } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    paddingBottom: 0,\n    [mediaQuery.medium]: {\n      paddingBottom: 0,\n    },\n  })\n)\n\nexport const PaginationWrapper = withStyle(\n  BasePaginationWrapper,\n  ({ $theme: { sizing } }) => ({\n    position: 'sticky',\n    left: 0,\n    bottom: 0,\n    marginTop: 'auto',\n    paddingTop: sizing.scale850,\n  })\n)\n","import { VFC } from 'react'\nimport { EventStatus } from 'components/Events'\nimport { AutoTooltip } from 'ui-components/AutoTooltip'\nimport { formatDateRange, formatToStartOfTheDay } from 'utils/dates'\nimport { EventStatusFilter as EventStatusType } from 'components/Events/EventStatus/types'\nimport { useEventInfo } from '../providers/EventInfoProvider'\nimport {\n  EventSelectLabelWrapper,\n  StatusWrapper,\n  EventName,\n  EventDates,\n  Option,\n} from './styled-components'\nimport { EventSelectLabelProps } from './types'\n\nexport const EventSelectLabel: VFC<EventSelectLabelProps> = ({ title }) => {\n  const { filterStatus, mode, displayName, startDate, endDate } =\n    useEventInfo().location || {}\n\n  return (\n    <EventSelectLabelWrapper>\n      <Option>{title}</Option>\n      {filterStatus && (\n        <StatusWrapper>\n          <EventStatus mode={mode} status={filterStatus as EventStatusType} />\n        </StatusWrapper>\n      )}\n      {displayName && (\n        <AutoTooltip content={displayName} showArrow>\n          <EventName>{displayName}</EventName>\n        </AutoTooltip>\n      )}\n      {startDate && endDate && (\n        <EventDates>\n          (\n          {formatDateRange(\n            formatToStartOfTheDay(startDate),\n            formatToStartOfTheDay(endDate)\n          )}\n          )\n        </EventDates>\n      )}\n    </EventSelectLabelWrapper>\n  )\n}\n","import { useEffect } from 'react'\nimport { useDirtyCheck } from '../providers/ProfileSectionDirtyCheckProvider'\n\ntype DirtyCheckArgs = {\n  isDirty: boolean\n  onSave: () => any\n}\n\nexport const useDirtyCheckDialog = ({ isDirty, onSave }: DirtyCheckArgs) => {\n  const { setIsDirty, onSuccessConfirmation } = useDirtyCheck()\n\n  useEffect(() => {\n    setIsDirty(isDirty)\n\n    return () => {\n      setIsDirty(false)\n    }\n  }, [isDirty, setIsDirty])\n\n  useEffect(() => {\n    onSuccessConfirmation(() => () => onSave())\n\n    return () => {\n      onSuccessConfirmation(() => () => {})\n    }\n  }, [onSave, onSuccessConfirmation])\n}\n","import { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useQueryClient, useUserMappingsMutation } from 'rest'\nimport { components } from 'types/openapi'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { Footer } from '../Common'\nimport { useDirtyCheckDialog } from '../Common/useDirtyCheckDialog'\nimport { EngagementTypesFooterProps } from './types'\n\ntype UserMappingEntityRequest = components['schemas']['UserMappingEntityRequest']\n\nconst messages = defineMessages({\n  saveSuccess: {\n    defaultMessage: 'Saved Successfully.',\n    description: 'Success message',\n  },\n  genericError: {\n    defaultMessage: 'Something went wrong. Please try again.',\n    description: 'Error message',\n  },\n})\n\nconst modalLabels = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Your changes will be lost.',\n    description: 'Modal heading',\n  },\n  modalMessage: {\n    defaultMessage: 'Keep changes?',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Keep',\n    description: 'Button label',\n  },\n})\n\nexport const EngagementTypesFooter: VFC<EngagementTypesFooterProps> = ({\n  user,\n  onNavigate,\n  selectedLocation,\n  search: search_term,\n  state,\n  dispatch,\n}) => {\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n  const queryClient = useQueryClient()\n  const userId = user.id\n\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const {\n    id: location_uuid,\n    attributes: { systemName: eventName },\n  } = selectedLocation\n\n  const { mapped, unmapped } = state\n\n  const modifiedMappings = new Map([\n    ...mapped.mappedItems,\n    ...unmapped.mappedItems,\n  ])\n\n  const isDirty =\n    !!modifiedMappings.size ||\n    mapped.requestAll !== undefined ||\n    mapped.participateAll !== undefined ||\n    unmapped.requestAll !== undefined ||\n    unmapped.participateAll !== undefined\n\n  const getPayload = (): UserMappingEntityRequest => {\n    const mappings: UserMappingEntityRequest['mappings'] = []\n    for (const [\n      mappingEntityUuid,\n      { canRequest, canParticipate },\n    ] of modifiedMappings) {\n      mappings.push({\n        mappingEntityUuid,\n        mappingAttributes: {\n          canRequest,\n          canParticipate,\n        },\n      })\n    }\n\n    const payload: UserMappingEntityRequest = {\n      ...((mapped.requestAll !== undefined ||\n        mapped.participateAll !== undefined) && {\n        mapped: {\n          selectAll: {\n            ...(mapped.requestAll !== undefined && {\n              canRequest: mapped.requestAll,\n            }),\n            ...(mapped.participateAll !== undefined && {\n              canParticipate: mapped.participateAll,\n            }),\n          },\n        },\n      }),\n      ...((unmapped.requestAll !== undefined ||\n        unmapped.participateAll !== undefined) && {\n        unmapped: {\n          selectAll: {\n            ...(unmapped.requestAll !== undefined && {\n              canRequest: unmapped.requestAll,\n            }),\n            ...(unmapped.participateAll !== undefined && {\n              canParticipate: unmapped.participateAll,\n            }),\n          },\n        },\n      }),\n      mappings,\n    }\n\n    return payload\n  }\n\n  const { mutateAsync, isLoading } = useUserMappingsMutation({\n    path: { eventName, userId, mappingType: 'EngagementMapping' },\n    query: { search_term, location_uuid },\n  })\n\n  const handleSave = async () => {\n    try {\n      const payload = getPayload()\n      await mutateAsync(payload)\n      showSuccessToast(formatMessage(messages.saveSuccess))\n      dispatch({ type: 'resetValues' })\n      queryClient.resetQueries([\n        'userMappings',\n        { path: { mappingType: 'EngagementMapping' } },\n      ])\n      return undefined\n    } catch (error) {\n      showErrorToast(formatMessage(messages.genericError))\n      return false\n    }\n  }\n\n  const handleSaveAndNext = async () =>\n    (await handleSave()) === undefined && onNavigate?.()\n\n  useDirtyCheckDialog({\n    isDirty,\n    onSave: handleSave,\n  })\n\n  useEffect(() => {\n    unload(isDirty)\n  }, [isDirty, unload])\n\n  const handleDiscard = () => {\n    setShowConfirmation(false)\n    dispatch({ type: 'discardChanges' })\n  }\n\n  return (\n    <>\n      {isLoading && <ModalSpinner />}\n      {showConfirmation && (\n        <ConfirmationDialog\n          heading={formatMessage(modalLabels.modalHeader)}\n          message={formatMessage(modalLabels.modalMessage)}\n          cancelLabel={formatMessage(modalLabels.cancelButtonLabel)}\n          successLabel={formatMessage(modalLabels.successButtonLabel)}\n          onClose={() => setShowConfirmation(false)}\n          onCancel={handleDiscard}\n          onSuccess={() => setShowConfirmation(false)}\n        />\n      )}\n      <Footer\n        isDisabled={!isDirty}\n        onDiscard={() => setShowConfirmation(true)}\n        onSave={handleSave}\n        onSaveAndNext={handleSaveAndNext}\n        pendoPrefix=\"profile/campaign/engagement-type\"\n      />\n    </>\n  )\n}\n","import { TabOverrides } from '@jifflenow/brightui/tabs-motion'\nimport { TabsOverrides } from 'baseui/tabs-motion'\n\nexport const tabsOverrides: TabsOverrides = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      marginTop: sizing.scale600,\n    }),\n  },\n  TabList: {\n    style: ({ $theme: { sizing } }) => ({\n      height: sizing.scale1000,\n    }),\n  },\n  TabHighlight: {\n    style: {\n      marginLeft: '1px',\n    },\n  },\n  TabBorder: {\n    style: {\n      display: 'none',\n    },\n  },\n}\n\nexport const tabOverrides: TabOverrides = {\n  TabPanel: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingTop: 0,\n      marginTop: sizing.scale600,\n    }),\n  },\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Name = styled('label', ({ $theme: { typography } }) => ({\n  ...typography.Paragraph1,\n  marginTop: 0,\n  marginBottom: 0,\n}))\n\nexport const EmptyMessageRoot = styled('div', ({ $theme: { sizing } }) => ({\n  paddingTop: sizing.scale1400,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n}))\n\nexport const EmptyHeaderLabel = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.ParagraphMedium,\n  display: 'flex',\n  justifyContent: 'center',\n}))\n","import { ChangeEvent, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { CanRequestProps } from './types'\n\nconst aria = defineMessages({\n  requestMeeting: {\n    defaultMessage: 'Request meeting',\n    description: 'Aria label',\n  },\n})\n\nexport const CanRequest: VFC<CanRequestProps> = ({\n  checked,\n  canEdit,\n\n  onChange,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Checkbox\n      checked={checked}\n      onChange={({ target: { checked } }: ChangeEvent<HTMLInputElement>) =>\n        onChange(checked)\n      }\n      disabled={!canEdit}\n      ariaLabel={formatMessage(aria.requestMeeting)}\n    />\n  )\n}\n","import { ChangeEvent, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { CanParticipateProps } from './types'\n\nconst aria = defineMessages({\n  participateInMeeting: {\n    defaultMessage: 'Participate in meeting',\n    description: 'Aria label',\n  },\n})\n\nexport const CanParticipate: VFC<CanParticipateProps> = ({\n  checked,\n  canEdit,\n  onChange,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Checkbox\n      checked={checked}\n      onChange={({ target: { checked } }: ChangeEvent<HTMLInputElement>) =>\n        onChange(checked)\n      }\n      disabled={!canEdit}\n      ariaLabel={formatMessage(aria.participateInMeeting)}\n    />\n  )\n}\n","import { ChangeEvent, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { RequestAllCheckboxProps, RequestAllProps } from './types'\nimport { EmptyHeaderLabel } from './styled-components'\n\nconst messages = defineMessages({\n  requestMeetingLabel: {\n    defaultMessage: 'Request meeting',\n    description: 'Column header',\n  },\n})\n\nconst RequestAllCheckbox: VFC<RequestAllCheckboxProps> = ({\n  canEdit,\n  requestAll,\n  modifiedRequestMappingCount,\n  onChange,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Checkbox\n      checked={requestAll}\n      isIndeterminate={modifiedRequestMappingCount > 0}\n      onChange={({ target: { checked } }: ChangeEvent<HTMLInputElement>) =>\n        onChange(checked)\n      }\n      disabled={!canEdit}\n    >\n      {formatMessage(messages.requestMeetingLabel)}\n    </Checkbox>\n  )\n}\n\nconst EmptyRequestAll = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <EmptyHeaderLabel>\n      {formatMessage(messages.requestMeetingLabel)}\n    </EmptyHeaderLabel>\n  )\n}\n\nexport const RequestAll: VFC<RequestAllProps> = ({ isEmpty, ...rest }) =>\n  isEmpty ? <EmptyRequestAll /> : <RequestAllCheckbox {...rest} />\n","import { ChangeEvent, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { ParticipateAllCheckboxProps, ParticipateAllProps } from './types'\nimport { EmptyHeaderLabel } from './styled-components'\n\nconst messages = defineMessages({\n  participateMeetingLabel: {\n    defaultMessage: 'Participate in meeting',\n    description: 'Column header',\n  },\n})\n\nconst ParticipateAllCheckbox: VFC<ParticipateAllCheckboxProps> = ({\n  canEdit,\n  participateAll,\n  modifiedParticipateMappingCount,\n  onChange,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Checkbox\n      checked={participateAll}\n      isIndeterminate={modifiedParticipateMappingCount > 0}\n      onChange={({ target: { checked } }: ChangeEvent<HTMLInputElement>) =>\n        onChange(checked)\n      }\n      disabled={!canEdit}\n    >\n      {formatMessage(messages.participateMeetingLabel)}\n    </Checkbox>\n  )\n}\n\nconst EmptyParticipateAll = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <EmptyHeaderLabel>\n      {formatMessage(messages.participateMeetingLabel)}\n    </EmptyHeaderLabel>\n  )\n}\n\nexport const ParticipateAll: VFC<ParticipateAllProps> = ({\n  isEmpty,\n  ...rest\n}) => (isEmpty ? <EmptyParticipateAll /> : <ParticipateAllCheckbox {...rest} />)\n","import { TableOverrides } from '@jifflenow/brightui/table-semantic'\nimport { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const mappingTableOverrides: TableOverrides = {\n  TableHeadCell: {\n    style: {\n      paddingLeft: 0,\n    },\n  },\n  TableBodyCell: {\n    style: { paddingLeft: 0 },\n  },\n}\n\nexport const addButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginTop: sizing.scale1000,\n    }),\n  },\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from '@jifflenow/brightui/button'\nimport { useMe } from 'providers/MeProvider'\nimport { EmptyMessageRoot } from './styled-components'\nimport { addButtonOverrides } from './overrides'\nimport { EmptyMessageProps } from './types'\n\nconst messages = defineMessages({\n  emptyMessage: {\n    defaultMessage: 'No engagement types added',\n    description: 'Empty Message',\n  },\n  emptyMessageWithoutAddMapped: {\n    defaultMessage: 'User is currently not mapped to any Engagement Type.',\n    description: 'Empty Message',\n  },\n  emptyMessageWithoutAddUnmapped: {\n    defaultMessage: 'User is currently mapped to all Engagement Types.',\n    description: 'Empty Message',\n  },\n  addEngagementTypeLabel: {\n    defaultMessage: 'Add Engagement type',\n    description: 'Button Text',\n  },\n})\n\nexport const EmptyMessage: VFC<EmptyMessageProps> = ({\n  selectedLocation,\n  isNoEngagementType,\n  activeTab,\n}) => {\n  const { formatMessage } = useIntl()\n  const history = useHistory()\n  const loggedInRole = useMe().data.attributes.role\n\n  const {\n    id: location,\n    attributes: { systemName: eventName },\n  } = selectedLocation\n\n  const handleOnClick = () =>\n    history.push(`/events/${eventName}/engagement-types?location=${location}`)\n\n  return (\n    <EmptyMessageRoot>\n      {formatMessage(\n        messages[\n          isNoEngagementType\n            ? 'emptyMessage'\n            : activeTab === 'mapped'\n            ? 'emptyMessageWithoutAddMapped'\n            : 'emptyMessageWithoutAddUnmapped'\n        ]\n      )}\n\n      {isNoEngagementType && loggedInRole === 'CSM' && (\n        <Button overrides={addButtonOverrides} onClick={handleOnClick}>\n          {formatMessage(messages.addEngagementTypeLabel)}\n        </Button>\n      )}\n    </EmptyMessageRoot>\n  )\n}\n","import { VFC } from 'react'\nimport {\n  TableBuilder,\n  TableBuilderColumn,\n} from '@jifflenow/brightui/table-semantic'\nimport { useMe } from 'providers/MeProvider'\nimport { MappingValue } from '../types'\nimport { Name } from './styled-components'\nimport { MappingTableProps, Role } from './types'\nimport { CanRequest } from './CanRequest'\nimport { CanParticipate } from './CanParticipate'\nimport { RequestAll } from './RequestAll'\nimport { ParticipateAll } from './ParticipateAll'\nimport { EmptyMessage } from './EmptyMessage'\nimport { mappingTableOverrides } from './overrides'\n\nconst adminRoles: Role[] = ['CSM', 'MM', 'JMM']\nconst csmAndMmRoles: Role[] = ['CSM', 'MM']\n\nexport const MappingTable: VFC<MappingTableProps> = ({\n  items,\n  activeTab,\n  state,\n  dispatch,\n  selectedLocation,\n  user,\n}) => {\n  const {\n    id: loggedInUserId,\n    attributes: { role: companyRole, eventRole },\n  } = useMe().data\n  const {\n    id: selectedUserId,\n    attributes: { role: profileUserRole },\n  } = user\n\n  const handleCanRequestChange = (item: MappingValue, canRequest: boolean) =>\n    dispatch({\n      type: 'setCanRequest',\n      payload: { activeTab, item: { ...item, canRequest } },\n    })\n\n  const handleCanParticipateChange = (\n    item: MappingValue,\n    canParticipate: boolean\n  ) =>\n    dispatch({\n      type: 'setCanParticipate',\n      payload: { activeTab, item: { ...item, canParticipate } },\n    })\n\n  const handleRequestAllChange = (requestAll: boolean) =>\n    dispatch({\n      type: 'requestAll',\n      payload: { activeTab, requestAll },\n    })\n\n  const handleParticipateAllChange = (participateAll: boolean) =>\n    dispatch({\n      type: 'participateAll',\n      payload: { activeTab, participateAll },\n    })\n\n  const canEdit =\n    (adminRoles.includes(companyRole) ||\n      (!!eventRole && adminRoles.includes(eventRole))) &&\n    loggedInUserId !== selectedUserId\n\n  const isCsmOrMm = csmAndMmRoles.includes(profileUserRole)\n\n  const {\n    initialItems,\n    mappedItems,\n    requestAll,\n    participateAll,\n    mappedCount,\n    unMappedCount,\n  } = state[activeTab]\n\n  let requestCount = 0,\n    participateCount = 0\n\n  for (const [key, value] of mappedItems) {\n    const initialItem = initialItems.get(key)\n    requestAll === undefined &&\n      value.canRequest !== initialItem?.canRequest &&\n      requestCount++\n    requestAll !== undefined &&\n      value.canRequest !== requestAll &&\n      requestCount++\n    participateAll === undefined &&\n      value.canParticipate !== initialItem?.canParticipate &&\n      participateCount++\n    participateAll !== undefined &&\n      value.canParticipate !== participateAll &&\n      participateCount++\n  }\n\n  const data = items.map(item => {\n    const value = mappedItems.get(item.id)\n\n    return value\n      ? value\n      : {\n          ...item,\n          canRequest: requestAll ?? item.canRequest,\n          canParticipate: participateAll ?? item.canParticipate,\n        }\n  })\n\n  return (\n    <TableBuilder\n      data={data}\n      emptyMessage={\n        <EmptyMessage\n          isNoEngagementType={!mappedCount && !unMappedCount}\n          selectedLocation={selectedLocation}\n          activeTab={activeTab}\n        />\n      }\n      overrides={mappingTableOverrides}\n    >\n      <TableBuilderColumn>\n        {(row: MappingValue) => <Name key={row.id}>{row.name}</Name>}\n      </TableBuilderColumn>\n      <TableBuilderColumn\n        header={\n          <RequestAll\n            isEmpty={!items.length}\n            canEdit={canEdit && !isCsmOrMm}\n            requestAll={requestAll}\n            onChange={handleRequestAllChange}\n            modifiedRequestMappingCount={requestCount}\n          />\n        }\n      >\n        {(row: MappingValue) => (\n          <CanRequest\n            key={row.id}\n            checked={row.canRequest}\n            onChange={canRequest => handleCanRequestChange(row, canRequest)}\n            canEdit={canEdit && !isCsmOrMm}\n          />\n        )}\n      </TableBuilderColumn>\n      <TableBuilderColumn\n        header={\n          <ParticipateAll\n            isEmpty={!items.length}\n            canEdit={canEdit}\n            participateAll={participateAll}\n            onChange={handleParticipateAllChange}\n            modifiedParticipateMappingCount={participateCount}\n          />\n        }\n      >\n        {(row: MappingValue) => (\n          <CanParticipate\n            key={row.id}\n            checked={row.canParticipate}\n            canEdit={canEdit}\n            onChange={canParticipate =>\n              handleCanParticipateChange(row, canParticipate)\n            }\n          />\n        )}\n      </TableBuilderColumn>\n    </TableBuilder>\n  )\n}\n","import { VFC } from 'react'\nimport { useMutation } from 'react-query'\nimport { Pagination } from '@jifflenow/brightui/pagination'\nimport { engagementMappingPreferencesMutationFn } from 'rest'\nimport { usePageSizes } from 'utils/usePageSizes'\nimport { PaginationContainerProps } from './types'\nimport { PaginationWrapper } from './styled-components'\n\nexport const PAGE_SIZE = 10\n\nexport const PaginationContainer: VFC<PaginationContainerProps> = props => {\n  const { mutate: patch } = useMutation(\n    engagementMappingPreferencesMutationFn({\n      path: { eventName: props.location.attributes.systemName },\n      query: { location_uuid: props.location.id },\n    })\n  )\n\n  const pageSizes = usePageSizes(props.totalItems)\n\n  return (\n    <PaginationWrapper>\n      <Pagination\n        currentPageNumber={props.pageNumber}\n        currentPageSize={props.pageSize}\n        onPageNumberChange={props.onPageNumberChange}\n        onPageSizeChange={pageSize => {\n          props.onPageSizeChange(pageSize)\n          props.onPageNumberChange(1)\n          patch({ data: { [props.eventType]: { pageSize } } })\n        }}\n        pageSizes={pageSizes}\n        totalItems={props.totalItems}\n      />\n    </PaginationWrapper>\n  )\n}\n","import { useEffect, useState, VFC } from 'react'\nimport { useQuery } from 'react-query'\nimport { getEngagementPreferencesQueryFn, useUserMappingsQuery } from 'rest'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { ListLoader } from '../Common'\nimport { useEventName } from '../providers/EventNameProvider'\nimport { MappingTable } from './MappingTable'\nimport { PaginationContainer, PAGE_SIZE } from './PaginationContainer'\nimport { MappingsPageRoot } from './styled-components'\nimport {\n  EngagementRelationship,\n  EngagementTypeMappings,\n  MappingsPageProps,\n  MappingValue,\n  UserMappingResponse,\n} from './types'\n\nconst transformOption = ({\n  id,\n  attributes,\n  relationships,\n}: UserMappingResponse['data'][0]): MappingValue => {\n  const { canParticipate, canRequest } = attributes as EngagementTypeMappings\n  const {\n    displayName: name,\n  } = (relationships as EngagementRelationship).engagement.data.attributes\n\n  return {\n    name,\n    id,\n    canRequest: canRequest!,\n    canParticipate: canParticipate!,\n  }\n}\n\nconst mapItem = (item: MappingValue): [string, MappingValue] => [item.id, item]\n\nexport const MappingsPage: VFC<MappingsPageProps> = props => {\n  const {\n    search: search_term,\n    selectedLocation,\n    activeTab,\n    dispatch,\n    pageNumber,\n    setPageNumber,\n    user: { id: userId },\n  } = props\n  const {\n    id: location_uuid,\n    attributes: { systemName: eventName },\n  } = selectedLocation\n\n  const [pageSize, setPageSize] = useState(0)\n\n  useEffect(() => setPageNumber(1), [search_term, location_uuid, setPageNumber])\n\n  const eventType =\n    useEventName().eventType === 'Emeet' ? 'emeetInstances' : 'eventInstances'\n\n  useQuery(\n    [\n      'engagementMappingPreferences',\n      { path: { eventName }, query: { location_uuid } },\n    ],\n    getEngagementPreferencesQueryFn,\n    {\n      onSuccess: ({ data }) => {\n        setPageSize(data[eventType]?.pageSize ?? PAGE_SIZE)\n      },\n      onError: () => {\n        setPageSize(PAGE_SIZE)\n      },\n    }\n  )\n\n  const { data, isLoading, error, refetch } = useUserMappingsQuery(\n    {\n      path: { eventName, userId, mappingType: 'EngagementMapping' },\n      query: {\n        page: { number: pageNumber, size: pageSize },\n        search_term,\n        location_uuid,\n        mapped: activeTab === 'mapped',\n      },\n    },\n    {\n      enabled: pageSize > 0,\n      onSuccess: ({ data, meta }) => {\n        const { mapped, unmapped } = meta!\n\n        dispatch({\n          type: 'updateMapping',\n          payload: {\n            activeTab,\n            mappedCount: mapped.number,\n            unMappedCount: unmapped.number,\n            initialItems: new Map(data.map(transformOption).map(mapItem)),\n          },\n        })\n      },\n    }\n  )\n\n  if (isLoading || pageSize === 0) {\n    return <ListLoader />\n  }\n\n  if (error || !data) {\n    return <ErrorPage onButtonClick={() => refetch()} />\n  }\n\n  const items = data.data.map(transformOption)\n  const size = data.meta!.page.size!\n\n  return (\n    <MappingsPageRoot>\n      <MappingTable {...props} items={items} />\n      {!!items.length && size > PAGE_SIZE && (\n        <PaginationContainer\n          eventType={eventType}\n          location={selectedLocation}\n          onPageNumberChange={setPageNumber}\n          onPageSizeChange={setPageSize}\n          pageNumber={pageNumber}\n          pageSize={pageSize}\n          totalItems={size}\n        />\n      )}\n    </MappingsPageRoot>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const SettingsCount = styled(\n  'div',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.ParagraphXSmall,\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: colors.primary,\n    borderRadius: sizing.scale300,\n    color: colors.white,\n    marginRight: sizing.scale300,\n    paddingLeft: sizing.scale200,\n    paddingRight: sizing.scale200,\n  })\n)\n\nexport const ArrowContainer = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: sizing.scale200,\n}))\n\nexport const ContentContainer = styled(\n  'div',\n  ({ $theme: { sizing, colors } }) => ({\n    paddingTop: sizing.scale600,\n    paddingLeft: sizing.scale500,\n    paddingBottom: sizing.scale600,\n    paddingRight: sizing.scale500,\n    border: `1px solid ${colors.mono600}`,\n    borderRadius: '4px',\n    boxShadow: '0px 10px 20px rgba(216, 216, 216, 0.4)',\n  })\n)\n\nexport const SettingTypeContainer = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: sizing.scale300,\n}))\n\nexport const SettingsLabel = styled(\n  'p',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.ParagraphMedium,\n    marginBottom: 0,\n    marginTop: 0,\n    marginRight: sizing.scale900,\n  })\n)\n\nexport const SettingsHeader = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: sizing.scale600,\n}))\n","import { ChangeEvent, FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { SettingTypeContainer, SettingsLabel } from './styled-components'\nimport { DefaultMappingsSettings, ToggleSettingsProps } from './types'\n\nconst names = defineMessages<keyof DefaultMappingsSettings>({\n  defaultCanManage: {\n    defaultMessage: 'Manage all meeting types',\n    description: 'Default settings type',\n  },\n  defaultCanParticipate: {\n    defaultMessage: 'Can participate in all future created engagement types',\n    description: 'Default settings type',\n  },\n  defaultCanRequest: {\n    defaultMessage: 'Can request all future created engagement types',\n    description: 'Default settings Title',\n  },\n})\n\nexport const ToggleSettings: FC<ToggleSettingsProps> = ({\n  name,\n  disabled,\n  value,\n  onChange,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <SettingTypeContainer>\n      <SettingsLabel>{formatMessage(names[name])}</SettingsLabel>\n      <Toggle\n        checked={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) =>\n          onChange(name, e.target.checked)\n        }\n        disabled={disabled}\n      />\n    </SettingTypeContainer>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Button } from '@jifflenow/brightui/button'\nimport { DownArrow, Settings } from '@jifflenow/brightui/icon'\nimport { StatefulPopover, PLACEMENT } from '@jifflenow/brightui/popover'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useMe } from 'providers/MeProvider'\nimport {\n  useUserMappingsSettingsMutation,\n  useUserMappingsSettingsQuery,\n} from 'rest'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { DefaultMappingsProps, Role, Setting } from './types'\nimport { ToggleSettings } from './ToggleSettings'\nimport {\n  SettingsCount,\n  ArrowContainer,\n  ContentContainer,\n  SettingsHeader,\n} from './styled-components'\n\nconst messages = defineMessages({\n  title: {\n    defaultMessage: 'Map future engagement types',\n    description: 'Settings placeholder',\n  },\n  success: {\n    defaultMessage: 'Updated Successfully.',\n    description: 'Success message',\n  },\n  genericError: {\n    defaultMessage: 'Error Updating.',\n    description: 'Error message',\n  },\n})\n\nconst adminRoles: Role[] = ['CSM', 'MM', 'JMM']\nconst csmAndMmRoles: Role[] = ['CSM', 'MM']\n\nexport const DefaultMappings: VFC<DefaultMappingsProps> = ({\n  selectedLocation,\n  user,\n}) => {\n  const { formatMessage } = useIntl()\n  const {\n    id: loggedInUserId,\n    attributes: { role: companyRole, eventRole },\n  } = useMe().data\n  const {\n    id: selectedUserId,\n    attributes: { role: profileUserRole },\n  } = user\n\n  const {\n    id: location_uuid,\n    attributes: { systemName: eventName },\n  } = selectedLocation\n\n  const { data, refetch } = useUserMappingsSettingsQuery({\n    query: { location_uuid },\n    path: {\n      userId: selectedUserId,\n      mappingType: 'EngagementMapping',\n      eventName,\n    },\n  })\n\n  const setting = data?.data\n\n  const {\n    mutateAsync,\n    isLoading: isMutating,\n  } = useUserMappingsSettingsMutation({\n    path: {\n      eventName,\n      userId: selectedUserId,\n      mappingType: 'EngagementMapping',\n    },\n    query: { location_uuid },\n  })\n\n  const handleChange = async (name: Setting, value: boolean) => {\n    try {\n      await mutateAsync({ data: { ...setting!, [name]: value } })\n      refetch()\n      showSuccessToast(formatMessage(messages.success))\n    } catch (error) {\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  const canEdit =\n    (adminRoles.includes(companyRole) ||\n      (eventRole && adminRoles.includes(eventRole))) &&\n    loggedInUserId !== selectedUserId\n\n  const isCsmOrMm = csmAndMmRoles.includes(profileUserRole)\n\n  const Content = () =>\n    setting ? (\n      <ContentContainer>\n        <ToggleSettings\n          name=\"defaultCanRequest\"\n          value={setting.defaultCanRequest}\n          onChange={handleChange}\n          disabled={!canEdit || isCsmOrMm}\n        />\n        <ToggleSettings\n          name=\"defaultCanParticipate\"\n          value={setting.defaultCanParticipate}\n          onChange={handleChange}\n          disabled={!canEdit}\n        />\n      </ContentContainer>\n    ) : null\n\n  return (\n    <>\n      {isMutating && <ModalSpinner />}\n      <StatefulPopover\n        content={<Content />}\n        placement={PLACEMENT.bottomRight}\n        returnFocus\n        autoFocus\n      >\n        <Button kind=\"tertiary\">\n          {formatMessage(messages.title)}\n          <SettingsHeader>\n            <SettingsCount>2</SettingsCount>\n            <Settings size={15} />\n            <ArrowContainer>\n              <DownArrow size={10} />\n            </ArrowContainer>\n          </SettingsHeader>\n        </Button>\n      </StatefulPopover>\n    </>\n  )\n}\n","import { useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  Tabs as BaseTabs,\n  Tab as BaseTab,\n  TabTitle,\n  getTabOverrides,\n} from '@jifflenow/brightui/tabs-motion'\nimport { useMe } from 'providers/MeProvider'\nimport { components } from 'types/openapi'\nimport { tabOverrides, tabsOverrides } from './overrides'\nimport { MappingsPage } from './MappingsPage'\nimport { Tab, TabsProps } from './types'\nimport { MappingsSettingContainer, TabsRoot } from './styled-components'\nimport { DefaultMappings } from './DefaultMappingSettings'\n\ntype Role = components['schemas']['Role']\n\nconst messages = defineMessages({\n  mappedTabLabel: {\n    defaultMessage: 'Mapped \\u2022 {count, number}',\n    description: 'Tab title',\n  },\n  unMappedTabLabel: {\n    defaultMessage: 'Unmapped \\u2022 {count, number}',\n    description: 'Tab title',\n  },\n  noCampaignsListed: {\n    defaultMessage:\n      'No engagement types to show as you are not mapped to any campaigns yet.',\n    description: 'Empty Message',\n  },\n})\n\nconst adminRoles: Set<Role> = new Set(['CSM', 'MM', 'JMM'])\n\nexport const Tabs: VFC<TabsProps> = props => {\n  const { formatMessage } = useIntl()\n  const { role: companyRole, eventRole } = useMe().data.attributes\n  const [activeTab, setActiveTab] = useState<Tab>('mapped')\n  const [pageNumber, setPageNumber] = useState(1)\n  const { mappedCount, unMappedCount } = props.state[activeTab]\n\n  const handleTabChange = (tab: Tab) => {\n    setActiveTab(tab)\n    setPageNumber(1)\n  }\n\n  return (\n    <TabsRoot>\n      <BaseTabs\n        overrides={tabsOverrides}\n        activeKey={activeTab}\n        onChange={({ activeKey }) => handleTabChange(activeKey as Tab)}\n      >\n        <BaseTab\n          key=\"mapped\"\n          title={\n            <TabTitle>\n              {formatMessage(messages.mappedTabLabel, { count: mappedCount })}\n            </TabTitle>\n          }\n          overrides={getTabOverrides(tabOverrides)}\n        >\n          <MappingsPage\n            activeTab={activeTab}\n            pageNumber={pageNumber}\n            setPageNumber={setPageNumber}\n            {...props}\n          />\n        </BaseTab>\n        {(adminRoles.has(companyRole) ||\n          (eventRole && adminRoles.has(eventRole))) && (\n          <BaseTab\n            key=\"unmapped\"\n            title={\n              <TabTitle>\n                {formatMessage(messages.unMappedTabLabel, {\n                  count: unMappedCount,\n                })}\n              </TabTitle>\n            }\n            overrides={getTabOverrides(tabOverrides)}\n          >\n            <MappingsPage\n              activeTab={activeTab}\n              pageNumber={pageNumber}\n              setPageNumber={setPageNumber}\n              {...props}\n            />\n          </BaseTab>\n        )}\n      </BaseTabs>\n      <MappingsSettingContainer>\n        <DefaultMappings\n          selectedLocation={props.selectedLocation}\n          user={props.user}\n        />\n      </MappingsSettingContainer>\n    </TabsRoot>\n  )\n}\n","import { useReducer } from 'react'\nimport { Action, Mapping, State } from './types'\n\nconst DEFAULT_VALUE: Mapping = {\n  mappedCount: 0,\n  unMappedCount: 0,\n  requestAll: undefined,\n  participateAll: undefined,\n  mappedItems: new Map(),\n  initialItems: new Map(),\n}\n\nconst initialState: State = {\n  mapped: DEFAULT_VALUE,\n  unmapped: DEFAULT_VALUE,\n}\n\n// eslint-disable-next-line complexity\nconst reducer = (state: State, action: Action): State => {\n  const { type } = action\n\n  switch (type) {\n    case 'requestAll': {\n      const { activeTab, requestAll } = action.payload\n      const activeTabState = state[activeTab]\n      const { initialItems, mappedItems } = activeTabState\n\n      const mappedItemsCopy = new Map([...mappedItems])\n      for (const [key, value] of mappedItems) {\n        const initialValue = initialItems.get(key)\n        initialValue?.canParticipate === value.canParticipate\n          ? mappedItemsCopy.delete(key)\n          : mappedItemsCopy.set(key, {\n              ...value,\n              canRequest: requestAll,\n            })\n      }\n\n      return {\n        ...state,\n        [activeTab]: {\n          ...state[activeTab],\n          requestAll,\n          mappedItems: mappedItemsCopy,\n        },\n      }\n    }\n    case 'participateAll': {\n      const { activeTab, participateAll } = action.payload\n      const activeTabState = state[activeTab]\n      const { initialItems, mappedItems } = activeTabState\n\n      const mappedItemsCopy = new Map([...mappedItems])\n      for (const [key, value] of mappedItems) {\n        const initialValue = initialItems.get(key)\n        initialValue?.canRequest === value.canRequest\n          ? mappedItemsCopy.delete(key)\n          : mappedItemsCopy.set(key, {\n              ...value,\n              canParticipate: participateAll,\n            })\n      }\n\n      return {\n        ...state,\n        [activeTab]: {\n          ...state[activeTab],\n          participateAll,\n          mappedItems: mappedItemsCopy,\n        },\n      }\n    }\n    case 'updateMapping': {\n      const {\n        activeTab,\n        mappedCount,\n        unMappedCount,\n        initialItems,\n      } = action.payload\n      const activeTabState = state[activeTab]\n\n      return {\n        ...state,\n        [activeTab]: {\n          ...activeTabState,\n          mappedCount: mappedCount ?? activeTabState.mappedCount,\n          unMappedCount: unMappedCount ?? activeTabState.unMappedCount,\n          initialItems: initialItems\n            ? new Map([...activeTabState.initialItems, ...(initialItems ?? [])])\n            : activeTabState.initialItems,\n        },\n      }\n    }\n    case 'setCanRequest': {\n      const { activeTab, item } = action.payload\n      const activeTabState = state[activeTab]\n      const { initialItems, mappedItems, requestAll } = activeTabState\n\n      const mappedItemsCopy = new Map([...mappedItems])\n      const initialValue = initialItems.get(item.id)\n\n      initialValue?.canParticipate === item.canParticipate\n        ? requestAll === undefined\n          ? initialValue?.canRequest === item.canRequest\n            ? mappedItemsCopy.delete(item.id)\n            : mappedItemsCopy.set(item.id, item)\n          : requestAll === item.canRequest\n          ? mappedItemsCopy.delete(item.id)\n          : mappedItemsCopy.set(item.id, item)\n        : mappedItemsCopy.set(item.id, item)\n\n      return {\n        ...state,\n        [activeTab]: {\n          ...activeTabState,\n          mappedItems: mappedItemsCopy,\n        },\n      }\n    }\n    case 'setCanParticipate': {\n      const { activeTab, item } = action.payload\n      const activeTabState = state[activeTab]\n      const { initialItems, mappedItems, participateAll } = activeTabState\n\n      const mappedItemsCopy = new Map([...mappedItems])\n      const initialValue = initialItems.get(item.id)\n\n      initialValue?.canRequest === item.canRequest\n        ? participateAll === undefined\n          ? initialValue?.canParticipate === item.canParticipate\n            ? mappedItemsCopy.delete(item.id)\n            : mappedItemsCopy.set(item.id, item)\n          : participateAll === item.canParticipate\n          ? mappedItemsCopy.delete(item.id)\n          : mappedItemsCopy.set(item.id, item)\n        : mappedItemsCopy.set(item.id, item)\n\n      return {\n        ...state,\n        [activeTab]: {\n          ...activeTabState,\n          mappedItems: mappedItemsCopy,\n        },\n      }\n    }\n    case 'resetValues': {\n      return initialState\n    }\n    case 'discardChanges': {\n      const { mapped, unmapped } = state\n\n      return {\n        mapped: {\n          ...mapped,\n          requestAll: undefined,\n          participateAll: undefined,\n          mappedItems: new Map(),\n        },\n        unmapped: {\n          ...unmapped,\n          requestAll: undefined,\n          participateAll: undefined,\n          mappedItems: new Map(),\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport const useEngagementTypes = () => useReducer(reducer, initialState)\n","import { useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useDebounce } from 'utils/debounce'\nimport {\n  CampaignFilterV2,\n  EventTypesFilterV2,\n  FilterContainer,\n  Search,\n  SearchContainer,\n  TitleContainer,\n} from '../Common'\nimport { EventSelectLabel } from '../Common/EventSelectLabel'\nimport { useEventName } from '../providers/EventNameProvider'\nimport { EngagementTypesFooter } from './EngagementTypesFooter'\nimport { Container } from './styled-components'\nimport { Tabs } from './Tabs'\nimport { EngagementTypesViewProps, EventType, Location } from './types'\nimport { useEngagementTypes } from './useEngagementTypes'\n\nconst messages = defineMessages({\n  title: {\n    defaultMessage: 'Engagements Types for',\n    description: 'Page title',\n  },\n})\n\nexport const EngagementTypesView: VFC<EngagementTypesViewProps> = ({\n  onNavigate,\n  isLoading,\n  eventTypes,\n  selectedEventTypes,\n  setSelectedEventTypes,\n  locations,\n  selectedLocations,\n  setSelectedLocations,\n  user,\n}) => {\n  const { formatMessage } = useIntl()\n  const eventType = useEventName().eventType\n  const [search, setSearch] = useState('')\n  const location = new URLSearchParams(window.location.search).get('location')\n  const searchText = useDebounce(search)\n  const [state, dispatch] = useEngagementTypes()\n\n  const handleEventTypeOnChange = (eventTypes: EventType[]) => {\n    dispatch({ type: 'resetValues' })\n    setSelectedEventTypes(eventTypes)\n  }\n\n  const handleLocationOnChange = (locations: Location[]) => {\n    dispatch({ type: 'resetValues' })\n    setSelectedLocations(locations)\n  }\n\n  useEffect(() => {\n    dispatch({ type: 'resetValues' })\n  }, [dispatch, searchText, selectedEventTypes])\n\n  return (\n    <>\n      <Container>\n        <TitleContainer>\n          <EventSelectLabel title={formatMessage(messages.title)} />\n          {!location && (\n            <>\n              <FilterContainer>\n                {eventType !== 'Emeet' && (\n                  <EventTypesFilterV2\n                    eventTypes={eventTypes}\n                    selectedEventTypes={selectedEventTypes}\n                    onChange={handleEventTypeOnChange}\n                  />\n                )}\n                <CampaignFilterV2\n                  locations={locations}\n                  selectedLocations={selectedLocations}\n                  onChange={handleLocationOnChange}\n                />\n              </FilterContainer>\n              <SearchContainer>\n                <Search search={search} onSearchChange={setSearch} />\n              </SearchContainer>\n            </>\n          )}\n        </TitleContainer>\n        <Tabs\n          search={searchText}\n          state={state}\n          selectedLocation={selectedLocations[0]}\n          dispatch={dispatch}\n          user={user}\n        />\n      </Container>\n      {!isLoading && !!selectedLocations.length && (\n        <EngagementTypesFooter\n          user={user}\n          search={searchText}\n          state={state}\n          selectedLocation={selectedLocations[0]}\n          onNavigate={onNavigate}\n          dispatch={dispatch}\n        />\n      )}\n    </>\n  )\n}\n","import { useState, VFC } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useEventUser } from 'rest'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { ListLoader } from '../Common'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { EngagementTypesView } from './EngagementTypesView'\nimport { PageContainer } from './styled-components'\nimport { EngagementTypesLocationViewProps, Location } from './types'\n\nexport const EngagementTypesLocationView: VFC<EngagementTypesLocationViewProps> = props => {\n  const { locations } = props\n  const userId = useProfileUser().id\n  const defaultLocation = new URLSearchParams(useLocation().search).get(\n    'location'\n  )\n\n  const [selectedLocations, setSelectedLocations] = useState<Location[]>([\n    (defaultLocation && locations.find(({ id }) => id === defaultLocation)) ||\n      locations[0],\n  ])\n\n  const {\n    id: location_uuid,\n    attributes: { systemName: subSystem },\n  } = selectedLocations[0]\n\n  const { isLoading, isError, refetch, data } = useEventUser({\n    path: { subSystem, userId },\n    query: { location_uuid },\n  })\n\n  if (isLoading) {\n    return (\n      <PageContainer>\n        <ListLoader />\n      </PageContainer>\n    )\n  }\n\n  if (isError || !data) {\n    return (\n      <PageContainer>\n        <ErrorPage onButtonClick={() => refetch()} />\n      </PageContainer>\n    )\n  }\n\n  return (\n    <EngagementTypesView\n      {...props}\n      selectedLocations={selectedLocations}\n      setSelectedLocations={setSelectedLocations}\n      user={data.data}\n    />\n  )\n}\n","import { FC, VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport {\n  Body,\n  Header,\n  ListLoader,\n  Root as StyledRoot,\n  useEventTypeAndLocation,\n} from '../Common'\nimport { useEventName } from '../providers/EventNameProvider'\nimport { EngagementTypesProps } from './types'\nimport {\n  Container,\n  NoLocationsMessage,\n  NoLocationsMessageRoot,\n  PageContainer,\n} from './styled-components'\nimport { EngagementTypesLocationView } from './EngagementTypesLocationView'\n\nconst NoEngagements = () => {\n  const eventType = useEventName().eventType\n\n  return (\n    <PageContainer>\n      <NoLocationsMessageRoot>\n        <NoLocationsMessage>\n          {eventType === 'Emeet' ? (\n            <FormattedMessage\n              defaultMessage=\"No engagement types to show as you are not mapped to any eMeet yet.\"\n              description=\"Empty Message\"\n            />\n          ) : (\n            <FormattedMessage\n              defaultMessage=\"No engagement types to show as you are not mapped to any campaigns yet.\"\n              description=\"Empty Message\"\n            />\n          )}\n        </NoLocationsMessage>\n      </NoLocationsMessageRoot>\n    </PageContainer>\n  )\n}\n\nconst Root: FC = ({ children }) => (\n  <StyledRoot>\n    <Header />\n    <Body>{children}</Body>\n  </StyledRoot>\n)\n\nexport const EngagementTypes: VFC<EngagementTypesProps> = props => {\n  const { isError, refetch, ...restProps } = useEventTypeAndLocation()\n\n  if (restProps.isLoading && !restProps.locations.length) {\n    return (\n      <Root>\n        <Container>\n          <ListLoader />\n        </Container>\n      </Root>\n    )\n  }\n\n  if (isError) {\n    return (\n      <Root>\n        <PageContainer>\n          <ErrorPage onButtonClick={() => refetch()} />\n        </PageContainer>\n      </Root>\n    )\n  }\n\n  return (\n    <Root>\n      {restProps.locations.length ? (\n        <EngagementTypesLocationView {...restProps} {...props} />\n      ) : (\n        <NoEngagements />\n      )}\n    </Root>\n  )\n}\n","import { components } from 'types/openapi'\nimport { FormFieldProps, Conditions, FieldCondition } from './types'\n\ntype Role = components['schemas']['Role']\n\nexport const resolveFieldRules = ({\n  rules,\n  value,\n  role,\n}: {\n  value: string\n  rules: { conditions: Conditions[]; name: string; type: string }\n  role: Role\n}) => {\n  const { name, conditions, type } = rules\n  const conditionResult: FieldCondition = {\n    name,\n    show: false,\n    optionsToShow: [],\n  }\n  conditions.forEach((condition: Conditions) => {\n    const {\n      action,\n      operator,\n      valuesToCompare,\n      valuesToDisplay,\n      roleNamesToCheck = [],\n    } = condition\n\n    const valueMatched =\n      type === 'role'\n        ? roleNamesToCheck?.includes(role)\n        : valuesToCompare.includes(value)\n    const resolveOperator = operator === 'is' ? valueMatched : !valueMatched\n    if (resolveOperator && action === 'show') {\n      conditionResult.show = true\n      conditionResult.optionsToShow = valuesToDisplay\n    }\n  })\n  return conditionResult\n}\n\nexport const processRulesOnFieldsMount = (\n  fields: FormFieldProps[],\n  values: Record<string, any>,\n  role: Role\n) =>\n  fields.filter(({ name, rules }) => {\n    if (rules?.length && rules[0].source && rules[0].conditions.length) {\n      const [{ source, conditions, type }] = rules\n\n      return resolveFieldRules({\n        value: values?.[source.split('.')[1]] ?? '',\n        rules: { conditions, name, type },\n        role,\n      }).show\n    }\n\n    return true\n  })\n","import { useState, useMemo } from 'react'\nimport { useForm, useFormState } from 'react-final-form'\nimport { Value } from '@jifflenow/brightui/select'\nimport { useMe } from 'providers/MeProvider'\nimport { components } from 'types/openapi'\nimport {\n  FormFieldProps,\n  SelectFieldProps,\n  Validations,\n  SourceBasedRules,\n  FieldCondition,\n} from './types'\nimport { processRulesOnFieldsMount, resolveFieldRules } from './utils'\n\ntype HandleRules = { name: string; value: Value }\ntype Role = components['schemas']['Role']\n\nconst filterFieldsWithRules = (fields: FormFieldProps[]) =>\n  fields\n    .filter(\n      field =>\n        field.rules?.length &&\n        field.rules[0].source &&\n        field.rules[0].conditions.length\n    )\n    .map(({ name, rules }) => ({\n      name,\n      source: rules![0].source,\n      conditions: rules![0].conditions,\n      type: rules![0].type,\n    }))\n\nconst getSourceBasedRulesObject = (filteredFields: SourceBasedRules[]) =>\n  filteredFields.reduce((prev, curr) => {\n    prev[curr.source] = prev[curr.source] || []\n    prev[curr.source].push(curr)\n    return prev\n  }, {} as { [key: string]: SourceBasedRules[] })\n\nconst getRulesActionObject = ({\n  value,\n  rulesList,\n  sourceBasedRulesObject,\n  role,\n}: {\n  value: string\n  rulesList: SourceBasedRules[]\n  sourceBasedRulesObject: { [key: string]: SourceBasedRules[] }\n  role: Role\n}): { [key: string]: FieldCondition } => {\n  const hideAllDependentFields = (\n    fields: { [key: string]: FieldCondition },\n    { name }: SourceBasedRules\n  ) => {\n    fields[name] = { name, show: false, optionsToShow: [] }\n    return fields\n  }\n  const getNestedDependentFields = (\n    fields: SourceBasedRules[],\n    field: SourceBasedRules\n  ) => {\n    let allFields = [...fields, field]\n    if (sourceBasedRulesObject[field.name]) {\n      allFields = sourceBasedRulesObject[field.name].reduce(\n        getNestedDependentFields,\n        allFields\n      )\n    }\n\n    return allFields\n  }\n\n  const targetFieldsActionHash = rulesList\n    .map(rules => resolveFieldRules({ rules, value, role }))\n    .reduce((prev, curr) => ({ ...prev, [curr.name]: curr }), {})\n\n  return Object.keys(targetFieldsActionHash)\n    .filter(name => sourceBasedRulesObject[name])\n    .flatMap(name => sourceBasedRulesObject[name])\n    .reduce(getNestedDependentFields, [])\n    .reduce(hideAllDependentFields, targetFieldsActionHash)\n}\n\nexport const useRules = (formFields: FormFieldProps[]) => {\n  // TODO: Set values.customFields type via FormValues generics\n  const { values } = useFormState()\n  const {\n    attributes: { role },\n  } = useMe().data\n\n  const initialFields = processRulesOnFieldsMount(\n    formFields,\n    values.customFields,\n    role\n  )\n  const [fields, setFields] = useState(initialFields)\n  const { change, getFieldState } = useForm()\n\n  const sourceBasedRulesObject = useMemo(\n    () => getSourceBasedRulesObject(filterFieldsWithRules(formFields)),\n    [formFields]\n  )\n\n  const handleRules = ({ value, name: sourceName }: HandleRules) => {\n    const rulesList = sourceBasedRulesObject[sourceName] || []\n\n    // Return, if there are no rules based-on the current dropdown source\n    if (!rulesList.length) {\n      return\n    }\n    // Collect rules action on all the nested dependent fields of the current source\n    const rulesActionObject = getRulesActionObject({\n      rulesList,\n      sourceBasedRulesObject,\n      value: value[0]?.id as string,\n      role,\n    })\n\n    // Filter the previous rendered rule based fields and reset their form values\n    formFields\n      .filter(\n        ({ name }) =>\n          rulesActionObject[name] &&\n          !rulesActionObject[name].show &&\n          getFieldState(name)\n      )\n      .forEach(({ name }) => change(name, ''))\n\n    // Filter fields to render based on selected value of current source\n    const fieldsToShow = formFields\n      .filter(({ name }) => {\n        if (name === sourceName) {\n          return true\n        } else if (rulesActionObject[name]) {\n          return rulesActionObject[name].show\n        } else {\n          return fields.findIndex(({ name: fName }) => fName === name) >= 0\n        }\n      })\n      .map(\n        (\n          field: Omit<SelectFieldProps, 'validations'> & {\n            validations?: Validations\n          }\n        ) => {\n          const { options, name } = field\n          field.options = rulesActionObject[name]?.optionsToShow || options\n          return field\n        }\n      )\n\n    setFields(fieldsToShow)\n  }\n\n  return { fields, handleRules }\n}\n","import { FC } from 'react'\nimport { Input } from '@jifflenow/brightui/input'\nimport { Field, Validation } from 'ui-components/Field'\nimport { TextFieldProps } from '../types'\nimport { FormControl } from './styled-components'\n\nexport const TextField: FC<TextFieldProps> = props => {\n  const { name, type, placeholder, label, disabled } = props\n\n  return (\n    <Field<string | number>\n      name={name}\n      validations={\n        type === 'email'\n          ? [...props.validations, Validation.EMAIL]\n          : props.validations\n      }\n      // Without below identify fn, If you change a form value to '', Final Form will set the value in its state to undefined.\n      // More Info here : https://github.com/final-form/final-form/blob/main/docs/faq.md#why-does--final-form-set-my--field-value-to-undefined\n      // and here : https://github.com/final-form/react-final-form/issues/130#issuecomment-425482365\n      // TODO: Fix needed for custom field dirty check. i.e For a new custom field, if user enters a value and deletes, the form remains dirty.\n      parse={value => value}\n      render={({ input, meta }) => (\n        <FormControl label={label} error={meta.touched && meta.error}>\n          <Input\n            {...input}\n            id={name}\n            type={type}\n            placeholder={placeholder}\n            disabled={disabled}\n          />\n        </FormControl>\n      )}\n    />\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const TextareaLoader = () => {\n  const [css, theme] = useStyletron()\n  const rootStyle = {\n    marginBottom: theme.sizing.scale800,\n    width: '100%',\n    maxHeight: '102px',\n    marginLeft: theme.sizing.scale300,\n    marginRight: theme.sizing.scale300,\n    [theme.breakpoints.small]: {\n      maxWidth: '208px',\n    },\n  }\n  const contentLoaderOptions = {\n    className: css(rootStyle),\n    height: 102,\n    width: 208,\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader {...contentLoaderOptions} ariaLabel=\"\">\n      <rect y=\"0\" width=\"208\" height=\"102\" />\n    </ContentLoader>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Container = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n})\n","import { Button } from '@jifflenow/brightui/button'\nimport { FormattedMessage } from 'react-intl'\nimport { ErrorIcon } from 'ui-components/icons/ErrorIcon'\nimport { Container } from './styled-components'\n\nexport const TextareaError = () => (\n  <Container>\n    <ErrorIcon size=\"128px\" />\n    <Button\n      onClick={() => {\n        window.location.reload()\n      }}\n    >\n      <FormattedMessage\n        defaultMessage=\"Reload Page\"\n        description=\"Button label\"\n      />\n    </Button>\n  </Container>\n)\n","import { FC } from 'react'\nimport { useCKEditor } from '@jifflenow/ckeditor'\nimport { Field } from 'ui-components/Field'\nimport { FieldRenderProps } from 'react-final-form'\nimport { TextFieldProps } from '../../types'\nimport { FormControl } from '../styled-components'\nimport { TextareaLoader } from './TextareaLoader'\nimport { TextareaError } from './TextareaError'\n\ninterface TextAreaProps extends FieldRenderProps<string, HTMLElement> {\n  placeholder?: string\n  disabled?: boolean\n}\n\nconst ckeditorConfig = {\n  resize_enabled: false,\n  language: 'en',\n}\n\nconst TextArea: FC<TextAreaProps> = props => {\n  const {\n    placeholder,\n    disabled,\n    input: { name, value, onChange, onFocus, onBlur },\n    meta: { touched, error, active },\n  } = props\n\n  const { showLoader, setElement, editorStyle, ckeditorError } = useCKEditor({\n    placeholder,\n    input: { name, value, onChange, onFocus, onBlur },\n    meta: { touched, error, active },\n    config: { ...ckeditorConfig, readOnly: disabled },\n  })\n\n  return !ckeditorError ? (\n    <>\n      <div id={name} ref={setElement} style={editorStyle} />\n      {showLoader && <TextareaLoader />}\n    </>\n  ) : (\n    <TextareaError />\n  )\n}\n\nexport const TextAreaField: FC<TextFieldProps> = props => {\n  const { name, placeholder, label, validations, disabled } = props\n\n  return (\n    <Field<string>\n      name={name}\n      validations={validations}\n      render={({ input, meta }) => (\n        <FormControl label={label} error={meta.touched && meta.error}>\n          <TextArea\n            input={input}\n            meta={meta}\n            disabled={disabled}\n            placeholder={placeholder}\n          />\n        </FormControl>\n      )}\n    />\n  )\n}\n","import { FC } from 'react'\nimport { Value } from '@jifflenow/brightui/select'\nimport { Validation as FieldValidation } from 'ui-components/Field'\nimport { components } from 'types/openapi'\nimport { FieldTypes } from './FormFields'\n\nexport type CustomFormFieldsProps = {\n  fields: FormFieldProps[]\n}\n\nexport type FieldTypeToFormFieldMappings = {\n  [FieldTypes.TEXTFIELD]: FC<TextFieldProps>\n  [FieldTypes.TEXTAREA]: FC<TextFieldProps>\n  [FieldTypes.NUMBERFIELD]: FC<TextFieldProps>\n  [FieldTypes.CHECKBOX]: FC<CheckboxFieldProps>\n  [FieldTypes.DROPDOWN]: FC<SelectFieldProps>\n  [FieldTypes.MULTISELECT_DROPDOWN]: FC<MultiSelectFieldProps>\n  [FieldTypes.HEADER]: FC<CustomHeaderProps>\n  [FieldTypes.PAGE_BREAK]: FC<CustomHeaderProps>\n}\n\nexport enum InputType {\n  TEXT = 'text',\n  NUMBER = 'number',\n  EMAIL = 'email',\n  HIDDEN = 'hidden',\n}\n\nexport interface FormFieldProps {\n  name: string\n  label: string\n  type?: InputType\n  fieldType: FieldTypes\n  helpText?: string\n  hidden?: boolean\n  disabled?: boolean\n  rules?: Rules[]\n  validations?: Validations\n}\n\ninterface FieldProps extends Omit<FormFieldProps, 'validations'> {\n  validations: FieldValidation[]\n}\n\nexport interface TextFieldProps extends FieldProps {\n  placeholder?: string\n  value?: string\n}\n\nexport interface CheckboxFieldProps extends FieldProps {\n  checked?: boolean\n}\n\nexport interface SelectFieldProps extends FieldProps {\n  creatable?: boolean\n  clearable?: boolean\n  options?: string[]\n  value?: string\n  handleRules?: (args: { name: string; value: Value }) => void\n}\n\nexport interface MultiSelectFieldProps\n  extends Omit<SelectFieldProps, 'handleRules' | 'value'> {\n  value?: string[]\n  multi?: boolean\n}\n\nexport interface FieldCondition {\n  name: string\n  show: boolean\n  optionsToShow: string[]\n}\n\ntype Roles = components['schemas']['Role']\nexport interface Conditions {\n  action: 'show' | 'hide'\n  operator: 'is' | 'is_not'\n  valuesToCompare: string[]\n  valuesToDisplay: string[]\n  roleNamesToCheck?: Roles[]\n}\n\nexport interface Rules {\n  conditions: Conditions[]\n  source: string\n  type: string\n}\n\nexport interface SourceBasedRules {\n  name: string\n  source: string\n  conditions: Conditions[]\n  type: string\n}\n\nexport interface Validations {\n  required: boolean\n  minLength?: number\n  maxLength?: number\n  email?: boolean\n}\n\nexport interface CustomHeaderProps extends Pick<FormFieldProps, 'hidden'> {\n  label?: string\n}\n","import { FC } from 'react'\nimport { Select, OnChangeParams } from '@jifflenow/brightui/select'\nimport { Field, Validation } from 'ui-components/Field'\nimport { SelectFieldProps } from '../types'\nimport { FormControl } from './styled-components'\n\nexport const SelectField: FC<SelectFieldProps> = props => {\n  const {\n    name,\n    label,\n    options,\n    disabled,\n    creatable,\n    clearable,\n    handleRules,\n    validations,\n    helpText,\n  } = props\n\n  return (\n    <Field<(string | number | undefined)[] | undefined>\n      name={name}\n      validations={validations}\n      parse={value => value[0]?.id}\n      format={value => (value ? [{ id: value, label: value }] : [])}\n      render={({ input, meta }) => (\n        <FormControl\n          label={label}\n          error={meta.touched && meta.error}\n          caption={helpText}\n        >\n          <Select\n            {...input}\n            id={name}\n            required={validations.includes(Validation.REQUIRED)}\n            searchable\n            creatable={creatable}\n            clearable={clearable}\n            disabled={disabled}\n            backspaceClearsInputValue\n            onCloseResetsInput={false}\n            onBlurResetsInput={false}\n            options={options?.map(option =>\n              typeof option === 'object'\n                ? option\n                : { id: option, label: option }\n            )}\n            onChange={({ value }: OnChangeParams) => {\n              input.onChange(value)\n              handleRules?.({ name, value })\n            }}\n          />\n        </FormControl>\n      )}\n    />\n  )\n}\n","import { FC, useState, ChangeEvent } from 'react'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { Paragraph1 } from '@jifflenow/brightui/typography'\nimport { Field } from 'ui-components/Field'\nimport { CheckboxFieldProps } from '../types'\nimport { FormControl } from './styled-components'\n\nexport const CheckboxField: FC<CheckboxFieldProps> = props => {\n  const { name, type, label, validations, checked } = props\n  const [isChecked, setIsChecked] = useState(checked)\n\n  return (\n    <Field<string>\n      name={name}\n      validations={validations}\n      render={({ input, meta }) => (\n        <FormControl error={meta.touched && meta.error}>\n          <Checkbox\n            {...input}\n            id={name}\n            type={type}\n            checked={isChecked}\n            onChange={({ target }: ChangeEvent<HTMLInputElement>) => {\n              setIsChecked(target.checked)\n              input.onChange(target.checked)\n            }}\n          >\n            <Paragraph1\n              color=\"inherit\"\n              className=\"anchor-primary\"\n              // @ts-expect-error\n              dangerouslySetInnerHTML={{ __html: label }}\n            />\n          </Checkbox>\n        </FormControl>\n      )}\n    />\n  )\n}\n","import { FC } from 'react'\nimport { Select, OnChangeParams, Option } from '@jifflenow/brightui/select'\nimport { Field, Validation } from 'ui-components/Field'\nimport { MultiSelectFieldProps } from '../types'\nimport { FormControl } from './styled-components'\n\nexport const MultiSelectField: FC<MultiSelectFieldProps> = props => {\n  const {\n    name,\n    label,\n    options,\n    creatable,\n    clearable,\n    validations,\n    disabled,\n  } = props\n\n  return (\n    <Field<(string | number | undefined)[] | undefined>\n      name={name}\n      validations={validations}\n      parse={(value: Option[]) => value.map(({ id }: Option) => id)}\n      format={value =>\n        value ? value.map(val => ({ id: val, label: val })) : []\n      }\n      render={({ input, meta }) => (\n        <FormControl label={label} error={meta.touched && meta.error}>\n          <Select\n            {...input}\n            multi\n            id={name}\n            required={validations.includes(Validation.REQUIRED)}\n            searchable\n            disabled={disabled}\n            creatable={creatable}\n            clearable={clearable}\n            backspaceClearsInputValue\n            onCloseResetsInput={false}\n            onBlurResetsInput={false}\n            options={options?.map(option => ({ id: option, label: option }))}\n            onChange={({ value }: OnChangeParams) => {\n              input.onChange(value)\n            }}\n          />\n        </FormControl>\n      )}\n    />\n  )\n}\n","import { CustomHeaderProps } from '../types'\nimport { StyledHeader, StyledPageBreak, Hr } from './styled-components'\n\nexport const Header = (props: CustomHeaderProps) => (\n  <StyledHeader\n    $isHidden={props.hidden}\n    dangerouslySetInnerHTML={{ __html: props.label ?? '' }}\n  />\n)\n\nexport const PageBreak = (props: CustomHeaderProps) => (\n  <>\n    <Hr $isHidden={props.hidden} />\n    <StyledPageBreak $isHidden={props.hidden}>{props.label}</StyledPageBreak>\n  </>\n)\n","import { FC } from 'react'\nimport { Validation } from 'ui-components/Field'\nimport { useRules } from './rules'\nimport { fieldTypesMappings } from './FormFields'\nimport { CustomFormFieldsProps, FormFieldProps } from './types'\n\nexport const CustomFormFields: FC<CustomFormFieldsProps> = ({\n  fields: fieldsList,\n}) => {\n  const [standardFields, customFields] = fieldsList.reduce(\n    (acc, curr) => {\n      curr.name.indexOf('customFields.') === 0\n        ? acc[1].push(curr)\n        : acc[0].push(curr)\n      return acc\n    },\n    [[] as FormFieldProps[], [] as FormFieldProps[]]\n  )\n  const { fields: filteredCustomFields, handleRules } = useRules(customFields)\n\n  return (\n    <>\n      {[...standardFields, ...filteredCustomFields].map(\n        (field: FormFieldProps, index) => {\n          const FormField = fieldTypesMappings[field.fieldType]\n          const { required, email } = field.validations ?? {}\n          const validations = [\n            required && Validation.REQUIRED,\n            email && Validation.EMAIL,\n          ].filter(Boolean) as Validation[]\n\n          return (\n            <FormField\n              {...field}\n              key={index}\n              validations={validations}\n              {...(field.fieldType === 'dropdown' ? { handleRules } : null)}\n            />\n          )\n        }\n      )}\n    </>\n  )\n}\n","import { components } from 'types/openapi'\n\nexport type ProfileProps = {\n  onNavigate: () => void\n}\n\ntype UserAttributes = components['schemas']['UserAttributes']\n\nexport const standardFieldsToDisplay: (keyof UserAttributes)[] = [\n  'firstName',\n  'lastName',\n  'email',\n  'phone',\n  'secondaryEmails',\n  'title',\n  'company',\n]\n\nexport type UserStandardFormFieldInfo = components['schemas']['UserStandardFormFieldInfo']\n\nexport type Role = components['schemas']['Role']\n","export enum Message {\n  RELOAD_ME = 'reloadMe',\n  CLOSE_PROFILE = 'closeProfile',\n}\n\nexport const sendMessage = (message: Message) => {\n  window.Office?.context.ui.messageParent(message)\n}\n","import { components } from 'types/openapi'\nimport { FieldTypes } from 'components/CustomFormFields'\nimport { Rules, InputType, FormFieldProps } from 'components/CustomFormFields'\nimport { TransformFieldProps } from './types'\n\ntype UserAttributes = components['schemas']['UserAttributes']\ntype UserCustomFormFieldInfo = components['schemas']['CustomFormFieldInfo']\ntype UserStandardFormFieldInfo = components['schemas']['UserStandardFormFieldInfo']\n\ntype TransformField = (props: TransformFieldProps) => FormFieldProps\n\ntype StandardFields = Omit<UserAttributes, 'customFields' | 'active'>\n\nconst inputFieldTypes: { [key: string]: InputType } = {\n  textfield: InputType.TEXT,\n  numberfield: InputType.NUMBER,\n  email: InputType.EMAIL,\n}\n\nconst getCustomFieldName = (name: string) => `customFields.${name}`\n\nexport const transformField: TransformField = props => {\n  const { user, field } = props\n  const { type } = field\n  const { fieldName, displayName, fieldInfo } = field.attributes\n  const isACustomField =\n    type === 'InternalUserCustomForm' || type === 'ExternalUserCustomForm'\n  const {\n    helpText,\n    placeholder,\n    show,\n    mandatory,\n  } = fieldInfo as UserStandardFormFieldInfo\n  const {\n    disabled,\n    hidden,\n    label,\n    rules_with_values: rulesWithValues = [],\n    values,\n    widget = 'textfield',\n    required,\n  } = fieldInfo as UserCustomFormFieldInfo\n\n  return {\n    disabled: !isACustomField && fieldName === 'email' ? true : disabled,\n    fieldType: widget as FieldTypes,\n    helpText,\n    hidden: hidden || show,\n    name: isACustomField ? getCustomFieldName(fieldName) : fieldName,\n    label: displayName || label,\n    placeholder,\n    rules: rulesWithValues.map(({ conditions = [], source, ...rest }) => ({\n      ...rest,\n      source: getCustomFieldName(source),\n      conditions: conditions.map(\n        ({\n          values_to_display: valuesToDisplay,\n          values_to_check: valuesToCompare,\n          role_names_to_check: roleNamesToCheck,\n          ...rest\n        }) => ({ ...rest, valuesToCompare, valuesToDisplay, roleNamesToCheck })\n      ),\n    })) as Rules[],\n    options: values as string[],\n    type: inputFieldTypes[fieldName === 'email' ? 'email' : widget],\n    validations: { required: Boolean(required || mandatory) },\n    value:\n      user[fieldName as keyof StandardFields] ||\n      user?.customFields?.[fieldName],\n    ...(widget === 'multiselect_dropdown' ? { multi: true } : null),\n    ...(widget === 'checkbox' ? { checked: values === 'yes' } : null),\n  }\n}\n","import { styled } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\n\nexport const FooterButton = styled(\n  Button,\n  ({ $theme: { sizing, mediaQuery } }) => ({\n    minWidth: '80px',\n    marginRight: sizing.scale400,\n    [mediaQuery.small]: {\n      minWidth: '133px',\n    },\n  })\n)\n\nexport const ConfirmationMessage = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.Paragraph1,\n    marginBottom: sizing.scale400,\n  })\n)\n\nexport const Note = styled('div', ({ $theme: { typography, colors } }) => ({\n  ...typography.Paragraph2,\n  fontWeight: 600,\n  color: colors.black,\n}))\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\nimport { ModalOverrides } from '@jifflenow/brightui/modal'\n\nexport const buttonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale300,\n    }),\n  },\n}\n\nexport const modalOverrides: ModalOverrides = {\n  Root: { style: { zIndex: 1 } },\n}\n","import { VFC } from 'react'\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  SIZE,\n} from '@jifflenow/brightui/modal'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { FormattedMessage } from 'react-intl'\nimport { ConfirmationMessage, FooterButton, Note } from './styled-components'\nimport { RoleChangeDialogProps } from './types'\nimport { buttonOverrides, modalOverrides } from './overrides'\n\nexport const RoleChangeDialog: VFC<RoleChangeDialogProps> = ({\n  pendoName = 'confirmation-dialog',\n  onClose,\n  onCancel,\n  onSuccess,\n  showMessage,\n  showNote,\n}) => (\n  <Modal\n    size={SIZE.medium}\n    overrides={modalOverrides}\n    closeable={false}\n    onClose={onClose}\n    isOpen\n  >\n    <ModalHeader>\n      <FormattedMessage\n        defaultMessage=\"Are you sure?\"\n        description=\"Conformation Text\"\n      />\n    </ModalHeader>\n    <ModalBody>\n      {showMessage && (\n        <ConfirmationMessage>\n          <FormattedMessage\n            defaultMessage=\"This user has one or more other user accounts mapped to them. Updating their role will undo this mapping.\"\n            description=\"Modal Body Text\"\n          />\n        </ConfirmationMessage>\n      )}\n      {showNote && (\n        <Note>\n          <FormattedMessage\n            defaultMessage=\"Please review the mapped engagement types, topics (if enabled) and respective settings after role update.\"\n            description=\"Modal Body Text\"\n          />\n        </Note>\n      )}\n    </ModalBody>\n    <ModalFooter>\n      <FooterButton\n        type=\"button\"\n        overrides={buttonOverrides}\n        onClick={onCancel}\n        data-pendo={`${pendoName}/cancel`}\n        kind={KIND.tertiary}\n      >\n        <FormattedMessage defaultMessage=\"No\" description=\"Button label\" />\n      </FooterButton>\n\n      <FooterButton\n        type=\"button\"\n        overrides={buttonOverrides}\n        onClick={onSuccess}\n        data-pendo={`${pendoName}/submit`}\n      >\n        <FormattedMessage defaultMessage=\"Yes\" description=\"Button label\" />\n      </FooterButton>\n    </ModalFooter>\n  </Modal>\n)\n","import { useEventInfo } from '../providers/EventInfoProvider'\nimport { useEventName } from '../providers/EventNameProvider'\nimport { useCampaign } from './CampaignFilter'\nimport { subTypeToEventTypeMapping } from './constants'\nimport { EventType } from './types'\n\nexport const useEventType = () => {\n  const { campaign } = useCampaign()\n  const { subType = campaign?.subType } = useEventInfo().location || {}\n  const eventType =\n    (useEventName().eventType as EventType) ||\n    subTypeToEventTypeMapping[subType!]\n\n  return eventType\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { Container as BaseContainer, Body as BaseBody } from '../Common'\n\nexport const Body = withStyle(BaseBody, ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: 'calc(100vh - 64px)',\n  [mediaQuery.medium]: {\n    paddingLeft: '223px',\n    paddingTop: 0,\n  },\n}))\n\nexport const Container = withStyle(\n  BaseContainer,\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    overflowY: 'auto',\n    height: 'calc(100vh - 238px)',\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    paddingTop: sizing.scale800,\n    paddingBottom: sizing.scale700,\n    [mediaQuery.medium]: {\n      height: 'calc(100vh - 198px)',\n      paddingLeft: '87px',\n      paddingRight: sizing.scale900,\n    },\n  })\n)\n\nexport const TitleRoot = styled(\n  'div',\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '68px',\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    paddingBottom: 0,\n    [mediaQuery.medium]: {\n      paddingLeft: '87px',\n      paddingRight: sizing.scale900,\n      paddingTop: sizing.scale850,\n    },\n  })\n)\n\nexport const StyledFormControl = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    width: '100%',\n    maxWidth: '280px',\n    marginBottom: sizing.scale900,\n  })\n)\n\nexport const FieldLabel = styled(\n  'span',\n  ({ $theme: { colors, typography } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono900,\n  })\n)\n\nexport const ToggleRoot = styled<{ $error: boolean }, 'div'>(\n  'div',\n  ({ $error, $theme: { sizing } }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingTop: $error ? sizing.scale100 : sizing.scale650,\n    paddingBottom: sizing.scale650,\n  })\n)\n\nexport const ToggleWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale400,\n  marginLeft: sizing.scale400,\n}))\n\nexport const LastSyncedTime = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale100,\n}))\n\nexport const CISConfigContainer = styled('div', {\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nexport const LastSyncedTimeContainer = styled('div', {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n})\n\nexport const MOAFieldRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: sizing.scale650,\n}))\n\nexport const MOAFieldLabel = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Paragraph1,\n}))\n\nexport const MOAFieldHelpText = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Caption1,\n}))\n","import { EventSubType } from './types'\n\nexport const eventTypeMapping: Record<EventSubType, string> = {\n  Emeet: 'eMeet',\n  Jem: 'eEvent',\n  Jfx: 'eCampaign',\n  Jss: 'Staff Scheduling',\n  Jbc: 'Briefing Center',\n}\n","import { ReactNode, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { FieldRenderProps, useForm, useFormState } from 'react-final-form'\nimport { Select } from '@jifflenow/brightui/select'\nimport { Field, Validation } from 'ui-components/Field'\nimport { roles as roleLabel } from 'utils/messages'\nimport { RoleChangeDialog } from '../Common/RoleChangeDialog'\nimport { useEventInfo } from '../providers/EventInfoProvider'\nimport { useCampaign } from '../Common'\nimport { FormValues, RoleFieldProps, RoleOption } from './types'\nimport { StyledFormControl } from './styled-components'\nimport { eventTypeMapping } from './constants'\n\nconst messages = defineMessages({\n  label: {\n    defaultMessage: '{eventType} Role',\n    description: 'Field label',\n  },\n})\n\nconst EventRoleField: (props: FieldRenderProps<any>) => ReactNode = ({\n  input,\n  meta: { initial, touched, error },\n  isDisabled,\n  dropdownOptions,\n}) => {\n  const { formatMessage } = useIntl()\n  const [isOpen, setIsOpen] = useState(false)\n  const { campaign } = useCampaign()\n  const [showMessage, setShowMessage] = useState(false)\n  const { change } = useForm<FormValues>()\n  const { subType = campaign?.subType } = useEventInfo().location || {}\n\n  const {\n    values: { mappedTo },\n  } = useFormState<FormValues>()\n\n  return (\n    <>\n      <StyledFormControl\n        label={formatMessage(messages.label, {\n          eventType: subType ? eventTypeMapping[subType] : '',\n        })}\n        error={touched && error}\n      >\n        <Select\n          {...input}\n          required\n          id=\"eventRole\"\n          disabled={isDisabled}\n          options={dropdownOptions}\n          onChange={({ value }: { value: RoleOption }) => {\n            input.onChange(value)\n            const role = value[0]?.id\n            const eventRole = input.value[0]?.id\n\n            if (initial !== role) {\n              !(\n                (eventRole === 'EX' && initial === 'EA') ||\n                (eventRole === 'EA' && initial === 'EX')\n              ) &&\n                mappedTo?.length &&\n                setShowMessage(true)\n              setIsOpen(true)\n            }\n          }}\n        />\n      </StyledFormControl>\n\n      {isOpen && (\n        <RoleChangeDialog\n          showMessage={showMessage}\n          showNote\n          onSuccess={() => {\n            change('mappedTo', [])\n            setIsOpen(false)\n            setShowMessage(false)\n          }}\n          onClose={() => {\n            setIsOpen(false)\n            setShowMessage(false)\n          }}\n          onCancel={() => {\n            change('eventRole', initial)\n            setIsOpen(false)\n            setShowMessage(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n\nexport const RoleField: VFC<RoleFieldProps> = ({ roles, isDisabled }) => {\n  const { formatMessage } = useIntl()\n  const dropdownOptions = roles.map(({ clientDisplayName: id }) => ({\n    label: formatMessage(roleLabel[id]),\n    id,\n  }))\n\n  return (\n    <Field<(string | number | undefined)[] | undefined>\n      name=\"eventRole\"\n      parse={value => value[0]?.id}\n      format={value => (value ? [{ id: value, label: value }] : [])}\n      render={EventRoleField}\n      validations={[Validation.REQUIRED]}\n      dropdownOptions={dropdownOptions}\n      isDisabled={isDisabled}\n    />\n  )\n}\n","import { useEffect, useState, VFC, ChangeEvent } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Select, Value } from '@jifflenow/brightui/select'\nimport { Field } from 'ui-components/Field'\nimport { showErrorToast } from 'utils/toast'\nimport { useMappableUsers } from 'rest'\nimport { useDebounce } from 'utils/debounce'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { useEventInfo } from '../providers/EventInfoProvider'\nimport { MappableUsers, MappedUserFieldProps, UserOption } from './types'\nimport { StyledFormControl } from './styled-components'\nimport { eventTypeMapping } from './constants'\n\nconst messages = defineMessages({\n  labelForEA: {\n    defaultMessage: 'Managed Attendees at Company',\n    description: 'Field label',\n  },\n  labelForEX: {\n    defaultMessage: 'Executive Admins at Company',\n    description: 'Field label',\n  },\n  labelForEventLevelEA: {\n    defaultMessage:\n      '\\u2018Managed Attendees\\u2019 for this {eventType} instance',\n    description: 'Field label',\n  },\n  labelForEventLevelEX: {\n    defaultMessage:\n      '\\u2018Executive Admins\\u2019 for this {eventType} instance',\n    description: 'Field label',\n  },\n  placeholder: {\n    defaultMessage: 'Search by name',\n    description: 'Placeholder text',\n  },\n  helpText: {\n    defaultMessage: 'Please enter 1 or more characters to search',\n    description: 'Help text',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  managedAttendeesHelpText: {\n    defaultMessage:\n      'To manage or view instance attendees go to Event Instances \\u2192 Settings',\n    description: 'Help text',\n  },\n  executiveAdminsHelpText: {\n    defaultMessage:\n      'To manage or view instance EA go to Event Instances \\u2192 Settings',\n    description: 'Help text',\n  },\n  none: {\n    defaultMessage: 'None',\n    description: 'Field placeholder',\n  },\n})\n\nconst valueMapper = ({ name, uuid }: UserOption) => ({\n  label: name,\n  id: uuid,\n})\n\nexport const MappedUserField: VFC<MappedUserFieldProps> = ({\n  campaign,\n  name,\n  isDisabled,\n  role,\n}) => {\n  const { formatMessage } = useIntl()\n  const { id: userId } = useProfileUser()\n  const { subType = campaign?.subType } = useEventInfo().location || {}\n  const [searchText, setSearchText] = useState('')\n  const [options, setOptions] = useState<MappableUsers>([])\n\n  const isUserEA = role === 'EA'\n\n  const { run: searchUsers, isPending, cancel } = useMappableUsers({\n    userId,\n    systemName: campaign?.eventName,\n    locationId: campaign?.location,\n    searchUsersByRole: isUserEA ? 'EX' : 'EA',\n    onResolve: ({ users }) => setOptions(users),\n    onReject: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const optionsList = options.map(valueMapper).filter(({ id }) => id !== userId)\n\n  const search = useDebounce(searchText.trim())\n\n  useEffect(() => {\n    setOptions([])\n  }, [role])\n\n  useEffect(() => {\n    if (!search) {\n      cancel()\n      setOptions([])\n      return\n    }\n    searchUsers({ search })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search])\n\n  return (\n    <Field\n      name={name}\n      render={({ input, meta }) => (\n        <StyledFormControl\n          error={meta.touched && meta.error}\n          label={formatMessage(\n            isUserEA\n              ? messages.labelForEventLevelEA\n              : messages.labelForEventLevelEX,\n            {\n              eventType: eventTypeMapping[subType!],\n            }\n          )}\n          caption={\n            name === 'mappedUsers'\n              ? isUserEA\n                ? formatMessage(messages.managedAttendeesHelpText)\n                : formatMessage(messages.executiveAdminsHelpText)\n              : undefined\n          }\n        >\n          <Select\n            {...input}\n            multi\n            searchable\n            options={optionsList}\n            isLoading={isPending}\n            disabled={isDisabled ?? false}\n            backspaceClearsInputValue\n            filterOptions={false}\n            onCloseResetsInput={false}\n            onBlurResetsInput={false}\n            placeholder={\n              isDisabled\n                ? formatMessage(messages.none)\n                : formatMessage(messages.placeholder)\n            }\n            onInputChange={(e: ChangeEvent<HTMLInputElement>) =>\n              setSearchText(e.target.value.trim())\n            }\n            noResultsMsg={!search ? formatMessage(messages.helpText) : ''}\n            onChange={({ value }: { value: Value[] }) => input.onChange(value)}\n          />\n        </StyledFormControl>\n      )}\n    />\n  )\n}\n","import { VFC, ChangeEvent } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { components } from 'types/openapi'\nimport { ToggleProps } from './types'\nimport { FieldLabel, ToggleRoot, ToggleWrapper } from './styled-components'\n\ntype SettingNames = components['schemas']['UserProfileSetting']['name']\n\nconst messages = defineMessages<SettingNames>({\n  cisEnabled: {\n    description: 'Field Label',\n    defaultMessage: 'Calendar Integration',\n  },\n  irpEnabled: { description: 'Field Label', defaultMessage: 'Enable for IRP' },\n  doubleBookingEnabled: {\n    description: 'Field Label',\n    defaultMessage: 'Double Booking',\n  },\n  showOnlyForMM: {\n    description: 'Field Label',\n    defaultMessage: 'Show only for Meeting Managers',\n  },\n  showInMeeting: {\n    description: 'Field Label',\n    defaultMessage: 'Show as external attendee',\n  },\n  endorsement: { description: 'Field Label', defaultMessage: 'Endorsement' },\n  partialParticipationInMeeting: {\n    description: 'Field Label',\n    defaultMessage: 'Enable partial participation in meeting',\n  },\n})\n\nexport const ToggleField: VFC<ToggleProps> = ({ isDisabled, name }) => {\n  const { formatMessage } = useIntl()\n\n  const label = formatMessage(messages[name as keyof typeof messages])\n\n  return (\n    <Field<boolean>\n      name={name}\n      render={({\n        input: { value, onChange },\n        meta: { error, submitError },\n      }) => (\n        <ToggleRoot $error={submitError || error}>\n          <FieldLabel>{label}</FieldLabel>\n          <ToggleWrapper>\n            <Toggle\n              name={name}\n              ariaLabel={label}\n              // Negating the value to match the Non-ECS flow, We dont know why the value is negated and saved.\n              checked={name === 'endorsement' ? !value : value}\n              disabled={isDisabled}\n              onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                const isChecked = e.target.checked\n\n                return onChange(name === 'endorsement' ? !isChecked : isChecked)\n              }}\n            />\n          </ToggleWrapper>\n        </ToggleRoot>\n      )}\n    />\n  )\n}\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\nimport { SelectOverrides } from '@jifflenow/brightui/select'\n\nexport const iconButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { colors, sizing } }) => ({\n      backgroundColor: colors.white,\n      borderLeftStyle: 'none',\n      borderTopStyle: 'none',\n      borderRightStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopRightRadius: 'none',\n      borderBottomRightRadius: 'none',\n      borderTopLeftRadius: 'none',\n      borderBottomLeftRadius: 'none',\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n\nexport const moaOverrides: SelectOverrides = {\n  Root: {\n    style: {\n      maxWidth: '204px',\n    },\n  },\n}\n","import { useEffect, useMemo, useState, VFC } from 'react'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { FieldRenderProps } from 'react-final-form'\nimport { Select, Value } from '@jifflenow/brightui/select'\nimport { Field } from 'ui-components/Field'\nimport {\n  MOAFieldHelpText,\n  MOAFieldLabel,\n  MOAFieldRoot,\n} from './styled-components'\nimport { moaOverrides } from './overrides'\nimport { ModeOfAttendanceProps } from './types'\n\nconst messages = defineMessages({\n  moaPlaceholder: {\n    defaultMessage: 'Select one',\n    description: 'Placeholder text',\n  },\n})\n\nconst MOASelect: VFC<\n  FieldRenderProps<string, HTMLElement> & ModeOfAttendanceProps\n> = ({\n  input: { value: fieldValue, onChange, ...restInput },\n  in_person_attendance_custom_label,\n  virtual_attendance_custom_label,\n  isDisabled,\n}) => {\n  const { formatMessage } = useIntl()\n  const [value, setValue] = useState<Value>()\n\n  const options = useMemo(\n    () => [\n      { id: 'in_person', label: in_person_attendance_custom_label },\n      { id: 'virtual', label: virtual_attendance_custom_label },\n    ],\n    [in_person_attendance_custom_label, virtual_attendance_custom_label]\n  )\n\n  useEffect(() => {\n    setValue(options.filter(({ id }) => id === fieldValue))\n  }, [fieldValue, options])\n\n  const handleOnChange = (value: Value) => {\n    setValue(value)\n    onChange(value[0].id)\n  }\n\n  return (\n    <Select\n      {...restInput}\n      disabled={isDisabled}\n      clearable={false}\n      placeholder={formatMessage(messages.moaPlaceholder)}\n      value={value}\n      options={options}\n      onChange={({ value }: { value: Value }) => handleOnChange(value)}\n      overrides={moaOverrides}\n    />\n  )\n}\n\nexport const ModeOfAttendance: VFC<ModeOfAttendanceProps> = rest => (\n  <MOAFieldRoot>\n    <div>\n      <MOAFieldLabel>\n        <FormattedMessage\n          defaultMessage=\"Mode of attendance\"\n          description=\"Field label\"\n        />\n      </MOAFieldLabel>\n      <MOAFieldHelpText>\n        <FormattedMessage\n          defaultMessage=\"Change in mode of attendance applies to future meetings only and not to the existing meeting\"\n          description=\"Help text\"\n        />\n      </MOAFieldHelpText>\n    </div>\n    <Field<string>\n      name=\"modeOfAttendance\"\n      render={props => <MOASelect {...props} {...rest} />}\n    />\n  </MOAFieldRoot>\n)\n","import { VFC } from 'react'\nimport { Field } from 'react-final-form'\nimport { useQuery } from 'react-query'\nimport { Select, Value, Option } from '@jifflenow/brightui/select'\nimport { getTagsList } from 'rest'\nimport { StyledFormControl } from './styled-components'\nimport { TagItem } from './types'\n\nconst optionsMapper = (item: TagItem) => ({\n  label: item.name,\n  id: item.uuid,\n})\nexport const TagCloudField: VFC<{\n  name: string\n  label: string\n  location: string\n  eventName: string\n  isDisabled: boolean\n}> = ({ name, label, location, eventName, isDisabled }) => {\n  const { data: tagsList, isLoading, isSuccess } = useQuery(\n    [\n      'tagsList',\n      {\n        path: {\n          eventName,\n        },\n        query: {\n          search: '',\n          tag_cloud_uuid: name,\n          per_page: '500',\n          current_location_uuid: location || '',\n        },\n      },\n    ],\n    getTagsList\n  )\n\n  const optionsList = tagsList ? tagsList?.data?.tags.map(optionsMapper) : []\n\n  return (\n    <Field\n      name={name}\n      parse={value => ({\n        tagCloudUuid: name,\n        tags: value.map(({ id }: Option) => id),\n      })}\n      format={value =>\n        value?.tags?.length && isSuccess\n          ? value.tags.map((val: string) => {\n              const tag = tagsList?.data?.tags?.find(({ uuid }) => uuid === val)\n\n              return { label: tag?.name, id: tag?.uuid }\n            })\n          : []\n      }\n      render={({ input: { value, onChange }, meta: { touched, error } }) => (\n        <StyledFormControl label={label} error={touched && error}>\n          <Select\n            options={optionsList}\n            isLoading={isLoading}\n            disabled={isDisabled}\n            searchable\n            multi\n            backspaceClearsInputValue\n            onChange={({ value }: { value: Value[] }) => {\n              onChange(value)\n            }}\n            value={value}\n          />\n        </StyledFormControl>\n      )}\n    />\n  )\n}\n","import { VFC } from 'react'\nimport { useQuery } from 'react-query'\nimport { getTagCloudList } from 'rest'\nimport { TagCloudField } from './TagCloudField'\n\nexport const TagCloud: VFC<{\n  eventName: string\n  location: string\n  isDisabled: boolean\n}> = ({ eventName, location, isDisabled }) => {\n  const { data: tagCloudList, isSuccess } = useQuery(\n    [\n      'tagCloudList',\n      {\n        path: { eventName },\n        query: {\n          current_location_uuid: location,\n        },\n      },\n    ],\n    getTagCloudList\n  )\n\n  if (isSuccess) {\n    return (\n      <div>\n        {tagCloudList?.data.tag_cloud_list.map(i => (\n          <TagCloudField\n            key={i.uuid}\n            name={i.uuid}\n            label={i.name}\n            location={location || ''}\n            eventName={eventName}\n            isDisabled={isDisabled}\n          />\n        ))}\n      </div>\n    )\n  }\n\n  return null\n}\n","import { VFC, ChangeEvent } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { ToggleProps } from './types'\nimport { FieldLabel, ToggleRoot, ToggleWrapper } from './styled-components'\n\nconst message = defineMessages({\n  taskManager: {\n    description: 'Field Label',\n    defaultMessage: 'Activity Manager',\n  },\n})\n\nexport const ActivityManager: VFC<ToggleProps> = ({ isDisabled, name }) => {\n  const { formatMessage } = useIntl()\n\n  const label = formatMessage(message.taskManager)\n\n  return (\n    <Field<boolean>\n      name={name}\n      render={({\n        input: { value, onChange },\n        meta: { error, submitError },\n      }) => (\n        <ToggleRoot $error={submitError || error}>\n          <FieldLabel>{label}</FieldLabel>\n          <ToggleWrapper>\n            <Toggle\n              name={name}\n              ariaLabel={label}\n              checked={value}\n              disabled={isDisabled}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                onChange(e.target.checked)\n              }\n            />\n          </ToggleWrapper>\n        </ToggleRoot>\n      )}\n    />\n  )\n}\n","import { VFC, useImperativeHandle, forwardRef } from 'react'\nimport ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\nimport { FlexGrid, FlexGridItem } from '@jifflenow/brightui/flex-grid'\nimport { Container } from './styled-components'\n\nconst LIST_CARD_HEIGHT = 40\n\nconst LoadingDropdownRow: VFC<{ height: number }> = ({ height }) => {\n  const [, theme] = useStyletron()\n  const contentLoaderOptions = {\n    style: {\n      width: '40%',\n      height: `${height}`,\n      marginTop: theme.sizing.scale600,\n      marginBottom: theme.sizing.scale600,\n    },\n    width: '1000',\n    height: '100',\n    viewBox: '0 0 1000 100',\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader {...contentLoaderOptions}>\n      <rect y=\"0\" rx={1} ry={20} width=\"1000\" height=\"100\" />\n    </ContentLoader>\n  )\n}\n\nconst LoadingToggleRow: VFC<{ height: number }> = ({ height }) => {\n  const [, theme] = useStyletron()\n  const contentLoaderOptions = {\n    style: {\n      width: '100%',\n      height: `${height}`,\n      marginTop: theme.sizing.scale600,\n      marginBottom: theme.sizing.scale600,\n    },\n    width: '1000',\n    height: '100',\n    viewBox: '0 0 1000 100',\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader {...contentLoaderOptions}>\n      <rect y=\"0\" rx={1} ry={20} width=\"1000\" height=\"100\" />\n    </ContentLoader>\n  )\n}\n\nexport const SettingsLoader = forwardRef((_, ref) => {\n  const [, theme] = useStyletron()\n  useImperativeHandle(ref, () => ({\n    getReactContainerStyle: () => ({\n      alignSelf: 'flex-start',\n      marginTop: theme.sizing.scale600,\n    }),\n  }))\n\n  return (\n    <Container>\n      <FlexGrid\n        flexGridColumnCount={1}\n        overrides={{\n          Block: {\n            style: ({ $theme: { sizing } }) => ({\n              marginTop: sizing.scale100,\n              marginBottom: sizing.scale100,\n            }),\n          },\n        }}\n      >\n        {Array.from({ length: 2 }).map((_, i) => (\n          <FlexGridItem key={i}>\n            <LoadingDropdownRow height={LIST_CARD_HEIGHT} />\n          </FlexGridItem>\n        ))}\n        {Array.from({ length: 8 }).map((_, i) => (\n          <FlexGridItem key={i}>\n            <LoadingToggleRow height={LIST_CARD_HEIGHT} />\n          </FlexGridItem>\n        ))}\n      </FlexGrid>\n    </Container>\n  )\n})\n","import { VFC } from 'react'\nimport { Select } from '@jifflenow/brightui/select'\nimport { useUserMappingsQuery } from 'rest'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'react-final-form'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { useEventInfo } from '../providers/EventInfoProvider'\nimport { useCampaign } from '../Common'\nimport { StyledFormControl } from './styled-components'\nimport {\n  MappingValue,\n  UserMappingResponse,\n  EngagementTypeMappings,\n  EngagementRelationship,\n} from './types'\nimport { eventTypeMapping } from './constants'\n\nconst messages = defineMessages({\n  canRequest: {\n    description: 'Field Label',\n    defaultMessage:\n      'Can request meetings of the following engagement types for this {eventType}',\n  },\n  canParticipate: {\n    description: 'Field Label',\n    defaultMessage:\n      'Can participate in meetings of the following engagement types for this {eventType}',\n  },\n  none: {\n    description: 'Field placeholder',\n    defaultMessage: 'None',\n  },\n})\n\nconst transformOption = ({\n  id,\n  attributes,\n  relationships,\n}: UserMappingResponse['data'][0]): MappingValue => {\n  const { canParticipate, canRequest } = attributes as EngagementTypeMappings\n  const {\n    displayName: name,\n  } = (relationships as EngagementRelationship).engagement.data.attributes\n\n  return {\n    label: name,\n    id,\n    canRequest: canRequest!,\n    canParticipate: canParticipate!,\n  }\n}\n\nexport const MappedEngagementType: VFC<{\n  eventName: string\n  location: string\n  userId: string\n}> = ({ eventName, userId, location }) => {\n  const { formatMessage } = useIntl()\n  const { campaign } = useCampaign()\n  const { subType = campaign?.subType } = useEventInfo().location || {}\n  const { data, isLoading, error, refetch } = useUserMappingsQuery({\n    path: { eventName, userId, mappingType: 'EngagementMapping' },\n    query: {\n      page: { number: 1, size: 100 },\n      search_term: '',\n      location_uuid: location,\n      mapped: true,\n    },\n  })\n\n  const options = data?.data.map(transformOption)\n\n  const canRequestList = options?.filter(i => i.canRequest)\n\n  const canParticiateList = options?.filter(i => i.canParticipate)\n\n  if (error) {\n    return <ErrorPage onButtonClick={() => refetch()} />\n  }\n\n  return (\n    <>\n      <Field\n        name=\"userCanRequest\"\n        render={() => (\n          <StyledFormControl\n            label={formatMessage(messages.canRequest, {\n              eventType: subType ? eventTypeMapping[subType] : '',\n            })}\n          >\n            <Select\n              multi\n              loading={isLoading}\n              value={canRequestList}\n              options={canRequestList}\n              disabled\n              placeholder={formatMessage(messages.none)}\n            />\n          </StyledFormControl>\n        )}\n      />\n      <Field\n        name=\"userCanParticiate\"\n        render={() => (\n          <StyledFormControl\n            label={formatMessage(messages.canParticipate, {\n              eventType: subType ? eventTypeMapping[subType] : '',\n            })}\n          >\n            <Select\n              multi\n              loading={isLoading}\n              value={canParticiateList}\n              options={canParticiateList}\n              disabled\n              placeholder={formatMessage(messages.none)}\n            />\n          </StyledFormControl>\n        )}\n      />\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { Select } from '@jifflenow/brightui/select'\nimport { useUserMappingsQuery } from 'rest'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'react-final-form'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { useEventInfo } from '../providers/EventInfoProvider'\nimport { useCampaign } from '../Common'\nimport { StyledFormControl } from './styled-components'\nimport { eventTypeMapping } from './constants'\nimport { UserMappingResponse, TopicRelationship } from './types'\n\nconst messages = defineMessages({\n  mappedTopic: {\n    description: 'Field Label',\n    defaultMessage: 'Mapped topics of this {eventType}',\n  },\n  none: {\n    description: 'Field placeholder',\n    defaultMessage: 'None',\n  },\n})\n\nconst transformOption = ({\n  id,\n  relationships,\n}: UserMappingResponse['data'][0]): { label: string; id: string } => {\n  const {\n    name,\n  } = (relationships as TopicRelationship)?.topic?.data?.attributes!\n\n  return {\n    label: name,\n    id,\n  }\n}\n\nexport const MappedTopic: VFC<{\n  eventName: string\n  location: string\n  userId: string\n}> = ({ eventName, userId, location }) => {\n  const { formatMessage } = useIntl()\n  const { campaign } = useCampaign()\n  const { subType = campaign?.subType } = useEventInfo().location || {}\n\n  const { data, isLoading, error, refetch } = useUserMappingsQuery({\n    path: { eventName, userId, mappingType: 'TopicMapping' },\n    query: {\n      page: { number: 1, size: 100 },\n      search_term: '',\n      location_uuid: location,\n      mapped: true,\n    },\n  })\n\n  const mappedTopicList = data ? data.data.map(transformOption) : []\n\n  if (error) {\n    return <ErrorPage onButtonClick={() => refetch()} />\n  }\n\n  return (\n    <Field\n      name=\"userMappedTopic\"\n      render={() => (\n        <StyledFormControl\n          label={formatMessage(messages.mappedTopic, {\n            eventType: subType ? eventTypeMapping[subType] : '',\n          })}\n        >\n          <Select\n            multi\n            loading={isLoading}\n            value={mappedTopicList}\n            options={mappedTopicList}\n            disabled\n            placeholder={formatMessage(messages.none)}\n          />\n        </StyledFormControl>\n      )}\n    />\n  )\n}\n","import { useCallback, VFC } from 'react'\nimport { useIntl, defineMessages } from 'react-intl'\nimport { Field } from 'react-final-form'\nimport { Toggle } from '@jifflenow/brightui/toggle'\nimport { useMe } from 'providers/MeProvider'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { useEventInfo } from '../providers/EventInfoProvider'\nimport { useCampaign } from '../Common'\nimport { CanManageSettingsProps } from './types'\nimport { FieldLabel, ToggleRoot, ToggleWrapper } from './styled-components'\nimport { eventTypeMapping } from './constants'\n\nconst messages = defineMessages({\n  canManageSelfServeSettings: {\n    defaultMessage: 'Can manage settings for this {eventType}',\n    description: 'Field Label',\n  },\n})\n\nexport const CanManageSettings: VFC<CanManageSettingsProps> = ({\n  settings,\n}) => {\n  const { formatMessage } = useIntl()\n  const {\n    attributes: {\n      role: companyRole,\n      privileges: { canManageSettings },\n    },\n    id: loggedInUserId,\n  } = useMe().data\n  const {\n    locationSpecificDetails: { canManageSelfServeSettings = false } = {},\n    eventRole: { name: eventRole = '' } = {},\n  } = settings ?? {}\n  const {\n    id: profileUserId,\n    attributes: { role: profileUserRole },\n  } = useProfileUser()\n  const { campaign } = useCampaign()\n  const { subType = campaign?.subType } = useEventInfo().location || {}\n\n  const label = formatMessage(messages.canManageSelfServeSettings, {\n    eventType: subType ? eventTypeMapping[subType] : '',\n  })\n\n  const isSelfProfile = loggedInUserId === profileUserId\n\n  const Checkbox = useCallback(\n    () => (\n      <Field\n        type=\"checkbox\"\n        name=\"canManageSelfServeSettings\"\n        render={({ input, meta: { error, submitError } }) => (\n          <ToggleRoot $error={submitError || error}>\n            <FieldLabel>{label}</FieldLabel>\n            <ToggleWrapper>\n              <Toggle {...input} ariaLabel={label} disabled={isSelfProfile} />\n            </ToggleWrapper>\n          </ToggleRoot>\n        )}\n      />\n    ),\n    [isSelfProfile, label]\n  )\n\n  return profileUserRole !== 'CSM' ? (\n    isSelfProfile ? (\n      eventRole === 'MM' && canManageSelfServeSettings ? (\n        <Checkbox />\n      ) : null\n    ) : (companyRole === 'MM' &&\n        canManageSettings &&\n        eventRole === 'MM' &&\n        canManageSelfServeSettings) ||\n      companyRole === 'CSM' ? (\n      <Checkbox />\n    ) : null\n  ) : null\n}\n","import { Icon, IconProps } from '@jifflenow/brightui/icon'\n\nexport const RefetchIcon = (props: IconProps) => (\n  <Icon width=\"26\" height=\"24\" viewBox=\"0 0 26 24\" {...props}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M25.275 8.26a.5.5 0 0 0-.693.143l-2.909 4.421-3.386-3.92a.5.5 0 1 0-.756.653l3.818 4.421a.5.5 0 0 0 .796-.052l3.273-4.973a.5.5 0 0 0-.143-.693Z\"\n      fill=\"#706E6B\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M22.227 12c0-6.068-4.857-11-10.863-11C5.358 1 .5 5.932.5 12c0 6.07 4.858 11 10.864 11a.5.5 0 0 0 0-1C5.922 22 1.5 17.53 1.5 12c0-5.528 4.422-10 9.864-10 5.442 0 9.863 4.472 9.863 10v1.651a.5.5 0 0 0 1 0V12Z\"\n      fill=\"#706E6B\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M4.864 9.27a.5.5 0 0 1 .5-.5h9.818a.5.5 0 0 1 .5.5v7.736a.5.5 0 0 1-.5.5H5.364a.5.5 0 0 1-.5-.5V9.27Zm1 .5v6.736h8.818V9.77H5.864Z\"\n      fill=\"#706E6B\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M8.09 6.559a.5.5 0 0 1 .5.5v3.315a.5.5 0 0 1-1 0V7.06a.5.5 0 0 1 .5-.5Zm4.364 0a.5.5 0 0 1 .5.5v3.315a.5.5 0 0 1-1 0V7.06a.5.5 0 0 1 .5-.5ZM14.045 13.139a.5.5 0 0 1-.5.5H6.999a.5.5 0 0 1 0-1h6.546a.5.5 0 0 1 .5.5Z\"\n      fill=\"#706E6B\"\n    />\n  </Icon>\n)\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Select, Value } from '@jifflenow/brightui/select'\nimport { Field } from 'ui-components/Field'\nimport { MappedCISUserEmailProps } from './types'\nimport { StyledFormControl } from './styled-components'\n\nconst messages = defineMessages({\n  label: {\n    defaultMessage: 'Choose Email to Sync Free/Busy',\n    description: 'Field label',\n  },\n})\n\nexport const MappedCISUsersField: VFC<MappedCISUserEmailProps> = ({\n  mappedCISUserEmails,\n  isDisabled,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const dropdownOptions = mappedCISUserEmails?.map(id => ({\n    label: id,\n    id,\n  }))\n\n  return (\n    <Field<string>\n      name=\"cisEmail\"\n      parse={value => value[0]?.id}\n      format={value => (value ? [{ id: value, label: value }] : [])}\n      render={({ input, meta: { touched, error } }) => (\n        <StyledFormControl\n          label={formatMessage(messages.label)}\n          error={touched && error}\n        >\n          <Select\n            {...input}\n            id=\"cisEmail\"\n            disabled={isDisabled}\n            options={dropdownOptions}\n            onChange={({ value }: { value: Value[] }) => input.onChange(value)}\n          />\n        </StyledFormControl>\n      )}\n    />\n  )\n}\n","import { VFC } from 'react'\nimport { DateTime } from 'luxon'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { IconButton } from '@jifflenow/brightui/button'\nimport { StatefulTooltip } from '@jifflenow/brightui/tooltip'\nimport { RefetchIcon } from 'ui-components/icons/RefetchIcon'\nimport { MappedCISUsersField } from './MappedCISUsersField'\nimport { iconButtonOverrides } from './overrides'\nimport {\n  LastSyncedTime,\n  CISConfigContainer,\n  LastSyncedTimeContainer,\n} from './styled-components'\nimport { CisSyncSettingProps } from './types'\n\nconst messages = defineMessages({\n  fetchFreeBusy: {\n    defaultMessage: 'Fetch Free/Busy',\n    description: 'Fetch Free/Busy label',\n  },\n  LastSyncedTime: {\n    defaultMessage: 'Last Synced Time',\n    description: 'Sync time label',\n  },\n  fetchFreeBusyAriaLabel: {\n    defaultMessage: 'Fetch free/busy',\n    description: 'Aria label',\n  },\n})\n\nexport const CisSyncSetting: VFC<CisSyncSettingProps> = ({\n  cisDetails,\n  onHandleFetchFreeBusy,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <CISConfigContainer>\n      <MappedCISUsersField mappedCISUserEmails={cisDetails?.userMappedEmails} />\n      <LastSyncedTimeContainer>\n        {cisDetails?.lastSyncTime && (\n          <LastSyncedTime>{`${formatMessage(\n            messages.LastSyncedTime\n          )}: ${DateTime.fromISO(cisDetails?.lastSyncTime).toFormat(\n            'FFF'\n          )}`}</LastSyncedTime>\n        )}\n\n        <StatefulTooltip content={formatMessage(messages.fetchFreeBusy)}>\n          <IconButton\n            type=\"button\"\n            size={20}\n            overrides={iconButtonOverrides}\n            onClick={onHandleFetchFreeBusy}\n            aria-label={formatMessage(messages.fetchFreeBusyAriaLabel)}\n          >\n            <RefetchIcon />\n          </IconButton>\n        </StatefulTooltip>\n      </LastSyncedTimeContainer>\n    </CISConfigContainer>\n  )\n}\n","import { VFC, FC, useState, useEffect, useMemo } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { useQuery } from 'react-query'\nimport { Form as FinalForm, FormSpy } from 'react-final-form'\nimport createFocusDecorator from 'final-form-focus'\nimport createDecorator from 'final-form-calculate'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useHttpClient } from 'providers/HttpClientContext'\nimport { useMe } from 'providers/MeProvider'\nimport { AppSource, useAppSource } from 'providers/AppSourceProvider'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { useDrawer } from 'ui-components/Drawer'\nimport {\n  useUsersSettings,\n  putUserSettings,\n  fetchFreeBusyCISConfig,\n  getTagCloudList,\n} from 'rest'\nimport { useEventConfigQuery, useRolesQuery } from 'gql'\nimport { RolesDisplayNames } from 'gql/types/globalTypes'\nimport { fetchRoles_fetchRoles } from 'gql/types/fetchRoles'\nimport { bulkFetchLocationConfigsByName_bulkFetchLocationConfigsByName_configValue_CustomNameValue as CustomNameValue } from 'gql/types/bulkFetchLocationConfigsByName'\nimport { useDirtyCheckDialog } from '../Common/useDirtyCheckDialog'\nimport { Footer } from '../Common'\nimport { Role } from '../types'\nimport { RoleField } from './RoleField'\nimport { MappedUserField } from './MappedUserField'\nimport { ToggleField } from './ToggleField'\nimport { ModeOfAttendance } from './ModeOfAttendance'\nimport { TagCloud } from './TagCloud'\nimport { ActivityManager } from './ActivityManager'\nimport { SettingsLoader } from './SettingsLoader'\nimport {\n  EventConfigs,\n  FormValues,\n  UserSettings,\n  SettingsFormProps,\n  FormProps,\n} from './types'\nimport { Container } from './styled-components'\nimport { MappedEngagementType } from './MappedEngagementType'\nimport { MappedTopic } from './MappedTopic'\nimport { CanManageSettings } from './CanManageSettings'\nimport { CisSyncSetting } from './CisSyncSetting'\n\nconst messages = defineMessages({\n  title: {\n    defaultMessage: 'Settings for',\n    description: 'Page title',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  success: {\n    defaultMessage: 'User settings updated successfully.',\n    description: 'Success message',\n  },\n  fetchFreeBusySuccess: {\n    defaultMessage:\n      'Synchronization with external calendar has been initiated. This might a take few minutes.',\n    description: 'Sync Success Message',\n  },\n})\n\ntype Roles = (keyof typeof RolesDisplayNames)[]\n\nconst adminRoles: Set<Role> = new Set(['CSM', 'MM', 'JMM'])\n\nconst internalEditableRoles: Roles = ['MM', 'JMM', 'EX', 'EA', 'AM', 'Partner']\n\nconst externalEditableRoles: Roles = ['ET']\n\nconst jmmEditableRoles: Roles = ['EX', 'EA', 'AM', 'Partner']\n\nconst filterRoles = (roles: Roles) => ({\n  clientDisplayName,\n}: fetchRoles_fetchRoles) => roles.includes(clientDisplayName)\n\nconst focusDecorator = createFocusDecorator<FormValues>()\n\nconst Form: FC<FormProps> = ({\n  handleSubmit,\n  dirty,\n  submitSucceeded,\n  children,\n  onSave,\n  isLastItem,\n  values,\n}) => {\n  const unload = useBeforeUnload()\n\n  useDirtyCheckDialog({\n    isDirty: dirty,\n    onSave: () => onSave(values as FormValues),\n  })\n\n  useEffect(() => {\n    unload(\n      dirty &&\n        // When this page is the last navigation in the menu, block the prompt on a successful \"Save and Done\"\n        // so that the user can navigate away from the page\n        !(isLastItem && submitSucceeded)\n    )\n  }, [dirty, isLastItem, submitSucceeded, unload])\n\n  return (\n    <form onSubmit={handleSubmit} noValidate>\n      <Container>{children}</Container>\n\n      <FormSpy\n        subscription={{\n          submitting: true,\n          validating: true,\n          dirty: true,\n          values: true,\n          valid: true,\n        }}\n      >\n        {({ submitting, validating, dirty, values, form, valid }) => (\n          <Footer\n            hasForm\n            isLastItem={isLastItem}\n            onDiscard={() => form.reset()}\n            onSave={() => valid && onSave(values as FormValues)}\n            isDisabled={!dirty || submitting || validating}\n            isLoading={submitting}\n            pendoPrefix=\"profile/campaign/settings\"\n          />\n        )}\n      </FormSpy>\n    </form>\n  )\n}\n\nconst getFormInitialValues = (arg: UserSettings) => {\n  const {\n    settings,\n    mappedTo,\n    eventRole,\n    cisDetails,\n    locationSpecificDetails,\n  } = arg\n\n  return {\n    eventRole: eventRole.name,\n    mappedTo:\n      mappedTo?.users.map(({ name, uuid }) => ({\n        label: name,\n        id: uuid,\n      })) ?? [],\n    ...settings.reduce(\n      (acc, { name, value }) => ({ ...acc, [name]: value }),\n      {}\n    ),\n    cisEmail: cisDetails?.cisEmail,\n    modeOfAttendance: locationSpecificDetails?.modeOfAttendance,\n    taskManager: locationSpecificDetails?.taskManager,\n    ...locationSpecificDetails?.tagClouds?.reduce(\n      (\n        acc,\n        { tagCloudUuid, tags }: { tagCloudUuid: string; tags: string[] }\n      ) => ({\n        ...acc,\n        ...(tagCloudUuid ? { [tagCloudUuid]: { tagCloudUuid, tags } } : {}),\n      }),\n      {}\n    ),\n    canManageSelfServeSettings:\n      locationSpecificDetails?.canManageSelfServeSettings,\n  }\n}\n\nexport const SettingsForm: VFC<SettingsFormProps> = props => {\n  const { formatMessage } = useIntl()\n  const client = useHttpClient()()\n  const { closeDrawer } = useDrawer()\n  const isSourceWeb = useAppSource().app === AppSource.WideScale\n\n  const {\n    id: userId,\n    attributes: { userType },\n  } = props.user\n  const {\n    attributes: { role: loggedInCompanyRole },\n    id: loggedInUserId,\n  } = useMe().data\n  const { eventName, location, eventType } = props.campaign\n  const [userSettings, setUserSettings] = useState<UserSettings | null>(null)\n\n  const [showSpinner, setShowSpinner] = useState<boolean>(false)\n  const [eventConfig, setEventConfigs] = useState<EventConfigs>()\n\n  const formInitialValues = useMemo(\n    () => (userSettings ? getFormInitialValues(userSettings) : {}),\n    [userSettings]\n  )\n\n  const roleFiledDecorator = useMemo(\n    () =>\n      createDecorator({\n        field: 'eventRole',\n        updates: {\n          mappedTo: (_, allValues, prevValues) => {\n            const { eventRole, mappedTo } = allValues as FormValues\n\n            if (!Object.keys(prevValues as FormValues).length) {\n              return mappedTo\n            }\n\n            const formInitialValues =\n              userSettings && getFormInitialValues(userSettings)\n\n            if (formInitialValues) {\n              if (\n                (formInitialValues.eventRole === 'EA' && eventRole === 'EA') ||\n                (formInitialValues.eventRole === 'EX' && eventRole === 'EX')\n              ) {\n                return formInitialValues.mappedTo\n              }\n            }\n\n            return mappedTo\n          },\n        },\n      }),\n    [userSettings]\n  )\n\n  const { data: tagCloudList } = useQuery(\n    [\n      'tagCloudList',\n      {\n        path: { eventName },\n        query: {\n          current_location_uuid: location,\n        },\n      },\n    ],\n    getTagCloudList\n  )\n\n  const { roles = [] } = useRolesQuery({\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const {\n    data: { data: loggedInUserEventSettings } = {},\n    isLoading: isLoggedInUserSettingsLoading,\n    run: fetchLoggedInUserSettings,\n  } = useUsersSettings({\n    userId: loggedInUserId,\n    onReject: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const { eventRole: { name: loggedInEventRole = '' } = {} } =\n    loggedInUserEventSettings ?? {}\n\n  const isEventRoleAdmin =\n    loggedInEventRole && adminRoles.has(loggedInEventRole)\n\n  const isRoleFieldDisabled =\n    !isEventRoleAdmin ||\n    !userSettings?.eventRole.canEdit ||\n    (loggedInCompanyRole === 'JMM' &&\n      !jmmEditableRoles.includes(userSettings.eventRole.name))\n\n  const editableRoles = roles\n    .filter(\n      filterRoles(\n        userType === 'internal' ? internalEditableRoles : externalEditableRoles\n      )\n    )\n    .filter(\n      ({ clientDisplayName: role }) =>\n        loggedInCompanyRole !== 'JMM' ||\n        isRoleFieldDisabled ||\n        jmmEditableRoles.includes(role)\n    )\n\n  const {\n    isLoading: isSettingsLoading,\n    run: fetchSettings,\n    reload,\n  } = useUsersSettings({\n    userId,\n    onResolve: ({ data }) => setUserSettings(data),\n    onReject: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  const {\n    loading: isConfigLoading,\n    refetch: refetchEventConfig,\n  } = useEventConfigQuery({\n    variables: {\n      names: [\n        'in_person_attendance_custom_label',\n        'virtual_attendance_custom_label',\n        'enable_mode_of_attendance',\n      ],\n    },\n    context: {\n      headers: { 'X-Location-Uuid': location },\n    },\n    notifyOnNetworkStatusChange: true,\n    onCompleted: data =>\n      setEventConfigs(\n        data.bulkFetchLocationConfigsByName.reduce(\n          (acc, { configName, configValue }) => ({\n            ...acc,\n            [configName]: (configValue as CustomNameValue).value,\n          }),\n          {}\n        ) as EventConfigs\n      ),\n  })\n\n  useEffect(() => {\n    refetchEventConfig()\n  }, [refetchEventConfig, location])\n\n  useEffect(() => {\n    fetchSettings({ locationId: location, subSystem: eventName })\n    fetchLoggedInUserSettings({ locationId: location, subSystem: eventName })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventName, location, props.eventType, loggedInCompanyRole])\n\n  const handleSubmit: (values: FormValues) => void = async values => {\n    try {\n      setShowSpinner(true)\n\n      const asArray = Object.entries(values)\n\n      const filteredValue = asArray\n        .filter(\n          ar => !tagCloudList?.data.tag_cloud_list.find(rm => rm.uuid === ar[0])\n        )\n        .reduce(\n          (acc, item) => ({ ...acc, [item[0]]: item[1] }),\n          {}\n        ) as FormValues\n\n      const tagClouds = asArray\n        .filter(ar =>\n          tagCloudList?.data.tag_cloud_list.find(rm => rm.uuid === ar[0])\n        )\n        .reduce(\n          (acc: { tagCloudUuid: string; tags: string[] }[], item) => [\n            ...acc,\n            item[1],\n          ],\n          []\n        )\n\n      const {\n        cisEmail,\n        modeOfAttendance,\n        taskManager,\n        mappedTo,\n        canManageSelfServeSettings,\n        ...rest\n      } = filteredValue\n      const userPayload = {\n        ...rest,\n        ...(mappedTo\n          ? { mappedTo: mappedTo.map(({ id }) => id as string) }\n          : null),\n        ...(cisEmail && { cisDetails: { cisEmail } }),\n        ...(modeOfAttendance || taskManager || tagClouds\n          ? {\n              locationSpecificDetails: {\n                ...(modeOfAttendance ? { modeOfAttendance } : null),\n                ...(taskManager ? { taskManager } : null),\n                ...(tagClouds ? { tagClouds } : null),\n                ...(rest.eventRole === 'MM'\n                  ? { canManageSelfServeSettings }\n                  : null),\n              },\n            }\n          : null),\n      }\n\n      await putUserSettings({\n        client,\n        userId,\n        subSystem: eventName,\n        payload: { data: userPayload },\n      })\n      setShowSpinner(false)\n      showSuccessToast(formatMessage(messages.success))\n      return undefined\n    } catch (error) {\n      setShowSpinner(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  const handleFetchFreeBusy = async () => {\n    setShowSpinner(true)\n    try {\n      await fetchFreeBusyCISConfig(client, eventName, userId, location)\n      showSuccessToast(formatMessage(messages.fetchFreeBusySuccess))\n      setShowSpinner(false)\n    } catch (error) {\n      setShowSpinner(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  const isLoading =\n    isSettingsLoading || isLoggedInUserSettingsLoading || isConfigLoading\n  const handleDone = () => isSourceWeb && closeDrawer()\n\n  const handleSaveAndNext: Config<FormValues>['onSubmit'] = async args => {\n    const result = await handleSubmit(args)\n    if (result === undefined) {\n      props.isLastItem && handleDone()\n      !props.isLastItem && props.onNavigate()\n    }\n\n    return result\n  }\n\n  const handleSave: (arg: FormValues) => void = async args => {\n    const result = await handleSubmit(args)\n    if (result === undefined) {\n      reload()\n    }\n\n    return result\n  }\n\n  const canEditSsFields =\n    loggedInCompanyRole === 'CSM' || loggedInCompanyRole === 'MM'\n\n  return (\n    <>\n      {showSpinner && <ModalSpinner />}\n      {isLoading && <SettingsLoader />}\n      {!isLoading && userSettings && (\n        <FinalForm<FormValues>\n          decorators={[\n            focusDecorator,\n            // TODO: Awaiting fix for this [bug](https://github.com/final-form/final-form-calculate/issues/38)\n            // to remove `ts-expect-error`.\n            // @ts-expect-error\n            roleFiledDecorator,\n          ]}\n          onSubmit={handleSaveAndNext}\n          initialValues={formInitialValues}\n          // eslint-disable-next-line complexity\n          render={renderProps => {\n            const {\n              values: { eventRole, cisEnabled },\n            } = renderProps\n\n            return (\n              <Form\n                {...renderProps}\n                onSave={handleSave}\n                isLastItem={props.isLastItem}\n              >\n                <RoleField\n                  roles={editableRoles}\n                  isDisabled={\n                    loggedInUserId === userId ||\n                    (isRoleFieldDisabled && loggedInCompanyRole !== 'CSM')\n                  }\n                />\n                {userSettings.mappedTo &&\n                  (eventRole === 'EA' || eventRole === 'EX') && (\n                    <MappedUserField\n                      campaign={props.campaign}\n                      name=\"mappedTo\"\n                      role={eventRole}\n                      isDisabled={!userSettings.mappedTo.canEdit}\n                    />\n                  )}\n                {eventType !== 'StaffScheduling' &&\n                  eventRole === 'MM' &&\n                  (loggedInUserEventSettings ||\n                    loggedInCompanyRole === 'CSM') && (\n                    <CanManageSettings settings={loggedInUserEventSettings} />\n                  )}\n                {isEventRoleAdmin &&\n                  userSettings.settings.map(({ canEdit, name }) => (\n                    <ToggleField key={name} name={name} isDisabled={!canEdit} />\n                  ))}\n                {cisEnabled && (\n                  <CisSyncSetting\n                    cisDetails={userSettings.cisDetails}\n                    onHandleFetchFreeBusy={handleFetchFreeBusy}\n                  />\n                )}\n                {eventConfig?.enable_mode_of_attendance === 'true' && (\n                  <ModeOfAttendance {...eventConfig} />\n                )}\n                {eventType === 'StaffScheduling' && (\n                  <>\n                    <ActivityManager\n                      name=\"taskManager\"\n                      isDisabled={!canEditSsFields}\n                    />\n                    {userSettings?.locationSpecificDetails?.tagClouds && (\n                      <TagCloud\n                        eventName={eventName}\n                        location={location}\n                        isDisabled={!canEditSsFields}\n                      />\n                    )}\n                  </>\n                )}\n                {!isEventRoleAdmin && (\n                  <>\n                    <MappedEngagementType\n                      eventName={eventName}\n                      userId={userId}\n                      location={location}\n                    />\n                    <MappedTopic\n                      eventName={eventName}\n                      userId={userId}\n                      location={location}\n                    />\n                  </>\n                )}\n              </Form>\n            )\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  Header,\n  Root,\n  useCampaign,\n  CampaignProvider,\n  NoItemsRoot,\n  NoItemsText,\n  EventSelectWrapper,\n  EventTypeAndLocationFilter,\n} from '../Common'\nimport { EventSelectLabel } from '../Common/EventSelectLabel'\nimport { useEventType } from '../Common/useEventType'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { SettingsForm } from './SettingsForm'\nimport { SettingsLoader } from './SettingsLoader'\nimport { TitleRoot, Body } from './styled-components'\nimport { SettingsProps, UserSettingsProps } from './types'\n\nconst messages = defineMessages({\n  title: {\n    defaultMessage: 'Settings for',\n    description: 'Page title',\n  },\n  noCampaignsListed: {\n    defaultMessage:\n      'No settings to show as you are not mapped to any campaigns yet.',\n    description: 'Empty Message',\n  },\n})\n\nconst UserSettings: VFC<UserSettingsProps> = props => {\n  const { formatMessage } = useIntl()\n  const user = useProfileUser()\n  const { campaign } = useCampaign()\n  const location = new URLSearchParams(window.location.search).get('location')\n  const eventType = useEventType()\n\n  return (\n    <Root>\n      <Header />\n      <Body>\n        <TitleRoot>\n          <EventSelectLabel title={formatMessage(messages.title)} />\n          <EventSelectWrapper $location={!!location}>\n            <EventTypeAndLocationFilter eventType={eventType} />\n          </EventSelectWrapper>\n        </TitleRoot>\n        {campaign ? (\n          <SettingsForm\n            user={user}\n            campaign={campaign}\n            eventType={eventType}\n            {...props}\n          />\n        ) : (\n          <NoItemsRoot>\n            <NoItemsText>\n              {campaign === null ? (\n                <SettingsLoader />\n              ) : (\n                formatMessage(messages.noCampaignsListed)\n              )}\n            </NoItemsText>\n          </NoItemsRoot>\n        )}\n      </Body>\n    </Root>\n  )\n}\n\nexport const Settings: VFC<SettingsProps> = props => (\n  <CampaignProvider>\n    <UserSettings {...props} />\n  </CampaignProvider>\n)\n","import { styled } from '@jifflenow/brightui'\nimport { ParagraphSmall } from '@jifflenow/brightui/typography'\n\nexport const TitleRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  height: sizing.scale900,\n  marginBottom: sizing.scale600,\n}))\n\nexport const ButtonsContainer = styled('div', {})\n\nexport const ConsentControl = styled(\n  ParagraphSmall,\n  ({ $theme: { sizing } }) => ({\n    marginTop: 0,\n    marginBottom: sizing.scale600,\n  })\n)\n","import { FC } from 'react'\nimport { ConsentControl } from './styled-components'\n\nexport const Consents: FC<{ consent: string; optOut: string }> = ({\n  consent,\n  optOut,\n}) => (\n  <>\n    <ConsentControl>\n      <span\n        className=\"anchor-primary\"\n        dangerouslySetInnerHTML={{ __html: consent }}\n      />\n    </ConsentControl>\n    <ConsentControl>\n      <span\n        className=\"anchor-primary\"\n        dangerouslySetInnerHTML={{ __html: optOut }}\n      />\n    </ConsentControl>\n  </>\n)\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\nimport { FormControl as Control } from '@jifflenow/brightui/form-control'\nimport { Container as RootContainer } from '../../Common/styled-components'\n\nexport const FormControl = styled(Control, ({ $theme: { sizing } }) => ({\n  width: '282px',\n  marginRight: sizing.scale700,\n  marginBottom: sizing.scale700,\n}))\n\nexport const FormControlForURL = styled(Control, ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale700,\n  marginBottom: sizing.scale700,\n}))\n\nexport const EmailControl = styled(Control, ({ $theme: { sizing } }) => ({\n  width: '282px',\n  marginRight: sizing.scale700,\n  marginBottom: sizing.scale700,\n  position: 'relative',\n}))\n\nexport const Container = withStyle(RootContainer, {\n  height: 'calc(100vh - 128px)',\n  overflowY: 'scroll',\n})\n\nexport const InviteSentTime = styled('div', {\n  width: '282px',\n})\n\nexport const VerifyButton = styled(Button, {\n  position: 'absolute',\n  right: 0,\n  top: '-8px',\n})\n\nexport const Root = styled('div', ({ $theme: { mediaQuery, sizing } }) => ({\n  marginBottom: sizing.scale500,\n  [mediaQuery.medium]: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}))\n\nexport const CheckboxControl = styled(\n  Control,\n  ({ $theme: { colors, sizing } }) => ({\n    width: '282px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: sizing.scale700,\n    color: colors.mono700,\n  })\n)\n\nexport const CustomFieldsWrapper = styled('div', {\n  width: '282px',\n})\n\nexport const CanManageSettingsFormControl = withStyle(CheckboxControl, {\n  marginBottom: 0,\n})\n\nexport const ToggleHelpText = withStyle(\n  CustomFieldsWrapper,\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.LabelSmall,\n    color: colors.contentSecondary,\n    marginTop: sizing.scale100,\n    marginBottom: sizing.scale700,\n  })\n)\n","import { styled } from '@jifflenow/brightui'\n\nexport const PicContainer = styled('div', ({ $theme: { colors, sizing } }) => ({\n  backgroundColor: colors.white,\n  width: '80px',\n  height: '80px',\n  position: 'relative',\n  marginBottom: sizing.scale300,\n}))\n\nexport const UploadRoot = styled(\n  'div',\n  ({ $theme: { sizing, mediaQuery } }) => ({\n    marginRight: sizing.scale400,\n    marginBottom: sizing.scale400,\n    [mediaQuery.medium]: {\n      marginBottom: 0,\n    },\n  })\n)\n\nexport const HiddenInput = styled('input', { display: 'none' })\n","import { AvatarOverrides } from '@jifflenow/brightui/avatar'\nimport { ButtonOverrides } from '@jifflenow/brightui/button'\n\ninterface StyleProps {\n  $didImageFailToLoad: boolean\n  $size?: string\n}\n\nexport const avatarOverrides: AvatarOverrides<StyleProps> = {\n  Initials: {\n    style: ({ $theme: { typography } }) => ({\n      ...typography.font1150,\n    }),\n  },\n}\n\nexport const modalButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n\nexport const IconButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { colors } }) => ({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: colors.white,\n      borderTopWidth: '1px',\n      borderLeftWidth: '1px',\n      borderRightWidth: '1px',\n      borderBottomWidth: '1px',\n      borderLeftStyle: 'solid',\n      borderRightStyle: 'solid',\n      borderTopStyle: 'solid',\n      borderBottomStyle: 'solid',\n      borderLeftColor: colors.mono700,\n      borderRightColor: colors.mono700,\n      borderTopColor: colors.mono700,\n      borderBottomColor: colors.mono700,\n      borderTopLeftRadius: '50%',\n      borderTopRightRadius: '50%',\n      borderBottomLeftRadius: '50%',\n      borderBottomRightRadius: '50%',\n      position: 'absolute',\n      right: '-2px',\n      top: 0,\n    }),\n  },\n}\n\nexport const changeButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: `-${sizing.scale500}`,\n    }),\n  },\n}\n","export enum Weekdays {\n  Monday = 1,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n  Sunday,\n}\n","import { VFC } from 'react'\nimport { Close } from '@jifflenow/brightui/icon'\nimport { IconButtonProps, IconButton } from '@jifflenow/brightui/button'\nimport { IconButtonOverrides } from './overrides'\n\nconst ImageDelete: VFC<Partial<IconButtonProps>> = props => (\n  <IconButton overrides={IconButtonOverrides} size={10} {...props} />\n)\n\nexport const ImageDeleteButton: VFC<Partial<IconButtonProps>> = props => (\n  <ImageDelete type=\"button\" {...props} aria-label=\"close\">\n    <Close color=\"#706E6B\" />\n  </ImageDelete>\n)\n","import { VFC, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useQueryClient } from 'react-query'\nimport { KIND } from '@jifflenow/brightui/button'\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  SIZE,\n} from '@jifflenow/brightui/modal'\nimport { showSuccessToast, showErrorToast } from 'utils/toast'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { MinWidthButton } from 'ui-components/common/styled-components'\nimport { useMe } from 'providers/MeProvider'\nimport { useProfileUser } from 'components/ProfileDrawer/providers/ProfileUserProvider'\nimport { useAvatarDelete } from 'rest'\nimport { sendMessage, Message } from 'utils/messageDispatcher'\nimport { ImageDeleteButton } from './ImageDeleteButton'\nimport { DeleteAvatarProps } from './types'\nimport { modalButtonOverrides } from './overrides'\n\nexport const DeleteAvatar: VFC<DeleteAvatarProps> = ({ revertAvatar }) => {\n  const queryClient = useQueryClient()\n  const { mutateAsync: deleteUserAvatar } = useAvatarDelete()\n  const loggedInUserId = useMe().data.id\n  const userId = useProfileUser().id\n\n  const [isOpen, setIsOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const close = () => setIsOpen(false)\n\n  const handleDelete = async () => {\n    close()\n    setLoading(true)\n    try {\n      await deleteUserAvatar({ userId })\n      setLoading(false)\n      revertAvatar()\n      showSuccessToast(\n        <FormattedMessage\n          defaultMessage=\"Image deleted successfully\"\n          description=\"Toast message\"\n        />\n      )\n      if (userId === loggedInUserId) {\n        queryClient.invalidateQueries('userMe')\n        sendMessage(Message.RELOAD_ME)\n      }\n    } catch (error) {\n      setLoading(false)\n      showErrorToast(\n        <FormattedMessage\n          defaultMessage=\"Error deleting image\"\n          description=\"Toast message\"\n        />\n      )\n    }\n  }\n\n  return (\n    <>\n      {loading && <ModalSpinner />}\n      <ImageDeleteButton type=\"button\" onClick={() => setIsOpen(true)} />\n      <Modal size={SIZE.small} onClose={close} isOpen={isOpen}>\n        <ModalHeader>\n          <FormattedMessage\n            defaultMessage=\"Delete Photo\"\n            description=\"Header title\"\n          />\n        </ModalHeader>\n        <ModalBody>\n          <FormattedMessage\n            defaultMessage=\"Are you sure you want to delete the profile image?\"\n            description=\"Confirmation message\"\n          />\n        </ModalBody>\n        <ModalFooter>\n          <MinWidthButton type=\"button\" kind={KIND.secondary} onClick={close}>\n            <FormattedMessage defaultMessage=\"Cancel\" description=\"Cancel\" />\n          </MinWidthButton>\n          <MinWidthButton\n            type=\"button\"\n            overrides={modalButtonOverrides}\n            kind={KIND.primary}\n            onClick={handleDelete}\n          >\n            <FormattedMessage defaultMessage=\"Delete\" description=\"Delete\" />\n          </MinWidthButton>\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { ModalBody as BaseModalBody } from '@jifflenow/brightui/modal'\nimport { FormControl as BaseFormControl } from '@jifflenow/brightui/form-control'\n\nexport const ModalBody = withStyle(BaseModalBody, ({ $theme: { sizing } }) => ({\n  maxHeight: 'auto',\n  paddingLeft: sizing.scale600,\n  paddingRight: sizing.scale600,\n}))\n\nexport const CropperContainer = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale900,\n}))\n\nexport const FormControl = styled(\n  BaseFormControl,\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale700,\n  })\n)\n","import { FC } from 'react'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { Paragraph1 } from '@jifflenow/brightui/typography'\nimport { Field, Validation } from 'ui-components/Field'\nimport { components } from 'types/openapi'\nimport { AvatarConsentFieldProps, AvatarConsentProps } from './types'\nimport { FormControl } from './styled-components'\n\ntype CustomConsent = components['schemas']['CustomConsent']\n\ntype TransformField = (props: CustomConsent) => AvatarConsentProps\n\nexport const transformConsent: TransformField = ({\n  field_name,\n  optionLabel,\n  helpText,\n  required,\n}: CustomConsent) => ({\n  name: field_name,\n  label: optionLabel,\n  helpText,\n  validations: required ? [Validation.REQUIRED] : [],\n})\n\nexport const AvatarConsentField: FC<AvatarConsentFieldProps> = props => {\n  const { name, label, helpText, validations } = props\n\n  return (\n    <Field<string>\n      type=\"checkbox\"\n      name={name}\n      validations={validations}\n      render={({ input, meta }) => (\n        <FormControl caption={helpText} error={meta.touched && meta.error}>\n          <Checkbox {...input}>\n            <Paragraph1\n              color=\"inherit\"\n              className=\"anchor-primary\"\n              // @ts-expect-error\n              dangerouslySetInnerHTML={{ __html: label }}\n            />\n          </Checkbox>\n        </FormControl>\n      )}\n    />\n  )\n}\n","import { VFC, useState, useMemo } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Form } from 'react-final-form'\nimport { Config } from 'final-form'\nimport { useQueryClient } from 'react-query'\nimport { Modal, ModalFooter, ModalHeader } from '@jifflenow/brightui/modal'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { Cropper } from 'ui-components/ImageCropper/Cropper'\nimport { MinWidthButton } from 'ui-components/common/styled-components'\nimport { getCroppedImg, MimeType, OutputType } from 'ui-components/ImageCropper'\nimport { useMe } from 'providers/MeProvider'\nimport { useProfileUser } from 'components/ProfileDrawer/providers/ProfileUserProvider'\nimport { useAvatarUpload } from 'rest'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { sendMessage, Message } from 'utils/messageDispatcher'\nimport { modalButtonOverrides } from '../overrides'\nimport {\n  AvatarConsent,\n  AvatarConsentProps,\n  FormValues,\n  UploadAvatarProps,\n} from './types'\nimport { CropperContainer, ModalBody } from './styled-components'\nimport { AvatarConsentField, transformConsent } from './AvatarConsentField'\n\nexport const UploadAvatar: VFC<UploadAvatarProps> = ({\n  data,\n  image,\n  onCancel,\n  onClose,\n  onSuccess,\n  onError,\n}) => {\n  const queryClient = useQueryClient()\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  })\n\n  const userId = useProfileUser().id\n  const loggedInUserId = useMe().data.id\n  const isUploadingForSelf = userId === loggedInUserId\n\n  const { isLoading: avatarUploadInProgress, mutateAsync } = useAvatarUpload()\n\n  const consents = data.custom_consents.avatar_upload_consent_message.data.map(\n    transformConsent\n  )\n\n  const getConsent = (consentName: AvatarConsent): AvatarConsentProps =>\n    consents.find(({ name }) => name === consentName)!\n\n  const consent = getConsent(\n    isUploadingForSelf\n      ? 'avatar_upload_self_consent_message'\n      : 'avatar_upload_behalf_consent_message'\n  )\n\n  const initialValue = useMemo(() => ({ [consent.name]: false }), [\n    consent.name,\n  ])\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async values => {\n    try {\n      const avatar = (await getCroppedImg(\n        URL.createObjectURL(image),\n        croppedAreaPixels,\n        'round',\n        image.type as MimeType,\n        OutputType.DATA_URL\n      )) as string\n      await mutateAsync({\n        avatar: {\n          content: avatar,\n          contentType: image.type,\n          fileName: 'avatar',\n        },\n        userId,\n        consentField: consent.name as AvatarConsent,\n        consent: values[consent.name as AvatarConsent],\n      })\n      onSuccess(avatar)\n      showSuccessToast(\n        <FormattedMessage\n          defaultMessage=\"Image uploaded successfully\"\n          description=\"Toast message\"\n        />\n      )\n      if (isUploadingForSelf) {\n        queryClient.invalidateQueries('userMe')\n        sendMessage(Message.RELOAD_ME)\n      }\n    } catch (error) {\n      console.error(error)\n      showErrorToast(\n        <FormattedMessage\n          defaultMessage=\"Error uploading image\"\n          description=\"Toast message\"\n        />\n      )\n    }\n\n    return undefined\n  }\n\n  const imageUrl = useMemo(() => URL.createObjectURL(image), [image])\n\n  return (\n    <>\n      {avatarUploadInProgress && <ModalSpinner />}\n      <Modal onClose={onClose} isOpen>\n        <Form<FormValues>\n          onSubmit={handleSubmit}\n          initialValues={initialValue}\n          render={({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <ModalHeader>\n                <FormattedMessage\n                  defaultMessage=\"Profile Photo\"\n                  description=\"Modal heading\"\n                />\n              </ModalHeader>\n              <ModalBody>\n                <CropperContainer>\n                  <Cropper\n                    image={imageUrl}\n                    cropShape=\"round\"\n                    onCropChange={setCroppedAreaPixels}\n                    onError={onError}\n                  />\n                </CropperContainer>\n                <AvatarConsentField {...consent} />\n              </ModalBody>\n              <ModalFooter>\n                <MinWidthButton\n                  type=\"button\"\n                  kind={KIND.secondary}\n                  onClick={onCancel}\n                >\n                  <FormattedMessage\n                    defaultMessage=\"Cancel\"\n                    description=\"Button label\"\n                  />\n                </MinWidthButton>\n                <MinWidthButton type=\"submit\" overrides={modalButtonOverrides}>\n                  <FormattedMessage\n                    defaultMessage=\"Save\"\n                    description=\"Button label\"\n                  />\n                </MinWidthButton>\n              </ModalFooter>\n            </form>\n          )}\n        />\n      </Modal>\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { Modal } from '@jifflenow/brightui/modal'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { ErrorSection } from 'ui-components/ErrorPage'\nimport { usePrivacyMessages } from 'rest'\nimport { EditAvatarProps } from './types'\nimport { ModalBody } from './styled-components'\nimport { UploadAvatar } from './UploadAvatar'\n\nexport const EditAvatar: VFC<EditAvatarProps> = props => {\n  const { onClose } = props\n  const {\n    isLoading,\n    error,\n    refetch,\n    data: { data } = { data: undefined },\n  } = usePrivacyMessages({ config: 'user_management_privacy_message' })\n\n  if (isLoading) {\n    return <ModalSpinner />\n  }\n\n  if (error) {\n    return (\n      <Modal onClose={onClose} isOpen>\n        <ModalBody>\n          <ErrorSection onButtonClick={() => refetch()} />\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  if (data) {\n    return <UploadAvatar data={data} {...props} />\n  }\n\n  return null\n}\n","import { VFC, useRef, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { Avatar as UserAvatar } from '@jifflenow/brightui/avatar'\nimport { useProfileUser } from 'components/ProfileDrawer/providers/ProfileUserProvider'\nimport { showErrorToast } from 'utils/toast'\nimport { PicContainer, HiddenInput, UploadRoot } from './styled-components'\nimport { avatarOverrides, changeButtonOverrides } from './overrides'\nimport { DeleteAvatar } from './DeleteAvatar'\nimport { EditAvatar } from './EditAvatar'\n\nconst allowedExtensions = /(\\.jpg|\\.jpeg|\\.png)$/iu\n\nexport const Avatar: VFC = () => {\n  const { avatar, firstName, lastName } = useProfileUser().attributes\n\n  const [image, setImage] = useState<Blob | null>()\n  const [userAvatar, setUserAvatar] = useState<string | undefined>(avatar)\n\n  const fileInput = useRef<HTMLInputElement>(null)\n\n  const showInvalidImageError = () =>\n    showErrorToast(\n      <FormattedMessage\n        defaultMessage=\"Supported formats are JPEG and PNG\"\n        description=\"Wrong file type error message for avatar image\"\n      />\n    )\n\n  const onFileChange = () => {\n    if (\n      fileInput.current?.value &&\n      !allowedExtensions.test(fileInput.current.value)\n    ) {\n      showInvalidImageError()\n      fileInput.current.value = ''\n    } else if (fileInput.current?.files?.length) {\n      setImage(fileInput.current?.files[0])\n      fileInput.current.value = ''\n    }\n  }\n\n  return (\n    <UploadRoot>\n      <PicContainer>\n        <UserAvatar\n          overrides={avatarOverrides}\n          name={`${firstName} ${lastName}`}\n          src={userAvatar}\n          size=\"80px\"\n        />\n        {userAvatar && <DeleteAvatar revertAvatar={() => setUserAvatar('')} />}\n      </PicContainer>\n      <HiddenInput\n        type=\"file\"\n        name=\"profilePicture\"\n        accept=\".png, .jpg, .jpeg\"\n        multiple={false}\n        ref={fileInput}\n        onChange={onFileChange}\n      />\n      {image ? (\n        <EditAvatar\n          image={image}\n          onSuccess={image => {\n            setUserAvatar(image)\n            setImage(null)\n          }}\n          onClose={() => setImage(null)}\n          onCancel={() => setImage(null)}\n          onError={() => {\n            setImage(null)\n            showInvalidImageError()\n          }}\n        />\n      ) : null}\n      <Button\n        type=\"button\"\n        kind={KIND.minimal}\n        onClick={() => fileInput.current?.click()}\n        overrides={changeButtonOverrides}\n        data-pendo=\"profile/edit/upload-photo\"\n      >\n        <FormattedMessage\n          defaultMessage=\"Change photo\"\n          description=\"Button label\"\n        />\n      </Button>\n    </UploadRoot>\n  )\n}\n","import { ChangeEvent, useMemo, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'react-final-form'\nimport { FieldValidator } from 'final-form'\nimport { Input } from '@jifflenow/brightui/input'\nimport { useMe } from 'providers/MeProvider'\nimport { getPrefixedInputOverride } from 'ui-components/common/overrides'\nimport { useValidatePersonalLinkFetcher } from 'rest'\nimport { asyncValidatorReducer } from 'utils/asyncValidatorReducer'\nimport { InputPrefix, Flex } from 'ui-components/common/styled-components'\nimport { FormControlForURL } from './styled-components'\nimport { PersonalLinkEditProps } from './types'\n\nconst messages = defineMessages({\n  personalLinkLabel: {\n    defaultMessage: 'Personal Meeting Link',\n    description: 'Field label',\n  },\n  required: {\n    defaultMessage: 'Required',\n    description: 'Field validation error message',\n  },\n  userNameNotAvailableMessage: {\n    defaultMessage: 'User name not available',\n    description: 'Personal link validation error message',\n  },\n})\n\nconst splitAt = (index: number) => (str: string) => [\n  str.slice(0, index),\n  str.slice(index),\n]\nexport const splitPersonalLink = (link: string | undefined) =>\n  (str => splitAt(str.lastIndexOf('/') + 1)(str))(link ?? '')\n\nconst simpleMemoize = (fn: FieldValidator<string>): FieldValidator<string> => {\n  let lastArg: string\n  let lastResult: string\n\n  return async (arg, ...rest) => {\n    if (arg !== lastArg) {\n      lastArg = arg\n      lastResult = await fn(arg, ...rest)\n    }\n\n    return lastResult\n  }\n}\n\nexport const PersonalLinkEdit: VFC<PersonalLinkEditProps> = ({\n  personalLink,\n}) => {\n  const { formatMessage } = useIntl()\n  const { id: userUuid } = useMe().data\n  const validatePersonalLink = useValidatePersonalLinkFetcher()\n  const [prefix, previousTokenValue] = splitPersonalLink(personalLink)\n\n  const [loading, setLoading] = useState(false)\n\n  const required: FieldValidator<string> = async token =>\n    token ? undefined : formatMessage(messages.required)\n\n  const validateUrl: FieldValidator<string> = useMemo(\n    () =>\n      simpleMemoize(async token => {\n        if (token === previousTokenValue) {\n          return undefined\n        }\n        try {\n          setLoading(true)\n          const personalLinkValid = await validatePersonalLink({\n            token,\n            userUuid,\n          })\n          setLoading(false)\n          return personalLinkValid\n            ? undefined\n            : formatMessage(messages.userNameNotAvailableMessage)\n        } catch (error) {\n          setLoading(false)\n          return undefined\n        }\n      }),\n    [formatMessage, previousTokenValue, userUuid, validatePersonalLink]\n  )\n\n  const validate = asyncValidatorReducer([required, validateUrl])\n\n  return (\n    <Field<string> name=\"personalUrlToken\" type=\"text\" validate={validate}>\n      {({ input, meta }) => {\n        const handleChange = (token: string) => {\n          input.onChange(token.replace(/[^\\dA-Za-z-]/gu, ''))\n        }\n\n        return (\n          <FormControlForURL\n            label={formatMessage(messages.personalLinkLabel)}\n            error={(meta.dirty || meta.touched) && meta.error}\n          >\n            <Flex>\n              <InputPrefix>{prefix}</InputPrefix>\n              <Input\n                {...input}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  handleChange(e.target.value)\n                }\n                id=\"personalUrlToken\"\n                autoComplete=\"off\"\n                overrides={getPrefixedInputOverride(loading)}\n              />\n            </Flex>\n          </FormControlForURL>\n        )\n      }}\n    </Field>\n  )\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { Field } from 'react-final-form'\nimport { CheckboxControl } from './styled-components'\n\nconst messages = defineMessages({\n  label: {\n    defaultMessage: 'Can request a new instance',\n    description: 'Field label',\n  },\n})\n\nexport const CanCreateInstance: VFC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Field<boolean>\n      name=\"canCreateEvent\"\n      render={({ input: { value, onChange } }) => (\n        <CheckboxControl\n          label={formatMessage(messages.label)}\n          data-pendo=\"profile/can-request-new-instance\"\n        >\n          <Checkbox\n            checkmarkType=\"toggle_round\"\n            id=\"can_create_instance\"\n            checked={Boolean(value)}\n            onChange={e => onChange(e.currentTarget.checked)}\n          />\n        </CheckboxControl>\n      )}\n    />\n  )\n}\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const linkButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing, colors } }) => ({\n      backgroundColor: colors.white,\n      padding: sizing.scale100,\n      marginTop: sizing.scale0,\n      marginLeft: sizing.scale400,\n      color: colors.primary,\n      ':hover': {\n        backgroundColor: 'none',\n      },\n      ':focus': {\n        backgroundColor: 'none',\n        outline: 'none',\n      },\n    }),\n  },\n}\n","import { FC, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useIntl, defineMessages } from 'react-intl'\nimport { DateTime } from 'luxon'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { Input } from '@jifflenow/brightui/input'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { Field } from 'ui-components/Field'\nimport { FormFieldProps } from 'components/CustomFormFields'\nimport { useMe } from 'providers/MeProvider'\nimport { putVerifyUser, usePortalV1Client } from 'rest'\nimport { useProfileUser } from '../../providers/ProfileUserProvider'\nimport { linkButtonOverrides } from './overrides'\nimport { EmailControl, InviteSentTime, VerifyButton } from './styled-components'\n\nconst messages = defineMessages({\n  verify: {\n    defaultMessage: 'Verify',\n    description: 'Error message',\n  },\n  resendVerificationLink: {\n    defaultMessage: 'Resend verification email',\n    description: 'Error message',\n  },\n  inviteSentTime: {\n    defaultMessage: 'Verification email sent on {dateTime}',\n    description: 'Field help text',\n  },\n  success: {\n    defaultMessage: 'Verification email is sent successfully',\n    description: 'Success message',\n  },\n  genericError: {\n    defaultMessage: 'Error Saving.',\n    description: 'Error message',\n  },\n})\n\nexport const PrimaryEmail: FC<FormFieldProps> = ({ name, label }) => {\n  const { formatMessage } = useIntl()\n  const client = usePortalV1Client()\n  const { id: loggedInUsersId } = useMe().data\n  const [showLoader, setShowLoader] = useState<boolean>(false)\n\n  const {\n    verified,\n    inviteLastSent: inviteSentTime,\n    userType,\n  } = useProfileUser().attributes\n\n  const { userId } = useParams<{ userId: string }>()\n  const isSomeoneElsesProfile = userId !== loggedInUsersId\n  const [showVerifyButton, setShowVerifyButton] = useState<boolean>(\n    isSomeoneElsesProfile && !verified && userType === 'internal'\n  )\n\n  const handleVerify = async (value: string) => {\n    try {\n      setShowLoader(true)\n      await putVerifyUser(client, { emails: [value] })\n      setShowLoader(false)\n      setShowVerifyButton(false)\n      showSuccessToast(formatMessage(messages.success))\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n\n    return undefined\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <Field<string>\n        name={name}\n        render={({ input, meta }) => (\n          <EmailControl label={label} error={meta.touched && meta.error}>\n            <>\n              {showVerifyButton && (\n                <VerifyButton\n                  type=\"button\"\n                  kind={KIND.minimal}\n                  overrides={linkButtonOverrides}\n                  onClick={() => handleVerify(input.value)}\n                  data-pendo=\"profile/edit/verify-email\"\n                >\n                  {formatMessage(\n                    inviteSentTime\n                      ? messages.resendVerificationLink\n                      : messages.verify\n                  )}\n                </VerifyButton>\n              )}\n              <Input {...input} id={name} disabled type=\"email\" />\n              {showVerifyButton && inviteSentTime && (\n                <InviteSentTime>\n                  {formatMessage(messages.inviteSentTime, {\n                    dateTime: DateTime.fromISO(inviteSentTime).toFormat('FF'),\n                  })}\n                </InviteSentTime>\n              )}\n            </>\n          </EmailControl>\n        )}\n      />\n    </>\n  )\n}\n","import { FC, useState, useEffect } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useField } from 'react-final-form'\nimport { Select, OnChangeParams, Option } from '@jifflenow/brightui/select'\nimport { showErrorToast } from 'utils/toast'\nimport { Field, Validation } from 'ui-components/Field'\nimport { FormFieldProps } from 'components/CustomFormFields'\nimport { useValidateDomain } from 'rest'\nimport { useProfileUser } from '../../providers/ProfileUserProvider'\nimport { FormControl } from './styled-components'\n\nexport const SecondaryEmail: FC<FormFieldProps> = props => {\n  const { name, label, disabled, validations } = props\n  const [newEmail, setNewEmail] = useState<string>('')\n  const {\n    attributes: { userType },\n  } = useProfileUser()\n\n  const {\n    meta: { error },\n    input: { value, onChange },\n  } = useField<string[]>('secondaryEmails')\n\n  const { run: validate } = useValidateDomain({\n    onResolve: ({ errors }) => {\n      if (errors?.email) {\n        showErrorToast(\n          <span\n            className=\"anchor-primary\"\n            dangerouslySetInnerHTML={{ __html: errors.email }}\n          />\n        )\n\n        onChange(value.filter(email => email !== newEmail))\n      }\n    },\n  })\n\n  useEffect(() => {\n    newEmail &&\n      !error &&\n      userType === 'internal' &&\n      validate({ email: newEmail, isAliasEmail: true })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newEmail, error, userType])\n\n  return (\n    <Field<string[]>\n      name={name}\n      multiple\n      parse={val => val.map(({ id }: Option) => id)}\n      format={val => (val ? val.map(val => ({ id: val, label: val })) : [])}\n      validations={[\n        Validation.EMAIL,\n        ...(validations?.required ? [Validation.REQUIRED] : []),\n      ]}\n      render={({ input, meta }) => (\n        <FormControl label={label} error={meta.error}>\n          <Select\n            {...input}\n            multi\n            id={name}\n            searchable\n            creatable\n            clearable\n            disabled={disabled}\n            backspaceClearsInputValue\n            onCloseResetsInput={false}\n            onBlurResetsInput={false}\n            onChange={({ value }: OnChangeParams) => {\n              const newValue = value.find(val => val.isCreatable)?.id as string\n\n              if (newValue && /^\\S+@\\S+$/u.test(newValue)) {\n                setNewEmail(newValue)\n              }\n              input.onChange(value)\n            }}\n            noResultsMsg={\n              <FormattedMessage\n                defaultMessage=\"Start typing to add an email address\"\n                description=\"Help text\"\n              />\n            }\n          />\n        </FormControl>\n      )}\n    />\n  )\n}\n","import { FC } from 'react'\nimport { fieldTypesMappings } from 'components/CustomFormFields/FormFields'\nimport { Validation } from 'ui-components/Field'\nimport { PrimaryEmail } from './PrimaryEmail'\nimport { SecondaryEmail } from './SecondaryEmail'\nimport { StandardFieldsProps } from './types'\n\nexport const StandardFormFields: FC<StandardFieldsProps> = ({\n  fields: fieldsList,\n}) => (\n  <>\n    {fieldsList.map((field, index) => {\n      if (field.name === 'email') {\n        return <PrimaryEmail key={index} {...field} />\n      }\n\n      if (field.name === 'secondaryEmails') {\n        return <SecondaryEmail key={index} {...field} />\n      }\n\n      const FormField = fieldTypesMappings[field.fieldType]\n      const { required, email } = field.validations ?? {}\n      const validations = [\n        required && Validation.REQUIRED,\n        email && Validation.EMAIL,\n      ].filter(Boolean) as Validation[]\n\n      return <FormField {...field} key={index} validations={validations} />\n    })}\n  </>\n)\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { Field } from 'react-final-form'\nimport { useMe } from 'providers/MeProvider'\nimport { useProfileUser } from '../../providers/ProfileUserProvider'\nimport {\n  CanManageSettingsFormControl,\n  ToggleHelpText,\n} from './styled-components'\n\nconst messages = defineMessages({\n  label: {\n    defaultMessage: 'Can manage settings',\n    description: 'Field label',\n  },\n  canManageHelpText: {\n    defaultMessage:\n      'Applicable only if the role is Meeting Manager at any instance',\n    description: 'Help text',\n  },\n})\n\nexport const CanManageSettings: VFC = () => {\n  const { formatMessage } = useIntl()\n  const {\n    attributes: {\n      role: loggedInUserRole,\n      privileges: { canManageSettings },\n    },\n    id: loggedInUserId,\n  } = useMe().data\n  const {\n    id: profileUserId,\n    attributes: { role: profileUserRole },\n  } = useProfileUser()\n\n  const isOwnProfile = loggedInUserId === profileUserId\n\n  return profileUserRole !== 'CSM' &&\n    (loggedInUserRole === 'CSM' ||\n      (canManageSettings && (isOwnProfile || loggedInUserRole === 'MM'))) ? (\n    <Field<boolean>\n      name=\"canManageSettings\"\n      render={({ input: { value, onChange } }) => (\n        <>\n          <CanManageSettingsFormControl\n            label={formatMessage(messages.label)}\n            data-pendo=\"profile/can-manage-settings\"\n          >\n            <Checkbox\n              checkmarkType=\"toggle_round\"\n              id=\"canManageSettings\"\n              checked={value}\n              onChange={e => onChange(e.currentTarget.checked)}\n              disabled={isOwnProfile}\n            />\n          </CanManageSettingsFormControl>\n          <ToggleHelpText>\n            {formatMessage(messages.canManageHelpText)}\n          </ToggleHelpText>\n        </>\n      )}\n    />\n  ) : null\n}\n","import { useEffect, useState, VFC } from 'react'\nimport { FormSpy, useForm } from 'react-final-form'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { useMe } from 'providers/MeProvider'\nimport { AppSource, useAppSource } from 'providers/AppSourceProvider'\nimport { CustomFormFields } from 'components/CustomFormFields'\nimport { useDirtyCheckDialog } from '../../Common/useDirtyCheckDialog'\nimport { RoleChangeDialog } from '../../Common/RoleChangeDialog'\nimport { Footer } from '../../Common'\nimport { MappedUserField } from '../../Settings'\nimport { Consents } from '../Consents'\nimport { FormProps, FormValues } from './types'\nimport { Container, Root, CustomFieldsWrapper } from './styled-components'\nimport { Avatar } from './Avatar'\nimport { PersonalLinkEdit } from './PersonalLinkEdit'\nimport { CanCreateInstance } from './CanCreateInstance'\nimport { StandardFormFields } from './StandardFormFields'\nimport { CanManageSettings } from './CanManageSettings'\n\nexport const EditForm: VFC<FormProps> = ({\n  formRenderProps: { dirty, handleSubmit, values, initialValues },\n  user,\n  formFields: { standardFields, customFields },\n  onCancel,\n  onSave,\n}) => {\n  const unload = useBeforeUnload()\n  const isSourceOutlook = useAppSource().app === AppSource.Outlook\n  const location = new URLSearchParams(window.location.search).get('location')\n\n  const {\n    id: profileUserId,\n    attributes: {\n      selfConsentMessage,\n      optOutMessage,\n      personalLink,\n      userType,\n      canRequestNewInstance,\n    },\n  } = user\n\n  const {\n    id: loggedInUserId,\n    attributes: { role: loggedInUserRole },\n  } = useMe().data\n\n  const { change, submit } = useForm()\n  const { role, mappedUsers } = values\n  const { role: initialRole } = initialValues\n\n  const isMyProfile = loggedInUserId === profileUserId\n\n  useDirtyCheckDialog({\n    isDirty: dirty,\n    onSave: () => onSave(values as FormValues),\n  })\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (initialRole !== role && mappedUsers?.length) {\n      setIsOpen(true)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialRole, role])\n\n  return (\n    <>\n      <form noValidate onSubmit={handleSubmit}>\n        <Container>\n          <Root>\n            <Avatar />\n            {personalLink && userType === 'internal' && (\n              <PersonalLinkEdit personalLink={personalLink} />\n            )}\n          </Root>\n          <CustomFieldsWrapper>\n            <StandardFormFields fields={standardFields} />\n          </CustomFieldsWrapper>\n          {!isSourceOutlook &&\n            (role === 'EA' || role === 'EX') &&\n            !location && <MappedUserField name=\"mappedUsers\" role={role} />}\n          {loggedInUserRole === 'CSM' &&\n            role === 'MM' &&\n            canRequestNewInstance && <CanCreateInstance />}\n          {userType === 'internal' && <CanManageSettings />}\n          <CustomFieldsWrapper>\n            <CustomFormFields fields={customFields} />\n          </CustomFieldsWrapper>\n          {isMyProfile && (\n            <Consents consent={selfConsentMessage} optOut={optOutMessage} />\n          )}\n        </Container>\n        <FormSpy\n          subscription={{\n            submitting: true,\n            validating: true,\n            dirty: true,\n            values: true,\n            valid: true,\n          }}\n        >\n          {({ submitting, validating, dirty, values, valid }) => (\n            <Footer\n              onDiscard={onCancel}\n              isLoading={submitting}\n              isDisabled={!dirty || submitting || validating}\n              hasForm\n              onSave={() => (valid ? onSave(values as FormValues) : submit())}\n              pendoPrefix=\"profile/edit\"\n            />\n          )}\n        </FormSpy>\n      </form>\n      {isOpen && (\n        <RoleChangeDialog\n          showMessage\n          onSuccess={() => {\n            change('mappedUsers', [])\n            setIsOpen(false)\n          }}\n          onClose={() => {\n            setIsOpen(false)\n          }}\n          onCancel={() => {\n            change('role', initialRole)\n            setIsOpen(false)\n          }}\n          pendoName=\"profile/role-change-dialog\"\n        />\n      )}\n    </>\n  )\n}\n","import { FC, useState, useMemo, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form as FinalForm } from 'react-final-form'\nimport createFocusDecorator from 'final-form-focus'\nimport createDecorator from 'final-form-calculate'\nimport { useQueryClient } from 'react-query'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { Option } from '@jifflenow/brightui/select'\nimport { useMe } from 'providers/MeProvider'\nimport { AppSource, useAppSource } from 'providers/AppSourceProvider'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { roles as roleLabel } from 'utils/messages'\nimport { HttpError, patchUserProfile, usePortalV2Client } from 'rest'\nimport { useRolesLazyQuery } from 'gql'\nimport { RolesDisplayNames } from 'gql/types/globalTypes'\nimport { fetchRoles_fetchRoles } from 'gql/types/fetchRoles'\nimport { FieldTypes, FormFieldProps } from 'components/CustomFormFields'\nimport { components } from 'types/openapi'\nimport {\n  Role,\n  standardFieldsToDisplay,\n  UserStandardFormFieldInfo,\n} from '../types'\nimport { EditProfileProps, FormValues } from './types'\nimport { transformField } from './transformFields'\nimport { EditForm } from './EditForm'\nimport { splitPersonalLink } from './PersonalLinkEdit'\n\ntype StaticFormField = Omit<\n  FormFieldProps,\n  'validations' | 'rules' | 'hidden'\n> & {\n  value: string | string[]\n  multi?: boolean\n  options?: Option[] | string[]\n  validations?: { required: boolean }\n  checked?: boolean\n}\n\ntype GeneralError = components['schemas']['GeneralError']\n\ntype Roles = (keyof typeof RolesDisplayNames)[]\n\nconst internalEditableRoles: Roles = ['MM', 'JMM', 'EX', 'EA', 'AM', 'Partner']\n\nconst adminRoles: Set<Role> = new Set(['CSM', 'MM', 'JMM'])\n\nconst jmmEditableRoles: Roles = ['EX', 'EA', 'AM', 'Partner']\n\nconst externalEditableRoles: Roles = ['ET']\n\nconst filterRoles = (roles: Roles) => ({\n  clientDisplayName,\n}: fetchRoles_fetchRoles) => roles.includes(clientDisplayName)\n\nconst focusDecorator = createFocusDecorator<FormValues>()\n\nconst messages = defineMessages({\n  role: {\n    defaultMessage: 'Company Role',\n    description: 'Field label',\n  },\n  roleHelpText: {\n    defaultMessage:\n      'To change or view the instance role go to Event Instances \\u2192 Settings',\n    description: 'Help text',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  success: {\n    defaultMessage: 'User profile updated successfully.',\n    description: 'Success message',\n  },\n})\n\nexport const EditProfile: FC<EditProfileProps> = ({\n  user: currentUser,\n  fields,\n  onCancel,\n  onNavigate,\n}) => {\n  const { formatMessage } = useIntl()\n  const queryClient = useQueryClient()\n  const isSourceOutlook = useAppSource().app === AppSource.Outlook\n  const location = new URLSearchParams(window.location.search).get('location')\n\n  const portalClient = usePortalV2Client()\n  const {\n    id: loggedInUserId,\n    attributes: { role: loggedInUserRole },\n  } = useMe().data\n  const [showLoader, setShowLoader] = useState(false)\n\n  const { id, attributes: user, relationships } = currentUser\n  const isViewingMyOwnOrAssumedProfile = loggedInUserId === id\n\n  const { fetchRoles, roles = [] } = useRolesLazyQuery({\n    onError: () => showErrorToast(formatMessage(messages.genericError)),\n  })\n\n  useEffect(() => {\n    !isViewingMyOwnOrAssumedProfile && fetchRoles()\n  }, [isViewingMyOwnOrAssumedProfile, fetchRoles])\n\n  const formFields = useMemo(() => {\n    const isRoleFieldDisabled =\n      loggedInUserRole === 'JMM' && !jmmEditableRoles.includes(user.role)\n\n    const isAdminRole = adminRoles.has(loggedInUserRole)\n\n    const roleField: StaticFormField = {\n      name: 'role',\n      value: user.role,\n      validations: { required: true },\n      fieldType: FieldTypes.DROPDOWN,\n      disabled:\n        !!location ||\n        !isAdminRole ||\n        isRoleFieldDisabled ||\n        isViewingMyOwnOrAssumedProfile ||\n        user.userType === 'external',\n      helpText: formatMessage(messages.roleHelpText),\n      label: formatMessage(messages.role),\n      options: isViewingMyOwnOrAssumedProfile\n        ? [\n            {\n              label: formatMessage(roleLabel[user.role]),\n              id: user.role,\n            },\n          ]\n        : roles\n            .filter(\n              filterRoles(\n                user.userType === 'internal'\n                  ? internalEditableRoles\n                  : externalEditableRoles\n              )\n            )\n            .filter(\n              ({ clientDisplayName: role }) =>\n                loggedInUserRole !== 'JMM' ||\n                isRoleFieldDisabled ||\n                jmmEditableRoles.includes(role)\n            )\n            .map(({ clientDisplayName: role }) => ({\n              label: formatMessage(roleLabel[role]),\n              id: role,\n            })),\n    }\n\n    const transformedFields = fields\n      .filter(\n        ({ attributes: { fieldInfo }, type }) =>\n          !(\n            (type === 'InternalUserStandardForm' ||\n              type === 'ExternalUserStandardForm') &&\n            !(fieldInfo as UserStandardFormFieldInfo).show\n          )\n      )\n      .map(field => transformField({ field, user }))\n    const [standardFormFields, customFields] = transformedFields.reduce(\n      (acc, curr) => {\n        curr.name.indexOf('customFields.') === 0\n          ? acc[1].push(curr)\n          : acc[0].push(curr)\n        return acc\n      },\n      [[] as FormFieldProps[], [] as FormFieldProps[]]\n    )\n\n    const standardFields = standardFieldsToDisplay\n      .filter(fieldName =>\n        standardFormFields.find(({ name }) => name === fieldName)\n      )\n      .map(\n        fieldName =>\n          standardFormFields.find(\n            ({ name }) => name === fieldName\n          ) as FormFieldProps\n      )\n\n    return {\n      customFields,\n      standardFields: [\n        ...standardFields,\n        ...(isSourceOutlook ? [] : [roleField]),\n      ],\n    }\n  }, [\n    location,\n    fields,\n    formatMessage,\n    isSourceOutlook,\n    isViewingMyOwnOrAssumedProfile,\n    loggedInUserRole,\n    roles,\n    user,\n  ])\n\n  const initialValues = useMemo(\n    () => ({\n      ...user,\n      ...(user.personalLink\n        ? { personalUrlToken: splitPersonalLink(user.personalLink)[1] }\n        : null),\n      mappedUsers:\n        relationships?.mappedUsers?.map(\n          ({ id, attributes: { firstName, lastName } }) => ({\n            label: `${firstName} ${lastName}`,\n            id,\n          })\n        ) ?? [],\n    }),\n    [relationships?.mappedUsers, user]\n  )\n\n  const roleFieldDecorator = useMemo(\n    () =>\n      createDecorator({\n        field: 'role',\n        updates: {\n          mappedUsers: (_, allValues, prevValues) => {\n            const { role, mappedUsers } = allValues as FormValues\n            const { role: prevRole } = prevValues as FormValues\n\n            if (!Object.keys(prevValues as FormValues).length) {\n              return mappedUsers\n            }\n\n            if (\n              (initialValues.role === 'EA' && role === 'EA') ||\n              (initialValues.role === 'EX' && role === 'EX')\n            ) {\n              return initialValues.mappedUsers\n            }\n\n            if (\n              (prevRole === 'EX' && initialValues.role === 'EA') ||\n              (prevRole === 'EA' && initialValues.role === 'EX')\n            ) {\n              return []\n            }\n\n            return mappedUsers\n          },\n        },\n      }),\n    [initialValues.role, initialValues.mappedUsers]\n  )\n\n  const handleSubmit: (arg: FormValues) => void = async ({\n    mappedUsers,\n    ...restValues\n  }) => {\n    try {\n      setShowLoader(true)\n      await patchUserProfile(\n        portalClient,\n        {\n          ...restValues,\n          relationships: {\n            mappedUsers: mappedUsers?.map(({ id }) => id as string) ?? [],\n          },\n        },\n        id\n      )\n      queryClient.invalidateQueries('fetchUser')\n      onCancel()\n      showSuccessToast(formatMessage(messages.success))\n      return undefined\n    } catch (e) {\n      setShowLoader(false)\n      if (e instanceof HttpError && e.response.status === 403) {\n        const errorMessage =\n          (e as GeneralError).errors[0].title ??\n          formatMessage(messages.genericError)\n        showErrorToast(\n          <span\n            className=\"anchor-primary\"\n            dangerouslySetInnerHTML={{ __html: errorMessage }}\n          />\n        )\n        return undefined\n      }\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  const handleSaveAndNext: Config<FormValues>['onSubmit'] = async args => {\n    const successFullSubmission = await handleSubmit(args)\n    successFullSubmission === undefined && onNavigate?.()\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <FinalForm<FormValues>\n        onSubmit={handleSaveAndNext}\n        initialValues={initialValues}\n        decorators={[\n          focusDecorator,\n          // TODO: Awaiting fix for this [bug](https://github.com/final-form/final-form-calculate/issues/38)\n          // to remove `ts-expect-error`.\n          // @ts-expect-error\n          roleFieldDecorator,\n        ]}\n        render={props => (\n          <EditForm\n            formRenderProps={props}\n            user={currentUser}\n            formFields={formFields}\n            onCancel={onCancel}\n            onSave={handleSubmit}\n          />\n        )}\n      />\n    </>\n  )\n}\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Title } from '../Common/styled-components'\nimport { ButtonsContainer, TitleRoot } from './styled-components'\n\nconst messages = defineMessages({\n  title: {\n    defaultMessage: 'Profile',\n    description: 'Page title',\n  },\n})\n\nexport const ProfileTitle: FC = ({ children }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <TitleRoot>\n      <Title>{formatMessage(messages.title)}</Title>\n      <ButtonsContainer>{children}</ButtonsContainer>\n    </TitleRoot>\n  )\n}\n","import { AvatarOverrides } from '@jifflenow/brightui/avatar'\nimport { TableOverrides } from '@jifflenow/brightui/table-semantic'\nimport { TagOverrides } from '@jifflenow/brightui/tag'\nimport { ButtonOverrides } from '@jifflenow/brightui/button'\n\nconst Root: TableOverrides['Root'] = {\n  style: ({ $theme: { mediaQuery, sizing } }) => ({\n    borderStyle: 'none',\n    paddingTop: sizing.scale750,\n    width: '100%',\n    [mediaQuery.medium]: {\n      maxWidth: '420px',\n    },\n  }),\n}\n\nconst TableHead: TableOverrides['TableHead'] = {\n  style: {\n    display: 'none',\n  },\n}\n\nconst TableBodyRow: TableOverrides['TableBodyRow'] = {\n  style: { ':hover': { backgroundColor: 'transparent' } },\n}\n\nconst TableBodyCell: TableOverrides['TableBodyCell'] = {\n  style: ({ $colIndex, $theme: { typography, colors } }) => ({\n    maxWidth: '300px',\n    paddingLeft: 0,\n    ...typography.Paragraph2,\n    ...($colIndex === 0 ? { color: colors.mono700 } : null),\n  }),\n}\n\nexport const tableOverrides = {\n  Root: Root as any,\n  TableHead: TableHead as any,\n  TableBodyRow: TableBodyRow as any,\n  TableBodyCell: TableBodyCell as any,\n}\n\nexport const tagOverrides: TagOverrides = {\n  Root: {\n    style: ({ $theme: { colors, sizing } }) => ({\n      borderLeftColor: colors.mono600,\n      borderRightColor: colors.mono600,\n      borderTopColor: colors.mono600,\n      borderBottomColor: colors.mono600,\n      marginLeft: 0,\n      marginRight: sizing.scale400,\n    }),\n  },\n  Text: {\n    style: ({ $theme: { colors } }) => ({\n      color: colors.mono900,\n      maxWidth: '160px',\n    }),\n  },\n}\n\ninterface StyleProps {\n  $didImageFailToLoad: boolean\n  $size?: string\n}\n\nexport const avatarOverrides: AvatarOverrides<StyleProps> = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      marginRight: sizing.scale600,\n    }),\n  },\n  Initials: {\n    style: ({ $theme: { typography } }) => ({\n      ...typography.font1150,\n    }),\n  },\n}\n\nexport const editButtonOverride: ButtonOverrides = {\n  BaseButton: {\n    style: {\n      flex: 1,\n    },\n  },\n}\n\nexport const copyButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      backgroundColor: 'transparent',\n      borderTopWidth: 0,\n      borderRightWidth: 0,\n      borderBottomWidth: 0,\n      borderLeftWidth: 0,\n      paddingLeft: sizing.scale100,\n      paddingRight: sizing.scale100,\n      paddingTop: sizing.scale100,\n      paddingBottom: sizing.scale100,\n    }),\n  },\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const AvatarImg = styled('img', ({ $theme: { sizing } }) => ({\n  width: '80px',\n  height: '80px',\n  borderRadius: '100%',\n  marginRight: sizing.scale600,\n}))\n\nexport const AvatarRoot = styled('div', ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap',\n  [mediaQuery.small]: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n}))\n\nexport const PersonalLinkRoot = styled(\n  'div',\n  ({ $theme: { sizing, mediaQuery } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: sizing.scale400,\n    [mediaQuery.small]: {\n      marginTop: 0,\n    },\n  })\n)\n\nexport const PersonalLinkLabel = styled(\n  'label',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.LabelSmall,\n    marginBottom: sizing.scale500,\n  })\n)\n\nexport const PersonalLink = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.LabelSmall,\n    color: colors.mono700,\n  })\n)\n\nexport const RichTextWrapper = styled('div', {\n  marginTop: '-1rem',\n  marginBottom: '-1rem',\n})\n\nexport const CopyRoot = styled('div', ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  [mediaQuery.medium]: {},\n}))\n\nexport const CopyButtonRoot = styled('div', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale200,\n}))\n","import { FC, useMemo, VFC } from 'react'\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Table, DIVIDER } from '@jifflenow/brightui/table-semantic'\nimport { Avatar as UserAvatar } from '@jifflenow/brightui/avatar'\nimport { Tag, VARIANT } from '@jifflenow/brightui/tag'\nimport { Button, KIND, IconButton } from '@jifflenow/brightui/button'\nimport { CopyOutlined } from '@jifflenow/brightui/icon'\nimport { useMe } from 'providers/MeProvider'\nimport { useAppSource, AppSource } from 'providers/AppSourceProvider'\nimport { roles } from 'utils/messages'\nimport { useMediaQuery } from 'utils/useMediaQuery'\nimport { FooterContainer } from 'ui-components/Drawer'\nimport { components } from 'types/openapi'\nimport { showSuccessToast } from 'utils/toast'\nimport { processRulesOnFieldsMount } from 'components/CustomFormFields/utils'\nimport { FormFieldProps } from 'components/CustomFormFields'\nimport { transformField } from '../EditProfile/transformFields'\nimport { ProfileTitle } from '../ProfileTitle'\nimport { Container } from '../../Common/styled-components'\nimport { Consents } from '../Consents'\nimport { standardFieldsToDisplay, UserStandardFormFieldInfo } from '../types'\nimport { ViewProfileProps } from './types'\nimport {\n  tableOverrides,\n  tagOverrides,\n  avatarOverrides,\n  editButtonOverride,\n  copyButtonOverrides,\n} from './overrides'\nimport {\n  AvatarImg,\n  AvatarRoot,\n  PersonalLinkRoot,\n  PersonalLinkLabel,\n  PersonalLink,\n  CopyRoot,\n  CopyButtonRoot,\n  RichTextWrapper,\n} from './styled-components'\n\ntype CustomForm = components['schemas']['CustomFormFieldInfo']\n\nconst messages = defineMessages({\n  altAvatar: {\n    defaultMessage: 'User avatar',\n    description: 'Alt-text',\n  },\n  role: {\n    defaultMessage: 'Company Role',\n    description: 'Field label',\n  },\n  editButtonLabel: {\n    defaultMessage: 'Edit Profile',\n    description: 'Button label',\n  },\n  personalLinkLabel: {\n    defaultMessage: 'Personal Meeting Link',\n    description: 'Field label',\n  },\n  copiedLabel: {\n    defaultMessage: 'Copied',\n    description: 'Field label',\n  },\n  labelForEA: {\n    defaultMessage: 'Managed Attendees at Company',\n    description: 'Field label',\n  },\n  labelForEX: {\n    defaultMessage: 'Executive Admins at Company',\n    description: 'Field label',\n  },\n  createInstance: {\n    defaultMessage: 'Can request a new instance',\n    description: 'Field label',\n  },\n  No: {\n    defaultMessage: 'No',\n    description: 'Disabled',\n  },\n  Yes: {\n    defaultMessage: 'Yes',\n    description: 'Enabled',\n  },\n  canManageSettingsLabel: {\n    defaultMessage: 'Can manage settings',\n    description: 'Field label',\n  },\n})\n\nconst customInputFields: CustomForm['widget'][] = [\n  'textfield',\n  'numberfield',\n  'checkbox',\n  'textarea',\n  'dropdown',\n  'multiselect_dropdown',\n]\n\nconst EditButton: VFC<{ onClick: () => void }> = ({ onClick }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <Button\n      kind={KIND.secondary}\n      onClick={onClick}\n      overrides={useMediaQuery('medium') ? {} : editButtonOverride}\n      data-pendo=\"profile/view/edit-mode\"\n    >\n      {formatMessage(messages.editButtonLabel)}\n    </Button>\n  )\n}\n\nexport const ViewProfile: FC<ViewProfileProps> = props => {\n  const { formatMessage } = useIntl()\n  const isSourceOutlook = useAppSource().app === AppSource.Outlook\n  const { fields, onEditClick } = props\n  const user = props.user.attributes\n  const {\n    id: loggedInUserId,\n    attributes: {\n      role: loggedInUserRole,\n      privileges: { canManageSettings },\n    },\n  } = useMe().data\n  const { id: profileUserId, relationships: relations } = props.user\n  const location = new URLSearchParams(window.location.search).get('location')\n  const isMyProfile = loggedInUserId === profileUserId\n\n  const transformedFields = fields.map(field => transformField({ field, user }))\n  const customFields = transformedFields.reduce((acc, curr) => {\n    curr.name.indexOf('customFields.') === 0 && acc.push(curr)\n    return acc\n  }, [] as FormFieldProps[])\n\n  const filteredCustomFields = processRulesOnFieldsMount(\n    customFields,\n    user.customFields || {},\n    loggedInUserRole\n  )\n\n  const userInfo = useMemo(\n    // eslint-disable-next-line complexity\n    () => [\n      ...standardFieldsToDisplay\n        .filter(key =>\n          fields.find(\n            ({ type, attributes }) =>\n              (type === 'InternalUserStandardForm' ||\n                type === 'ExternalUserStandardForm') &&\n              attributes.fieldName === key &&\n              (attributes.fieldInfo as UserStandardFormFieldInfo).show\n          )\n        )\n        .map(key => {\n          const value = user[key]\n\n          return {\n            label: fields.find(field => field.attributes.fieldName === key)\n              ?.attributes.displayName,\n            value: Array.isArray(value)\n              ? value.map((value, index) => (\n                  <Tag\n                    key={index}\n                    closeable={false}\n                    variant={VARIANT.outlined}\n                    overrides={tagOverrides}\n                  >\n                    {value}\n                  </Tag>\n                ))\n              : value,\n          }\n        }),\n      ...(isSourceOutlook\n        ? []\n        : user.userType === 'internal'\n        ? [\n            {\n              label: formatMessage(messages.role),\n              value: formatMessage(roles[user.role]),\n            },\n            ...((user.role === 'EA' || user.role === 'EX') && !location\n              ? [\n                  {\n                    label: formatMessage(\n                      messages[user.role === 'EA' ? 'labelForEA' : 'labelForEX']\n                    ),\n                    value: relations?.mappedUsers?.map(\n                      ({ attributes: { firstName, lastName } }, index) => (\n                        <Tag\n                          key={index}\n                          closeable={false}\n                          variant={VARIANT.outlined}\n                          overrides={tagOverrides}\n                        >\n                          {firstName}&nbsp;{lastName}\n                        </Tag>\n                      )\n                    ),\n                  },\n                ]\n              : []),\n          ]\n        : [\n            {\n              label: formatMessage(messages.role),\n              value: formatMessage(roles[user.role]),\n            },\n          ]),\n      ...(loggedInUserRole === 'CSM' &&\n      user.role === 'MM' &&\n      user.canRequestNewInstance\n        ? [\n            {\n              label: formatMessage(messages.createInstance),\n              value: user.canCreateEvent\n                ? formatMessage(messages.Yes)\n                : formatMessage(messages.No),\n            },\n          ]\n        : []),\n      ...(user.userType === 'internal' &&\n      user.role !== 'CSM' &&\n      (loggedInUserRole === 'CSM' ||\n        (canManageSettings && (isMyProfile || loggedInUserRole === 'MM')))\n        ? [\n            {\n              label: formatMessage(messages.canManageSettingsLabel),\n              value: formatMessage(\n                user.canManageSettings ? messages.Yes : messages.No\n              ),\n            },\n          ]\n        : []),\n      ...fields\n        .filter(({ attributes: { fieldName } }) =>\n          filteredCustomFields.find(\n            ({ name }) => name.indexOf(fieldName) !== -1\n          )\n        )\n        .filter(({ type, attributes }) => {\n          const { widget, hidden } = attributes.fieldInfo as CustomForm\n\n          return (\n            (type === 'InternalUserCustomForm' ||\n              type === 'ExternalUserCustomForm') &&\n            customInputFields.includes(widget) &&\n            !hidden\n          )\n        })\n        .map(({ attributes }) => {\n          const { label, widget } = attributes.fieldInfo as CustomForm\n          const value = user.customFields?.[attributes.fieldName]\n\n          return {\n            label,\n            value: value ? (\n              Array.isArray(value) ? (\n                value.map((val, index) => (\n                  <Tag\n                    key={index}\n                    closeable={false}\n                    variant={VARIANT.outlined}\n                    overrides={tagOverrides}\n                  >\n                    {val}\n                  </Tag>\n                ))\n              ) : widget === ('textarea' as CustomForm['widget']) ? (\n                <RichTextWrapper\n                  dangerouslySetInnerHTML={{\n                    __html: value,\n                  }}\n                />\n              ) : (\n                value\n              )\n            ) : (\n              '--'\n            ),\n          }\n        }),\n    ],\n    [\n      formatMessage,\n      user,\n      isSourceOutlook,\n      location,\n      relations?.mappedUsers,\n      loggedInUserRole,\n      isMyProfile,\n      canManageSettings,\n      fields,\n      filteredCustomFields,\n    ]\n  )\n\n  const handleClick = () =>\n    showSuccessToast(\n      <FormattedMessage\n        defaultMessage=\"The link is copied to clipboard and is ready to be shared.\"\n        description=\"Personal link copy success message\"\n      />\n    )\n\n  return (\n    <>\n      <Container>\n        {useMediaQuery('medium') ? (\n          <ProfileTitle>\n            <EditButton onClick={onEditClick} />\n          </ProfileTitle>\n        ) : null}\n        <AvatarRoot>\n          {user.avatar ? (\n            <AvatarImg\n              src={user.avatar}\n              alt={formatMessage(messages.altAvatar)}\n            />\n          ) : (\n            <UserAvatar\n              overrides={avatarOverrides}\n              name={`${user.firstName} ${user.lastName}`}\n              size=\"80px\"\n            />\n          )}\n          {user.personalLink && user.userType === 'internal' && (\n            <PersonalLinkRoot>\n              <PersonalLinkLabel>\n                {formatMessage(messages.personalLinkLabel)}\n              </PersonalLinkLabel>\n              <CopyRoot>\n                <PersonalLink>{user.personalLink}</PersonalLink>\n                <CopyButtonRoot>\n                  <CopyToClipboard text={user.personalLink}>\n                    <IconButton\n                      type=\"button\"\n                      size={16}\n                      overrides={copyButtonOverrides}\n                      onClick={handleClick}\n                    >\n                      <CopyOutlined />\n                    </IconButton>\n                  </CopyToClipboard>\n                </CopyButtonRoot>\n              </CopyRoot>\n            </PersonalLinkRoot>\n          )}\n        </AvatarRoot>\n\n        <Table\n          /**\n           * Below columns prop is required to render the table and\n           * it's hidden form the overrides as there is no need to\n           * render the table header as per the requirements.\n           */\n          columns={['', '']}\n          data={userInfo.map(({ label, value }) => [label, value])}\n          overrides={tableOverrides}\n          horizontalScrollWidth=\"420px\"\n          divider={DIVIDER.clean}\n        />\n        {isMyProfile && (\n          <Consents\n            consent={user.selfConsentMessage}\n            optOut={user.optOutMessage}\n          />\n        )}\n      </Container>\n      {useMediaQuery('medium') ? null : (\n        <FooterContainer>\n          <EditButton onClick={onEditClick} />\n        </FooterContainer>\n      )}\n    </>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const ProfileLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"600px\"\n      height=\"500px\"\n      viewBox=\"0 0 1000 500\"\n      {...loaderOptions}\n    >\n      <circle cx=\"40\" cy=\"40\" r=\"40\" stroke=\"black\" strokeWidth=\"1\" />\n\n      <rect y=\"112\" width=\"60\" height=\"10\" />\n      <rect y=\"112\" x=\"150\" rx=\"3\" ry=\"3\" width=\"60\" height=\"10\" />\n\n      <rect y=\"142\" width=\"60\" height=\"10\" />\n      <rect y=\"142\" x=\"150\" rx=\"3\" ry=\"3\" width=\"60\" height=\"10\" />\n\n      <rect y=\"172\" width=\"100\" height=\"10\" />\n      <rect y=\"172\" x=\"150\" rx=\"3\" ry=\"3\" width=\"100\" height=\"10\" />\n\n      <rect y=\"202\" width=\"100\" height=\"10\" />\n      <rect y=\"202\" x=\"150\" rx=\"3\" ry=\"3\" width=\"100\" height=\"10\" />\n\n      <rect y=\"232\" width=\"60\" height=\"10\" />\n      <rect y=\"232\" x=\"150\" rx=\"3\" ry=\"3\" width=\"60\" height=\"10\" />\n\n      <rect y=\"262\" width=\"60\" height=\"10\" />\n      <rect y=\"262\" x=\"150\" rx=\"3\" ry=\"3\" width=\"60\" height=\"10\" />\n\n      <rect y=\"292\" width=\"100\" height=\"10\" />\n      <rect y=\"292\" x=\"150\" rx=\"3\" ry=\"3\" width=\"100\" height=\"10\" />\n\n      <rect y=\"322\" width=\"100\" height=\"10\" />\n      <rect y=\"322\" x=\"150\" rx=\"3\" ry=\"3\" width=\"100\" height=\"10\" />\n    </ContentLoader>\n  )\n}\n","import { VFC, useState, useEffect, useMemo } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useUserForms } from 'rest'\nimport { useMe } from 'providers/MeProvider'\nimport { showErrorToast } from 'utils/toast'\nimport { Header } from '../Common'\nimport { Root, Body, Container } from '../Common/styled-components'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { EditProfile } from './EditProfile'\nimport { ViewProfile } from './ViewProfile'\nimport { ProfileLoader } from './ProfileLoader'\nimport { ProfileProps } from './types'\n\nconst messages = defineMessages({\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nexport const Profile: VFC<ProfileProps> = ({ onNavigate }) => {\n  const { formatMessage } = useIntl()\n  const user = useProfileUser()\n\n  const [isViewMode, setIsViewMode] = useState(\n    !!useMe().meta.eMeetProfileSetupReminded\n  )\n\n  const { error, isPending, data: formData } = useUserForms({\n    userType: user.attributes.userType,\n  })\n\n  const formFields = useMemo(\n    () =>\n      formData?.data.map(field =>\n        field.attributes.fieldName === 'secondaryEmail'\n          ? {\n              ...field,\n              attributes: { ...field.attributes, fieldName: 'secondaryEmails' },\n            }\n          : field\n      ) ?? [],\n    [formData?.data]\n  )\n\n  if (error) {\n    showErrorToast(formatMessage(messages.genericError))\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem('profile.showInEdit') === 'true') {\n      localStorage.removeItem('profile.showInEdit')\n      setIsViewMode(false)\n    }\n  }, [])\n\n  return (\n    <Root>\n      <Header />\n      <Body>\n        {isPending && (\n          <Container>\n            <ProfileLoader />\n          </Container>\n        )}\n        {!isPending && user && formData ? (\n          isViewMode ? (\n            <ViewProfile\n              user={user}\n              fields={formFields}\n              onEditClick={() => setIsViewMode(false)}\n            />\n          ) : (\n            <EditProfile\n              user={user}\n              fields={formFields}\n              onCancel={() => setIsViewMode(true)}\n              onNavigate={onNavigate}\n            />\n          )\n        ) : null}\n      </Body>\n    </Root>\n  )\n}\n","import {\n  FC,\n  Dispatch,\n  SetStateAction,\n  useState,\n  createContext,\n  useContext,\n  useMemo,\n} from 'react'\n// TODO: check if both mapped and unmapped providers can be managed by one\n\ntype All = {\n  mapTo?: boolean\n}\n\ntype Item = {\n  uuid: string\n  mapTo?: boolean\n}\n\ntype ItemsAgainstIDs = {\n  [uuid: string]: Item\n}\n\ntype ContextT<All, Item> = {\n  pageNumber: number\n  setPageNumber: Dispatch<SetStateAction<number>>\n  isAllSelected: () => All\n  isMappedUuidListEmpty: () => boolean\n  toggleSelectAll: (all: All) => void\n  toggleSelectItem: (item: Item) => void\n  isItemSelected: (uuid: string) => All\n  selections: () => ItemsAgainstIDs\n  mappedUuidList: () => Set<string>\n  clearAll: () => void\n}\n\nconst Context = createContext<ContextT<All, Item> | undefined>(undefined)\n\nconst useTopicsMappedSelection = () => {\n  const [pageNumber, setPageNumber] = useState(1)\n  const [selectAllInfo, setSelectAllInfo] = useState<All>({})\n\n  const [editedIDs, setEditedIDs] = useState<Set<string>>(new Set())\n\n  const [editedItems, setEditedItems] = useState<ItemsAgainstIDs>({})\n\n  const toggleSelectAll = (all: All) => {\n    setSelectAllInfo(items => ({ ...items, ...all }))\n    const editedItemsCopy = { ...editedItems }\n\n    Object.keys(editedItemsCopy).forEach(key => {\n      editedItemsCopy[key] = { ...editedItemsCopy[key], ...all }\n    })\n\n    setEditedItems(editedItemsCopy)\n  }\n\n  const toggleSelectItem = (item: Item) => {\n    if (editedIDs.has(item.uuid)) {\n      const selectionValueCopy = { ...editedItems }\n      selectionValueCopy[item.uuid] = {\n        ...selectionValueCopy[item.uuid],\n        ...item,\n      }\n      setEditedItems(selectionValueCopy)\n    } else {\n      setEditedIDs(items => new Set(items).add(item.uuid))\n      setEditedItems(items => ({\n        ...items,\n        [item.uuid]: { ...item },\n      }))\n    }\n  }\n\n  const isAllSelected = () => selectAllInfo\n\n  const isItemSelected = (uuid: string) => editedItems[uuid]\n\n  const selections = () => editedItems\n\n  const isMappedUuidListEmpty = () => Array.from(editedIDs).length === 0\n  const mappedUuidList = () => editedIDs\n\n  const clearAll = () => {\n    setEditedIDs(new Set())\n    setEditedItems({})\n    setSelectAllInfo({})\n  }\n\n  return useMemo(\n    () => ({\n      pageNumber,\n      setPageNumber,\n      isAllSelected,\n      toggleSelectAll,\n      toggleSelectItem,\n      isMappedUuidListEmpty,\n      isItemSelected,\n      selections,\n      mappedUuidList,\n      clearAll,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isAllSelected, editedIDs, editedItems, pageNumber]\n  )\n}\n\nexport const MappedTopicsSelectionsProvider: FC = props => (\n  <Context.Provider value={useTopicsMappedSelection()}>\n    {props.children}\n  </Context.Provider>\n)\n\nexport const useSelection = () => {\n  const context = useContext(Context)\n  /* istanbul ignore next */\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error(\n      'useSelection must be used within a MappedTopicsSelectionProvider'\n    )\n  }\n\n  return context!\n}\n","import {\n  FC,\n  Dispatch,\n  SetStateAction,\n  useState,\n  createContext,\n  useContext,\n  useMemo,\n} from 'react'\n\n// TODO: check if both mapped and unmapped providers can be managed by one\n\ntype All = {\n  mapTo?: boolean\n}\n\ntype Item = {\n  uuid: string\n  mapTo?: boolean\n}\n\ntype ItemsAgainstIDs = {\n  [uuid: string]: Item\n}\n\ntype ContextT<All, Item> = {\n  pageNumber: number\n  setPageNumber: Dispatch<SetStateAction<number>>\n  isAllSelected: () => All\n  isUnMappedUuidListEmpty: () => boolean\n  toggleSelectAll: (all: All) => void\n  toggleSelectItem: (item: Item) => void\n  isItemSelected: (uuid: string) => All\n  selections: () => ItemsAgainstIDs\n  unMappedUuidList: () => Set<string>\n  clearAll: () => void\n}\n\nconst Context = createContext<ContextT<All, Item> | undefined>(undefined)\n\nconst useUnMappedTopicsMappedSelection = () => {\n  const [pageNumber, setPageNumber] = useState(1)\n  const [selectAllInfo, setSelectAllInfo] = useState<All>({})\n\n  const [editedIDs, setEditedIDs] = useState<Set<string>>(new Set())\n\n  const [editedItems, setEditedItems] = useState<ItemsAgainstIDs>({})\n\n  const toggleSelectAll = (all: All) => {\n    setSelectAllInfo(items => ({ ...items, ...all }))\n    const editedItemsCopy = { ...editedItems }\n\n    Object.keys(editedItemsCopy).forEach(key => {\n      editedItemsCopy[key] = { ...editedItemsCopy[key], ...all }\n    })\n\n    setEditedItems(editedItemsCopy)\n  }\n\n  const toggleSelectItem = (item: Item) => {\n    if (editedIDs.has(item.uuid)) {\n      const selectionValueCopy = { ...editedItems }\n      selectionValueCopy[item.uuid] = {\n        ...selectionValueCopy[item.uuid],\n        ...item,\n      }\n      setEditedItems(selectionValueCopy)\n    } else {\n      setEditedIDs(items => new Set(items).add(item.uuid))\n      setEditedItems(items => ({\n        ...items,\n        [item.uuid]: { ...item },\n      }))\n    }\n  }\n\n  const isAllSelected = () => selectAllInfo\n\n  const isItemSelected = (uuid: string) => editedItems[uuid]\n\n  const selections = () => editedItems\n\n  const isUnMappedUuidListEmpty = () => Array.from(editedIDs).length === 0\n  const unMappedUuidList = () => editedIDs\n\n  const clearAll = () => {\n    setEditedIDs(new Set())\n    setEditedItems({})\n    setSelectAllInfo({})\n  }\n\n  return useMemo(\n    () => ({\n      pageNumber,\n      setPageNumber,\n      isAllSelected,\n      toggleSelectAll,\n      toggleSelectItem,\n      isUnMappedUuidListEmpty,\n      isItemSelected,\n      selections,\n      unMappedUuidList,\n      clearAll,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isAllSelected, editedIDs, editedItems, pageNumber]\n  )\n}\n\nexport const UnMappedTopicsSelectionsProvider: FC = props => (\n  <Context.Provider value={useUnMappedTopicsMappedSelection()}>\n    {props.children}\n  </Context.Provider>\n)\n\nexport const useSelection = () => {\n  const context = useContext(Context)\n  /* istanbul ignore next */\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error(\n      'useSelection must be used within a UnMappedTopicsSelectionProvider'\n    )\n  }\n\n  return context!\n}\n","import { FormControl } from '@jifflenow/brightui/form-control'\nimport { styled, withStyle } from '@jifflenow/brightui'\nimport {\n  Container as BodyContainer,\n  PaginationWrapper as BasePaginationWrapper,\n} from '../Common/styled-components'\n\nexport const Container = withStyle(\n  BodyContainer,\n  ({ $theme: { mediaQuery } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    height: 'calc(100vh - 120px)',\n    overflow: 'scroll',\n    paddingBottom: 0,\n    [mediaQuery.medium]: {\n      height: 'calc(100vh - 120px)',\n      paddingBottom: 0,\n    },\n  })\n)\n\nexport const InputControl = styled(FormControl, ({ $theme: { sizing } }) => ({\n  paddingLeft: sizing.scale600,\n  paddingRight: sizing.scale600,\n  minWidth: '162px',\n}))\n\nexport const TitleSearchContainer = styled('div', {\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nexport const TitleContainer = styled('div', {\n  display: 'flex',\n})\n\nexport const PaginationWrapper = withStyle(\n  BasePaginationWrapper,\n  ({ $theme: { sizing } }) => ({\n    position: 'sticky',\n    left: 0,\n    bottom: 0,\n    marginTop: 'auto',\n    paddingTop: sizing.scale850,\n  })\n)\n\nexport const FooterContainer = styled('div', ({ $theme: { mediaQuery } }) => ({\n  marginLeft: 0,\n  [mediaQuery.medium]: {\n    marginLeft: '223px',\n  },\n}))\n\nexport const TopicDisableMessageRoot = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    marginTop: sizing.scale1400,\n  })\n)\n\nexport const DisableMessageText = styled('p', ({ $theme: { typography } }) => ({\n  ...typography.font300,\n  display: 'flex',\n  justifyContent: 'center',\n}))\n","import { styled } from '@jifflenow/brightui'\n\nexport const RowLabel = styled('p', ({ $theme: { typography } }) => ({\n  ...typography.ParagraphMedium,\n  marginTop: 0,\n  marginBottom: 0,\n}))\n\nexport const Root = styled('div', {\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n})\n","import { TableOverrides } from '@jifflenow/brightui/table-semantic'\n\nexport const MappingTableOverrides: TableOverrides = {\n  TableHeadCell: {\n    style: { paddingLeft: 0 },\n  },\n  TableBodyCell: {\n    style: { paddingLeft: 0 },\n  },\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  TableBuilder,\n  TableBuilderColumn,\n} from '@jifflenow/brightui/table-semantic'\nimport { useMe } from 'providers/MeProvider'\nimport { Role } from '../../types'\nimport { useProfileUser } from '../../providers/ProfileUserProvider'\nimport {\n  ColumnCheckbox,\n  RowCheckbox,\n  EmptyMessage,\n  useCampaign,\n} from '../../Common'\nimport { RowLabel } from './styled-components'\nimport { MappingsListProps } from './types'\nimport { MappingTableOverrides } from './overrides'\n\nconst messages = defineMessages({\n  IsAnExpert: {\n    defaultMessage: 'Expert',\n    description: 'Column header',\n  },\n  EmptyMessage: {\n    defaultMessage: 'No Topics added',\n    description: 'Empty Message',\n  },\n  EmptyMessageMapped: {\n    defaultMessage: 'User is currently not mapped to any Topic.',\n    description: 'Empty Message',\n  },\n  EmptyMessageUnMapped: {\n    defaultMessage: 'User is currently mapped to all Topics.',\n    description: 'Empty Message',\n  },\n  AddNewButtonMessage: {\n    defaultMessage: 'Add Topic',\n    description: 'Button Text',\n  },\n})\n\nconst aria = defineMessages({\n  mapToExpert: {\n    defaultMessage: 'Map to expert',\n    description: 'Aria label',\n  },\n})\n\nconst adminRoles: Role[] = ['CSM', 'MM', 'JMM']\n\nexport const MappingsList: VFC<MappingsListProps> = ({\n  items,\n  isSelectAll,\n  isItemSelected,\n  toggleSelectAll,\n  toggleSelectItem,\n  hasSomeItemSelected,\n  mappingsCount,\n  listType,\n}) => {\n  const { formatMessage } = useIntl()\n  const { eventName, location } = useCampaign().campaign!\n  const { id: selectedUserId } = useProfileUser()\n  const {\n    id: loggedInUserId,\n    attributes: { role: companyRole, eventRole },\n  } = useMe().data\n\n  const allSelectedIsAnExpert = isSelectAll\n\n  const isListEmpty = !items.length\n\n  const handleAddNewTopic = () =>\n    (window.location.href = `/${eventName}/topics/topic_listing?current_location_uuid=${location}`)\n\n  const noMappingsInSystem = !mappingsCount.mapped && !mappingsCount.unMapped\n\n  const isAdmin =\n    adminRoles.includes(companyRole) ||\n    (!!eventRole && adminRoles.includes(eventRole))\n  const canEdit = isAdmin && loggedInUserId !== selectedUserId\n\n  return (\n    <TableBuilder\n      data={items}\n      overrides={MappingTableOverrides}\n      emptyMessage={\n        <EmptyMessage\n          onAddNew={handleAddNewTopic}\n          emptyMessage={\n            noMappingsInSystem\n              ? formatMessage(messages.EmptyMessage)\n              : listType === 'mapped'\n              ? formatMessage(messages.EmptyMessageMapped)\n              : formatMessage(messages.EmptyMessageUnMapped)\n          }\n          addNewButtonMessage={formatMessage(messages.AddNewButtonMessage)}\n          showAddButton={noMappingsInSystem && isAdmin}\n        />\n      }\n    >\n      <TableBuilderColumn>\n        {row => <RowLabel>{row.displayName}</RowLabel>}\n      </TableBuilderColumn>\n      <TableBuilderColumn\n        header={\n          <ColumnCheckbox\n            columnName=\"mapTo\"\n            label={formatMessage(messages.IsAnExpert)}\n            checked={allSelectedIsAnExpert}\n            intermediate={hasSomeItemSelected}\n            handleSelectAll={toggleSelectAll}\n            handleDeselectAll={toggleSelectAll}\n            showCheckbox={isListEmpty}\n            disabled={!canEdit}\n          />\n        }\n      >\n        {row => (\n          <RowCheckbox\n            rowId={row.id}\n            rowName=\"mapTo\"\n            rowChecked={\n              isItemSelected(row.id)?.mapTo ??\n              allSelectedIsAnExpert ??\n              row.mapTo\n            }\n            handleSelectItem={toggleSelectItem}\n            disabled={!canEdit}\n            ariaLabel={formatMessage(aria.mapToExpert)}\n          />\n        )}\n      </TableBuilderColumn>\n    </TableBuilder>\n  )\n}\n","import { VFC } from 'react'\nimport { useMutation } from 'react-query'\nimport { topicsPreferencesMutationFn } from 'rest'\nimport { KIND, Pagination } from '@jifflenow/brightui/pagination'\nimport { usePageSizes } from 'utils/usePageSizes'\nimport { useCampaign } from '../Common'\nimport { PaginationContainerProps } from './types'\nimport { PaginationWrapper } from './styled-components'\n\nexport const PAGE_SIZE = 10\n\nexport const PaginationContainer: VFC<PaginationContainerProps> = props => {\n  const { eventName, location } = useCampaign().campaign!\n\n  const pageSizes = usePageSizes(props.totalItems)\n\n  const { mutate: patch } = useMutation(\n    topicsPreferencesMutationFn({\n      path: { eventName },\n      query: { location_uuid: location },\n    }),\n    {}\n  )\n\n  return (\n    <PaginationWrapper>\n      <Pagination\n        kind={KIND.light}\n        totalItems={props.totalItems}\n        pageSizes={pageSizes}\n        currentPageSize={props.pageSize}\n        currentPageNumber={props.pageNumber}\n        onPageNumberChange={props.onPageNumberChange}\n        onPageSizeChange={pageSize => {\n          props.onPageSizeChange(pageSize)\n          props.onPageNumberChange(1)\n\n          patch({ data: { [props.eventType]: { pageSize } } })\n        }}\n      />\n    </PaginationWrapper>\n  )\n}\n","import { VFC, useState, useEffect, useRef } from 'react'\nimport {\n  getTopicsPreferencesQueryFn,\n  useQuery,\n  useUserEngagementsMapping,\n} from 'rest'\nimport { useEventName } from '../../providers/EventNameProvider'\nimport { useSelection } from '../MappedTopicsSelectionsProvider'\nimport { useSelection as useUnMappedSelection } from '../UnMappedTopicsSelectionProvider'\nimport { ListLoader, useCampaign } from '../../Common'\nimport { MappingsList } from '../Common/MappingsList'\nimport { MappedTypeProps, MappingItems } from '../Common/types'\nimport { Root } from '../Common/styled-components'\nimport { UserTopicsMapped } from '../Common/types'\nimport { PaginationContainer, PAGE_SIZE } from '../PaginationContainer'\n\nexport const Mapped: VFC<MappedTypeProps> = ({\n  id,\n  setTotalCount,\n  searchTerm,\n  refresh,\n  mappingsCount,\n  setDefaultSelections,\n}) => {\n  const { eventName, location } = useCampaign().campaign!\n  const [mappingTable, setMappingsTable] = useState<MappingItems | []>([])\n\n  const [totalItems, setTotalItems] = useState<number>(0)\n  const [pageSize, setPageSize] = useState(0)\n\n  const isMounted = useRef(false)\n  const eventType = useEventName().eventType\n\n  const {\n    pageNumber,\n    setPageNumber,\n    selections,\n    isAllSelected,\n    toggleSelectAll,\n    toggleSelectItem,\n    isItemSelected,\n    clearAll,\n  } = useSelection()\n\n  const { clearAll: clearAllUnMapped } = useUnMappedSelection()\n\n  const resetToFirstPage = () => {\n    setPageNumber(1)\n    clearAll()\n    clearAllUnMapped()\n  }\n\n  const instanceType =\n    eventType === 'Emeet' ? 'emeetInstances' : 'eventInstances'\n\n  useQuery(\n    [\n      'topicsPreferences',\n      {\n        path: { eventName },\n        query: {\n          location_uuid: location,\n        },\n      },\n    ],\n    getTopicsPreferencesQueryFn,\n    {\n      onSuccess: ({ data }) => {\n        setPageSize(data[instanceType]?.pageSize ?? PAGE_SIZE)\n      },\n      onError: () => {\n        setPageSize(PAGE_SIZE)\n      },\n    }\n  )\n\n  const state = useUserEngagementsMapping({\n    id,\n    mappingType: 'TopicMapping',\n    subSystem: eventName,\n    onResolve: userEngagementsMapping => {\n      const { data, meta } = userEngagementsMapping as UserTopicsMapped\n      setTotalItems(meta.page?.size!)\n      setDefaultSelections(prev => ({\n        ...prev,\n        mapped: data.reduce(\n          (obj, item) => ({\n            ...obj,\n            [item.id]: item.attributes,\n          }),\n          {}\n        ),\n      }))\n      setTotalCount({\n        mapped: meta?.mapped.number,\n        unMapped: meta?.unmapped.number,\n      })\n      setMappingsTable(\n        data.map(item => {\n          const { data } = item.relationships.topic\n\n          return {\n            id: item.id,\n            displayName: data.attributes.displayName,\n            mapTo: item.attributes.mapTo,\n          }\n        })\n      )\n    },\n  })\n\n  const { isLoading, run: fetchUserEngagementsMapping } = state\n\n  useEffect(() => {\n    if (isMounted.current) {\n      resetToFirstPage()\n    } else {\n      isMounted.current = true\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchTerm])\n\n  useEffect(() => {\n    pageSize > 0 &&\n      fetchUserEngagementsMapping({\n        locationUuid: location,\n        searchTerm,\n        mapped: true,\n        pageNumber,\n        pageSize,\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    pageNumber,\n    searchTerm,\n    eventName,\n    location,\n    refresh,\n    eventType,\n    pageSize,\n  ])\n\n  const isListEmpty = !mappingTable.length\n  const providerSelections = Object.values(selections())\n\n  const selectionsWhenIsAllSelectedUndefined =\n    providerSelections.some(item => !item.mapTo) ||\n    providerSelections.some(item => item.mapTo)\n\n  const selectionWhenIsAllSelectedPresent = isAllSelected().mapTo\n    ? providerSelections.some(item => !item.mapTo)\n    : providerSelections.some(item => item.mapTo)\n\n  const hasSomeItemSelected =\n    isAllSelected().mapTo === undefined\n      ? selectionsWhenIsAllSelectedUndefined\n      : selectionWhenIsAllSelectedPresent\n\n  return (\n    <Root>\n      {(isLoading || pageSize === 0) && <ListLoader />}\n      {!isLoading && mappingTable && (\n        <>\n          <MappingsList\n            items={mappingTable}\n            toggleSelectAll={toggleSelectAll}\n            toggleSelectItem={toggleSelectItem}\n            isSelectAll={isAllSelected().mapTo}\n            isItemSelected={isItemSelected}\n            hasSomeItemSelected={hasSomeItemSelected}\n            mappingsCount={mappingsCount}\n            listType=\"mapped\"\n          />\n\n          {totalItems > PAGE_SIZE && !isListEmpty && (\n            <PaginationContainer\n              eventType={instanceType}\n              totalItems={totalItems}\n              pageSize={pageSize}\n              pageNumber={pageNumber}\n              onPageSizeChange={setPageSize}\n              onPageNumberChange={setPageNumber}\n            />\n          )}\n        </>\n      )}\n    </Root>\n  )\n}\n","import { VFC, useState, useEffect, useRef } from 'react'\nimport { useQuery } from 'react-query'\nimport { getTopicsPreferencesQueryFn, useUserEngagementsMapping } from 'rest'\nimport { ListLoader, useCampaign } from '../../Common'\nimport { useSelection } from '../UnMappedTopicsSelectionProvider'\nimport { useSelection as useMappedSelection } from '../MappedTopicsSelectionsProvider'\nimport { MappingsList } from '../Common/MappingsList'\nimport {\n  MappedTypeProps,\n  MappingItems,\n  UserTopicsMapped,\n} from '../Common/types'\nimport { Root } from '../Common/styled-components'\nimport { PaginationContainer, PAGE_SIZE } from '../PaginationContainer'\n\nexport const UnMapped: VFC<MappedTypeProps> = ({\n  id,\n  setTotalCount,\n  searchTerm,\n  refresh,\n  mappingsCount,\n  setDefaultSelections,\n}) => {\n  const { eventName, location } = useCampaign().campaign!\n  const [mappingTable, setMappingsTable] = useState<MappingItems | []>([])\n  const [totalItems, setTotalItems] = useState<number>(0)\n  const [pageSize, setPageSize] = useState(0)\n\n  const isMounted = useRef(false)\n\n  const {\n    pageNumber,\n    setPageNumber,\n    selections,\n    isAllSelected,\n    toggleSelectAll,\n    toggleSelectItem,\n    isItemSelected,\n    clearAll,\n  } = useSelection()\n\n  const { clearAll: clearAllMapped } = useMappedSelection()\n\n  const resetToFirstPage = () => {\n    setPageNumber(1)\n    clearAll()\n    clearAllMapped()\n  }\n\n  const instanceType =\n    eventName === 'Emeet' ? 'emeetInstances' : 'eventInstances'\n\n  useQuery(\n    [\n      'topicsPreferences',\n      {\n        path: { eventName },\n        query: {\n          location_uuid: location,\n        },\n      },\n    ],\n    getTopicsPreferencesQueryFn,\n    {\n      onSuccess: ({ data }) => {\n        setPageSize(data[instanceType]?.pageSize ?? PAGE_SIZE)\n      },\n      onError: () => {\n        setPageSize(PAGE_SIZE)\n      },\n    }\n  )\n\n  const state = useUserEngagementsMapping({\n    id,\n    mappingType: 'TopicMapping',\n    subSystem: eventName,\n    onResolve: userEngagementsMapping => {\n      const { data, meta } = userEngagementsMapping as UserTopicsMapped\n      setTotalItems(meta.page?.size!)\n      setDefaultSelections(prev => ({\n        ...prev,\n        mapped: data.reduce(\n          (obj, item) => ({\n            ...obj,\n            [item.id]: item.attributes,\n          }),\n          {}\n        ),\n      }))\n      setTotalCount({\n        mapped: meta?.mapped.number,\n        unMapped: meta?.unmapped.number,\n      })\n      setMappingsTable(\n        data.map(item => {\n          const { data } = item.relationships.topic\n\n          return {\n            id: item.id,\n            displayName: data.attributes.displayName,\n\n            mapTo: item.attributes.mapTo,\n          }\n        })\n      )\n    },\n  })\n  const { isLoading, run: fetchUserEngagementsMapping } = state\n\n  useEffect(() => {\n    if (isMounted.current) {\n      resetToFirstPage()\n    } else {\n      isMounted.current = true\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchTerm])\n\n  useEffect(() => {\n    pageSize > 0 &&\n      fetchUserEngagementsMapping({\n        locationUuid: location,\n        searchTerm,\n        mapped: false,\n        pageNumber,\n        pageSize,\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pageNumber, searchTerm, eventName, location, refresh, pageSize])\n\n  const isListEmpty = !mappingTable.length\n  const providerSelections = Object.values(selections())\n\n  const selectionsWhenIsAllSelectedUndefined =\n    providerSelections.some(item => !item.mapTo) ||\n    providerSelections.some(item => item.mapTo)\n\n  const selectionWhenIsAllSelectedPresent = isAllSelected().mapTo\n    ? providerSelections.some(item => !item.mapTo)\n    : providerSelections.some(item => item.mapTo)\n\n  const hasSomeItemSelected =\n    isAllSelected().mapTo === undefined\n      ? selectionsWhenIsAllSelectedUndefined\n      : selectionWhenIsAllSelectedPresent\n\n  return (\n    <Root>\n      {(isLoading || pageSize === 0) && <ListLoader />}\n      {!isLoading && (\n        <>\n          <MappingsList\n            items={mappingTable}\n            toggleSelectAll={toggleSelectAll}\n            toggleSelectItem={toggleSelectItem}\n            isSelectAll={isAllSelected().mapTo}\n            isItemSelected={isItemSelected}\n            hasSomeItemSelected={hasSomeItemSelected}\n            mappingsCount={mappingsCount}\n          />\n          {totalItems > PAGE_SIZE && !isListEmpty && (\n            <PaginationContainer\n              eventType={instanceType}\n              totalItems={totalItems}\n              pageSize={pageSize}\n              pageNumber={pageNumber}\n              onPageSizeChange={setPageSize}\n              onPageNumberChange={setPageNumber}\n            />\n          )}\n        </>\n      )}\n    </Root>\n  )\n}\n","import { TabOverrides } from '@jifflenow/brightui/tabs-motion'\nimport { TabsOverrides } from 'baseui/tabs-motion'\n\nexport const tabsOverrides: TabsOverrides = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      marginTop: sizing.scale600,\n    }),\n  },\n  TabList: {\n    style: ({ $theme: { sizing } }) => ({\n      height: sizing.scale1000,\n    }),\n  },\n  TabHighlight: {\n    style: {\n      marginLeft: '1px',\n    },\n  },\n  TabBorder: {\n    style: {\n      display: 'none',\n    },\n  },\n}\n\nexport const tabOverrides: TabOverrides = {\n  TabPanel: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingTop: 0,\n      marginTop: sizing.scale600,\n    }),\n  },\n}\n","import { useState, VFC } from 'react'\nimport { defineMessages, useIntl, MessageDescriptor } from 'react-intl'\nimport {\n  Tabs,\n  Tab,\n  TabTitle,\n  getTabOverrides,\n} from '@jifflenow/brightui/tabs-motion'\nimport { getEventLocation_getEventLocation } from 'gql/types/getEventLocation'\nimport { EventConfigs } from 'providers/LocationProvider'\nimport { bulkFetchLocationConfigsByName_bulkFetchLocationConfigsByName_configValue_CustomNameValue as CustomNameValue } from 'gql/types/bulkFetchLocationConfigsByName'\nimport { useEventConfigQuery, useEventLocationQuery } from 'gql'\nimport { showErrorToast } from 'utils/toast'\nimport { EventSubTypes } from 'gql/types/globalTypes'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useMe } from 'providers/MeProvider'\nimport { Role } from '../types'\nimport { Mapped } from './Mapped'\nimport { UnMapped } from './UnMapped'\nimport { tabOverrides, tabsOverrides } from './overrides'\nimport {\n  TopicDisableMessageRoot,\n  DisableMessageText,\n} from './styled-components'\nimport { MappedUnmappedCount, TopicsListProps } from './types'\n\nconst messages = defineMessages({\n  Mapped: {\n    defaultMessage: 'Mapped',\n    description: 'Tab title',\n  },\n  Unmapped: {\n    defaultMessage: 'Unmapped',\n    description: 'Tab title',\n  },\n\n  genericError: {\n    defaultMessage: 'Error Saving.',\n    description: 'Error message',\n  },\n  disableMessageError: {\n    defaultMessage:\n      'Topics are not enabled for this {eventSubType}. For details contact {supportEmail}',\n    description: 'Disable message',\n  },\n})\n\nconst adminRoles: Set<Role> = new Set(['CSM', 'MM', 'JMM'])\n\nexport const TopicsList: VFC<TopicsListProps> = ({\n  search,\n  userId,\n  refresh,\n  setDefaultSelections,\n  currentLocationUuid,\n}) => {\n  const { formatMessage } = useIntl()\n  const [activeTab, setActiveTab] = useState<string>('0')\n  const [itemsCount, setItemsCount] = useState<MappedUnmappedCount>({\n    mapped: 0,\n    unMapped: 0,\n  })\n  const [\n    location,\n    setLocation,\n  ] = useState<getEventLocation_getEventLocation | null>(null)\n\n  const [configs, setConfigs] = useState<EventConfigs | undefined>()\n  const { role: companyRole, eventRole } = useMe().data.attributes\n\n  const { loading: eventConfigLoader } = useEventConfigQuery({\n    variables: { names: ['enable_topic'] },\n    context: {\n      headers: { 'X-Location-Uuid': currentLocationUuid },\n    },\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'cache-and-network',\n    onCompleted: data =>\n      setConfigs(\n        data.bulkFetchLocationConfigsByName.reduce(\n          (acc, { configName, configValue }) => ({\n            ...acc,\n            [configName]: (configValue as CustomNameValue).value === 'true',\n          }),\n          {}\n        ) as EventConfigs\n      ),\n  })\n\n  const { loading: locationLoader } = useEventLocationQuery({\n    variables: {\n      uuid: currentLocationUuid,\n    },\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n    onCompleted: ({ getEventLocation }) => setLocation(getEventLocation),\n  })\n\n  const TabsTitle = (message: MessageDescriptor, count?: number) => (\n    <TabTitle>\n      {formatMessage(message)} &middot; {count}\n    </TabTitle>\n  )\n\n  return (\n    <>\n      {(eventConfigLoader || locationLoader) && <ModalSpinner />}\n      {configs?.enable_topic ? (\n        <Tabs\n          overrides={tabsOverrides}\n          onChange={({ activeKey }) => {\n            setActiveTab(activeKey as string)\n          }}\n          activeKey={activeTab}\n        >\n          <Tab\n            title={TabsTitle(messages.Mapped, itemsCount.mapped)}\n            overrides={getTabOverrides(tabOverrides)}\n          >\n            <Mapped\n              id={userId}\n              refresh={refresh}\n              setTotalCount={setItemsCount}\n              setDefaultSelections={setDefaultSelections}\n              searchTerm={search}\n              mappingsCount={itemsCount}\n            />\n          </Tab>\n          {(adminRoles.has(companyRole) ||\n            (eventRole && adminRoles.has(eventRole))) && (\n            <Tab\n              title={TabsTitle(messages.Unmapped, itemsCount.unMapped)}\n              overrides={getTabOverrides(tabOverrides)}\n            >\n              <UnMapped\n                id={userId}\n                refresh={refresh}\n                setTotalCount={setItemsCount}\n                setDefaultSelections={setDefaultSelections}\n                searchTerm={search}\n                mappingsCount={itemsCount}\n              />\n            </Tab>\n          )}\n        </Tabs>\n      ) : (\n        !locationLoader && (\n          <TopicDisableMessageRoot>\n            <DisableMessageText>\n              {formatMessage(messages.disableMessageError, {\n                eventSubType:\n                  location?.subType === EventSubTypes.Emeet\n                    ? 'instance'\n                    : 'event',\n                supportEmail: location?.supportEmail,\n              })}\n            </DisableMessageText>\n          </TopicDisableMessageRoot>\n        )\n      )}\n    </>\n  )\n}\n","import { useState, ChangeEvent, VFC, useEffect } from 'react'\nimport { Input } from '@jifflenow/brightui/input'\nimport { useHttpClient } from 'providers/HttpClientContext'\nimport { putUserEngagementsMapping } from 'rest'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { showSuccessToast, showErrorToast } from 'utils/toast'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { Search } from '@jifflenow/brightui/icon'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { Root, Body } from '../Common/styled-components'\nimport { useDirtyCheckDialog } from '../Common/useDirtyCheckDialog'\nimport {\n  Header,\n  useCampaign,\n  NoItemsRoot,\n  NoItemsText,\n  ListLoader,\n  Footer,\n  EventSelectWrapper,\n  EventTypeAndLocationFilter,\n} from '../Common'\nimport { EventSelectLabel } from '../Common/EventSelectLabel'\nimport { useEventType } from '../Common/useEventType'\nimport {\n  InputControl,\n  TitleSearchContainer,\n  TitleContainer,\n  Container,\n  FooterContainer,\n} from './styled-components'\nimport { useSelection } from './MappedTopicsSelectionsProvider'\nimport { useSelection as useUnMappedSelection } from './UnMappedTopicsSelectionProvider'\nimport { ItemsAgainstIDs, DefaultSelections, TopicsMappingProps } from './types'\nimport { TopicsList } from './TopicsList'\n\nconst messages = defineMessages({\n  title: {\n    defaultMessage: 'Topics for',\n    description: 'Page title',\n  },\n  search: {\n    defaultMessage: 'Topics Search',\n    description: 'Placeholder text',\n  },\n  success: {\n    defaultMessage: 'Saved Successfully.',\n    description: 'Success message',\n  },\n  noCampaignsListed: {\n    defaultMessage:\n      'No topics to show as you are not mapped to any campaigns yet.',\n    description: 'Empty Message',\n  },\n  genericError: {\n    defaultMessage: 'Error Saving.',\n    description: 'Error message',\n  },\n})\n\nexport const TopicsType: VFC<TopicsMappingProps> = ({ onNavigate }) => {\n  const { campaign } = useCampaign()\n  const unload = useBeforeUnload()\n  const user = useProfileUser()\n  const userId = user.id\n  const [refresh, doRefresh] = useState(0)\n  const [showLoader, setShowLoading] = useState(false)\n  const [search, setSearch] = useState<string>('')\n  const location = new URLSearchParams(window.location.search).get('location')\n  const [defaultSelections, setDefaultSelections] = useState<DefaultSelections>(\n    {\n      mapped: {},\n      unMapped: {},\n    }\n  )\n\n  const eventType = useEventType()\n  const client = useHttpClient()()\n\n  const {\n    setPageNumber: setMappedPageNumber,\n    isAllSelected: mappedAllSelected,\n    isMappedUuidListEmpty,\n    mappedUuidList,\n    selections: mappedTopicSelections,\n    clearAll: clearAllMapped,\n  } = useSelection()\n  const {\n    setPageNumber: setUnMappedPageNumber,\n    isAllSelected: unmappedAllSelected,\n    isUnMappedUuidListEmpty,\n    unMappedUuidList,\n    selections: unMappedTopicSelections,\n    clearAll: clearAllUnMapped,\n  } = useUnMappedSelection()\n\n  const { formatMessage } = useIntl()\n\n  const handleSubmit = async () => {\n    setShowLoading(true)\n    const mapped = {} as ItemsAgainstIDs\n    const unMapped = {} as ItemsAgainstIDs\n\n    mappedUuidList().forEach(key => {\n      mapped[key] = {\n        mapTo:\n          mappedTopicSelections()[key]?.mapTo ??\n          defaultSelections.mapped[key].mapTo,\n      }\n    })\n\n    unMappedUuidList().forEach(key => {\n      unMapped[key] = {\n        mapTo:\n          unMappedTopicSelections()[key]?.mapTo ??\n          defaultSelections.unMapped[key].mapTo,\n      }\n    })\n\n    const selectionMapper = (selection: ItemsAgainstIDs) =>\n      Object.entries(selection).map(item => ({\n        mappingEntityUuid: item[0],\n        mappingAttributes: item[1],\n      }))\n\n    const mappedSelectionData = selectionMapper(mapped)\n    const unMappedSelectionData = selectionMapper(unMapped)\n\n    const payload = {\n      ...(mappedAllSelected().mapTo !== undefined && {\n        mapped: {\n          selectAll: {\n            mapTo: mappedAllSelected().mapTo,\n          },\n        },\n      }),\n      ...(unmappedAllSelected().mapTo !== undefined && {\n        unmapped: {\n          selectAll: {\n            mapTo: unmappedAllSelected().mapTo,\n          },\n        },\n      }),\n      mappings: [...mappedSelectionData, ...unMappedSelectionData],\n    }\n    try {\n      await putUserEngagementsMapping({\n        client,\n        id: userId,\n        mappingType: 'TopicMapping',\n        subSystem: campaign?.eventName as string,\n        payload,\n        locationId: campaign?.location as string,\n        searchTerm: search,\n      })\n      clearAllMapped()\n      clearAllUnMapped()\n      setShowLoading(false)\n      showSuccessToast(formatMessage(messages.success))\n      setMappedPageNumber(1)\n      setUnMappedPageNumber(1)\n      doRefresh(prev => prev + 1)\n      return undefined\n    } catch (error) {\n      setShowLoading(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return error\n    }\n  }\n\n  const handleSaveAndNext = async () => {\n    const successFullSubmission = await handleSubmit()\n    successFullSubmission === undefined && onNavigate?.()\n  }\n\n  const handleSave = async () => {\n    await handleSubmit()\n  }\n\n  const isDirty =\n    isUnMappedUuidListEmpty() &&\n    isMappedUuidListEmpty() &&\n    mappedAllSelected().mapTo === undefined &&\n    unmappedAllSelected().mapTo === undefined\n\n  useDirtyCheckDialog({\n    isDirty: !isDirty,\n    onSave: handleSubmit,\n  })\n\n  useEffect(() => {\n    unload(!isDirty)\n  }, [isDirty, unload])\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <Root>\n        <Header />\n        <Body>\n          <Container>\n            <TitleSearchContainer>\n              <TitleContainer>\n                <EventSelectLabel title={formatMessage(messages.title)} />\n                <EventSelectWrapper $location={!!location}>\n                  <EventTypeAndLocationFilter eventType={eventType} />\n                </EventSelectWrapper>\n              </TitleContainer>\n              <InputControl>\n                <Input\n                  type=\"search\"\n                  value={search}\n                  IconAfter={Search}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setSearch(e.target.value)\n                  }\n                  placeholder={formatMessage(messages.search)}\n                />\n              </InputControl>\n            </TitleSearchContainer>\n            {campaign?.location ? (\n              <TopicsList\n                search={search}\n                userId={userId}\n                refresh={refresh}\n                setDefaultSelections={setDefaultSelections}\n                currentLocationUuid={campaign.location}\n              />\n            ) : (\n              <NoItemsRoot>\n                <NoItemsText>\n                  {campaign === null ? (\n                    <ListLoader />\n                  ) : (\n                    formatMessage(messages.noCampaignsListed)\n                  )}\n                </NoItemsText>\n              </NoItemsRoot>\n            )}\n          </Container>\n        </Body>\n        {(Object.keys(defaultSelections.mapped).length ||\n          Object.keys(defaultSelections.unMapped).length) && (\n          <FooterContainer>\n            <Footer\n              onSave={handleSave}\n              onSaveAndNext={handleSaveAndNext}\n              isDisabled={isDirty}\n              onDiscard={() => {\n                clearAllMapped()\n                clearAllUnMapped()\n              }}\n              pendoPrefix=\"profile/campaign/topics\"\n            />\n          </FooterContainer>\n        )}\n      </Root>\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { CampaignProvider } from '../Common'\nimport { MappedTopicsSelectionsProvider } from './MappedTopicsSelectionsProvider'\nimport { UnMappedTopicsSelectionsProvider } from './UnMappedTopicsSelectionProvider'\nimport { TopicsType } from './TopicsType'\nimport { TopicsMappingProps } from './types'\n\nexport const TopicsMapping: VFC<TopicsMappingProps> = ({ onNavigate }) => (\n  // TODO: refactor both providers into one\n\n  <UnMappedTopicsSelectionsProvider>\n    <MappedTopicsSelectionsProvider>\n      <CampaignProvider>\n        <TopicsType onNavigate={onNavigate} />\n      </CampaignProvider>\n    </MappedTopicsSelectionsProvider>\n  </UnMappedTopicsSelectionsProvider>\n)\n","import { styled } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\n\nexport const Root = styled('div', {\n  display: 'flex',\n})\n\nexport const SelectControl = styled(FormControl, {\n  width: '100%',\n})\n\nexport const TimeZoneWrapper = styled('div', {\n  display: 'flex',\n  justifyContent: 'center',\n  maxHeight: '324px',\n  minHeight: '90px',\n})\n\nexport const Title = styled('p', ({ $theme: { typography, colors } }) => ({\n  ...typography.font250,\n  color: colors.mono800,\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: 0,\n  marginBottom: 0,\n}))\n","import { SelectOverrides } from '@jifflenow/brightui/select'\nimport { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const selectOverrides: SelectOverrides = {\n  Popover: {\n    props: {\n      popperOptions: {\n        modifiers: {\n          preventOverflow: { boundariesElement: 'window' },\n        },\n      },\n    },\n  },\n}\n\nexport const modalButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n\nexport const changeButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing, colors } }) => ({\n      backgroundColor: colors.white,\n      paddingTop: sizing.scale100,\n      paddingRight: sizing.scale100,\n      paddingBottom: sizing.scale100,\n      paddingLeft: sizing.scale100,\n      marginTop: sizing.scale0,\n      marginLeft: sizing.scale400,\n      color: colors.primary,\n      ':hover': {\n        backgroundColor: 'none',\n      },\n      ':focus': {\n        backgroundColor: 'none',\n        outline: 'none',\n      },\n    }),\n  },\n}\n","import { VFC, useEffect, useState, ChangeEvent } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Select, Value, Option } from '@jifflenow/brightui/select'\nimport { useEventCities } from 'rest'\nimport { useDebounce } from 'utils/debounce'\nimport { SelectCityProps, City } from './types'\nimport { SelectControl } from './styled-components'\nimport { selectOverrides } from './overrides'\n\nconst messages = defineMessages({\n  selectTimezone: {\n    defaultMessage: 'Select city name',\n    description: 'Placeholder text',\n  },\n  noResultsMsg: {\n    defaultMessage: 'Please enter 3 or more characters to search',\n    description: 'Placeholder text',\n  },\n})\n\nexport const SelectCity: VFC<SelectCityProps> = props => {\n  const { formatMessage } = useIntl()\n  const [city, setCity] = useState<Value>([])\n  const [searchText, setSearchText] = useState('')\n  const search = useDebounce(searchText)\n\n  const {\n    isPending,\n    run: searchCityName,\n    data: { data: options = [] } = {},\n  } = useEventCities()\n\n  useEffect(() => {\n    if (!search || search.length < 3) {\n      return\n    }\n    searchCityName({ search })\n  }, [search, searchCityName])\n\n  return (\n    <SelectControl>\n      <Select\n        searchable\n        overrides={selectOverrides}\n        clearable\n        value={city}\n        options={options}\n        disabled={props.disabled ?? false}\n        backspaceClearsInputValue\n        isLoading={isPending}\n        placeholder={\n          props.placeholder ?? formatMessage(messages.selectTimezone)\n        }\n        noResultsMsg={formatMessage(messages.noResultsMsg)}\n        filterOptions={(options: City[]): Value =>\n          options.map(\n            ({ description, placeId }: City): Option => ({\n              label: description,\n              id: placeId,\n            })\n          )\n        }\n        onInputChange={(e: ChangeEvent<HTMLInputElement>) =>\n          setSearchText(e.target.value.trim())\n        }\n        onChange={({ value }: { value: Value }) => {\n          setCity(value)\n          props.onChange(value[0]?.id as string)\n        }}\n      />\n    </SelectControl>\n  )\n}\n","import { useState } from 'react'\nimport { DateTime } from 'luxon'\nimport { useEventCityTimeZone } from 'rest'\nimport { TimeZone } from './types'\n\nexport const useTimeZoneFromCity = () => {\n  const [cityTimeZone, setCityTimeZone] = useState<TimeZone | null>(null)\n\n  const { isPending, run: fetchCityTimeZone } = useEventCityTimeZone({\n    onResolve: ({ data: { timeZoneId } }) => {\n      const { offsetNameShort, offsetNameLong } = DateTime.local().setZone(\n        timeZoneId\n      )\n      setCityTimeZone({\n        timeZoneId,\n        timeZoneName: `${offsetNameShort} | ${offsetNameLong}`,\n      })\n    },\n  })\n\n  const onCityChange = (placeId: string) => {\n    placeId ? fetchCityTimeZone({ placeId }) : setCityTimeZone(null)\n  }\n\n  return {\n    isPending,\n    cityTimeZone,\n    onCityChange,\n  }\n}\n","import { VFC } from 'react'\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl'\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalButton,\n  SIZE,\n} from '@jifflenow/brightui/modal'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { SelectCity } from './SelectCity'\nimport { useTimeZoneFromCity } from './useTimeZoneFromCity'\nimport { TimeZoneWrapper } from './styled-components'\nimport { modalButtonOverrides } from './overrides'\nimport { SelectCityModalProps, TimeZone } from './types'\n\nconst messages = defineMessages({\n  successTimeZoneChange: {\n    defaultMessage: 'Time zone changed successfully',\n    description: 'Success message',\n  },\n\n  failureTimeZoneChange: {\n    defaultMessage: 'Time zone is not changed',\n    description: 'Failure message',\n  },\n})\n\nexport const SelectCityModal: VFC<SelectCityModalProps> = ({\n  timeZone,\n  setTimeZone,\n  ...modalProps\n}) => {\n  const { formatMessage } = useIntl()\n  const { isPending, cityTimeZone, onCityChange } = useTimeZoneFromCity()\n\n  const handleDone = () => {\n    modalProps.onClose()\n    Promise.resolve(setTimeZone(cityTimeZone as TimeZone))\n      .then(() =>\n        showSuccessToast(formatMessage(messages.successTimeZoneChange))\n      )\n      .catch(() =>\n        showErrorToast(formatMessage(messages.failureTimeZoneChange))\n      )\n  }\n\n  return (\n    <Modal {...modalProps} size={SIZE.small} autoFocus={false}>\n      <ModalHeader>\n        <FormattedMessage\n          defaultMessage=\"Select city to change time zone\"\n          description=\"Header title\"\n        />\n      </ModalHeader>\n      <ModalBody>\n        <TimeZoneWrapper>\n          <SelectCity onChange={onCityChange} />\n        </TimeZoneWrapper>\n      </ModalBody>\n      <ModalFooter>\n        <ModalButton\n          kind={KIND.secondary}\n          onClick={modalProps.onClose}\n          overrides={modalButtonOverrides}\n        >\n          <FormattedMessage\n            defaultMessage=\"Cancel\"\n            description=\"Button label\"\n          />\n        </ModalButton>\n        <ModalButton\n          kind={KIND.primary}\n          onClick={handleDone}\n          overrides={modalButtonOverrides}\n          disabled={!cityTimeZone || isPending}\n        >\n          <FormattedMessage\n            defaultMessage=\"Confirm\"\n            description=\"Button label\"\n          />\n        </ModalButton>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import { VFC, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { Root, Title } from './styled-components'\nimport { changeButtonOverrides } from './overrides'\nimport { SelectCityModal } from './SelectCityModal'\nimport { TimeZoneChangeProps } from './types'\n\nexport const TimeZoneChange: VFC<TimeZoneChangeProps> = ({\n  canChangeTimeZone = true,\n  ...restProps\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <>\n      <Root>\n        <Title>{restProps.timeZone.timeZoneName}</Title>\n        {canChangeTimeZone && (\n          <Button\n            type=\"button\"\n            onClick={() => setIsOpen(true)}\n            overrides={changeButtonOverrides}\n            kind={KIND.minimal}\n          >\n            <FormattedMessage\n              defaultMessage=\"Change\"\n              description=\"Button label\"\n            />\n          </Button>\n        )}\n      </Root>\n      {isOpen && (\n        <SelectCityModal\n          {...restProps}\n          isOpen={isOpen}\n          onClose={() => setIsOpen(false)}\n        />\n      )}\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { formatDateRange, formatToStartOfTheDay } from 'utils/dates'\nimport { useEventInfo } from '../providers/EventInfoProvider'\nimport { EventDatesLabelWrapper, Date } from './styled-components'\nimport { EventSelectLabelProps } from './types'\n\nexport const EventDatesLabel: VFC<EventSelectLabelProps> = ({ title }) => {\n  const { startDate, endDate } = useEventInfo().location || {}\n\n  return (\n    <EventDatesLabelWrapper>\n      {title}&nbsp;\n      <Date>\n        {startDate &&\n          endDate &&\n          formatDateRange(\n            formatToStartOfTheDay(startDate),\n            formatToStartOfTheDay(endDate)\n          )}\n      </Date>\n    </EventDatesLabelWrapper>\n  )\n}\n","import { DateTime, DurationObject } from 'luxon'\n\ntype ISODateToDateTime = (date: string, zone: string) => DateTime\ntype ISODateToISODate = (date: string, zone: string) => string\n\nconst referenceISODateString = '2024-01-01'\n\nconst referenceISODate = `${referenceISODateString}T00:00:00Z`\n\nconst referenceDate = DateTime.fromISO(referenceISODate)\n\nexport const getISODateString = (date: string) =>\n  DateTime.fromISO(date).toISODate()\n\nexport const getJSDate = (date: string) => DateTime.fromISO(date).toJSDate()\n\nexport const getUTCDateFromMinutes = (plus: DurationObject) =>\n  referenceDate.toUTC().plus(plus).toISO()\n\nexport const getFullMinutes = (date: string) => {\n  const { minute, hour } = DateTime.fromISO(date)\n\n  return hour * 60 + minute\n}\n\nexport const getUTCFullMinutes = (date: string) => {\n  const { minute, hour } = DateTime.fromISO(date).toUTC()\n\n  return hour * 60 + minute\n}\n\nexport const getDateTimeInTimeZone: ISODateToDateTime = (date, zone) =>\n  DateTime.fromISO(date).setZone(zone).setZone('local', { keepLocalTime: true })\n\nexport const getDateInTimeZone: ISODateToISODate = (date, zone) =>\n  getDateTimeInTimeZone(date, zone).toISO()\n\nexport const getUTCDateTimeFromTimeZone: ISODateToDateTime = (date, zone) =>\n  DateTime.fromISO(date).setZone(zone, { keepLocalTime: true }).toUTC()\n\nexport const getUTCStartDate = (date: string) =>\n  DateTime.fromISO(date).toUTC(0, { keepLocalTime: true }).toISO()\n\nexport const getPlusDate = (date: string, plus: DurationObject) =>\n  DateTime.fromISO(date).plus(plus).toISO()\n\nexport const getPlusISOStringDate = (date: string, plus: DurationObject) =>\n  DateTime.fromISO(date).plus(plus).toISODate()\n\nexport const getStartOfDate = (date: string) =>\n  DateTime.fromISO(date).startOf('day').toISO()\n\nexport const getDateFromJSDate = (date: Date) =>\n  DateTime.fromJSDate(date).toISO()\n\nexport const getISODateStringFromJSDate = (date: Date) =>\n  DateTime.fromJSDate(date).toISODate()\n\nexport const getFormattedTimeFromDate = (date: string) =>\n  DateTime.fromISO(date).toFormat('hh:mm a')\n\nexport const diffInISODates = (prev: string, next: string) =>\n  DateTime.fromISO(next).diff(DateTime.fromISO(prev), 'day')\n\nexport const areDatesAdjacent = (prev: string, next: string) =>\n  diffInISODates(prev, next).days === 1\n\nexport const getISOTimeFromDate = (date: string) =>\n  DateTime.fromISO(date).toISOTime()\n\nexport const getISOTimeFromJSDate = (date: Date) =>\n  DateTime.fromJSDate(date).toISOTime()\n\nexport const getISODateStringFromUTCDate = (date: string) =>\n  DateTime.fromISO(date).toUTC().toISODate()\n\nexport const getStartOfDateFromWeekDay = (weekDay: number) =>\n  DateTime.fromISO(referenceISODateString)\n    .plus({ day: weekDay - 1 })\n    .startOf('day')\n    .toISO()\n\nexport const getISODateFromWeekDayAndTime = (weekDay: number, time: string) =>\n  `${DateTime.fromISO(referenceISODateString)\n    .plus({ day: weekDay - 1 })\n    .toISODate()}T${time}`\n\nexport const getEndDateOfDay = (date: string) =>\n  DateTime.fromISO(`${DateTime.fromISO(date).toISODate()}T24:00:00`).toISO()\n\nexport const getEndDateOfDayInUTC = (date: string) =>\n  `${DateTime.fromISO(date).toISODate()}T24:00:00Z`\n\nexport const getRefISODateWithTime = (time: string) =>\n  DateTime.fromISO(`${referenceISODateString}T${time}`).toISO()\n","import { DateTime } from 'luxon'\nimport {\n  getUTCDateFromMinutes,\n  getDateTimeInTimeZone,\n  getUTCDateTimeFromTimeZone,\n  getFullMinutes,\n  getUTCFullMinutes,\n  getISOTimeFromDate,\n  getISODateFromWeekDayAndTime,\n  getUTCStartDate,\n  getEndDateOfDay,\n  getPlusDate,\n} from '../DateTimeConversions'\nimport {\n  TimeZoneId,\n  TimeRangeInDates,\n  TimeRangeInMinutes,\n  Availability,\n  UTCMinutesAvailability,\n} from '../types'\nimport { Weekdays } from '../Common/weekDayMappings'\nimport { Day, WeekDay } from './types'\n\n// Base empty availability to avoid missing any week day after transformations.\nconst baseAvailabilityHash = Object.values(Weekdays)\n  .filter(weekDay => typeof weekDay === 'number')\n  .reduce((acc, curr) => ({ ...acc, [curr]: [] }), {})\n\n// Merges continuous time slots after UTC <=> TimeZone transformations\nfunction mergeContinuousTimeRanges<T extends any[]>(timeRanges: T): T {\n  return timeRanges\n    .sort((a, b) => (a.start >= b.start ? 1 : -1))\n    .reduce((acc, curr) => {\n      const prevRange = acc.pop()\n\n      return prevRange\n        ? prevRange.end === curr.start\n          ? [...acc, { start: prevRange.start, end: curr.end }]\n          : [...acc, prevRange, curr]\n        : [...acc, curr]\n    }, [])\n}\n\nconst transformMinutesInUTC = (data: UTCMinutesAvailability[]) =>\n  data.map(({ day, timeRanges }, dayIndex) => ({\n    day,\n    date: getUTCDateFromMinutes({ days: dayIndex }),\n    timeRanges: timeRanges.map(({ start, end }) => ({\n      start: getUTCDateFromMinutes({ days: dayIndex, minutes: start }),\n      end: getUTCDateFromMinutes({ days: dayIndex, minutes: end }),\n    })),\n  }))\n\nexport const getAvailabilityInTimeZone = (\n  availability: UTCMinutesAvailability[],\n  timeZone: TimeZoneId\n) => {\n  const availabilityInUTC = transformMinutesInUTC(availability)\n  const reducedAvailability = availabilityInUTC\n    .flatMap(({ timeRanges }) =>\n      timeRanges.flatMap(range => {\n        const startDateTime = getDateTimeInTimeZone(range.start, timeZone)\n        const endDateTime = getDateTimeInTimeZone(range.end, timeZone)\n        const start = startDateTime.toISO()\n        const end = endDateTime.toISO()\n\n        return startDateTime.toISODate() === endDateTime.toISODate()\n          ? { start, end }\n          : [\n              { start, end: getEndDateOfDay(start) },\n              { start: endDateTime.startOf('day').toISO(), end },\n            ]\n      })\n    )\n    .reduce((accRanges, range) => {\n      const { start, end } = range\n      const weekday = DateTime.fromISO(start).weekday\n\n      return {\n        ...accRanges,\n        [weekday]: [\n          ...(accRanges[weekday] ?? []),\n          ...(start === end\n            ? []\n            : [\n                {\n                  start: getISOTimeFromDate(start),\n                  end: getISOTimeFromDate(end),\n                },\n              ]),\n        ],\n      }\n    }, baseAvailabilityHash as { [key: string]: TimeRangeInDates })\n\n  return Object.keys(reducedAvailability)\n    .sort((next: string, prev: string) => Number(next) - Number(prev))\n    .map(weekDay => ({\n      weekDay: Number(weekDay) as WeekDay,\n      day: Weekdays[Number(weekDay)] as Day,\n      timeRanges: mergeContinuousTimeRanges<TimeRangeInDates>(\n        reducedAvailability[weekDay]\n      ),\n    }))\n}\n\nconst transformISOTimeToDates = (data: Availability[]) =>\n  data.map(({ day, weekDay, timeRanges }) => ({\n    day,\n    weekDay,\n    timeRanges: timeRanges.map(({ start, end }) => ({\n      start: getISODateFromWeekDayAndTime(weekDay, start),\n      end: getISODateFromWeekDayAndTime(weekDay, end),\n    })),\n  }))\n\nexport const getAvailabilityInUTC = (\n  availability: Availability[],\n  timeZone: TimeZoneId\n) => {\n  const availabilityInUTC = transformISOTimeToDates(availability)\n  const reducedAvailability = availabilityInUTC\n    .flatMap(({ timeRanges }) =>\n      timeRanges.flatMap(range => {\n        const endDate =\n          getFullMinutes(range.end) === 0\n            ? getPlusDate(range.end, { day: 1 })\n            : range.end\n        const startDateTime = getUTCDateTimeFromTimeZone(range.start, timeZone)\n        const endDateTime = getUTCDateTimeFromTimeZone(endDate, timeZone)\n        const start = startDateTime.toISO()\n        const end = endDateTime.toISO()\n\n        return startDateTime.toISODate() === endDateTime.toISODate() ||\n          (endDateTime.hour === 0 && endDateTime.minute === 0)\n          ? { start, end }\n          : [\n              { start, end: getUTCStartDate(startDateTime.toISODate()) },\n              { start: endDateTime.startOf('day').toISO(), end },\n            ]\n      })\n    )\n    .reduce((accRanges, range) => {\n      const { start, end } = range\n      const weekday = DateTime.fromISO(start).toUTC().weekday\n\n      const startInMinutes = getUTCFullMinutes(start)\n      const endInMinutes = getUTCFullMinutes(end)\n\n      return {\n        ...accRanges,\n        [weekday]: [\n          ...(accRanges[weekday] ?? []),\n          ...(startInMinutes === endInMinutes && endInMinutes !== 0\n            ? []\n            : [\n                {\n                  start: startInMinutes,\n                  end: endInMinutes || 1440,\n                },\n              ]),\n        ],\n      }\n    }, baseAvailabilityHash as { [key: string]: TimeRangeInMinutes })\n\n  return Object.keys(reducedAvailability)\n    .sort((next: string, prev: string) => Number(next) - Number(prev))\n    .map(weekDay => ({\n      day: Weekdays[Number(weekDay)] as Day,\n      timeRanges: mergeContinuousTimeRanges<TimeRangeInMinutes>(\n        reducedAvailability[weekDay]\n      ),\n    }))\n}\n","import {\n  FC,\n  useRef,\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useMemo,\n} from 'react'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { useUserAvailability } from 'rest'\nimport { Weekdays } from './Common/weekDayMappings'\nimport {\n  getAvailabilityInTimeZone,\n  getAvailabilityInUTC,\n} from './Availabilities/transform'\nimport {\n  DaysToIds,\n  Availability,\n  UTCMinutesAvailability,\n  AvailabilityContext,\n  AvailabilityProviderProps,\n} from './types'\n\nconst Context = createContext<AvailabilityContext | undefined>(undefined)\n\nconst useAvailabilities = (timeZone: string) => {\n  const [isDirty, setIsDirty] = useState(false)\n  const [daysToIdMappings, setDaysToIdMappings] = useState<DaysToIds | {}>({})\n\n  const [UTCAvailability, setUTCAvailability] = useState<\n    UTCMinutesAvailability[]\n  >([])\n  const [availability, setAvailability] = useState<Availability[]>([])\n  const [defaultAvailability, setDefaultAvailability] = useState<\n    Availability[]\n  >([])\n\n  const shouldUpdateUTCAvailability = useRef(true)\n\n  const resetAvailability = () => {\n    setAvailability(defaultAvailability)\n    setIsDirty(false)\n    shouldUpdateUTCAvailability.current = false\n  }\n\n  useEffect(() => {\n    if (shouldUpdateUTCAvailability.current && availability.length) {\n      setUTCAvailability(getAvailabilityInUTC(availability, timeZone))\n    }\n\n    shouldUpdateUTCAvailability.current = true\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [availability])\n\n  useEffect(() => {\n    setIsDirty(\n      JSON.stringify(availability) !== JSON.stringify(defaultAvailability)\n    )\n  }, [availability, defaultAvailability])\n\n  useEffect(() => {\n    if (UTCAvailability.length) {\n      shouldUpdateUTCAvailability.current = false\n      setAvailability(getAvailabilityInTimeZone(UTCAvailability, timeZone))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeZone])\n\n  return {\n    isDirty,\n    daysToIdMappings,\n    setDaysToIdMappings,\n    UTCAvailability,\n    setUTCAvailability,\n    availability,\n    setAvailability,\n    resetAvailability,\n    setDefaultAvailability,\n  }\n}\n\nexport const AvailabilityProvider: FC<AvailabilityProviderProps> = props => {\n  const { children, timeZoneId, userId } = props\n  const {\n    isDirty,\n    availability,\n    setAvailability,\n    UTCAvailability,\n    setUTCAvailability,\n    daysToIdMappings,\n    setDaysToIdMappings,\n    resetAvailability,\n    setDefaultAvailability,\n  } = useAvailabilities(timeZoneId)\n\n  const { isPending, error, reload } = useUserAvailability({\n    id: userId,\n    onResolve: ({ data }) => {\n      const availability = data\n        .map(({ attributes }) => ({ ...attributes }))\n        .sort((next, prev) => Weekdays[next.day] - Weekdays[prev.day])\n      const getAvailabilityInTZ = getAvailabilityInTimeZone(\n        availability,\n        timeZoneId\n      )\n\n      setAvailability(getAvailabilityInTZ)\n      setDefaultAvailability(getAvailabilityInTZ)\n      setUTCAvailability(availability)\n\n      setDaysToIdMappings(\n        data.reduce(\n          (acc, curr) => ({ ...acc, [curr.attributes.day]: curr.id }),\n          {}\n        )\n      )\n    },\n  })\n\n  const value = useMemo<AvailabilityContext>(\n    () => ({\n      isDirty,\n      availability,\n      setAvailability,\n      UTCAvailability,\n      setUTCAvailability,\n      daysToIdMappings: daysToIdMappings as DaysToIds,\n      resetAvailability,\n      setDefaultAvailability,\n    }),\n    [\n      isDirty,\n      availability,\n      setAvailability,\n      UTCAvailability,\n      setUTCAvailability,\n      daysToIdMappings,\n      resetAvailability,\n      setDefaultAvailability,\n    ]\n  )\n\n  if (error) {\n    return <ErrorPage onButtonClick={reload} />\n  }\n\n  return (\n    <>\n      {!availability.length && isPending && <ModalSpinner />}\n      {availability.length !== 0 && (\n        <Context.Provider value={value}>{children}</Context.Provider>\n      )}\n    </>\n  )\n}\n\nexport const useAvailability = () => {\n  const context = useContext(Context) as AvailabilityContext\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error(\n      'useAvailability must be used within a AvailabilityProvider'\n    )\n  }\n\n  return context\n}\n","import { styled } from '@jifflenow/brightui'\nimport { Button } from '@jifflenow/brightui/button'\n\nexport const FooterContainer = styled('div', ({ $theme: { sizing } }) => ({\n  height: sizing.scale1600,\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  paddingRight: sizing.scale600,\n  position: 'sticky',\n  left: 0,\n  bottom: 0,\n  backgroundColor: 'white',\n}))\n\nexport const FooterButton = styled(Button, ({ $theme: { sizing } }) => ({\n  width: '99px',\n  height: sizing.scale900,\n  marginRight: sizing.scale300,\n}))\n","import { VFC, useState } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { FormattedMessage } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { ButtonProps } from './types'\nimport { FooterButton } from './styled-components'\n\nconst messages = defineMessages({\n  confirmationHeader: {\n    defaultMessage: 'Unsaved Changes',\n    description: 'Modal heading',\n  },\n  confirmationMessage: {\n    defaultMessage:\n      'You have unsaved changes, would you like to save and continue?',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Save',\n    description: 'Button label',\n  },\n})\n\nexport const CancelButton: VFC<ButtonProps> = props => {\n  const { formatMessage } = useIntl()\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const handleCancel = () => setShowConfirmation(true)\n\n  const onSuccess = () => setShowConfirmation(false)\n  const onClose = () => {\n    setShowConfirmation(false)\n    props.handleDiscard?.()\n  }\n\n  return (\n    <>\n      {showConfirmation && (\n        <ConfirmationDialog\n          onClose={onClose}\n          onCancel={onClose}\n          onSuccess={onSuccess}\n          heading={formatMessage(messages.confirmationHeader)}\n          message={formatMessage(messages.confirmationMessage)}\n          cancelLabel={formatMessage(messages.cancelButtonLabel)}\n          successLabel={formatMessage(messages.successButtonLabel)}\n        />\n      )}\n      <FooterButton\n        type=\"button\"\n        kind={KIND.tertiary}\n        onClick={handleCancel}\n        disabled={props.isDisabled}\n        data-pendo={`${props.pendoPrefix}/cancel`}\n      >\n        <FormattedMessage defaultMessage=\"Cancel\" description=\"Button label\" />\n      </FooterButton>\n    </>\n  )\n}\n","import { VFC, useState } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { FormattedMessage } from 'react-intl'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { useDirtyCheckDialog } from 'components/ProfileDrawer/Common/useDirtyCheckDialog'\nimport { SaveButtonProps } from './types'\nimport { FooterButton } from './styled-components'\n\nconst messages = defineMessages({\n  confirmationHeader: {\n    defaultMessage: 'Confirmation',\n    description: 'Modal heading',\n  },\n  confirmationMessage: {\n    defaultMessage:\n      'Changes in availability will only reflect for future meetings and not for already scheduled meetings.',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Cancel',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'OK',\n    description: 'Button label',\n  },\n})\n\nexport const SaveButton: VFC<SaveButtonProps> = ({\n  isDirty,\n  isDisabled,\n  pendoPrefix,\n  onSave,\n  clearTempActiveKey,\n}) => {\n  const { formatMessage } = useIntl()\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const handleSave = () => {\n    setShowConfirmation(true)\n    clearTempActiveKey()\n  }\n\n  const onClose = () => setShowConfirmation(false)\n\n  const onSuccess = () => {\n    setShowConfirmation(false)\n    return onSave()\n  }\n\n  useDirtyCheckDialog({\n    isDirty,\n    onSave: () => {\n      setShowConfirmation(true)\n      return true\n    },\n  })\n\n  return (\n    <>\n      {showConfirmation && (\n        <ConfirmationDialog\n          onClose={onClose}\n          onCancel={onClose}\n          onSuccess={onSuccess}\n          heading={formatMessage(messages.confirmationHeader)}\n          message={formatMessage(messages.confirmationMessage)}\n          cancelLabel={formatMessage(messages.cancelButtonLabel)}\n          successLabel={formatMessage(messages.successButtonLabel)}\n        />\n      )}\n\n      <FooterButton\n        type=\"submit\"\n        onClick={handleSave}\n        disabled={isDisabled}\n        data-pendo={`${pendoPrefix}/save`}\n      >\n        <FormattedMessage defaultMessage=\"Save\" description=\"Button label\" />\n      </FooterButton>\n    </>\n  )\n}\n","import { VFC } from 'react'\nimport { CancelButton } from './CancelButton'\nimport { SaveButton } from './SaveButton'\nimport { FooterProps } from './types'\nimport { FooterContainer } from './styled-components'\n\nexport const Footer: VFC<FooterProps> = props => (\n  <FooterContainer>\n    <CancelButton\n      isDisabled={props.isDisabled}\n      pendoPrefix={props.pendoPrefix}\n      handleDiscard={props.handleDiscard}\n    />\n    <SaveButton {...props} />\n  </FooterContainer>\n)\n","import { Dispatch, SetStateAction } from 'react'\nimport { defineMessages, MessageDescriptor } from 'react-intl'\nimport { DateTime } from 'luxon'\nimport {\n  getEndDateOfDay,\n  getFullMinutes,\n  getISOTimeFromDate,\n  getPlusDate,\n} from './DateTimeConversions'\n\nexport const deleteAllSlots = <T>({\n  availability,\n  setAvailability,\n  check,\n}: {\n  availability: T[]\n  setAvailability: Dispatch<SetStateAction<T[]>>\n  check: (availability: T) => boolean\n}) => {\n  setAvailability(\n    availability.map(availability =>\n      check(availability) ? { ...availability, timeRanges: [] } : availability\n    )\n  )\n}\n\nconst messages = defineMessages({\n  overlapError: {\n    defaultMessage: 'Time overlap',\n    description: 'Error message',\n  },\n  endTimeLessThanStartTime: {\n    defaultMessage: 'Choose an end time later than start time.',\n    description: 'Error message',\n  },\n})\n\ntype TimeRanges = { start: string; end: string }[]\n\nexport const addNewSlot = <T extends { timeRanges: TimeRanges }>({\n  availability,\n  setAvailability,\n  timeRanges,\n  check,\n  getStartOfDay,\n  getNextSlot,\n}: {\n  availability: T[]\n  setAvailability: Dispatch<SetStateAction<T[]>>\n  check: (availability: T) => boolean\n  timeRanges: TimeRanges\n  getStartOfDay: () => string\n  getNextSlot: (prevEndTime: string) => string\n}) => {\n  const prevEndTime = timeRanges[timeRanges.length - 1]?.end\n  const newStartDate = prevEndTime\n    ? getNextSlot(prevEndTime)\n    : getPlusDate(getStartOfDay(), { hour: 9 })\n\n  const newEndDate =\n    DateTime.fromISO(newStartDate).hour === 23\n      ? getEndDateOfDay(newStartDate)\n      : prevEndTime\n      ? getPlusDate(newStartDate, { hour: 1 })\n      : getPlusDate(getStartOfDay(), { hour: 17 })\n\n  setAvailability(\n    availability.map(availability =>\n      check(availability)\n        ? {\n            ...availability,\n            timeRanges: [\n              ...availability.timeRanges,\n              {\n                start: getISOTimeFromDate(newStartDate),\n                end: getISOTimeFromDate(newEndDate),\n              },\n            ],\n          }\n        : availability\n    )\n  )\n}\n\nexport const checkForOverlaps = <T extends { timeRanges: TimeRanges }>({\n  setAvailability,\n  check,\n  formatMessage,\n}: {\n  setAvailability: Dispatch<SetStateAction<T[]>>\n  check: (availability: T) => boolean\n  formatMessage: (MessageDescriptor: MessageDescriptor) => string\n}) => {\n  setAvailability(availability =>\n    availability.map(availability =>\n      check(availability)\n        ? {\n            ...availability,\n            timeRanges: availability.timeRanges.some(({ start, end }) => {\n              const endTimeToCompare =\n                getFullMinutes(end) === 0\n                  ? DateTime.fromISO(end).endOf('day').toISOTime()\n                  : end\n\n              return endTimeToCompare <= start\n            })\n              ? availability.timeRanges\n              : availability.timeRanges.map((range, currentRangeIndex) => {\n                  const { start, end } = range\n\n                  const endTimeToCompare =\n                    getFullMinutes(end) === 0\n                      ? DateTime.fromISO(end).endOf('day').toISOTime()\n                      : end\n\n                  const otherRanges = availability.timeRanges.filter(\n                    (_, index) => index !== currentRangeIndex\n                  )\n\n                  const hasOverlap = otherRanges.some(\n                    ({ start: rangeStart, end: rangeEnd }) => {\n                      const rangeEndToCompare =\n                        getFullMinutes(rangeEnd) === 0\n                          ? DateTime.fromISO(rangeEnd).endOf('day').toISOTime()\n                          : rangeEnd\n\n                      return (\n                        rangeStart < endTimeToCompare &&\n                        rangeEndToCompare > start\n                      )\n                    }\n                  )\n\n                  return {\n                    start,\n                    end,\n                    ...(hasOverlap\n                      ? { error: formatMessage(messages.overlapError) }\n                      : null),\n                  }\n                }),\n          }\n        : availability\n    )\n  )\n}\n\nexport const deleteSlot = <T extends { timeRanges: TimeRanges }>({\n  availability,\n  setAvailability,\n  check,\n  formatMessage,\n  indexToDelete,\n}: {\n  availability: T[]\n  setAvailability: Dispatch<SetStateAction<T[]>>\n  check: (availability: T) => boolean\n  indexToDelete: number\n  formatMessage: (MessageDescriptor: MessageDescriptor) => string\n}) => {\n  setAvailability(\n    availability.map(availability =>\n      check(availability)\n        ? {\n            ...availability,\n            timeRanges: availability.timeRanges.filter(\n              (_, index) => index !== indexToDelete\n            ),\n          }\n        : availability\n    )\n  )\n\n  checkForOverlaps({ setAvailability, check, formatMessage })\n}\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const iconButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { colors } }) => ({\n      backgroundColor: colors.white,\n      borderLeftStyle: 'none',\n      borderTopStyle: 'none',\n      borderRightStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopRightRadius: 'none',\n      borderBottomRightRadius: 'none',\n      borderTopLeftRadius: 'none',\n      borderBottomLeftRadius: 'none',\n    }),\n  },\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\n\nexport const Root = styled('div', ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: 'calc(100vh - 350px)',\n  overflow: 'scroll',\n  [mediaQuery.medium]: {\n    height: 'calc(100vh - 300px)',\n  },\n}))\n\nexport const WeekDayRoot = styled<{ $isEmpty: boolean }, 'div'>(\n  'div',\n  ({ $theme: { sizing, colors, mediaQuery }, $isEmpty }) => ({\n    paddingTop: sizing.scale600,\n    paddingRight: sizing.scale600,\n    paddingLeft: sizing.scale600,\n    paddingBottom: $isEmpty ? sizing.scale600 : sizing.scale300,\n    borderBottom: `1px solid ${colors.mono400}`,\n    [mediaQuery.medium]: {\n      paddingTop: sizing.scale300,\n      paddingRight: sizing.scale800,\n      paddingLeft: sizing.scale800,\n      paddingBottom: $isEmpty ? sizing.scale300 : 0,\n    },\n  })\n)\n\nexport const WeekDayTitle = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing, mediaQuery } }) => ({\n    ...typography.Subtitle1,\n    color: colors.mono800,\n    minWidth: '100px',\n    paddingRight: sizing.scale300,\n    display: 'none',\n    [mediaQuery.medium]: {\n      display: 'block',\n    },\n  })\n)\n\nexport const WeekDayTitleMobile = withStyle(\n  WeekDayTitle,\n  ({ $theme: { mediaQuery } }) => ({\n    display: 'block',\n    [mediaQuery.medium]: {\n      display: 'none',\n    },\n  })\n)\n\nexport const TitleActionsContainer = styled(\n  'div',\n  ({ $theme: { mediaQuery } }) => ({\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    justifyContent: 'space-between',\n    [mediaQuery.medium]: {\n      flexDirection: 'row',\n    },\n  })\n)\n\nexport const ActionBar = styled<{ $isEmpty: boolean }, 'div'>(\n  'div',\n  ({ $theme: { mediaQuery, sizing }, $isEmpty }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: $isEmpty ? 0 : sizing.scale600,\n    [mediaQuery.medium]: {\n      display: 'block',\n      marginBottom: 0,\n    },\n  })\n)\n\nexport const ActionsContainer = styled('div', {\n  width: '100px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginLeft: 'auto',\n  alignItems: 'flex-start',\n})\n\nexport const SlotsRoot = styled('div', {\n  display: 'flex',\n  flexWrap: 'wrap',\n})\n\nexport const TimeSlotWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale700,\n  marginBottom: sizing.scale300,\n}))\n\nexport const CopySlotsRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  marginBottom: sizing.scale700,\n}))\n\nexport const DaySlotWrapper = styled('div', {\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n})\n","import { FC } from 'react'\nimport { useIntl, defineMessages } from 'react-intl'\nimport { DateTime } from 'luxon'\nimport { Add, Trash, CopyOutlined } from '@jifflenow/brightui/icon'\nimport { IconButton } from '@jifflenow/brightui/button'\nimport { weekDays } from 'utils/messages'\nimport { RangeTimeSlot } from 'ui-components/RangeTimeSlot'\nimport { useAvailability } from '../AvailabilityProvider'\nimport {\n  getISODateFromWeekDayAndTime,\n  getISOTimeFromDate,\n  getStartOfDateFromWeekDay,\n  getISOTimeFromJSDate,\n  getFullMinutes,\n  getEndDateOfDay,\n} from '../DateTimeConversions'\nimport { Availability } from '../types'\nimport {\n  checkForOverlaps as checkForOverlapsUtility,\n  deleteAllSlots as deleteAllSlotsUtility,\n  addNewSlot as addNewSlotUtitility,\n  deleteSlot as deleteSlotUtility,\n} from '../utilities'\nimport { iconButtonOverrides } from './overrides'\nimport { AvailabilityDayProps } from './types'\nimport {\n  WeekDayRoot,\n  WeekDayTitle,\n  SlotsRoot,\n  ActionsContainer,\n  TitleActionsContainer,\n  TimeSlotWrapper,\n  DaySlotWrapper,\n  ActionBar,\n  WeekDayTitleMobile,\n} from './styled-components'\n\nconst messages = defineMessages({\n  overlapError: {\n    defaultMessage: 'Time overlap',\n    description: 'Error message',\n  },\n  endTimeLessThanStartTime: {\n    defaultMessage: 'Choose an end time later than start time.',\n    description: 'Error message',\n  },\n})\n\nexport const AvailabilityDay: FC<AvailabilityDayProps> = ({\n  dayAvailability,\n  onCopySlots,\n}) => {\n  const { formatMessage } = useIntl()\n  const { availability, setAvailability } = useAvailability()\n  const { day, weekDay, timeRanges } = dayAvailability\n\n  const lastSlotEndsAt12AM = timeRanges.length\n    ? DateTime.fromISO(timeRanges[timeRanges.length - 1].end).hour === 0\n    : false\n\n  const check = (availability: Availability) => availability.weekDay === weekDay\n  const getStartOfDay = () => getStartOfDateFromWeekDay(weekDay)\n  const getNextSlot = (prevEndTime: string) =>\n    getISODateFromWeekDayAndTime(weekDay, prevEndTime)\n\n  const deleteAllSlots = () => {\n    deleteAllSlotsUtility<Availability>({\n      availability,\n      setAvailability,\n      check,\n    })\n  }\n\n  const addNewSlot = () => {\n    addNewSlotUtitility<Availability>({\n      availability,\n      setAvailability,\n      check,\n      timeRanges,\n      getNextSlot,\n      getStartOfDay,\n    })\n  }\n\n  const deleteSlot = (indexToDelete: number) => {\n    deleteSlotUtility({\n      availability,\n      setAvailability,\n      check,\n      formatMessage,\n      indexToDelete,\n    })\n  }\n\n  const checkForOverlaps = () => {\n    checkForOverlapsUtility({ setAvailability, formatMessage, check })\n  }\n\n  const editSlotStartTime = (date: Date, indexToUpdate: number) => {\n    const startDateTime = DateTime.fromJSDate(date)\n    /**\n     * FinalizeEndTime decides to update the end time based on the newly\n     * selected start time, there are 3 cases -\n     * 1. If end time is already 12:00am, end time should result to no change\n     * 2. If start time is already greater than 23:00pm, end time will be 12:00am\n     * 3. If start time is greater/equal, end time will be start time + 1 hour\n     */\n    const finalizeEndTime = (end: string, index: number) =>\n      getFullMinutes(startDateTime.toISO()) === 0\n        ? end\n        : startDateTime.toMillis() >=\n          DateTime.fromISO(\n            getISODateFromWeekDayAndTime(\n              weekDay,\n              timeRanges.find((_, idx) => idx === index)?.end!\n            )\n          ).toMillis()\n        ? getISOTimeFromJSDate(\n            startDateTime.hour === 23\n              ? DateTime.fromISO(\n                  `${startDateTime.toISODate()}T24:00:00`\n                ).toJSDate()\n              : startDateTime.plus({ hour: 1 }).toJSDate()\n          )\n        : end\n\n    setAvailability(\n      availability.map(availability =>\n        availability.weekDay === weekDay\n          ? {\n              ...availability,\n              timeRanges: availability.timeRanges.map((range, index) =>\n                index === indexToUpdate\n                  ? {\n                      start: getISOTimeFromJSDate(date),\n                      end: finalizeEndTime(range.end, index),\n                    }\n                  : range\n              ),\n            }\n          : availability\n      )\n    )\n\n    checkForOverlaps()\n  }\n\n  const editSlotEndTime = (date: Date, indexToUpdate: number) => {\n    setAvailability(\n      availability.map(availability =>\n        availability.weekDay === weekDay\n          ? {\n              ...availability,\n              timeRanges: availability.timeRanges.map((range, index) => {\n                if (index !== indexToUpdate) {\n                  return range\n                }\n\n                const is12AM = getFullMinutes(date.toISOString()) === 0\n\n                const end = is12AM\n                  ? getISOTimeFromDate(getEndDateOfDay(date.toISOString()))\n                  : getISOTimeFromJSDate(date)\n\n                return {\n                  start: range.start,\n                  ...(!is12AM && end <= range.start\n                    ? {\n                        error: formatMessage(messages.endTimeLessThanStartTime),\n                      }\n                    : null),\n                  end,\n                }\n              }),\n            }\n          : availability\n      )\n    )\n\n    checkForOverlaps()\n  }\n\n  const isSlotsEmpty = !timeRanges.length\n\n  return (\n    <WeekDayRoot key={day} $isEmpty={isSlotsEmpty}>\n      <TitleActionsContainer>\n        <DaySlotWrapper>\n          <WeekDayTitle>\n            {formatMessage(weekDays[day as keyof typeof weekDays])}\n          </WeekDayTitle>\n          <SlotsRoot>\n            {timeRanges.map(({ start, end, error }, index) => (\n              <TimeSlotWrapper key={`${index}-${start}-${end}`}>\n                <RangeTimeSlot\n                  start={getISODateFromWeekDayAndTime(weekDay, start)}\n                  end={getISODateFromWeekDayAndTime(weekDay, end)}\n                  error={error}\n                  onDelete={() => deleteSlot(index)}\n                  onStartChange={date => editSlotStartTime(date, index)}\n                  onEndChange={date => editSlotEndTime(date, index)}\n                />\n              </TimeSlotWrapper>\n            ))}\n          </SlotsRoot>\n        </DaySlotWrapper>\n        <ActionBar $isEmpty={isSlotsEmpty}>\n          <WeekDayTitleMobile>\n            {formatMessage(weekDays[day as keyof typeof weekDays])}\n          </WeekDayTitleMobile>\n          <ActionsContainer\n            data-pendo={`profile/availability/${day}-action-container`}\n          >\n            <IconButton\n              size={20}\n              overrides={iconButtonOverrides}\n              disabled={lastSlotEndsAt12AM}\n              onClick={addNewSlot}\n              data-pendo=\"profile/availability/add\"\n            >\n              <Add size={20} />\n            </IconButton>\n            <IconButton\n              size={20}\n              overrides={iconButtonOverrides}\n              disabled={!timeRanges.length}\n              onClick={() => onCopySlots(weekDay)}\n              data-pendo=\"profile/availability/copy\"\n            >\n              <CopyOutlined />\n            </IconButton>\n            <IconButton\n              size={20}\n              disabled={!timeRanges.length}\n              overrides={iconButtonOverrides}\n              onClick={deleteAllSlots}\n              data-pendo=\"profile/availability/delete\"\n            >\n              <Trash />\n            </IconButton>\n          </ActionsContainer>\n        </ActionBar>\n      </TitleActionsContainer>\n    </WeekDayRoot>\n  )\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { Container as BodyContainer } from '../Common/styled-components'\n\nexport const Container = withStyle(\n  BodyContainer,\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    [mediaQuery.medium]: {\n      paddingBottom: 0,\n      paddingTop: sizing.scale700,\n    },\n  })\n)\n\nexport const CopySlotsModalBodyWrapper = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    marginTop: sizing.scale400,\n  })\n)\n\nexport const Note = styled(\n  'span',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    marginTop: sizing.scale200,\n  })\n)\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\nimport { TabOverrides } from '@jifflenow/brightui/tabs-motion'\nimport { TabsOverrides } from 'baseui/tabs-motion'\n\nexport const tabsOverrides: TabsOverrides = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      marginTop: sizing.scale600,\n    }),\n  },\n  TabList: {\n    style: ({ $theme: { sizing } }) => ({\n      height: sizing.scale1000,\n    }),\n  },\n  TabBorder: {\n    style: {\n      display: 'none',\n    },\n  },\n}\n\nexport const tabOverrides: TabOverrides = {\n  TabPanel: {\n    style: ({ $theme: { sizing, colors } }) => ({\n      borderTopWidth: '1px',\n      borderRightWidth: '1px',\n      borderBottomWidth: '1px',\n      borderLeftWidth: '1px',\n      borderTopColor: colors.mono400,\n      borderRightColor: colors.mono400,\n      borderBottomColor: colors.mono400,\n      borderLeftColor: colors.mono400,\n      borderTopStyle: 'solid',\n      borderRightStyle: 'solid',\n      borderBottomStyle: 'solid',\n      borderLeftStyle: 'solid',\n      borderBottomLeftRadius: sizing.scale100,\n      borderBottomRightRadius: sizing.scale100,\n      borderTopRightRadius: sizing.scale100,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingTop: 0,\n      marginTop: '5px',\n    }),\n  },\n}\n\nexport const modalButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n      width: '99px',\n    }),\n  },\n}\n","import { VFC, useState } from 'react'\nimport { useIntl } from 'react-intl'\nimport { weekDays } from 'utils/messages'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { Weekdays } from '../Common/weekDayMappings'\nimport { CopySlotsRoot } from './styled-components'\nimport { CopyDaySlotsToProps } from './types'\n\nexport const CopyDaySlotsTo: VFC<CopyDaySlotsToProps> = props => {\n  const { formatMessage } = useIntl()\n  const [checked, setChecked] = useState(false)\n  const { weekDay } = props\n\n  return (\n    <CopySlotsRoot>\n      <Checkbox\n        checked={checked}\n        onChange={() => {\n          setChecked(!checked)\n          props.addCopyDestinationDays(weekDay)\n        }}\n      >\n        {formatMessage(weekDays[Weekdays[weekDay] as keyof typeof weekDays])}\n      </Checkbox>\n    </CopySlotsRoot>\n  )\n}\n","import { VFC, useState } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalButton,\n} from '@jifflenow/brightui/modal'\nimport { weekDays as weekDayNames } from 'utils/messages'\nimport { Weekdays } from '../Common/weekDayMappings'\nimport { CopySlotsModalBodyWrapper } from '../styled-components'\nimport { modalButtonOverrides } from '../overrides'\nimport { CopyAvailabilityProps, WeekDay } from './types'\nimport { CopyDaySlotsTo } from './CopyDaySlotsTo'\n\nexport const CopyAvailability: VFC<CopyAvailabilityProps> = props => {\n  const { formatMessage } = useIntl()\n  const {\n    sourceWeekDay,\n    availabilityInTZ,\n    setAvailabilityInTZ,\n    ...modalProps\n  } = props\n\n  const [targetWeekDays, setTargetWeekDays] = useState<WeekDay[]>([])\n\n  const addCopyDestinationDays = (weekDay: WeekDay) => {\n    setTargetWeekDays([...targetWeekDays, weekDay])\n  }\n\n  const handleCopySlots = () => {\n    if (sourceWeekDay) {\n      const { timeRanges } = availabilityInTZ.find(\n        ({ weekDay }) => weekDay === sourceWeekDay\n      )!\n\n      setAvailabilityInTZ(\n        availabilityInTZ.map(availability =>\n          targetWeekDays.includes(availability.weekDay)\n            ? { ...availability, timeRanges }\n            : availability\n        )\n      )\n\n      modalProps.onClose()\n      // setCopyFromDay(null)\n      setTargetWeekDays([])\n    }\n  }\n\n  return (\n    <Modal {...modalProps}>\n      <ModalHeader>\n        <FormattedMessage\n          defaultMessage=\"Copy availability of {day} to\"\n          description=\"Header title\"\n          values={{\n            day: formatMessage(\n              weekDayNames[\n                Weekdays[sourceWeekDay!] as keyof typeof weekDayNames\n              ]\n            ),\n          }}\n        />\n      </ModalHeader>\n      <ModalBody>\n        <CopySlotsModalBodyWrapper>\n          {availabilityInTZ\n            ?.filter(({ weekDay }) => weekDay !== sourceWeekDay)\n            .map(({ weekDay }, key) => (\n              <CopyDaySlotsTo\n                key={key}\n                weekDay={weekDay}\n                addCopyDestinationDays={addCopyDestinationDays}\n              />\n            ))}\n        </CopySlotsModalBodyWrapper>\n      </ModalBody>\n      <ModalFooter>\n        <ModalButton\n          kind={KIND.tertiary}\n          overrides={modalButtonOverrides}\n          onClick={modalProps.onClose}\n          data-pendo=\"profile/availability/copy-cancel\"\n        >\n          <FormattedMessage\n            defaultMessage=\"Cancel\"\n            description=\"Button label\"\n          />\n        </ModalButton>\n        <ModalButton\n          kind={KIND.primary}\n          onClick={handleCopySlots}\n          overrides={modalButtonOverrides}\n          data-pendo=\"profile/availability/copy-ok\"\n        >\n          <FormattedMessage defaultMessage=\"OK\" description=\"Button label\" />\n        </ModalButton>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import { VFC, useState, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useParams } from 'react-router-dom'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { updateUserAvailability, usePortalV2Client } from 'rest'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { useAvailability } from '../AvailabilityProvider'\nimport { Footer } from '../Common/Footer'\nimport { getAvailabilityInUTC } from './transform'\nimport { AvailabilitiesProps, WeekDay } from './types'\nimport { AvailabilityDay } from './AvailabilityDay'\nimport { CopyAvailability } from './CopyAvailability'\nimport { Root } from './styled-components'\n\nconst messages = defineMessages({\n  success: {\n    defaultMessage: 'Availabilities Saved Successfully.',\n    description: 'Success message',\n  },\n  genericError: {\n    defaultMessage: 'Error Setting Availabilities.',\n    description: 'Error message',\n  },\n})\n\nexport const Availabilities: VFC<AvailabilitiesProps> = ({\n  timeZone,\n  onSuccess,\n  clearTempActiveKey,\n}) => {\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n  const { userId: id } = useParams<{ userId: string }>()\n  const client = usePortalV2Client()\n  const [isOpen, setIsOpen] = useState(false)\n  const [showLoader, setShowLoader] = useState(false)\n\n  const {\n    isDirty,\n    availability,\n    setAvailability,\n    daysToIdMappings,\n    resetAvailability,\n    setDefaultAvailability,\n  } = useAvailability()\n\n  const [copySource, setCopySource] = useState<WeekDay | null>(null)\n\n  const hasError = availability\n    .flatMap(({ timeRanges }) => timeRanges)\n    .some(({ error }) => error)\n\n  const handleCopySlots = (weekDay: WeekDay) => {\n    setIsOpen(true)\n    setCopySource(weekDay)\n  }\n\n  const handleSave = async () => {\n    setAvailability(\n      availability.map(availability => ({\n        ...availability,\n        timeRanges: availability.timeRanges.sort((a, b) =>\n          a.start < b.start ? -1 : a.start > b.start ? 1 : 0\n        ),\n      }))\n    )\n    setShowLoader(true)\n    const payload = {\n      data: getAvailabilityInUTC(availability, timeZone.timeZoneId).map(\n        availabilityUTC => ({\n          id: daysToIdMappings[availabilityUTC.day],\n          timeRanges: availabilityUTC.timeRanges,\n        })\n      ),\n    }\n    try {\n      await updateUserAvailability(client, id, payload)\n      setDefaultAvailability(availability)\n      setShowLoader(false)\n      showSuccessToast(formatMessage(messages.success))\n      onSuccess()\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return false\n    }\n  }\n\n  useEffect(() => {\n    unload(isDirty)\n  }, [isDirty, unload])\n\n  return (\n    <>\n      <Root>\n        {availability?.map((availability, key) => (\n          <AvailabilityDay\n            key={key}\n            dayAvailability={availability}\n            onCopySlots={handleCopySlots}\n          />\n        ))}\n      </Root>\n      <Footer\n        clearTempActiveKey={clearTempActiveKey}\n        isDirty={isDirty}\n        onSave={handleSave}\n        isDisabled={showLoader || !isDirty || hasError}\n        pendoPrefix=\"profile/availability\"\n        handleDiscard={resetAvailability}\n      />\n      {isOpen && (\n        <CopyAvailability\n          isOpen\n          sourceWeekDay={copySource}\n          onClose={() => setIsOpen(false)}\n          availabilityInTZ={availability}\n          setAvailabilityInTZ={setAvailability}\n        />\n      )}\n      {showLoader && <ModalSpinner />}\n    </>\n  )\n}\n","import { VFC, useImperativeHandle, forwardRef } from 'react'\nimport ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\nimport { FlexGrid, FlexGridItem } from '@jifflenow/brightui/flex-grid'\n\nconst LIST_CARD_HEIGHT = 64\n\nconst LoadingListCard: VFC<{ height: number }> = ({ height }) => {\n  const [, theme] = useStyletron()\n  const contentLoaderOptions = {\n    style: { width: '100%', height: `${height}` },\n    width: '1000',\n    height: '100',\n    viewBox: '0 0 1000 100',\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader {...contentLoaderOptions}>\n      <rect y=\"0\" rx={1} ry={20} width=\"1000\" height=\"100\" />\n    </ContentLoader>\n  )\n}\n\nexport const ListLoader = forwardRef((_, ref) => {\n  const [, theme] = useStyletron()\n  useImperativeHandle(ref, () => ({\n    getReactContainerStyle: () => ({\n      alignSelf: 'flex-start',\n      marginTop: theme.sizing.scale600,\n    }),\n  }))\n\n  return (\n    <FlexGrid\n      flexGridColumnCount={1}\n      overrides={{\n        Block: {\n          style: ({ $theme: { sizing } }) => ({\n            marginTop: sizing.scale100,\n            marginBottom: sizing.scale100,\n          }),\n        },\n      }}\n    >\n      {Array.from({ length: 7 }).map((_, i) => (\n        <FlexGridItem key={i}>\n          <LoadingListCard height={LIST_CARD_HEIGHT} />\n        </FlexGridItem>\n      ))}\n    </FlexGrid>\n  )\n})\n","import { styled } from '@jifflenow/brightui'\n\nexport const Root = styled('div', ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: 'calc(62vh - 64px)',\n  overflow: 'scroll',\n  [mediaQuery.medium]: {\n    height: 'calc(100vh - 300px)',\n  },\n}))\n\nexport const NoException = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '500px', // TODO: remove this\n})\n\nexport const Text = styled(\n  'div',\n  ({ $theme: { sizing, typography, colors } }) => ({\n    ...typography.Paragraph1,\n    marginTop: sizing.scale600,\n    color: colors.mono700,\n  })\n)\n\nexport const SelectEventRoot = styled(\n  'div',\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: sizing.scale600,\n    [mediaQuery.small]: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 0,\n    },\n  })\n)\n\nexport const SelectEventWrapper = styled('div', {\n  display: 'flex',\n  minWidth: '204px',\n})\n\nexport const SelectEventLabel = styled(\n  'label',\n  ({ $theme: { typography, sizing, colors, mediaQuery } }) => ({\n    ...typography.Paragraph2,\n    color: colors.mono800,\n    marginBottom: sizing.scale200,\n    marginRight: sizing.scale600,\n    [mediaQuery.small]: {\n      marginBottom: 0,\n    },\n  })\n)\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const clearButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing, colors } }) => ({\n      backgroundColor: colors.white,\n      paddingTop: sizing.scale100,\n      paddingRight: sizing.scale100,\n      paddingBottom: sizing.scale100,\n      paddingLeft: sizing.scale100,\n      marginTop: sizing.scale0,\n      marginLeft: sizing.scale400,\n      color: colors.primary,\n      ':hover': {\n        backgroundColor: 'none',\n      },\n      ':focus': {\n        backgroundColor: 'none',\n        outline: 'none',\n      },\n    }),\n  },\n}\n","import { ModalOverrides } from '@jifflenow/brightui/modal'\nimport { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const iconButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: 0,\n      marginBottom: sizing.scale700,\n    }),\n  },\n}\n\nexport const buttonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      width: '100px',\n      marginRight: sizing.scale300,\n    }),\n  },\n}\n\nexport const modalOverrides: ModalOverrides = {\n  Root: {\n    style: ({ $theme: { mediaQuery } }) => ({\n      zIndex: 1,\n      [mediaQuery.medium]: { zIndex: 'auto' },\n    }),\n  },\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { ModalBody } from '@jifflenow/brightui/modal'\n\nexport const SlotsRoot = styled(\n  'div',\n  ({ $theme: { sizing, colors, mediaQuery } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    alignItems: 'flex-start',\n    paddingTop: sizing.scale800,\n    paddingBottom: sizing.scale300,\n    paddingLeft: sizing.scale1000,\n    paddingRight: sizing.scale300,\n    minWidth: '243px',\n    borderLeft: `1px solid ${colors.mono400}`,\n    borderBottom: `1px solid ${colors.mono400}`,\n    maxHeight: '336px',\n    overflow: 'auto',\n    [mediaQuery.medium]: {\n      minHeight: '380px',\n      maxHeight: '645px',\n    },\n  })\n)\n\nexport const StyledModalBody = withStyle(\n  ModalBody,\n  ({ $theme: { colors } }) => ({\n    minHeight: '337px',\n    maxHeight: '674px',\n    overflowY: 'hidden',\n    borderTop: `1px solid ${colors.mono400}`,\n    marginTop: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    marginBottom: 0,\n  })\n)\n\nexport const AddExceptionRoot = styled('div', () => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n}))\n\nexport const CalendarRoot = styled(\n  'div',\n  ({ $theme: { sizing, colors, mediaQuery } }) => ({\n    minWidth: '377px',\n    flexGrow: 1,\n    paddingTop: sizing.scale200,\n    paddingBottom: sizing.scale200,\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    borderBottom: `1px solid ${colors.mono400}`,\n    [mediaQuery.medium]: {\n      flexGrow: 0,\n      minHeight: '380px',\n    },\n  })\n)\n\nexport const UnavailableText = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono700,\n  })\n)\n\nexport const TimeSlotWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale200,\n}))\n\nexport const HeaderTitle = styled(\n  'div',\n  ({ $theme: { typography, sizing, mediaQuery } }) => ({\n    ...typography.HeadingXSmall,\n    marginRight: sizing.scale800,\n    marginBottom: sizing.scale200,\n    [mediaQuery.small]: {\n      marginBottom: 0,\n    },\n  })\n)\n\nexport const TimeZoneWrapper = styled('div', {\n  minWidth: '180px',\n  maxWidth: '180px',\n  display: 'none',\n})\n\nexport const HeaderRoot = styled(\n  'div',\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    marginRight: sizing.scale600,\n    [mediaQuery.medium]: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n  })\n)\n\nexport const TitleBar = styled('div', ({ $theme: { mediaQuery, sizing } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  marginBottom: sizing.scale600,\n  [mediaQuery.small]: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  [mediaQuery.medium]: {\n    marginBottom: 0,\n  },\n}))\n\nexport const HintText = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Paragraph2,\n}))\n","import { VFC, useState, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { DateTime, Interval } from 'luxon'\nimport { LinkButton } from '@jifflenow/brightui/button'\nimport { PlusCircleOutlined } from '@jifflenow/brightui/icon'\nimport { Calendar } from '@jifflenow/brightui/calendar'\nimport { RangeTimeSlot } from 'ui-components/RangeTimeSlot'\nimport { useEventInfo } from 'components/ProfileDrawer/providers/EventInfoProvider'\nimport { useCampaign } from '../../../Common'\nimport { useAvailability } from '../../AvailabilityProvider'\nimport {\n  getPlusDate,\n  getDateFromJSDate,\n  getJSDate,\n  getISODateStringFromJSDate,\n  getISODateString,\n  getISOTimeFromJSDate,\n  diffInISODates,\n  getPlusISOStringDate,\n  getFullMinutes,\n  getRefISODateWithTime,\n  getEndDateOfDay,\n} from '../../DateTimeConversions'\nimport { ExceptionModalBodyProps } from './types'\nimport { iconButtonOverrides } from './overrides'\nimport {\n  StyledModalBody,\n  SlotsRoot,\n  AddExceptionRoot,\n  CalendarRoot,\n  UnavailableText,\n  TimeSlotWrapper,\n  HintText,\n} from './styled-components'\n\nconst messages = defineMessages({\n  addSlots: {\n    defaultMessage: 'Add available slots',\n    description: 'Button text',\n  },\n  unavailable: {\n    defaultMessage: 'Unavailable',\n    description: 'Button text',\n  },\n  hintText: {\n    defaultMessage: 'Add new working time slots for the selected date(s)',\n    description: 'Hint text',\n  },\n  overlapError: {\n    defaultMessage: 'Time overlap',\n    description: 'Error message',\n  },\n  endTimeLessThanStartTime: {\n    defaultMessage: 'Choose an end time later than start time.',\n    description: 'Error message',\n  },\n})\n\nconst getZoneAdjustedJSDate = (timeZone: string, date?: DateTime): Date =>\n  (date || DateTime.local())\n    .setZone(timeZone)\n    .setZone('local', { keepLocalTime: true })\n    .toJSDate()\n\nconst getZoneAdjustedEventDates = (\n  startDate: string,\n  endDate: string,\n  eventTimeZone: string,\n  timeZone: string\n) => ({\n  startDate: getZoneAdjustedJSDate(\n    timeZone,\n    DateTime.fromISO(startDate).setZone(eventTimeZone, { keepLocalTime: true })\n  ),\n  endDate: getZoneAdjustedJSDate(\n    timeZone,\n    DateTime.fromISO(endDate)\n      .endOf('day')\n      .setZone(eventTimeZone, { keepLocalTime: true })\n  ),\n})\n\nexport const ExceptionModalBody: VFC<ExceptionModalBodyProps> = props => {\n  const { formatMessage } = useIntl()\n  const { campaign } = useCampaign()\n  const { availability } = useAvailability()\n  const {\n    startDate: startDateISO,\n    endDate: endDateISO,\n    timeZone: eventTimeZone,\n  } = useEventInfo().location || {}\n\n  const isEvent = !!startDateISO && !!endDateISO && !!eventTimeZone\n  const {\n    calendarDates,\n    timeSlots,\n    setTimeSlots,\n    setCalendarDates,\n    timeZone,\n  } = props\n\n  const currentDate = getZoneAdjustedJSDate(timeZone.timeZoneId)\n  const isLiveEvent =\n    isEvent &&\n    Interval.fromDateTimes(\n      DateTime.fromISO(startDateISO),\n      DateTime.fromISO(endDateISO).endOf('day')\n    ).contains(DateTime.local())\n\n  const { startDate, endDate } = isEvent\n    ? getZoneAdjustedEventDates(\n        startDateISO,\n        endDateISO,\n        eventTimeZone,\n        timeZone.timeZoneId\n      )\n    : ({} as { startDate: Date; endDate: Date })\n\n  const initialCalendarRange = calendarDates.length\n    ? [\n        getJSDate(calendarDates[0]),\n        getJSDate(calendarDates[calendarDates.length - 1]),\n      ]\n    : isEvent && !isLiveEvent\n    ? [startDate, startDate]\n    : [currentDate, currentDate]\n\n  const [calendarRange, setCalendarRange] = useState<Date[]>(\n    initialCalendarRange\n  )\n\n  const lastSlotEndsAt12AM = timeSlots.length\n    ? DateTime.fromISO(timeSlots[timeSlots.length - 1].timeSlot[1]).hour === 0\n    : false\n\n  useEffect(() => {\n    const dates = Array.from(\n      new Set(calendarRange.map(date => getISODateStringFromJSDate(date)))\n    )\n    const [start, end] = dates\n    const datesToExtract = dates.length === 2 && diffInISODates(start, end).days\n\n    setCalendarDates(\n      datesToExtract\n        ? [\n            start,\n            ...Array.from({ length: datesToExtract - 1 }, (_, index) =>\n              getPlusISOStringDate(start, { day: index + 1 })\n            ),\n            end,\n          ]\n        : dates\n    )\n  }, [calendarRange, setCalendarDates])\n\n  useEffect(() => {\n    setCalendarRange(\n      campaign\n        ? [getJSDate(campaign?.startDate), getJSDate(campaign?.endDate)]\n        : initialCalendarRange\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [campaign])\n\n  const addNewSlot = () => {\n    const preferredStartTime = timeSlots.length\n      ? timeSlots[timeSlots.length - 1].timeSlot[1]\n      : getRefISODateWithTime('09:00:00')\n\n    const preferredStartDT = DateTime.fromISO(preferredStartTime)\n\n    setTimeSlots([\n      ...timeSlots,\n      {\n        timeSlot: [\n          preferredStartTime,\n          preferredStartDT.hour === 23\n            ? getRefISODateWithTime('24:00:00')\n            : timeSlots.length\n            ? getPlusDate(preferredStartTime, { hour: 1 })\n            : getRefISODateWithTime('17:00:00'),\n        ],\n      },\n    ])\n  }\n\n  const checkForOverlaps = () => {\n    setTimeSlots(timeSlots =>\n      timeSlots.some(({ timeSlot: [start, end] }) => end <= start)\n        ? timeSlots\n        : timeSlots.map((currentTimeSlot, currentSlotIndex) => {\n            const [curStart, curEnd] = currentTimeSlot.timeSlot\n\n            const otherSlots = timeSlots.filter(\n              (_, index) => index !== currentSlotIndex\n            )\n\n            const hasOverlap = otherSlots.some(\n              ({ timeSlot: [start, end] }) => start < curEnd && end > curStart\n            )\n\n            return {\n              timeSlot: currentTimeSlot.timeSlot,\n              ...(hasOverlap\n                ? { error: formatMessage(messages.overlapError) }\n                : null),\n            }\n          })\n    )\n  }\n\n  const changeSlotStartTime = (date: Date, index: number) => {\n    const startDateTime = DateTime.fromJSDate(date)\n    setTimeSlots(\n      timeSlots.map((slot, slotIndex) =>\n        slotIndex === index\n          ? {\n              timeSlot: [\n                getDateFromJSDate(date),\n                date.valueOf() >= getJSDate(slot.timeSlot[1]).valueOf()\n                  ? startDateTime.hour === 23\n                    ? DateTime.fromISO(\n                        `${startDateTime.toISODate()}T24:00:00`\n                      ).toISO()\n                    : getPlusDate(startDateTime.toISO(), { hour: 1 })\n                  : slot.timeSlot[1],\n              ],\n            }\n          : slot\n      )\n    )\n    checkForOverlaps()\n  }\n\n  const changeSlotEndTime = (date: Date, index: number) => {\n    const is12AM = getFullMinutes(date.toISOString()) === 0\n\n    setTimeSlots(\n      timeSlots.map((slot, slotIndex) => {\n        if (slotIndex !== index) {\n          return slot\n        }\n\n        const start = slot.timeSlot[0]\n\n        const end = is12AM\n          ? getEndDateOfDay(date.toISOString())\n          : `${getISODateString(start)}T${getISOTimeFromJSDate(date)}`\n\n        return {\n          timeSlot: [start, end],\n          ...(end <= start\n            ? { error: formatMessage(messages.endTimeLessThanStartTime) }\n            : null),\n        }\n      })\n    )\n    checkForOverlaps()\n  }\n\n  const deleteSlot = (index: number) => {\n    setTimeSlots(timeSlots.filter((_, slotIndex) => slotIndex !== index))\n    checkForOverlaps()\n  }\n\n  const changeCalendarRange = (dates: Date[]) => {\n    if (dates.length === 1) {\n      const currentDate = getISODateStringFromJSDate(dates[0])\n\n      const timeSlots =\n        props.exceptions.find(({ date }) => date === currentDate)?.available ??\n        availability\n          .find(\n            ({ weekDay }) => weekDay === DateTime.fromJSDate(dates[0]).weekday\n          )\n          ?.timeRanges.map(({ start, end }) => [\n            `${currentDate}T${start}`,\n            `${currentDate}T${end}`,\n          ]) ??\n        []\n\n      setTimeSlots(timeSlots.map(timeSlot => ({ timeSlot })))\n    }\n    setCalendarRange(dates)\n  }\n\n  return (\n    <StyledModalBody>\n      <AddExceptionRoot>\n        <CalendarRoot>\n          <Calendar\n            selectRange\n            allowPartialRange\n            minDate={startDate}\n            maxDate={endDate}\n            value={calendarRange}\n            onChange={changeCalendarRange}\n          />\n        </CalendarRoot>\n        <SlotsRoot>\n          <HintText>{formatMessage(messages.hintText)}</HintText>\n          <LinkButton\n            size={18}\n            disabled={lastSlotEndsAt12AM}\n            onClick={addNewSlot}\n            startEnhancer={PlusCircleOutlined}\n            overrides={iconButtonOverrides}\n          >\n            {formatMessage(messages.addSlots)}\n          </LinkButton>\n          {timeSlots.length ? (\n            timeSlots.map(({ timeSlot: [start, end], error }, slotIndex) => (\n              <TimeSlotWrapper key={`${slotIndex}-${start}-${end}`}>\n                <RangeTimeSlot\n                  start={start}\n                  end={end}\n                  error={error}\n                  onStartChange={date => changeSlotStartTime(date, slotIndex)}\n                  onEndChange={date => changeSlotEndTime(date, slotIndex)}\n                  onDelete={() => deleteSlot(slotIndex)}\n                />\n              </TimeSlotWrapper>\n            ))\n          ) : (\n            <UnavailableText>\n              {formatMessage(messages.unavailable)}\n            </UnavailableText>\n          )}\n        </SlotsRoot>\n      </AddExceptionRoot>\n    </StyledModalBody>\n  )\n}\n","import { VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { ModalFooter } from '@jifflenow/brightui/modal'\nimport { FooterProps } from './types'\nimport { buttonOverrides } from './overrides'\n\nexport const Footer: VFC<FooterProps> = ({ onCancel, onDone, hasError }) => (\n  <ModalFooter>\n    <Button\n      kind={KIND.tertiary}\n      overrides={buttonOverrides}\n      onClick={onCancel}\n      data-pendo=\"profile/add-exception/cancel\"\n    >\n      <FormattedMessage defaultMessage=\"Cancel\" description=\"Button label\" />\n    </Button>\n    <Button\n      overrides={buttonOverrides}\n      disabled={hasError}\n      onClick={onDone}\n      data-pendo=\"profile/add-exception/done\"\n    >\n      <FormattedMessage defaultMessage=\"Done\" description=\"Button label\" />\n    </Button>\n  </ModalFooter>\n)\n","import { VFC, useState, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Modal, ModalHeader, SIZE } from '@jifflenow/brightui/modal'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { SelectCity, useTimeZoneFromCity } from 'components/TimeZoneChange'\nimport { useEventInfo } from 'components/ProfileDrawer/providers/EventInfoProvider'\nimport { EventDatesLabel } from 'components/ProfileDrawer/Common/EventDatesLabel'\nimport { CampaignFilter, useCampaign } from '../../../Common'\nimport {\n  getISOTimeFromDate,\n  getStartOfDate,\n  getEndDateOfDay,\n  getPlusISOStringDate,\n  getFullMinutes,\n} from '../../DateTimeConversions'\nimport {\n  SelectEventLabel,\n  SelectEventRoot,\n  SelectEventWrapper,\n} from '../styled-components'\nimport { clearButtonOverrides } from '../overrides'\nimport { AddEditExceptionProps, TimeSlots, TimeSlot } from './types'\nimport { ExceptionModalBody } from './ExceptionModalBody'\nimport { Footer } from './Footer'\nimport { modalOverrides } from './overrides'\nimport {\n  HeaderTitle,\n  TimeZoneWrapper,\n  HeaderRoot,\n  TitleBar,\n} from './styled-components'\n\nconst messages = defineMessages({\n  addException: {\n    defaultMessage: 'Add Exception',\n    description: 'Modal header',\n  },\n  editException: {\n    defaultMessage: 'Edit Exception',\n    description: 'Modal header',\n  },\n  addExceptionEvent: {\n    defaultMessage: 'Add Exception for',\n    description: 'Modal header',\n  },\n  editExceptionEvent: {\n    defaultMessage: 'Edit Exception for',\n    description: 'Modal header',\n  },\n  selectDateLabel: {\n    defaultMessage: 'Select Event dates for',\n    description: 'Modal header',\n  },\n  clear: {\n    defaultMessage: 'Clear',\n    description: 'Button label',\n  },\n  timeZone: {\n    defaultMessage: 'Time zone',\n    description: 'Button label',\n  },\n})\n\nexport const AddEditException: VFC<AddEditExceptionProps> = ({\n  isOpen,\n  onClose,\n  exceptions,\n  setExceptions,\n  listedExceptionEditIndex,\n  listedExceptions,\n  timeZone,\n  ...restProps\n}) => {\n  const { formatMessage } = useIntl()\n  const { setCampaign } = useCampaign()\n  const { onCityChange } = useTimeZoneFromCity()\n  const [calendarDates, setCalendarDates] = useState<string[]>([])\n  const [timeSlots, setTimeSlots] = useState<TimeSlot[]>([])\n\n  const { location } = useEventInfo()\n\n  useEffect(() => {\n    if (restProps.calendarDates && restProps.timeSlots) {\n      setCalendarDates(restProps.calendarDates)\n      setTimeSlots(restProps.timeSlots.map(timeSlot => ({ timeSlot })))\n    }\n  }, [restProps.calendarDates, restProps.timeSlots])\n\n  const isEditingException =\n    listedExceptionEditIndex !== undefined && listedExceptionEditIndex >= 0\n\n  const unavailableSlots = exceptions\n    .filter(exception => calendarDates.includes(exception.date))\n    .reduce<TimeSlots>(\n      (unavailableSlotsAcc, exception) =>\n        [...unavailableSlotsAcc, ...exception.unavailable] as TimeSlots,\n      []\n    )\n\n  const hasOverlapsWithUnavailability = (timeSlots: TimeSlots) => {\n    const hasOverlap = unavailableSlots?.find(([unStart, unEnd]) =>\n      timeSlots.some(([start, end]) => end >= unStart && start <= unEnd)\n    )\n\n    return hasOverlap\n  }\n\n  const getAvailableSlots = (date: string) =>\n    timeSlots.map(({ timeSlot: [start, end] }) => {\n      const isSlotEndingAt12AM = getFullMinutes(end) === 0\n\n      return [\n        `${date}T${getISOTimeFromDate(start)}`,\n        `${\n          isSlotEndingAt12AM ? getPlusISOStringDate(date, { day: 1 }) : date\n        }T${getISOTimeFromDate(end)}`,\n      ]\n    }) as TimeSlots\n\n  const handleDone = () => {\n    let overlappedUnavailableSlot: string[] | undefined = []\n\n    const getUnavailableSlots = (date: string) => {\n      overlappedUnavailableSlot =\n        hasOverlapsWithUnavailability(getAvailableSlots(date)) ?? []\n\n      return (timeSlots.length === 0\n        ? [[getStartOfDate(date), getEndDateOfDay(date)]]\n        : unavailableSlots?.length && !overlappedUnavailableSlot.length\n        ? exceptions.find(exception => exception.date === date)?.unavailable ??\n          []\n        : []) as TimeSlots\n    }\n\n    setExceptions(\n      [\n        ...calendarDates.map(date => ({\n          date,\n          available: getAvailableSlots(date),\n          unavailable: getUnavailableSlots(date),\n        })),\n        ...(listedExceptions && isEditingException\n          ? exceptions.filter(\n              ({ date }) =>\n                !(\n                  listedExceptions[listedExceptionEditIndex!].date.includes(\n                    date\n                  ) || calendarDates.includes(date)\n                )\n            )\n          : exceptions.filter(({ date }) => !calendarDates.includes(date))),\n      ]\n        .sort((next, prev) => (prev.date < next.date ? 1 : -1))\n        .map((exception, index) =>\n          overlappedUnavailableSlot?.length &&\n          calendarDates.length === 1 &&\n          (exception.date ===\n            getPlusISOStringDate(calendarDates[0], { day: 1 }) ||\n            exception.date ===\n              getPlusISOStringDate(calendarDates[0], { day: -1 })) &&\n          exceptions[index].unavailable.find(\n            ([start, end]) =>\n              end === overlappedUnavailableSlot?.[0] ||\n              start === overlappedUnavailableSlot?.[1]\n          )\n            ? {\n                ...exception,\n                unavailable: exception.unavailable.filter(\n                  ([start, end]) =>\n                    !(\n                      end === overlappedUnavailableSlot?.[0] ||\n                      start === overlappedUnavailableSlot?.[1]\n                    )\n                ),\n              }\n            : exception\n        )\n        .filter(\n          ({ available, unavailable }) => available.length || unavailable.length\n        )\n    )\n    onClose()\n  }\n\n  const hasError = timeSlots.some(timeSlot => !!timeSlot.error)\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      size={SIZE.large}\n      onClose={onClose}\n      overrides={modalOverrides}\n    >\n      <ModalHeader>\n        <HeaderRoot>\n          {!location ? (\n            <>\n              <TitleBar>\n                <HeaderTitle>\n                  {formatMessage(\n                    isEditingException\n                      ? messages.editException\n                      : messages.addException\n                  )}\n                </HeaderTitle>\n                <TimeZoneWrapper>\n                  <SelectCity\n                    disabled\n                    onChange={onCityChange}\n                    placeholder={formatMessage(messages.timeZone)}\n                  />\n                </TimeZoneWrapper>\n              </TitleBar>\n              <SelectEventRoot>\n                <SelectEventLabel>\n                  {formatMessage(messages.selectDateLabel)}\n                </SelectEventLabel>\n                <SelectEventWrapper>\n                  <CampaignFilter setDefaultValue={false} />\n                  <Button\n                    type=\"button\"\n                    onClick={() => setCampaign(null)}\n                    overrides={clearButtonOverrides}\n                    kind={KIND.minimal}\n                  >\n                    {formatMessage(messages.clear)}\n                  </Button>\n                </SelectEventWrapper>\n              </SelectEventRoot>\n            </>\n          ) : (\n            <EventDatesLabel\n              title={formatMessage(\n                isEditingException\n                  ? messages.editExceptionEvent\n                  : messages.addExceptionEvent\n              )}\n            />\n          )}\n        </HeaderRoot>\n      </ModalHeader>\n      <ExceptionModalBody\n        exceptions={exceptions}\n        calendarDates={calendarDates}\n        timeSlots={timeSlots}\n        setCalendarDates={setCalendarDates}\n        setTimeSlots={setTimeSlots}\n        timeZone={timeZone}\n      />\n      <Footer onCancel={onClose} onDone={handleDone} hasError={hasError} />\n    </Modal>\n  )\n}\n","import { useState, VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Button } from '@jifflenow/brightui/button'\nimport { AddEditException as AddException } from './AddEditException'\nimport { AddExceptionButtonProps } from './types'\n\nexport const AddExceptionButton: VFC<AddExceptionButtonProps> = ({\n  exceptions,\n  setExceptions,\n  timeZone,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <>\n      {isOpen && (\n        <AddException\n          isOpen={isOpen}\n          onClose={() => setIsOpen(false)}\n          exceptions={exceptions}\n          setExceptions={setExceptions}\n          timeZone={timeZone}\n        />\n      )}\n      <Button\n        onClick={() => setIsOpen(true)}\n        data-pendo=\"profile/availability/add-exception\"\n      >\n        <FormattedMessage\n          defaultMessage=\"Add Exception\"\n          description=\"Button label\"\n        />\n      </Button>\n    </>\n  )\n}\n","import { areDatesAdjacent, getFullMinutes } from '../DateTimeConversions'\nimport { GroupedException, Exception } from './types'\n\nconst minutesMapper = ([start, end]: string[]) => [\n  getFullMinutes(start),\n  getFullMinutes(end),\n]\n\nconst areSlotsSame = (last: GroupedException, current: Exception) =>\n  JSON.stringify(last.available.map(minutesMapper)) ===\n    JSON.stringify(current.available.map(minutesMapper)) &&\n  JSON.stringify(last.unavailable.map(minutesMapper)) ===\n    JSON.stringify(current.unavailable.map(minutesMapper))\n\nexport const getGroupedExceptionDates = (exceptions: Exception[]) =>\n  exceptions.reduce((accExceptions, exception) => {\n    const lastAccumulatedException = accExceptions[accExceptions.length - 1]\n\n    if (\n      lastAccumulatedException &&\n      areDatesAdjacent(\n        lastAccumulatedException.date[lastAccumulatedException.date.length - 1],\n        exception.date\n      ) &&\n      areSlotsSame(lastAccumulatedException, exception)\n    ) {\n      const poppedLastException = accExceptions.pop() as GroupedException\n      accExceptions.push({\n        ...poppedLastException,\n        date: [...poppedLastException.date, exception.date],\n      })\n    } else {\n      accExceptions.push({ ...exception, date: [exception.date] })\n    }\n\n    return accExceptions\n  }, [] as GroupedException[])\n","import { styled } from '@jifflenow/brightui'\n\nexport const Root = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n})\n\nexport const ListHeader = styled(\n  'div',\n  ({ $theme: { sizing, mediaQuery } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '64px',\n    paddingTop: sizing.scale600,\n    paddingBottom: sizing.scale600,\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    [mediaQuery.medium]: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n  })\n)\n\nexport const FilterWrapper = styled('span', () => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n}))\n\nexport const ListHeadingDesc = styled(\n  'span',\n  ({ $theme: { colors, sizing, typography } }) => ({\n    ...typography.Caption1,\n    color: colors.mono700,\n    marginTop: sizing.scale200,\n  })\n)\nexport const ListHeaderRoot = styled('span', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n}))\n\nexport const ExceptionList = styled('ul', {\n  paddingLeft: 0,\n  marginTop: 0,\n  listStyleType: 'none',\n})\n\nexport const ExceptionListItem = styled(\n  'li',\n  ({ $theme: { colors, sizing } }) => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    minHeight: '64px',\n    borderTop: `1px solid ${colors.mono400}`,\n    paddingTop: sizing.scale600,\n    paddingBottom: sizing.scale600,\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n  })\n)\n\nexport const DateHeader = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Subtitle3,\n  flexBasis: '40%',\n  minWidth: '110px',\n  flexGrow: 1,\n}))\nexport const HourHeader = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Subtitle3,\n  flexGrow: 1,\n  flexBasis: '60%',\n  minWidth: '130px',\n}))\nexport const ActionHeader = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Subtitle3,\n  flexGrow: 1,\n}))\n\nexport const ExceptionDate = styled(\n  'div',\n  ({ $theme: { typography, mediaQuery, sizing } }) => ({\n    ...typography.Paragraph1,\n    paddingBottom: sizing.scale400,\n    minWidth: '110px',\n    flexBasis: '40%',\n    [mediaQuery.medium]: {\n      paddingBottom: 0,\n    },\n  })\n)\n\nexport const ExceptionTime = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Paragraph1,\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: '130px',\n  flexBasis: '60%',\n}))\n\nexport const ExceptionActions = styled('div', {\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'flex-end',\n})\n\nexport const Unavailable = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono900,\n  })\n)\n\nexport const ListItemRoot = styled('div', {\n  display: 'flex',\n  flexGrow: 1,\n})\n\nexport const AddExceptionButtonRoot = styled('div', {\n  marginLeft: 'auto',\n  minWidth: '120px',\n})\n\nexport const EventDatesRoot = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.Subtitle1,\n  fontWeight: 400,\n}))\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { formatDate, formatDateRange } from 'utils/dates'\nimport {\n  getJSDate,\n  diffInISODates,\n  getFormattedTimeFromDate as getTime,\n} from '../../DateTimeConversions'\nimport { GroupedException } from '../types'\nimport {\n  ExceptionDate,\n  ExceptionTime,\n  ListItemRoot,\n  Unavailable,\n} from './styled-components'\n\nconst messages = defineMessages({\n  unavailable: {\n    defaultMessage: 'Unavailable',\n    description: 'Exception time slot representation',\n  },\n})\n\nexport const ListItem: FC<{ exception: GroupedException }> = props => {\n  const { formatMessage } = useIntl()\n  const { date, available, unavailable } = props.exception\n\n  return (\n    <ListItemRoot>\n      <ExceptionDate>\n        {date.length === 1\n          ? formatDate(getJSDate(date[0]))\n          : formatDateRange(\n              getJSDate(date[0]),\n              getJSDate(date[date.length - 1])\n            )}\n      </ExceptionDate>\n      <ExceptionTime>\n        {available.map((range, index) => (\n          <ExceptionTime key={index}>{`${getTime(range[0])} – ${getTime(\n            range[1]\n          )}`}</ExceptionTime>\n        ))}\n        {unavailable.length === 1 &&\n        diffInISODates(unavailable[0][0], unavailable[0][1]).days === 1 ? (\n          <Unavailable>{formatMessage(messages.unavailable)}</Unavailable>\n        ) : (\n          unavailable.map((range, index) => (\n            <ExceptionTime key={index}>{`${getTime(range[0])} – ${getTime(\n              range[1]\n            )} (${formatMessage(messages.unavailable)})`}</ExceptionTime>\n          ))\n        )}\n      </ExceptionTime>\n    </ListItemRoot>\n  )\n}\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const iconButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      borderTopWidth: 0,\n      borderRightWidth: 0,\n      borderBottomWidth: 0,\n      borderLeftWidth: 0,\n      borderTopRightRadius: sizing.scale200,\n      borderTopLeftRadius: sizing.scale200,\n      borderBottomRightRadius: sizing.scale200,\n      borderBottomLeftRadius: sizing.scale200,\n      marginLeft: sizing.scale200,\n    }),\n  },\n}\n","import { VFC, useState, useEffect, ReactNode } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { DateTime } from 'luxon'\nimport { IconButton, Button, KIND } from '@jifflenow/brightui/button'\nimport { Trash, Pencil } from '@jifflenow/brightui/icon'\nimport { useEventInfo } from 'components/ProfileDrawer/providers/EventInfoProvider'\nimport { EventDatesLabel } from 'components/ProfileDrawer/Common/EventDatesLabel'\nimport { CampaignFilter, useCampaign } from '../../../Common'\nimport { getGroupedExceptionDates } from '../groupExceptionDates'\nimport { AddEditException as EditException } from '../AddEditException'\nimport { AddExceptionButton } from '../AddExceptionButton'\nimport { ListExceptionsProps, Exception } from '../types'\nimport {\n  NoException,\n  SelectEventLabel,\n  SelectEventRoot,\n  SelectEventWrapper,\n  Text,\n} from '../styled-components'\nimport { clearButtonOverrides } from '../overrides'\nimport { ListItem } from './ListItem'\nimport { iconButtonOverrides } from './overrides'\nimport {\n  Root,\n  ListHeader,\n  ExceptionList,\n  ExceptionListItem,\n  ExceptionActions,\n  DateHeader,\n  HourHeader,\n  ActionHeader,\n  AddExceptionButtonRoot,\n  ListHeadingDesc,\n  ListHeaderRoot,\n  FilterWrapper,\n  EventDatesRoot,\n} from './styled-components'\n\nconst messages = defineMessages({\n  filterBy: {\n    defaultMessage: 'Filter by',\n    description: 'Label text',\n  },\n  noException: {\n    defaultMessage: 'No exceptions for the selected campaign',\n    description: 'Button text',\n  },\n  clear: {\n    defaultMessage: 'Clear',\n    description: 'Button label',\n  },\n  dateHeader: {\n    defaultMessage: 'Date(s)',\n    description: 'Column Header',\n  },\n  hourHeader: {\n    defaultMessage: 'Available Hours',\n    description: 'Column Header',\n  },\n  actionHeader: {\n    defaultMessage: 'Actions',\n    description: 'Column Header',\n  },\n  exceptionsFor: {\n    defaultMessage: 'Exceptions for',\n    description: 'Label text',\n  },\n  exceptionsNote: {\n    defaultMessage:\n      \"<b>Note:</b> Exceptions are your 'non-availability' time slots against the 'Availability' mentioned. <b>These exceptions are applicable to all the Jifflenow events falling on below dates.</b>\",\n    description: 'Label text',\n  },\n})\n\nexport const ListExceptions: VFC<ListExceptionsProps> = ({\n  timeZone,\n  exceptions,\n  setExceptions,\n}) => {\n  const { formatMessage } = useIntl()\n  const { campaign, setCampaign } = useCampaign()\n  const [isOpen, setIsOpen] = useState(false)\n  const [exceptionEditIndex, setExceptionEditIndex] = useState(-1)\n  const [filteredExceptions, setFilteredExceptions] = useState<Exception[]>(\n    exceptions\n  )\n  const { location } = useEventInfo()\n\n  const { timeZoneId } = timeZone\n  const groupedExceptions = getGroupedExceptionDates(exceptions)\n\n  const groupedFilteredExceptions = getGroupedExceptionDates(filteredExceptions)\n\n  useEffect(() => {\n    setFilteredExceptions(\n      exceptions.filter(({ date }) => {\n        if (!campaign) {\n          return true\n        }\n\n        const startDateInChosenTimezone = DateTime.fromISO(campaign.startDate, {\n          zone: campaign.timeZone,\n        })\n          .setZone(timeZoneId)\n          .toISODate()\n\n        const endDateInChosenTimezone = DateTime.fromISO(campaign.endDate, {\n          zone: campaign.timeZone,\n        })\n          .endOf('day')\n          .setZone(timeZoneId)\n          .toISODate()\n\n        return (\n          startDateInChosenTimezone <= date && endDateInChosenTimezone >= date\n        )\n      })\n    )\n  }, [campaign, exceptions, timeZoneId])\n\n  const handleEdit = (indexForEdit: number) => {\n    setExceptionEditIndex(indexForEdit)\n    setIsOpen(true)\n  }\n\n  const handleDelete = (indexToDelete: number) => {\n    const datesToDelete = groupedExceptions.find(\n      (_, index) => indexToDelete === index\n    )?.date!\n    setExceptions(\n      exceptions.filter(({ date }) => !datesToDelete.includes(date))\n    )\n  }\n\n  const onClose = () => {\n    setExceptionEditIndex(-1)\n    setIsOpen(false)\n  }\n\n  return (\n    <Root>\n      <ListHeader>\n        <SelectEventRoot>\n          <ListHeaderRoot>\n            {!location ? (\n              <FilterWrapper>\n                <SelectEventLabel>\n                  {formatMessage(messages.filterBy)}\n                </SelectEventLabel>\n                <SelectEventWrapper>\n                  <CampaignFilter setDefaultValue={false} />\n                  <Button\n                    type=\"button\"\n                    onClick={() => setCampaign(null)}\n                    overrides={clearButtonOverrides}\n                    kind={KIND.minimal}\n                  >\n                    {formatMessage(messages.clear)}\n                  </Button>\n                </SelectEventWrapper>\n              </FilterWrapper>\n            ) : (\n              <EventDatesRoot>\n                <EventDatesLabel\n                  title={formatMessage(messages.exceptionsFor)}\n                />\n              </EventDatesRoot>\n            )}\n            <ListHeadingDesc>\n              {formatMessage(messages.exceptionsNote, {\n                b: (chunks: ReactNode) => <strong>{chunks}</strong>,\n              })}\n            </ListHeadingDesc>\n          </ListHeaderRoot>\n        </SelectEventRoot>\n        <AddExceptionButtonRoot>\n          <AddExceptionButton\n            exceptions={exceptions}\n            setExceptions={setExceptions}\n            timeZone={timeZone}\n          />\n        </AddExceptionButtonRoot>\n      </ListHeader>\n      {isOpen && (\n        <EditException\n          isOpen={isOpen}\n          onClose={onClose}\n          exceptions={exceptions}\n          timeZone={timeZone}\n          setExceptions={setExceptions}\n          {...(exceptionEditIndex !== -1\n            ? {\n                listedExceptions: groupedExceptions,\n                listedExceptionEditIndex: exceptionEditIndex,\n                timeSlots: groupedExceptions[exceptionEditIndex].available,\n                calendarDates: groupedExceptions[exceptionEditIndex].date,\n              }\n            : null)}\n        />\n      )}\n      {groupedFilteredExceptions.length ? (\n        <ExceptionList>\n          <ExceptionListItem>\n            <DateHeader>{formatMessage(messages.dateHeader)}</DateHeader>\n            <HourHeader>{formatMessage(messages.hourHeader)}</HourHeader>\n            <ActionHeader>{formatMessage(messages.actionHeader)}</ActionHeader>\n          </ExceptionListItem>\n          {groupedFilteredExceptions.map((exception, exceptionIndex) => (\n            <ExceptionListItem key={exceptionIndex}>\n              <ListItem exception={exception} />\n              <ExceptionActions>\n                <IconButton\n                  size={18}\n                  overrides={iconButtonOverrides}\n                  onClick={() => handleEdit(exceptionIndex)}\n                  data-pendo=\"profile/availability/edit-exception\"\n                >\n                  <Pencil />\n                </IconButton>\n                <IconButton\n                  size={18}\n                  overrides={iconButtonOverrides}\n                  onClick={() => handleDelete(exceptionIndex)}\n                  data-pendo=\"profile/availability/delete-exception\"\n                >\n                  <Trash />\n                </IconButton>\n              </ExceptionActions>\n            </ExceptionListItem>\n          ))}\n        </ExceptionList>\n      ) : (\n        <NoException>\n          <AddExceptionButton\n            exceptions={exceptions}\n            setExceptions={setExceptions}\n            timeZone={timeZone}\n          />\n          <Text>{formatMessage(messages.noException)}</Text>\n        </NoException>\n      )}\n    </Root>\n  )\n}\n","import { Exception, PartitionedExceptions } from '../types'\n\nexport const getCombinedExceptions = (data: Partial<Exception>[]) =>\n  Object.values(\n    data.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr.date!]: {\n          ...{ available: [], unavailable: [], inverted: [] },\n          ...acc[curr.date!],\n          ...curr,\n        },\n      }),\n      {} as { [key: string]: Exception }\n    )\n  ).sort((a, b) => (a.date >= b.date ? 1 : -1))\n\nexport const getPartitionedExceptionsHash = (data: Exception[]) =>\n  data.reduce(\n    (acc, curr) => {\n      const { date, available, unavailable } = curr\n\n      if (available.length) {\n        acc.available.push({ date, timeRanges: available })\n      }\n\n      if (unavailable.length) {\n        acc.unavailable.push({ date, timeRanges: unavailable })\n      }\n\n      return acc\n    },\n    { available: [], unavailable: [] } as PartitionedExceptions\n  )\n","import { DateTime } from 'luxon'\nimport {\n  getDateInTimeZone,\n  getDateTimeInTimeZone,\n  getUTCDateTimeFromTimeZone,\n  getISODateStringFromUTCDate,\n  getUTCStartDate,\n  getEndDateOfDay,\n  getEndDateOfDayInUTC,\n  getFullMinutes,\n} from '../DateTimeConversions'\nimport {\n  getPartitionedExceptionsHash,\n  getCombinedExceptions,\n} from './data-adapters'\nimport { TimeSlots, CommonException, Exception, ExceptionType } from './types'\n\n// Merges continuous time slots after UTC <=> TimeZone transformations\nfunction mergeContinuousTimeRanges<T extends any[]>(timeRanges: T): T {\n  return timeRanges\n    .sort((a, b) => (a[0] >= b[0] ? 1 : -1))\n    .reduce((acc, curr) => {\n      const prevRange = acc.pop()\n\n      return prevRange\n        ? prevRange[1] === curr[0]\n          ? [...acc, [prevRange[0], curr[1]]]\n          : [...acc, prevRange, curr]\n        : [...acc, curr]\n    }, [])\n}\n\nexport const getExceptionsInTimeZone = (\n  exceptions: Exception[],\n  timeZone: string\n) => {\n  const { available, unavailable } = getPartitionedExceptionsHash(exceptions)\n\n  return getCombinedExceptions([\n    ...transformExceptionsInTimeZone(available, timeZone, 'available'),\n    ...transformExceptionsInTimeZone(unavailable, timeZone, 'unavailable'),\n  ])\n}\n\nconst transformExceptionsInTimeZone = (\n  exceptions: CommonException[],\n  timeZone: string,\n  type: ExceptionType\n) => {\n  const flatted = exceptions.flatMap(({ date, timeRanges }) => {\n    const unavailableDate = getDateInTimeZone(getUTCStartDate(date), timeZone)\n\n    return timeRanges.length === 0\n      ? [[unavailableDate, unavailableDate]]\n      : timeRanges.flatMap(([start, end]: string[]) => {\n          const startDateTime = getDateTimeInTimeZone(start, timeZone)\n          const endDateTime = getDateTimeInTimeZone(end, timeZone)\n          const startDate = startDateTime.toISO()\n          const endDate = endDateTime.toISO()\n\n          return startDateTime.toISODate() === endDateTime.toISODate()\n            ? [[startDate, endDate]]\n            : endDateTime.startOf('day').toISO() === endDate\n            ? [[startDate, getEndDateOfDay(startDate)]]\n            : [\n                [startDate, getEndDateOfDay(startDate)],\n                [endDateTime.startOf('day').toISO(), endDate],\n              ]\n        })\n  })\n  const dateBasedTimeRanges = flatted.reduce((accRanges, range) => {\n    const [start, end] = range\n    const dateKey = DateTime.fromISO(start).toISODate()\n\n    return {\n      ...accRanges,\n      [dateKey]: [\n        ...(accRanges[dateKey] ?? []),\n        ...(start === end ? [] : [range]),\n      ],\n    }\n  }, {} as { [key: string]: string[][] })\n\n  return Object.keys(dateBasedTimeRanges).map(date => ({\n    date,\n    [type]: mergeContinuousTimeRanges(dateBasedTimeRanges[date]),\n  }))\n}\n\nexport const getExceptionsInUTC = (\n  exceptions: Exception[],\n  timeZone: string\n) => {\n  const { available, unavailable } = getPartitionedExceptionsHash(exceptions)\n\n  return getCombinedExceptions([\n    ...transformExceptionsInUTC(available, timeZone, 'available'),\n    ...transformExceptionsInUTC(unavailable, timeZone, 'unavailable'),\n    ...transformInvertedAvailability(available, timeZone),\n  ])\n}\n\nconst transformInvertedAvailability = (\n  exceptions: CommonException[],\n  timeZone: string\n) =>\n  exceptions.map(({ date, timeRanges }) => ({\n    date,\n    inverted: timeRanges\n      .sort((range1, range2) =>\n        getFullMinutes(range1[0]) >= getFullMinutes(range2[0]) ? 1 : -1\n      )\n      .flatMap(([start, end], index) => {\n        const startTimeInUserTZ = getUTCDateTimeFromTimeZone(\n          start,\n          timeZone\n        ).setZone(timeZone)\n\n        const endTimeInUserTZ = getUTCDateTimeFromTimeZone(\n          end,\n          timeZone\n        ).setZone(timeZone)\n\n        const rangeStartsAt12AM =\n          startTimeInUserTZ.hour === 0 && startTimeInUserTZ.minute === 0\n        const rangeEndsAt12AM =\n          (endTimeInUserTZ.hour === 0 && endTimeInUserTZ.minute === 0) ||\n          (endTimeInUserTZ.hour === 23 &&\n            endTimeInUserTZ.minute === 59 &&\n            endTimeInUserTZ.second === 59)\n\n        const startTime = startTimeInUserTZ.toISO()\n        const endTime = endTimeInUserTZ.toISO()\n        const dayStart = startTimeInUserTZ.startOf('day').toISO()\n        const dayEnd = startTimeInUserTZ.endOf('day').toISO()\n\n        const inAvailabilityExceptions = []\n\n        if (timeRanges.length === 1) {\n          if (!rangeStartsAt12AM) {\n            inAvailabilityExceptions.push([dayStart, startTime])\n          }\n          if (!rangeEndsAt12AM) {\n            inAvailabilityExceptions.push([endTime, dayEnd])\n          }\n        } else {\n          if (index !== timeRanges.length - 1) {\n            const nextRangeStartTime = getUTCDateTimeFromTimeZone(\n              timeRanges[index + 1][0],\n              timeZone\n            )\n              .setZone(timeZone)\n              .toISO()\n\n            if (index === 0 && !rangeStartsAt12AM) {\n              inAvailabilityExceptions.push([dayStart, startTime])\n            }\n            inAvailabilityExceptions.push([endTime, nextRangeStartTime])\n          } else if (!rangeEndsAt12AM) {\n            inAvailabilityExceptions.push([endTime, dayEnd])\n          }\n        }\n\n        return inAvailabilityExceptions as TimeSlots\n      }),\n  }))\n\nconst transformExceptionsInUTC = (\n  exceptions: CommonException[],\n  timeZone: string,\n  type: ExceptionType\n) => {\n  const flatted = exceptions.flatMap(({ date, timeRanges }) => {\n    const unavailableDate = getUTCStartDate(date)\n\n    return timeRanges.length === 0\n      ? [[unavailableDate, unavailableDate]]\n      : timeRanges.flatMap(([start, end]: string[]) => {\n          const startDateTime = getUTCDateTimeFromTimeZone(start, timeZone)\n          const endDateTime = getUTCDateTimeFromTimeZone(end, timeZone)\n          const startDate = startDateTime.toISO()\n          const endDate = endDateTime.toISO()\n\n          return startDateTime.toISODate() === endDateTime.toISODate()\n            ? [[startDate, endDate]]\n            : endDateTime.startOf('day').toISO() === endDate\n            ? [[startDate, getEndDateOfDayInUTC(startDateTime.toISODate())]]\n            : [\n                [startDate, getEndDateOfDayInUTC(startDateTime.toISODate())],\n                [endDateTime.startOf('day').toISO(), endDate],\n              ]\n        })\n  })\n  const dateBasedTimeRanges = flatted.reduce((accRanges, range) => {\n    const [start, end] = range\n    const dateKey = getISODateStringFromUTCDate(start)\n\n    return {\n      ...accRanges,\n      [dateKey]: [\n        ...(accRanges[dateKey] ?? []),\n        ...(start === end ? [] : [range]),\n      ],\n    }\n  }, {} as { [key: string]: string[][] })\n\n  return Object.keys(dateBasedTimeRanges).map(date => ({\n    date,\n    [type]: dateBasedTimeRanges[date] as TimeSlots,\n  }))\n}\n","import { Dispatch, SetStateAction } from 'react'\nimport { components } from 'types/openapi'\n\ntype AvailabilityAttrs = components['schemas']['UserAvailability']['attributes']\n\ntype Day = AvailabilityAttrs['day']\n\ntype WeekDay = 1 | 2 | 3 | 4 | 5 | 6 | 7\n\nexport type TimeRangeInMinutes = AvailabilityAttrs['timeRanges']\n\nexport type TimeRangeInDates = { start: string; end: string; error?: string }[]\n\nexport type UTCMinutesAvailability = {\n  day: Day\n  timeRanges: TimeRangeInMinutes\n}\n\nexport type UTCMinutesCombinedAvailability = {\n  date: string\n  timeRanges: TimeRangeInMinutes\n}\n\nexport type Availability = {\n  day: Day\n  weekDay: WeekDay\n  timeRanges: TimeRangeInDates\n}\n\nexport type TimeZone = components['schemas']['PlacesTimeZone']\nexport type TimeZoneId = TimeZone['timeZoneId']\n\nexport type DaysToIds = { [key in Day]: string }\n\nexport type AvailabilityProviderProps = {\n  userId: string\n  timeZoneId: TimeZoneId\n}\n\nexport type AvailabilityContext = {\n  isDirty: boolean\n  availability: Availability[]\n  setAvailability: Dispatch<SetStateAction<Availability[]>>\n  setDefaultAvailability: Dispatch<SetStateAction<Availability[]>>\n  UTCAvailability: UTCMinutesAvailability[]\n  setUTCAvailability: Dispatch<SetStateAction<UTCMinutesAvailability[]>>\n  resetAvailability: () => void\n  daysToIdMappings: DaysToIds\n}\n\nexport enum AvailabilityTypes {\n  Availability = 'Availability',\n  Exceptions = 'Exceptions',\n}\n\nexport type AvailabilityTabsProps = {\n  timeZone: TimeZone\n}\n","import { VFC, useState, useEffect, useRef } from 'react'\nimport { DateTime } from 'luxon'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport {\n  useUserAvailabilityException,\n  postUserAvailabilityExceptions,\n  usePortalV2Client,\n} from 'rest'\nimport { showSuccessToast, showErrorToast } from 'utils/toast'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { useParams } from 'react-router-dom'\nimport { useEventInfo } from 'components/ProfileDrawer/providers/EventInfoProvider'\nimport { Footer } from '../Common/Footer'\nimport { diffInISODates } from '../DateTimeConversions'\nimport { ListLoader } from './Loader'\nimport { AddExceptionButton } from './AddExceptionButton'\nimport { ListExceptions } from './ListExceptions'\nimport {\n  getExceptionsInTimeZone,\n  getExceptionsInUTC,\n} from './transformExceptionDates'\nimport { fromAPI, toAPI } from './data-adapters'\nimport { Exception, ExceptionsProps } from './types'\nimport { Root, NoException, Text } from './styled-components'\n\nconst messages = defineMessages({\n  addException: {\n    defaultMessage: 'Add Exception',\n    description: 'Button text',\n  },\n  noException: {\n    defaultMessage: 'Add dates that deviate from your standard working hours.',\n    description: 'Button text',\n  },\n  success: {\n    defaultMessage: 'User availability exceptions updated successfully',\n    description: 'Button text',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nexport const Exceptions: VFC<ExceptionsProps> = ({\n  timeZone,\n  onSuccess,\n  clearTempActiveKey,\n}) => {\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n  const client = usePortalV2Client()\n  const [isDirty, setIsDirty] = useState(false)\n  const [showLoader, setShowLoader] = useState(false)\n  const [UTCExceptions, setUTCExceptions] = useState<Exception[] | null>(null)\n  const [exceptions, setExceptions] = useState<Exception[] | null>(null)\n  const [defaultExceptions, setDefaultExceptions] = useState<\n    Exception[] | null\n  >(null)\n  const shouldUpdateUTCExceptions = useRef(true)\n\n  const { startDate, endDate } = useEventInfo().location || {}\n\n  const { userId: id } = useParams<{ userId: string }>()\n  const { timeZoneId } = timeZone\n\n  useEffect(() => {\n    if (shouldUpdateUTCExceptions.current && exceptions && UTCExceptions) {\n      !isDirty && setIsDirty(true)\n      setUTCExceptions(getExceptionsInUTC(exceptions, timeZoneId))\n    }\n    shouldUpdateUTCExceptions.current = true\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [exceptions])\n\n  useEffect(() => {\n    shouldUpdateUTCExceptions.current = false\n\n    const exceptions = [...(UTCExceptions ?? [])]\n    const exceptionsInChosenTimezone = getExceptionsInTimeZone(\n      exceptions,\n      timeZoneId\n    )\n\n    const [, exceptionsFromPresentDate] = partitionExceptionDates(\n      exceptionsInChosenTimezone\n    )\n\n    setExceptions(exceptionsFromPresentDate)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeZoneId])\n\n  const { isPending } = useUserAvailabilityException({\n    id,\n    startDate,\n    endDate,\n    onResolve: ({ data }) => {\n      const exceptions = fromAPI(data)\n      const exceptionsInChosenTimezone = getExceptionsInTimeZone(\n        exceptions,\n        timeZoneId\n      )\n\n      setUTCExceptions(\n        getExceptionsInUTC(exceptionsInChosenTimezone, timeZoneId)\n      )\n      shouldUpdateUTCExceptions.current = false\n\n      setExceptions(exceptionsInChosenTimezone)\n\n      setDefaultExceptions(exceptionsInChosenTimezone)\n    },\n  })\n\n  const partitionExceptionDates = (exceptions: Exception[]) => {\n    const todayInChosenTZ = DateTime.local().setZone(timeZoneId).toISODate()\n\n    return [\n      exceptions.filter(\n        ({ date }) => diffInISODates(todayInChosenTZ, date).days < 0\n      ),\n      exceptions.filter(\n        ({ date }) => diffInISODates(todayInChosenTZ, date).days >= 0\n      ),\n    ]\n  }\n\n  const handleSave = async () => {\n    setShowLoader(true)\n    const payload = {\n      upsert: toAPI(getExceptionsInUTC(exceptions ?? [], timeZoneId)),\n    }\n    try {\n      await postUserAvailabilityExceptions(client, id, payload)\n      setShowLoader(false)\n      showSuccessToast(formatMessage(messages.success))\n      setIsDirty(false)\n      onSuccess()\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return false\n    }\n  }\n\n  useEffect(() => {\n    unload(isDirty)\n  }, [isDirty, unload])\n\n  const resetExceptions = () => {\n    setExceptions(defaultExceptions)\n    setIsDirty(false)\n    shouldUpdateUTCExceptions.current = false\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <Root>\n        {isPending && <ListLoader />}\n        {!isPending &&\n          exceptions &&\n          (exceptions.length ? (\n            <ListExceptions\n              timeZone={timeZone}\n              exceptions={exceptions}\n              setExceptions={setExceptions}\n            />\n          ) : (\n            <NoException>\n              <AddExceptionButton\n                exceptions={exceptions}\n                setExceptions={setExceptions}\n                timeZone={timeZone}\n              />\n              <Text>{formatMessage(messages.noException)}</Text>\n            </NoException>\n          ))}\n      </Root>\n      <Footer\n        isDirty={isDirty}\n        clearTempActiveKey={clearTempActiveKey}\n        onSave={handleSave}\n        isDisabled={showLoader || !isDirty}\n        pendoPrefix=\"profile/availability/exceptions\"\n        handleDiscard={resetExceptions}\n      />\n    </>\n  )\n}\n","import { Exception, AvailabilityException, CreateException } from '../types'\n\nexport const fromAPI = (data: AvailabilityException) =>\n  Object.values(\n    data.reduce((acc, curr) => {\n      const { date, timeRanges } = curr.attributes\n      const type =\n        curr.type === 'UserAvailabilityException' ? 'available' : 'unavailable'\n\n      acc[date] = acc[date]\n        ? { ...acc[date], [type]: [...acc[date][type], ...timeRanges] }\n        : { date, available: [], unavailable: [], [type]: timeRanges }\n\n      return acc\n    }, {} as { [date: string]: Exception })\n  )\n\nexport const toAPI = (data: Exception[]) =>\n  data.reduce((acc, curr) => {\n    const { date, available, unavailable, inverted } = curr\n\n    available.length &&\n      acc.push({\n        date,\n        type: 'UserAvailabilityException',\n        timeRanges: available,\n      })\n\n    unavailable.length &&\n      acc.push({\n        date,\n        type: 'UserUnavailabilityException',\n        timeRanges: unavailable,\n      })\n\n    inverted?.length &&\n      acc.push({\n        date,\n        type: 'InvertedAvailabilityException',\n        timeRanges: inverted,\n      })\n\n    return acc\n  }, [] as CreateException)\n","import { useCallback, useState, VFC } from 'react'\nimport { defineMessages, useIntl, MessageDescriptor } from 'react-intl'\nimport {\n  Tabs,\n  Tab,\n  TabTitle,\n  getTabOverrides,\n} from '@jifflenow/brightui/tabs-motion'\nimport { CampaignProvider } from '../Common'\nimport { useDirtyCheck } from '../providers/ProfileSectionDirtyCheckProvider'\nimport { useNavProvider } from '../providers/NavProvider'\nimport { useAvailability } from './AvailabilityProvider'\nimport { Availabilities } from './Availabilities'\nimport { Exceptions } from './Exceptions'\nimport { AvailabilityTabsProps, AvailabilityTypes } from './types'\nimport { tabOverrides, tabsOverrides } from './overrides'\n// import { ListLoader } from './Availabilities/Loader'\n\nconst messages = defineMessages({\n  availability: {\n    defaultMessage: 'Availability',\n    description: 'Tab title',\n  },\n  exceptions: {\n    defaultMessage: 'Exceptions',\n    description: 'Tab title',\n  },\n})\n\nexport const AvailabilityTabs: VFC<AvailabilityTabsProps> = ({ timeZone }) => {\n  const { formatMessage } = useIntl()\n  const { Availability, Exceptions: ExceptionsTabKey } = AvailabilityTypes\n  const { isDirty, setShowConfirmation, onCloseConfirmation } = useDirtyCheck()\n  const [activeKey, setActiveKey] = useState<AvailabilityTypes>(Availability)\n  const [tempActiveKey, setTempActiveKey] = useState<\n    AvailabilityTypes | undefined\n  >(undefined)\n  const { isDirty: isAvailabilityDirty, resetAvailability } = useAvailability()\n\n  const tabTitle = (message: MessageDescriptor) => (\n    <TabTitle>{formatMessage(message)}</TabTitle>\n  )\n\n  const {\n    state: { tempSelectedKey },\n    dispatch,\n  } = useNavProvider()\n\n  const clearTempActiveKey = () => {\n    if (tempActiveKey) {\n      setTempActiveKey(undefined)\n    }\n  }\n\n  const handleSuccess = useCallback(() => {\n    if (tempSelectedKey) {\n      dispatch({\n        type: 'setSelectedKey',\n        payload: tempSelectedKey,\n      })\n      dispatch({\n        type: 'setTempSelectedKey',\n        payload: undefined,\n      })\n    } else if (tempActiveKey) {\n      setActiveKey(tempActiveKey)\n      setTempActiveKey(undefined)\n    }\n  }, [dispatch, tempActiveKey, tempSelectedKey])\n\n  return (\n    <Tabs\n      activeKey={activeKey}\n      onChange={({ activeKey }) => {\n        if (isDirty) {\n          onCloseConfirmation(() => () => {\n            setActiveKey(activeKey as AvailabilityTypes)\n            isAvailabilityDirty && resetAvailability()\n          })\n          setShowConfirmation(true)\n          setTempActiveKey(activeKey as AvailabilityTypes)\n        } else {\n          setActiveKey(activeKey as AvailabilityTypes)\n        }\n      }}\n      overrides={tabsOverrides}\n    >\n      <Tab\n        key={Availability}\n        title={tabTitle(messages.availability)}\n        overrides={getTabOverrides(tabOverrides)}\n      >\n        <Availabilities\n          onSuccess={handleSuccess}\n          clearTempActiveKey={clearTempActiveKey}\n          timeZone={timeZone}\n        />\n      </Tab>\n      <Tab\n        key={ExceptionsTabKey}\n        title={tabTitle(messages.exceptions)}\n        overrides={getTabOverrides(tabOverrides)}\n      >\n        <CampaignProvider>\n          <Exceptions\n            onSuccess={handleSuccess}\n            clearTempActiveKey={clearTempActiveKey}\n            timeZone={timeZone}\n          />\n        </CampaignProvider>\n      </Tab>\n    </Tabs>\n  )\n}\n","import { DateTime } from 'luxon'\nimport {\n  getDateTimeInTimeZone,\n  getFullMinutes,\n  getISOTimeFromDate,\n  getEndDateOfDay,\n  getPlusDate,\n} from '../DateTimeConversions'\nimport {\n  TimeZoneId,\n  TimeRangeInDates,\n  TimeRangeInMinutes,\n  UTCMinutesCombinedAvailability,\n} from '../types'\nimport { CombinedAvailability } from './types'\n\n// Base empty availability to avoid missing any date after transformations.\nconst getBaseAvailabitlityHash = (dates: string[]) =>\n  dates.reduce((acc, date) => ({ ...acc, [date]: [] }), {})\n\n// Merges continuous time slots after UTC <=> TimeZone transformations\nfunction mergeContinuousTimeRanges<T extends any[]>(timeRanges: T): T {\n  return timeRanges\n    .sort((a, b) => (a.start >= b.start ? 1 : -1))\n    .reduce((acc, curr) => {\n      const prevRange = acc.pop()\n\n      return prevRange\n        ? prevRange.end === curr.start\n          ? [...acc, { start: prevRange.start, end: curr.end }]\n          : [...acc, prevRange, curr]\n        : [...acc, curr]\n    }, [])\n}\n\nconst transformMinutesInUTC = (data: UTCMinutesCombinedAvailability[]) =>\n  data.map(({ date, timeRanges }) => ({\n    date,\n    timeRanges: timeRanges.map(({ start, end }) => ({\n      start: DateTime.fromISO(`${date}T00:00:00Z`)\n        .plus({ minutes: start })\n        .toISO(),\n      end: DateTime.fromISO(`${date}T00:00:00Z`).plus({ minutes: end }).toISO(),\n    })),\n  }))\n\nexport const getAvailabilityInTimeZone = (\n  availability: UTCMinutesCombinedAvailability[],\n  timeZone: TimeZoneId\n) => {\n  const availabilityInUTC = transformMinutesInUTC(availability)\n  const baseAvailabilityHash = getBaseAvailabitlityHash(\n    availability.map(({ date }) => date)\n  )\n  const reducedAvailability = availabilityInUTC\n    .flatMap(({ timeRanges }) =>\n      timeRanges.flatMap(range => {\n        const startDateTime = getDateTimeInTimeZone(range.start, timeZone)\n        const endDateTime = getDateTimeInTimeZone(range.end, timeZone)\n        const start = startDateTime.toISO()\n        const end = endDateTime.toISO()\n\n        return startDateTime.toISODate() === endDateTime.toISODate()\n          ? { start, end }\n          : [\n              { start, end: getEndDateOfDay(start) },\n              { start: endDateTime.startOf('day').toISO(), end },\n            ]\n      })\n    )\n    .reduce((accRanges, range) => {\n      const { start, end } = range\n      const key = DateTime.fromISO(start).toISODate()\n\n      return {\n        ...accRanges,\n        [key]: [\n          ...(accRanges[key] ?? []),\n          ...(start === end\n            ? []\n            : [\n                {\n                  start: getISOTimeFromDate(start),\n                  end: getISOTimeFromDate(end),\n                },\n              ]),\n        ],\n      }\n    }, baseAvailabilityHash as { [key: string]: TimeRangeInDates })\n\n  return Object.keys(reducedAvailability)\n    .sort((next: string, prev: string) => Number(next) - Number(prev))\n    .map(date => ({\n      date,\n      timeRanges: mergeContinuousTimeRanges<TimeRangeInDates>(\n        reducedAvailability[date]\n      ),\n    }))\n}\n\nconst transformISOTimeToDates = (data: CombinedAvailability[]) =>\n  data.map(({ timeRanges, ...rest }) => ({\n    ...rest,\n    timeRanges: timeRanges.map(({ start, end }) => ({\n      start: `${DateTime.fromISO(rest.date).toISODate()}T${start}`,\n      end: `${DateTime.fromISO(rest.date).toISODate()}T${end}`,\n    })),\n  }))\n\nexport const getAvailability = (availability: CombinedAvailability[]) => {\n  const availabilityWithDates = transformISOTimeToDates(availability)\n\n  const baseAvailabilityHash = getBaseAvailabitlityHash(\n    availability.map(({ date }) => date)\n  )\n  const reducedAvailability = availabilityWithDates\n    .flatMap(({ timeRanges }) =>\n      timeRanges.flatMap(range => {\n        const endDate =\n          getFullMinutes(range.end) === 0\n            ? getPlusDate(range.end, { day: 1 })\n            : range.end\n\n        return { start: range.start, end: endDate }\n      })\n    )\n    .reduce((accRanges, range) => {\n      const { start, end } = range\n      const key = DateTime.fromISO(start).toISODate()\n\n      const startInMinutes = getFullMinutes(start)\n      const endInMinutes = getFullMinutes(end)\n\n      return {\n        ...accRanges,\n        [key]: [\n          ...(accRanges[key] ?? []),\n          ...(startInMinutes === endInMinutes && endInMinutes !== 0\n            ? []\n            : [\n                {\n                  start: startInMinutes,\n                  end: endInMinutes || 1440,\n                },\n              ]),\n        ],\n      }\n    }, baseAvailabilityHash as { [key: string]: TimeRangeInMinutes })\n\n  return Object.keys(reducedAvailability)\n    .sort((next: string, prev: string) => Number(next) - Number(prev))\n    .map(date => ({\n      date,\n      timeRanges: mergeContinuousTimeRanges<TimeRangeInMinutes>(\n        reducedAvailability[date]\n      ),\n    }))\n}\n","import { VFC, useState, useEffect } from 'react'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { Info } from 'luxon'\nimport { KIND } from '@jifflenow/brightui/button'\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalButton,\n} from '@jifflenow/brightui/modal'\nimport { Select, Option } from '@jifflenow/brightui/select'\nimport { CopySlotsModalBodyWrapper } from '../styled-components'\nimport { modalButtonOverrides } from '../overrides'\nimport { CopyAvailabilityProps } from './types'\nimport { FilterWrapper, Filter, CopyToDateFilter } from './styled-components'\nimport { CopyDateSlotsTo } from './CopyDateSlotsTo'\nimport { DateRangeFilter } from './DateRangeFilter'\nimport { getDayFromDate } from './DateTimeConversions'\n\nconst messages = defineMessages({\n  specificDays: {\n    defaultMessage: 'Specific Days',\n    description: 'Field label',\n  },\n  specificDates: {\n    defaultMessage: 'Specific Dates',\n    description: 'Field label',\n  },\n})\n\nenum FilterType {\n  DATES = 'dates',\n  DAYS = 'days',\n}\n\nexport const CopyCombinedAvailability: VFC<CopyAvailabilityProps> = props => {\n  const { formatMessage } = useIntl()\n  const {\n    sourceDate,\n    availabilityInTZ,\n    setAvailabilityInTZ,\n    dateRange: initialDateRange,\n    ...modalProps\n  } = props!\n\n  const options = [\n    {\n      id: FilterType.DAYS,\n      label: formatMessage(messages.specificDays),\n    },\n    {\n      id: FilterType.DATES,\n      label: formatMessage(messages.specificDates),\n    },\n  ] as Option[]\n\n  const { id: initialValue } = options.find(({ id }) => id === FilterType.DAYS)!\n  const [filterValue, setFilterValue] = useState(initialValue)\n  const [dateRange, setDateRange] = useState(initialDateRange)\n\n  const [target, setTarget] = useState<string[]>([] as string[])\n\n  useEffect(() => {\n    setTarget([])\n    setDateRange(initialDateRange)\n  }, [initialDateRange, filterValue])\n\n  const addCopyDestinationDays = (item: string) => {\n    setTarget([...target, item])\n  }\n\n  const handleCopySlots = () => {\n    const { timeRanges } = availabilityInTZ.find(\n      ({ date }) => date === sourceDate\n    )!\n    if (filterValue) {\n      setAvailabilityInTZ(\n        availabilityInTZ.map(availability => {\n          const match =\n            filterValue === FilterType.DATES\n              ? availability.date\n              : getDayFromDate(availability.date)\n\n          return target.includes(match)\n            ? { ...availability, timeRanges }\n            : availability\n        })\n      )\n      modalProps.onClose()\n      setTarget([])\n    }\n  }\n\n  return (\n    <Modal {...modalProps}>\n      <ModalHeader>\n        <FilterWrapper>\n          <div>\n            <FormattedMessage\n              defaultMessage=\"Copy availability of {date} to\"\n              description=\"Header title\"\n              values={{\n                date: sourceDate,\n              }}\n            />\n          </div>\n\n          <Filter>\n            <Select\n              id=\"copyFilter\"\n              options={options}\n              required\n              clearable={false}\n              value={options.filter(({ id }) => filterValue === id)}\n              onChange={({ value }: { value: Option[] }) =>\n                setFilterValue(value[0].id)\n              }\n            />\n          </Filter>\n        </FilterWrapper>\n      </ModalHeader>\n      <ModalBody>\n        <CopySlotsModalBodyWrapper>\n          {filterValue === FilterType.DATES ? (\n            <>\n              <CopyToDateFilter>\n                <DateRangeFilter\n                  dateRange={dateRange}\n                  onChange={(dateRange: string[]) => setDateRange(dateRange)}\n                  minDate={initialDateRange[0]}\n                  maxDate={initialDateRange[1]}\n                />\n              </CopyToDateFilter>\n              {availabilityInTZ\n                ?.filter(\n                  ({ date }) =>\n                    date !== sourceDate &&\n                    date >= dateRange[0] &&\n                    date <= dateRange[1]\n                )\n                .map(({ date }) => (\n                  <CopyDateSlotsTo\n                    key={date}\n                    item={date}\n                    dateFilter\n                    copyTo={addCopyDestinationDays}\n                  />\n                ))}\n            </>\n          ) : (\n            Info.weekdays('long').map(day => (\n              <CopyDateSlotsTo\n                key={day}\n                item={day}\n                copyTo={addCopyDestinationDays}\n              />\n            ))\n          )}\n        </CopySlotsModalBodyWrapper>\n      </ModalBody>\n      <ModalFooter>\n        <ModalButton\n          kind={KIND.tertiary}\n          overrides={modalButtonOverrides}\n          onClick={modalProps.onClose}\n          data-pendo=\"profile/availability/copy-cancel\"\n        >\n          <FormattedMessage\n            defaultMessage=\"Cancel\"\n            description=\"Button label\"\n          />\n        </ModalButton>\n        <ModalButton\n          kind={KIND.primary}\n          onClick={handleCopySlots}\n          overrides={modalButtonOverrides}\n          data-pendo=\"profile/availability/copy-ok\"\n        >\n          <FormattedMessage defaultMessage=\"OK\" description=\"Button label\" />\n        </ModalButton>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import { DateTime } from 'luxon'\nimport {\n  createContext,\n  useMemo,\n  FC,\n  useState,\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useEffect,\n} from 'react'\nimport { useDirtyCheck } from 'components/ProfileDrawer/providers/ProfileSectionDirtyCheckProvider'\nimport { useCombinedUserAvailability } from 'rest'\nimport { ErrorPage } from 'ui-components/ErrorPage'\nimport { ListLoader } from '../Exceptions'\nimport { UTCMinutesCombinedAvailability } from '../types'\nimport { CombinedAvailability as CombinedAvailabilityDay } from './types'\nimport { getAvailabilityInTimeZone } from './transform'\n\ntype CombinedAvailability = CombinedAvailabilityDay[]\n\nconst getStateDate = (date: string) =>\n  DateTime.fromISO(date).plus({ day: -1 }).toISODate()\n\nconst getEndDate = (date: string) =>\n  DateTime.fromISO(date).plus({ day: 1 }).toISODate()\n\ntype CombinedAvailabilityContext = {\n  defaultAvailability: CombinedAvailability\n  setDefaultAvailability: Dispatch<SetStateAction<CombinedAvailability>>\n  availability: CombinedAvailability\n  setAvailability: Dispatch<SetStateAction<CombinedAvailability>>\n  UTCAvailability: UTCMinutesCombinedAvailability[]\n  isDirty: boolean\n  resetAvailability: () => void\n  setUTCAvailability: Dispatch<SetStateAction<UTCMinutesCombinedAvailability[]>>\n}\n\nconst CombinedAvailability = createContext<\n  CombinedAvailabilityContext | undefined\n>(undefined)\n\nexport const CombinedAvailabilityProvider: FC<{\n  timeZoneId: string\n  userId: string\n  dateRange: string[]\n  filterRange: string[]\n  setDateRange: Dispatch<SetStateAction<string[]>>\n}> = ({\n  timeZoneId,\n  userId,\n  dateRange,\n  children,\n  setDateRange,\n  filterRange,\n}) => {\n  const clipOverFlowDates = ({ date }: { date: string }) =>\n    date >= dateRange[0] && date <= dateRange[1]\n\n  const [isDirty, setIsDirty] = useState(false)\n  const [defaultAvailability, setDefaultAvailability] = useState(\n    [] as CombinedAvailability\n  )\n  const [availability, setAvailability] = useState([] as CombinedAvailability)\n  const [UTCAvailability, setUTCAvailability] = useState(\n    [] as UTCMinutesCombinedAvailability[]\n  )\n  const { onCloseConfirmation } = useDirtyCheck()\n\n  const resetAvailability = useMemo(\n    () => () => {\n      setAvailability(defaultAvailability)\n      setIsDirty(false)\n    },\n    [defaultAvailability]\n  )\n\n  useEffect(() => {\n    onCloseConfirmation(() => () => {\n      isDirty && resetAvailability()\n      setDateRange(filterRange)\n    })\n  }, [\n    filterRange,\n    setDateRange,\n    isDirty,\n    onCloseConfirmation,\n    resetAvailability,\n  ])\n\n  useEffect(() => {\n    setIsDirty(\n      JSON.stringify(availability) !== JSON.stringify(defaultAvailability)\n    )\n  }, [availability, defaultAvailability])\n\n  useEffect(() => {\n    if (UTCAvailability.length) {\n      const availability = getAvailabilityInTimeZone(\n        UTCAvailability,\n        timeZoneId\n      ).filter(clipOverFlowDates)\n      setAvailability(availability)\n      setDefaultAvailability(availability)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeZoneId])\n\n  const { isError, refetch, isFetching } = useCombinedUserAvailability(\n    {\n      path: { userId },\n      query: {\n        startDate: getStateDate(dateRange[0]),\n        endDate: getEndDate(dateRange[1]),\n      },\n    },\n    {\n      onSuccess: ({ data: { availabilities } }) => {\n        const transformedAvailabilities = getAvailabilityInTimeZone(\n          availabilities,\n          timeZoneId\n        ).filter(clipOverFlowDates)\n\n        setDefaultAvailability(transformedAvailabilities)\n        setAvailability(transformedAvailabilities)\n        setUTCAvailability(availabilities)\n      },\n    }\n  )\n\n  const value = useMemo<CombinedAvailabilityContext>(\n    () => ({\n      defaultAvailability,\n      availability,\n      setDefaultAvailability,\n      setAvailability,\n      UTCAvailability,\n      setUTCAvailability,\n      resetAvailability,\n      isDirty,\n    }),\n    [\n      defaultAvailability,\n      availability,\n      UTCAvailability,\n      isDirty,\n      resetAvailability,\n    ]\n  )\n\n  if (isError) {\n    return (\n      <ErrorPage\n        onButtonClick={() => {\n          refetch()\n        }}\n      />\n    )\n  }\n\n  if (isFetching) {\n    return <ListLoader />\n  }\n\n  return (\n    <CombinedAvailability.Provider value={value}>\n      {children}\n    </CombinedAvailability.Provider>\n  )\n}\n\nexport const useCombinedAvailability = () => {\n  const context = useContext(CombinedAvailability)\n  if (context === undefined && process.env.NODE_ENV !== 'production') {\n    throw new Error(\n      'useCombinedAvailability must be used within a CombinedAvailabilityProvider'\n    )\n  }\n\n  return context!\n}\n","import { styled } from '@jifflenow/brightui'\nimport {\n  getBorderColor,\n  getBorderRadius,\n  getBorderStyle,\n  getBorderWidth,\n} from 'utils/style-helpers'\n\nexport const DateFilterWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  marginTop: sizing.scale600,\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n}))\n\nexport const Root = styled('div', ({ $theme: { mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: 'calc(100vh - 395px)',\n  overflowY: 'scroll',\n  [mediaQuery.medium]: {\n    height: 'calc(100vh - 315px)',\n  },\n}))\n\nexport const WeekLabelRoot = styled('div', () => ({\n  display: 'flex',\n}))\n\nexport const WeekLabel = styled('div', ({ $theme: { sizing } }) => ({\n  minWidth: '100px',\n  paddingRight: sizing.scale300,\n}))\n\nexport const CopyToDateFilter = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  marginBottom: sizing.scale600,\n}))\n\nexport const DateLabel = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.Subtitle3,\n    marginRight: sizing.scale300,\n  })\n)\n\nexport const CombinedAvailabilityWrapper = styled(\n  'div',\n  ({ $theme: { sizing, colors } }) => ({\n    ...getBorderWidth('1px'),\n    ...getBorderColor(colors.mono400),\n    ...getBorderStyle('solid'),\n    ...getBorderRadius(sizing.scale100),\n    paddingTop: sizing.scale300,\n    paddingBottom: sizing.scale300,\n    marginTop: sizing.scale300,\n  })\n)\n\nexport const DateTitle = styled(\n  'div',\n  ({ $theme: { typography, sizing, mediaQuery } }) => ({\n    ...typography.Subtitle1,\n    fontWeight: 400,\n    minWidth: '100px',\n    paddingRight: sizing.scale300,\n    display: 'none',\n    [mediaQuery.medium]: {\n      display: 'block',\n    },\n  })\n)\n\nexport const DateTitleMobile = styled(\n  'div',\n  ({ $theme: { typography, mediaQuery } }) => ({\n    ...typography.Subtitle1,\n    fontWeight: 400,\n    display: 'block',\n    [mediaQuery.medium]: {\n      display: 'none',\n    },\n  })\n)\n\nexport const CopySlotsRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  marginBottom: sizing.scale700,\n}))\n\nexport const FilterWrapper = styled('div', () => ({\n  display: 'flex',\n  alignItems: 'center',\n}))\n\nexport const Filter = styled('div', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale400,\n  minWidth: '145px',\n}))\n","import { DateTime, Info } from 'luxon'\n\nexport const getISODateTime = (date: string, time: string) => `${date}T${time}`\n\nexport const getDayFromDate = (date: string) =>\n  Info.weekdays('long')[DateTime.fromISO(date).weekday - 1]\n\nexport const getDateString = (date: string) =>\n  DateTime.fromISO(date).toLocaleString(DateTime.DATE_MED)\n","import { FC } from 'react'\nimport { useIntl, defineMessages } from 'react-intl'\nimport { DateTime } from 'luxon'\nimport { Add, Trash, CopyOutlined } from '@jifflenow/brightui/icon'\nimport { IconButton } from '@jifflenow/brightui/button'\nimport { weekDays } from 'utils/messages'\nimport { RangeTimeSlot } from 'ui-components/RangeTimeSlot'\nimport {\n  getISOTimeFromDate,\n  getISOTimeFromJSDate,\n  getFullMinutes,\n  getEndDateOfDay,\n} from '../DateTimeConversions'\nimport {\n  deleteAllSlots as deleteAllSlotsUtility,\n  addNewSlot as addNewSlotUtility,\n  checkForOverlaps as checkForOverlapsUtility,\n  deleteSlot as deleteSlotUtility,\n} from '../utilities'\nimport {\n  WeekDayRoot,\n  WeekDayTitle,\n  SlotsRoot,\n  ActionsContainer,\n  TitleActionsContainer,\n  TimeSlotWrapper,\n  DaySlotWrapper,\n  ActionBar,\n  WeekDayTitleMobile,\n} from '../Availabilities/styled-components'\nimport { iconButtonOverrides } from '../Availabilities/overrides'\nimport { DateTitle, DateTitleMobile } from './styled-components'\nimport {\n  getISODateTime,\n  getDayFromDate,\n  getDateString,\n} from './DateTimeConversions'\nimport { CombinedAvailabilityDayProps, CombinedAvailability } from './types'\nimport { useCombinedAvailability } from './CombinedAvailabilityProvider'\n\nconst messages = defineMessages({\n  overlapError: {\n    defaultMessage: 'Time overlap',\n    description: 'Error message',\n  },\n  endTimeLessThanStartTime: {\n    defaultMessage: 'Choose an end time later than start time.',\n    description: 'Error message',\n  },\n})\n\nexport const CombinedAvailabilityDate: FC<CombinedAvailabilityDayProps> = ({\n  dateAvailability,\n  onCopySlots,\n}) => {\n  const { formatMessage } = useIntl()\n  const { availability, setAvailability } = useCombinedAvailability()\n  const { date, timeRanges } = dateAvailability\n  const day = getDayFromDate(date)\n\n  const lastSlotEndsAt12AM = timeRanges.length\n    ? DateTime.fromISO(timeRanges[timeRanges.length - 1].end).hour === 0\n    : false\n\n  const check = (combinedAvailability: CombinedAvailability) =>\n    combinedAvailability.date === date\n  const getStartOfDay = () => date\n  const getNextSlot = (prevEndTime: string) => getISODateTime(date, prevEndTime)\n\n  const deleteAllSlots = () => {\n    deleteAllSlotsUtility<CombinedAvailability>({\n      availability,\n      setAvailability,\n      check,\n    })\n  }\n\n  const addNewSlot = () => {\n    addNewSlotUtility<CombinedAvailability>({\n      availability,\n      setAvailability,\n      check,\n      timeRanges,\n      getNextSlot,\n      getStartOfDay,\n    })\n  }\n\n  const deleteSlot = (indexToDelete: number) => {\n    deleteSlotUtility({\n      availability,\n      setAvailability,\n      check,\n      formatMessage,\n      indexToDelete,\n    })\n  }\n\n  const checkForOverlaps = () => {\n    checkForOverlapsUtility({ setAvailability, formatMessage, check })\n  }\n\n  const editSlotStartTime = (slotDate: Date, indexToUpdate: number) => {\n    const startDateTime = DateTime.fromJSDate(slotDate)\n    /**\n     * FinalizeEndTime decides to update the end time based on the newly\n     * selected start time, there are 3 cases -\n     * 1. If end time is already 12:00am, end time should result to no change\n     * 2. If start time is already greater than 23:00pm, end time will be 12:00am\n     * 3. If start time is greater/equal, end time will be start time + 1 hour\n     */\n    const finalizeEndTime = (end: string, index: number) =>\n      getFullMinutes(startDateTime.toISO()) === 0\n        ? end\n        : startDateTime.toMillis() >=\n          DateTime.fromISO(\n            getISODateTime(\n              date,\n              timeRanges.find((_, idx) => idx === index)?.end!\n            )\n          ).toMillis()\n        ? getISOTimeFromJSDate(\n            startDateTime.hour === 23\n              ? DateTime.fromISO(\n                  `${startDateTime.toISODate()}T24:00:00`\n                ).toJSDate()\n              : startDateTime.plus({ hour: 1 }).toJSDate()\n          )\n        : end\n\n    setAvailability(\n      availability.map(availability =>\n        check(availability)\n          ? {\n              ...availability,\n              timeRanges: availability.timeRanges.map((range, index) =>\n                index === indexToUpdate\n                  ? {\n                      start: getISOTimeFromJSDate(slotDate),\n                      end: finalizeEndTime(range.end, index),\n                    }\n                  : range\n              ),\n            }\n          : availability\n      )\n    )\n\n    checkForOverlaps()\n  }\n\n  const editSlotEndTime = (slotDate: Date, indexToUpdate: number) => {\n    setAvailability(\n      availability.map(availability =>\n        check(availability)\n          ? {\n              ...availability,\n              timeRanges: availability.timeRanges.map((range, index) => {\n                if (index !== indexToUpdate) {\n                  return range\n                }\n\n                const is12AM = getFullMinutes(slotDate.toISOString()) === 0\n\n                const end = is12AM\n                  ? getISOTimeFromDate(getEndDateOfDay(slotDate.toISOString()))\n                  : getISOTimeFromJSDate(slotDate)\n\n                return {\n                  start: range.start,\n                  ...(!is12AM && end <= range.start\n                    ? {\n                        error: formatMessage(messages.endTimeLessThanStartTime),\n                      }\n                    : null),\n                  end,\n                }\n              }),\n            }\n          : availability\n      )\n    )\n\n    checkForOverlaps()\n  }\n\n  const isSlotsEmpty = !timeRanges.length\n  const onCopy = () => onCopySlots(date)\n\n  return (\n    <WeekDayRoot key={date} $isEmpty={isSlotsEmpty}>\n      <TitleActionsContainer>\n        <DaySlotWrapper>\n          <WeekDayTitle>\n            {formatMessage(weekDays[day as keyof typeof weekDays])}\n          </WeekDayTitle>\n          <DateTitle>{getDateString(date)}</DateTitle>\n          <SlotsRoot>\n            {timeRanges.map(({ start, end, error }, index) => (\n              <TimeSlotWrapper key={`${index}-${start}-${end}`}>\n                <RangeTimeSlot\n                  start={getISODateTime(date, start)}\n                  end={getISODateTime(date, end)}\n                  error={error}\n                  onDelete={() => deleteSlot(index)}\n                  onStartChange={date => editSlotStartTime(date, index)}\n                  onEndChange={date => editSlotEndTime(date, index)}\n                />\n              </TimeSlotWrapper>\n            ))}\n          </SlotsRoot>\n        </DaySlotWrapper>\n        <ActionBar $isEmpty={isSlotsEmpty}>\n          <WeekDayTitleMobile>\n            {formatMessage(weekDays[day as keyof typeof weekDays])}\n          </WeekDayTitleMobile>\n          <DateTitleMobile>{getDateString(date)}</DateTitleMobile>\n          <ActionsContainer\n            data-pendo={`profile/availability/${day}-action-container`}\n          >\n            <IconButton\n              size={20}\n              overrides={iconButtonOverrides}\n              disabled={lastSlotEndsAt12AM}\n              onClick={addNewSlot}\n              data-pendo=\"profile/availability/add\"\n            >\n              <Add size={20} />\n            </IconButton>\n            <IconButton\n              size={20}\n              overrides={iconButtonOverrides}\n              disabled={!timeRanges.length}\n              onClick={onCopy}\n              data-pendo=\"profile/availability/copy\"\n            >\n              <CopyOutlined />\n            </IconButton>\n            <IconButton\n              size={20}\n              disabled={!timeRanges.length}\n              overrides={iconButtonOverrides}\n              onClick={deleteAllSlots}\n              data-pendo=\"profile/availability/delete\"\n            >\n              <Trash />\n            </IconButton>\n          </ActionsContainer>\n        </ActionBar>\n      </TitleActionsContainer>\n    </WeekDayRoot>\n  )\n}\n","import { VFC, useState } from 'react'\nimport { Checkbox } from '@jifflenow/brightui/checkbox'\nimport { CopySlotsRoot, WeekLabel, WeekLabelRoot } from './styled-components'\nimport { CopyDaySlotsToProps } from './types'\nimport { getDateString, getDayFromDate } from './DateTimeConversions'\n\nexport const CopyDateSlotsTo: VFC<CopyDaySlotsToProps> = props => {\n  const [checked, setChecked] = useState(false)\n  const { item, dateFilter } = props\n\n  return (\n    <CopySlotsRoot>\n      <Checkbox\n        checked={checked}\n        onChange={() => {\n          setChecked(!checked)\n          props.copyTo(item)\n        }}\n      >\n        {dateFilter ? (\n          <WeekLabelRoot>\n            <WeekLabel>{getDayFromDate(item)}</WeekLabel>\n            <WeekLabel> {getDateString(item)}</WeekLabel>\n          </WeekLabelRoot>\n        ) : (\n          item\n        )}\n      </Checkbox>\n    </CopySlotsRoot>\n  )\n}\n","import { VFC } from 'react'\nimport { DateTime, Interval } from 'luxon'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { DateFilter } from '@jifflenow/brightui/filter'\nimport { getJSDate } from '../DateTimeConversions'\nimport { DateLabel } from './styled-components'\n\nconst messages = defineMessages({\n  dateRange: {\n    defaultMessage: 'Date Range',\n    description: 'filter label',\n  },\n})\n\ntype FilterProps = {\n  dateRange: string[]\n  onChange: (dateRange: string[]) => void\n  maxDate: string\n  minDate: string\n}\n\nconst toISODate = (date: Date) => DateTime.fromJSDate(date).toISODate()\n\nexport const DateRangeFilter: VFC<FilterProps> = ({\n  dateRange,\n  onChange,\n  minDate,\n  maxDate,\n}) => {\n  const { formatMessage } = useIntl()\n\n  const getDate = (date: string) => DateTime.fromISO(date)\n  const isFilterNeeded =\n    Interval.fromDateTimes(getDate(minDate), getDate(maxDate)).length('days') >\n    14\n\n  return isFilterNeeded ? (\n    <>\n      <DateLabel>{formatMessage(messages.dateRange)}</DateLabel>\n      <div>\n        <DateFilter\n          label={formatMessage(messages.dateRange)}\n          onChange={(range: Date[]) =>\n            onChange(\n              range\n                ? [range[0], range[1] || range[0]].map(toISODate)\n                : [minDate, maxDate]\n            )\n          }\n          value={dateRange.map(date => getJSDate(date))}\n          minDate={getJSDate(minDate)}\n          maxDate={getJSDate(maxDate)}\n        />\n      </div>\n    </>\n  ) : null\n}\n","import { useEffect, useState, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { updateCombinedUserAvailability, usePortalV2Client } from 'rest'\nimport { components } from 'types/openapi'\nimport { useParams } from 'react-router-dom'\nimport { Footer } from '../Common/Footer'\nimport { UTCMinutesCombinedAvailability } from '../types'\nimport { CombinedAvailabilityDate } from './CombinedAvailabilityDate'\nimport { useCombinedAvailability } from './CombinedAvailabilityProvider'\nimport { getAvailability } from './transform'\nimport { CombinedAvailabilitiesProps } from './types'\nimport { getDayFromDate } from './DateTimeConversions'\nimport { CopyCombinedAvailability } from './CopyCombinedAvailability'\nimport { Root } from './styled-components'\n\ntype UpdateCombinedAvailability = components['schemas']['AvailabilityTimeRange']\n\nconst messages = defineMessages({\n  success: {\n    defaultMessage: 'Availabilities Saved Successfully.',\n    description: 'Success message',\n  },\n  genericError: {\n    defaultMessage: 'Error Setting Availabilities.',\n    description: 'Error message',\n  },\n})\n\nconst matchPayloadToAPI = ({\n  date,\n  timeRanges,\n}: UTCMinutesCombinedAvailability) =>\n  ({\n    availabilityDate: date,\n    availabilityDay: getDayFromDate(date),\n    availableSlots: timeRanges.reduce(\n      (acc, elem) => [...acc, elem.start, elem.end],\n      [] as number[]\n    ),\n  } as UpdateCombinedAvailability)\n\nexport const CombinedAvailabilities: VFC<CombinedAvailabilitiesProps> = ({\n  timeZoneId,\n  dateRange,\n}) => {\n  const {\n    availability,\n    isDirty,\n    resetAvailability,\n    setDefaultAvailability,\n    setAvailability,\n  } = useCombinedAvailability()\n  const { formatMessage } = useIntl()\n  const unload = useBeforeUnload()\n  const client = usePortalV2Client()\n  const { userId } = useParams<{ userId: string }>()\n  const location = new URLSearchParams(window.location.search).get('location')\n  const [isOpen, setIsOpen] = useState(false)\n  const [showLoader, setShowLoader] = useState(false)\n  const [copySource, setCopySource] = useState<string | null>(null)\n\n  const hasError = availability\n    .flatMap(({ timeRanges }) => timeRanges)\n    .some(({ error }) => error)\n\n  const handleSave = async () => {\n    setAvailability(\n      availability.map(availability => ({\n        ...availability,\n        timeRanges: availability.timeRanges.sort((a, b) =>\n          a.start < b.start ? -1 : a.start > b.start ? 1 : 0\n        ),\n      }))\n    )\n    setShowLoader(true)\n    const payload = {\n      availabilities: getAvailability(availability).map(matchPayloadToAPI),\n      users: [userId],\n      locationUuid: location!,\n      weekwise: false,\n      userTimeZone: timeZoneId,\n    }\n    try {\n      await updateCombinedUserAvailability(client, payload)\n      setDefaultAvailability(availability)\n      setShowLoader(false)\n      showSuccessToast(formatMessage(messages.success))\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return false\n    }\n  }\n\n  const handleCopySlots = (date: string) => {\n    setIsOpen(true)\n    setCopySource(date)\n  }\n\n  useEffect(() => {\n    unload(isDirty)\n  }, [isDirty, unload])\n\n  return (\n    <>\n      <Root>\n        {availability.map(availability => (\n          <CombinedAvailabilityDate\n            dateAvailability={availability}\n            onCopySlots={handleCopySlots}\n            key={availability.date}\n          />\n        ))}\n      </Root>\n\n      <Footer\n        clearTempActiveKey={() => {}}\n        isDirty={isDirty}\n        onSave={handleSave}\n        isDisabled={showLoader || !isDirty || hasError}\n        pendoPrefix=\"profile/availability\"\n        handleDiscard={resetAvailability}\n      />\n      {isOpen && (\n        <CopyCombinedAvailability\n          isOpen\n          sourceDate={copySource!}\n          onClose={() => setIsOpen(false)}\n          availabilityInTZ={availability}\n          setAvailabilityInTZ={setAvailability}\n          dateRange={dateRange}\n        />\n      )}\n      {showLoader && <ModalSpinner />}\n    </>\n  )\n}\n","import { useState, VFC } from 'react'\nimport { useEventInfo } from 'components/ProfileDrawer/providers/EventInfoProvider'\nimport { useDirtyCheck } from 'components/ProfileDrawer/providers/ProfileSectionDirtyCheckProvider'\nimport { CombinedAvailabilityProvider } from './CombinedAvailabilityProvider'\nimport { CombinedAvailabilities } from './CombinedAvailabilities'\nimport { DateRangeFilter } from './DateRangeFilter'\nimport {\n  DateFilterWrapper,\n  CombinedAvailabilityWrapper,\n} from './styled-components'\n\nexport const CombinedAvailability: VFC<{\n  timeZoneId: string\n  userId: string\n}> = ({ timeZoneId, userId }) => {\n  const { startDate: eventStartDate, endDate: eventEndDate } =\n    useEventInfo().location ?? {}\n  const [dateRange, setDateRange] = useState([eventStartDate!, eventEndDate!])\n\n  const [filterRange, setFilterRange] = useState(dateRange)\n\n  const { isDirty, setShowConfirmation } = useDirtyCheck()\n\n  const onChange = (dateRange: string[]) => {\n    if (isDirty) {\n      setShowConfirmation(true)\n      setFilterRange(dateRange)\n    } else {\n      setDateRange(dateRange)\n    }\n  }\n\n  return (\n    <>\n      <DateFilterWrapper>\n        <DateRangeFilter\n          dateRange={dateRange}\n          onChange={onChange}\n          minDate={eventStartDate!}\n          maxDate={eventEndDate!}\n        />\n      </DateFilterWrapper>\n      <CombinedAvailabilityWrapper>\n        <CombinedAvailabilityProvider\n          timeZoneId={timeZoneId}\n          userId={userId}\n          dateRange={dateRange}\n          filterRange={filterRange}\n          setDateRange={setDateRange}\n        >\n          <CombinedAvailabilities\n            timeZoneId={timeZoneId}\n            dateRange={dateRange}\n          />\n        </CombinedAvailabilityProvider>\n      </CombinedAvailabilityWrapper>\n    </>\n  )\n}\n","import { VFC, useState, useCallback, useEffect, ReactNode } from 'react'\nimport { DateTime } from 'luxon'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { updateUserTimeZone, usePortalV2Client, useQueryClient } from 'rest'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { TimeZoneChange } from 'components/TimeZoneChange'\nimport { EventSubTypes } from 'gql/types/globalTypes'\nimport { EventDatesLabel } from 'components/ProfileDrawer/Common/EventDatesLabel'\nimport { Header } from '../Common'\nimport { Root, Body, Title } from '../Common/styled-components'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { useEventInfo } from '../providers/EventInfoProvider'\nimport { AvailabilityProvider } from './AvailabilityProvider'\nimport { AvailabilityTabs } from './AvailabilityTabs'\nimport { TimeZone } from './types'\nimport { Container, Note } from './styled-components'\nimport { CombinedAvailability } from './CombinedAvailabilities'\n\nconst messages = defineMessages({\n  title: {\n    defaultMessage: 'My Availability',\n    description: 'Page title',\n  },\n  titleEEvent: {\n    defaultMessage: 'My Availability for',\n    description: 'Page title',\n  },\n  note: {\n    defaultMessage:\n      '<b>Note:</b> The availability is applicable to all the Jifflenow instances falling on below dates.',\n    description: 'Page title',\n  },\n})\n\nexport const Availability: VFC = () => {\n  const portalClient = usePortalV2Client()\n  const { formatMessage } = useIntl()\n  const user = useProfileUser()\n  const [showLoader, setShowLoader] = useState(false)\n  const queryClient = useQueryClient()\n  const { location } = useEventInfo()\n  const { subType, timeZone: zone = user.attributes.timeZone } = location || {}\n\n  const prepareClientTimeZone = useCallback(userTimeZone => {\n    let currentDate = DateTime.local()\n    if (userTimeZone) {\n      currentDate = currentDate.setZone(userTimeZone)\n    }\n\n    const { offsetNameShort, offsetNameLong, zoneName } = currentDate\n\n    return {\n      timeZoneId: zoneName,\n      timeZoneName:\n        offsetNameLong.startsWith('GMT') || offsetNameLong === 'UTC'\n          ? offsetNameLong\n          : `${offsetNameShort} | ${offsetNameLong}`,\n    }\n  }, [])\n\n  const [timeZone, setTimeZone] = useState<TimeZone>(\n    prepareClientTimeZone(zone)\n  )\n\n  useEffect(() => {\n    if (zone) {\n      setTimeZone(prepareClientTimeZone(zone))\n    }\n  }, [setTimeZone, prepareClientTimeZone, zone])\n\n  const handleTimeZoneChange = useCallback(\n    async timeZoneData => {\n      if (location) {\n        setTimeZone(timeZoneData)\n        return\n      }\n      setShowLoader(true)\n      try {\n        await updateUserTimeZone(\n          portalClient,\n          { timeZone: timeZoneData.timeZoneId },\n          user.id\n        )\n        setTimeZone(timeZoneData)\n        queryClient.invalidateQueries('fetchUser')\n      } finally {\n        setShowLoader(false)\n      }\n    },\n    [setTimeZone, user.id, portalClient, queryClient, location]\n  )\n\n  return (\n    <Root>\n      {showLoader && <ModalSpinner />}\n      <Header />\n      <Body>\n        <Container>\n          <Title>\n            {subType === EventSubTypes.Jem ? (\n              <EventDatesLabel title={formatMessage(messages.titleEEvent)} />\n            ) : (\n              formatMessage(messages.title)\n            )}\n          </Title>\n          <TimeZoneChange\n            timeZone={timeZone}\n            setTimeZone={handleTimeZoneChange}\n          />\n          {subType === EventSubTypes.Jem ? (\n            <>\n              <Note>\n                {formatMessage(messages.note, {\n                  b: (chunks: ReactNode) => <strong>{chunks}</strong>,\n                })}\n              </Note>\n              <CombinedAvailability\n                timeZoneId={timeZone.timeZoneId}\n                userId={user.id}\n              />\n            </>\n          ) : (\n            <AvailabilityProvider\n              userId={user.id}\n              timeZoneId={timeZone.timeZoneId}\n            >\n              <AvailabilityTabs timeZone={timeZone} />\n            </AvailabilityProvider>\n          )}\n        </Container>\n      </Body>\n    </Root>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const IntegrationsContainer = styled(\n  'div',\n  ({ $theme: { colors, sizing } }) => ({\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderBottomWidth: '1px',\n    borderBottomStyle: 'solid',\n    borderBottomColor: colors.mono300,\n    marginBottom: sizing.scale850,\n  })\n)\n\nexport const Container = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  justifyContent: 'space-between',\n  marginRight: sizing.scale1600,\n  marginBottom: sizing.scale850,\n  width: '250x',\n}))\n\nexport const Name = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale400,\n  marginTop: sizing.scale600,\n}))\n\nexport const Description = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale800,\n  marginTop: sizing.scale300,\n  width: '130px',\n}))\n\nexport const Logo = styled('img', ({ $theme: { sizing } }) => ({\n  width: sizing.scale900,\n  height: sizing.scale900,\n}))\n\nexport const LogoContainer = styled(\n  'div',\n  ({ $theme: { sizing, colors } }) => ({\n    width: sizing.scale1200,\n    height: sizing.scale1200,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: `1px solid ${colors.mono300}`,\n    borderRadius: '50%',\n    padding: sizing.scale300,\n    boxShadow: '0px 2px 8px rgb(216 216 216 / 40%)',\n  })\n)\n\nexport const SSOLogo = styled('img', ({ $theme: { sizing } }) => ({\n  width: sizing.scale800,\n  height: sizing.scale700,\n}))\n\nexport const LastSyncedTime = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale100,\n}))\n\nexport const RefetchContainer = styled('div', {\n  display: 'flex',\n})\n\nexport const AuthorizedContainer = styled('div', ({ $theme: { colors } }) => ({\n  display: 'flex',\n  maxWidth: '200px',\n  color: colors.mono700,\n}))\n\nexport const AuthorizedText = styled('div', ({ $theme: { typography } }) => ({\n  ...typography.ParagraphSmall,\n  width: '80%',\n  marginLeft: '5px',\n}))\n","import { VFC } from 'react'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { IntegrationsContainer } from './styled-components'\nimport { SSOIntegrationProps } from './types'\nimport { Container, LogoContainer, SSOLogo, Name } from './styled-components'\nimport { SSOLogo as logo } from './logos'\n\nconst messages = defineMessages({\n  SSOUser: {\n    defaultMessage: 'SSO User',\n    description: 'SSO label',\n  },\n  NonSSOUser: {\n    defaultMessage: 'Non-SSO User',\n    description: 'SSO label',\n  },\n})\n\nexport const SSOIntegration: VFC<SSOIntegrationProps> = ({ ssoEnabled }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <IntegrationsContainer>\n      <Container>\n        <LogoContainer>\n          <SSOLogo src={logo} />\n        </LogoContainer>\n        <Name>\n          <FormattedMessage defaultMessage=\"SSO Login\" description=\"Title\" />\n        </Name>\n        <Button kind={KIND.primary} disabled>\n          {ssoEnabled\n            ? formatMessage(messages.SSOUser)\n            : formatMessage(messages.NonSSOUser)}\n        </Button>\n      </Container>\n    </IntegrationsContainer>\n  )\n}\n","import { VFC, useImperativeHandle, forwardRef } from 'react'\nimport ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\nimport { FlexGrid, FlexGridItem } from '@jifflenow/brightui/flex-grid'\n\nconst LIST_CARD_HEIGHT = 110\n\nconst LoadingListCard: VFC<{ height: number }> = ({ height }) => {\n  const [, theme] = useStyletron()\n  const contentLoaderOptions = {\n    style: { width: '100%', height: `${height}` },\n    width: '1000',\n    height: '120',\n    viewBox: '0 0 1000 100',\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader {...contentLoaderOptions}>\n      <circle cx=\"80\" cy=\"50\" r=\"35\" />\n      <rect x=\"15\" y=\"90\" rx=\"0\" ry=\"0\" width=\"133\" height=\"40\" />\n      <circle cx=\"250\" cy=\"50\" r=\"35\" />\n      <rect x=\"185\" y=\"90\" rx=\"0\" ry=\"0\" width=\"133\" height=\"40\" />\n      <circle cx=\"430\" cy=\"50\" r=\"35\" />\n      <rect x=\"365\" y=\"90\" rx=\"0\" ry=\"0\" width=\"133\" height=\"40\" />\n    </ContentLoader>\n  )\n}\n\nexport const IntegrationsListLoader = forwardRef((_, ref) => {\n  const [, theme] = useStyletron()\n  useImperativeHandle(ref, () => ({\n    getReactContainerStyle: () => ({\n      alignSelf: 'flex-start',\n      marginTop: theme.sizing.scale600,\n    }),\n  }))\n\n  return (\n    <FlexGrid\n      flexGridColumnCount={1}\n      overrides={{\n        Block: {\n          style: ({ $theme: { sizing } }) => ({\n            marginTop: sizing.scale400,\n            padding: '10px',\n          }),\n        },\n      }}\n    >\n      {Array.from({ length: 2 }).map((_, i) => (\n        <FlexGridItem key={i}>\n          <LoadingListCard height={LIST_CARD_HEIGHT} />\n        </FlexGridItem>\n      ))}\n    </FlexGrid>\n  )\n})\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const iconButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { colors, sizing } }) => ({\n      backgroundColor: colors.white,\n      borderLeftStyle: 'none',\n      borderTopStyle: 'none',\n      borderRightStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopRightRadius: 'none',\n      borderBottomRightRadius: 'none',\n      borderTopLeftRadius: 'none',\n      borderBottomLeftRadius: 'none',\n      marginLeft: sizing.scale600,\n    }),\n  },\n}\n","import { useEffect, useRef, VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { useDeAuthorize, useOAuthMeta } from 'rest'\nimport { showErrorToast } from 'utils/toast'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { ActionButtonProps } from './types'\n\nconst childWindowParams = 'width=1000,height=600,left=200,top=100'\n\nconst getCurrentDomain = () => {\n  const urlParts = window.origin.split('.')\n  urlParts.shift()\n  return urlParts.join('.')\n}\n\nexport const ConnectButton: VFC<ActionButtonProps> = ({\n  integrationName,\n  onSuccess,\n  onFailure,\n}) => {\n  const childWindow = useRef<Window | null>(null)\n\n  const { refetch, isLoading } = useOAuthMeta(\n    { conferenceName: integrationName },\n    {\n      enabled: false,\n      onSuccess: data => {\n        data?.data &&\n          (childWindow.current = window.open(\n            data.data.redirectionUrl,\n            undefined,\n            childWindowParams\n          ))\n      },\n      onError: () => {\n        showErrorToast(\n          <FormattedMessage\n            defaultMessage=\"Something went wrong. Please try again.\"\n            description=\"Generic error\"\n          />\n        )\n      },\n    }\n  )\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (childWindow.current?.closed) {\n        childWindow.current = null\n        onSuccess?.()\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [onSuccess])\n\n  useEffect(() => {\n    const handler = (event: MessageEvent) => {\n      const { origin, data } = event\n      if (\n        childWindow.current &&\n        (origin === window.origin || origin.includes(getCurrentDomain()))\n      ) {\n        onFailure?.(data.type)\n      }\n    }\n    window.addEventListener('message', handler)\n    return () => window.removeEventListener('message', handler)\n  }, [onFailure])\n\n  return (\n    <>\n      {isLoading && <ModalSpinner />}\n      <Button\n        kind={KIND.primary}\n        onClick={() => refetch()}\n        data-pendo={`profile/integration-${integrationName}/connect`}\n      >\n        <FormattedMessage defaultMessage=\"Connect\" description=\"Button label\" />\n      </Button>\n    </>\n  )\n}\n\nexport const DisconnectButton: VFC<ActionButtonProps> = ({\n  integrationName,\n  onSuccess,\n}) => {\n  const { id: userUuid } = useProfileUser()\n  const { isLoading, mutateAsync } = useDeAuthorize()\n\n  const handleDisconnect = async () => {\n    try {\n      await mutateAsync({ conferenceName: integrationName, userUuid })\n      onSuccess?.()\n    } catch (error) {\n      showErrorToast(\n        <FormattedMessage\n          defaultMessage=\"Something went wrong. Please try again.\"\n          description=\"Generic error\"\n        />\n      )\n    }\n  }\n\n  return (\n    <>\n      {isLoading && <ModalSpinner />}\n      <Button\n        kind={KIND.primary}\n        onClick={handleDisconnect}\n        data-pendo={`profile/integration-${integrationName}/disconnect`}\n      >\n        <FormattedMessage\n          defaultMessage=\"Disconnect\"\n          description=\"Button label\"\n        />\n      </Button>\n    </>\n  )\n}\n","import { VFC, useState } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { DateTime } from 'luxon'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { StatefulTooltip } from '@jifflenow/brightui/tooltip'\nimport { InfoOutlined } from '@jifflenow/brightui/icon'\nimport { IconButton } from '@jifflenow/brightui/button'\nimport { useBulkUserDownload, useConferenceDetail } from 'rest'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { RefetchIcon } from 'ui-components/icons/RefetchIcon'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { IntegrationAdapter, IntegrationProps } from './types'\nimport { iconButtonOverrides } from './overrides'\nimport {\n  Container,\n  Logo,\n  Name,\n  Description,\n  LastSyncedTime,\n  RefetchContainer,\n  AuthorizedContainer,\n  AuthorizedText,\n} from './styled-components'\nimport {\n  GoogleCalendarLogo,\n  ZoomLogo,\n  MicrosoftOutlookLogo,\n  MicrosoftTeamsConferencingLogo,\n  WebexLogo,\n} from './logos'\nimport { ConnectButton, DisconnectButton } from './ActionButtons'\n\nconst messages = defineMessages({\n  calendarIntegrationConnectSuccess: {\n    defaultMessage: 'Calendar integration connected successfully.',\n    description: 'Success message',\n  },\n  calendarIntegrationDisconnectSuccess: {\n    defaultMessage: 'Calendar integration disconnected successfully.',\n    description: 'Success message',\n  },\n  vconIntegrationConnectSuccess: {\n    defaultMessage: 'Video conference integration connected successfully.',\n    description: 'Success message',\n  },\n  vconIntegrationDisconnectSuccess: {\n    defaultMessage: 'Video conference integration disconnected successfully.',\n    description: 'Success message',\n  },\n  calendarSettingsDescription: {\n    defaultMessage:\n      'Connect your {adapterName} to Jifflenow and manage your calendar settings',\n    description: 'Calendar settings description',\n  },\n  vconSettingsDescription: {\n    defaultMessage:\n      'Automatically include {adapterName} details in Jifflenow meetings',\n    description: 'V-Con settings description',\n  },\n  LastSyncedTime: {\n    defaultMessage: 'Last Synced Time',\n    description: 'Sync time label',\n  },\n  fetchFreeBusy: {\n    defaultMessage: 'Fetch Free/Busy',\n    description: 'Fetch Free/Busy label',\n  },\n  configurationMessage: {\n    defaultMessage: 'Your admin has already integrated with {adapterName}',\n    description: 'configuration message for integrations',\n  },\n  fetchFreeBusySuccess: {\n    defaultMessage:\n      'Synchronization with external calendar has been initiated. This might take a few minutes.',\n    description: 'Fetch Free/busy message',\n  },\n  connectError: {\n    defaultMessage:\n      '{adapterName} authorization is unsuccessful. Email in Jifflenow doesn’t match with {adapterName} email.',\n    description: 'Error message',\n  },\n  genericError: {\n    defaultMessage: 'Something went wrong. Please try again.',\n    description: 'Generic error',\n  },\n})\n\nconst adapterNames = defineMessages<IntegrationAdapter>({\n  Zoom: {\n    defaultMessage: 'Zoom',\n    description: 'Integration name',\n  },\n  Webex: {\n    defaultMessage: 'Webex',\n    description: 'Integration name',\n  },\n  MicrosoftTeams: {\n    defaultMessage: 'Microsoft Teams Conferencing',\n    description: 'Integration name',\n  },\n  MicrosoftOutlook: {\n    defaultMessage: 'Office 365 Calendar',\n    description: 'Integration name',\n  },\n  GoogleCalendar: {\n    defaultMessage: 'Google Calendar',\n    description: 'Integration name',\n  },\n})\n\nconst logoImages: Record<IntegrationAdapter, string> = {\n  Zoom: ZoomLogo,\n  Webex: WebexLogo,\n  GoogleCalendar: GoogleCalendarLogo,\n  MicrosoftOutlook: MicrosoftOutlookLogo,\n  MicrosoftTeams: MicrosoftTeamsConferencingLogo,\n}\n\nexport const Integration: VFC<IntegrationProps> = ({\n  adapterName: adapter,\n  integrationName,\n  userAuthorized,\n  lastCalendarSync,\n  integrationType,\n  userBasedAuth,\n}) => {\n  const { formatMessage } = useIntl()\n  const { id: userUuid } = useProfileUser()\n\n  const [isConnected, setIsConnected] = useState(userAuthorized)\n  const [lastSyncTime, setLastSyncTime] = useState(lastCalendarSync)\n  const [loading, setLoading] = useState(false)\n\n  const {\n    refetch: refetchConference,\n    isRefetching: conferenceLoading,\n  } = useConferenceDetail(\n    {\n      path: { conferenceName: integrationName },\n      query: { userUuid, userBasedAuthAttribs: true, profile: true },\n    },\n    {\n      enabled: false,\n      onSuccess: ({ data }) => {\n        isConnected\n          ? showSuccessToast(formatMessage(messages.fetchFreeBusySuccess))\n          : data.userAuthorized &&\n            showSuccessToast(\n              formatMessage(\n                messages[\n                  integrationType === 'calendar'\n                    ? 'calendarIntegrationConnectSuccess'\n                    : 'vconIntegrationConnectSuccess'\n                ]\n              )\n            )\n        setIsConnected(data.userAuthorized)\n        setLastSyncTime(data.lastCalendarSync)\n      },\n      onError: () => {\n        showErrorToast(formatMessage(messages.genericError))\n      },\n    }\n  )\n  const { refetch: bulkUserRefetch } = useBulkUserDownload(\n    {\n      path: { userUuid },\n    },\n    { enabled: false }\n  )\n\n  const adapterName = formatMessage(adapterNames[adapter])\n  const description = formatMessage(\n    messages[\n      integrationType === 'calendar'\n        ? 'calendarSettingsDescription'\n        : 'vconSettingsDescription'\n    ],\n    { adapterName }\n  )\n\n  const fetchFreeBusyIntegration = async () => {\n    try {\n      setLoading(true)\n      await bulkUserRefetch()\n      setLoading(false)\n      refetchConference()\n    } catch (error) {\n      setLoading(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n\n  const onAuthFailure = (error: string) => {\n    error === 'INTEGRATIONS_EMAIL_MISMATCH' &&\n      showErrorToast(formatMessage(messages.connectError, { adapterName }))\n  }\n\n  const onDisconnectSuccess = () => {\n    showSuccessToast(\n      formatMessage(\n        messages[\n          integrationType === 'calendar'\n            ? 'calendarIntegrationDisconnectSuccess'\n            : 'vconIntegrationDisconnectSuccess'\n        ]\n      )\n    )\n    setIsConnected(false)\n  }\n\n  return (\n    <>\n      {(loading || conferenceLoading) && <ModalSpinner />}\n      <Container>\n        <Logo src={logoImages[adapter]} />\n        <Name>{adapterName}</Name>\n        <Description>{description}</Description>\n        <RefetchContainer>\n          {userBasedAuth ? (\n            isConnected ? (\n              <DisconnectButton\n                integrationName={integrationName}\n                onSuccess={onDisconnectSuccess}\n              />\n            ) : (\n              <ConnectButton\n                integrationName={integrationName}\n                onSuccess={refetchConference}\n                onFailure={onAuthFailure}\n              />\n            )\n          ) : (\n            <AuthorizedContainer>\n              <InfoOutlined />\n              <AuthorizedText>\n                {formatMessage(messages.configurationMessage, {\n                  adapterName,\n                })}\n              </AuthorizedText>\n            </AuthorizedContainer>\n          )}\n\n          {integrationType === 'calendar' && userBasedAuth && isConnected && (\n            <StatefulTooltip content={formatMessage(messages.fetchFreeBusy)}>\n              <IconButton\n                size={20}\n                overrides={iconButtonOverrides}\n                onClick={fetchFreeBusyIntegration}\n                data-pendo={`profile/integration-${integrationName}/user-status`}\n              >\n                <RefetchIcon />\n              </IconButton>\n            </StatefulTooltip>\n          )}\n        </RefetchContainer>\n        {integrationType === 'calendar' &&\n          userBasedAuth &&\n          isConnected &&\n          lastSyncTime && (\n            <LastSyncedTime>{`${formatMessage(\n              messages.LastSyncedTime\n            )}: ${DateTime.fromISO(lastSyncTime).toFormat(\n              'FFF'\n            )}`}</LastSyncedTime>\n          )}\n      </Container>\n    </>\n  )\n}\n","import { FC, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useUserIntegrations } from 'rest'\nimport { ErrorSection } from 'ui-components/ErrorPage'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { Container, Root, Body } from '../Common/styled-components'\nimport { Header, Footer, Title } from '../Common'\nimport { SSOIntegration } from './SSOIntegration'\nimport { IntegrationsListLoader } from './IntegrationsLoader'\nimport { IntegrationsContainerViewProps, IntegrationsViewProps } from './types'\nimport { IntegrationsContainer } from './styled-components'\nimport { Integration } from './Integration'\n\nconst messages = defineMessages({\n  calendarIntegration: {\n    defaultMessage: 'Calendar Integration',\n    description: 'Integration type',\n  },\n  vConIntegration: {\n    defaultMessage: 'Video Conference Integration',\n    description: 'Integration type',\n  },\n})\n\nconst IntegrationsContainerView: FC<IntegrationsContainerViewProps> = ({\n  title,\n  children,\n}) => (\n  <>\n    <Title>{title}</Title>\n    <IntegrationsContainer>{children}</IntegrationsContainer>\n  </>\n)\n\nconst IntegrationsView: FC<IntegrationsViewProps> = ({ data, children }) => {\n  const { formatMessage } = useIntl()\n\n  const {\n    ssoIntegration: { userSsoEnabled },\n    calendarIntegrations,\n    vconIntegrations,\n  } = data\n\n  return (\n    <Body>\n      <Container>\n        <SSOIntegration ssoEnabled={userSsoEnabled} />\n        {!!calendarIntegrations.length && (\n          <IntegrationsContainerView\n            title={formatMessage(messages.calendarIntegration)}\n          >\n            {calendarIntegrations.map(item => (\n              <Integration\n                {...item}\n                key={item.uuid}\n                integrationType=\"calendar\"\n              />\n            ))}\n          </IntegrationsContainerView>\n        )}\n        {!!vconIntegrations.length && (\n          <IntegrationsContainerView\n            title={formatMessage(messages.vConIntegration)}\n          >\n            {vconIntegrations.map(item => (\n              <Integration {...item} key={item.uuid} integrationType=\"vcon\" />\n            ))}\n          </IntegrationsContainerView>\n        )}\n      </Container>\n      {children}\n    </Body>\n  )\n}\n\nexport const Integrations: VFC<{ onNavigate?: () => void }> = ({\n  onNavigate,\n}) => {\n  const { id: userId } = useProfileUser()\n  const { isLoading, data, error, refetch } = useUserIntegrations({\n    query: { userBasedAuthAttribs: true },\n    path: { userId },\n  })\n\n  return (\n    <Root>\n      <Header />\n      {isLoading && <IntegrationsListLoader />}\n      {error && <ErrorSection onButtonClick={() => refetch()} />}\n      {data && (\n        <IntegrationsView data={data.data}>\n          <Footer\n            onNext={onNavigate}\n            hasOnlyNext\n            pendoPrefix=\"profile/integrations\"\n          />\n        </IntegrationsView>\n      )}\n    </Root>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const ListActionsContainer = styled('div', () => ({\n  display: 'flex',\n}))\n\nexport const ActionText = styled(\n  'div',\n  ({ $theme: { typography, sizing } }) => ({\n    ...typography.Subtitle3,\n    marginRight: sizing.scale300,\n    paddingTop: '5px',\n  })\n)\n","import { FC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { SortFilter } from '@jifflenow/brightui/filter'\nimport { Search } from '@jifflenow/brightui/icon'\nimport { Input } from '@jifflenow/brightui/input'\nimport { SortOrder, sortOrders, sortOverrides } from 'components/Events'\nimport { SortType } from '../types'\nimport { ListActionsProps } from './types'\nimport { ListActionsContainer } from './styled-components'\n\nconst messages = defineMessages({\n  searchLocations: {\n    defaultMessage: 'Search',\n    description: 'Placeholder text',\n  },\n  sort: {\n    defaultMessage: 'Sort by',\n    description: 'Filter Label',\n  },\n  startDate: {\n    defaultMessage: 'Start Date (asc.)',\n    description: 'Sort option for event instance date',\n  },\n  '-startDate': {\n    defaultMessage: 'Start Date (desc.)',\n    description: 'Sort option for event instance date',\n  },\n  locationName: {\n    defaultMessage: 'Name A-Z',\n    description: 'Sort option for event instance name',\n  },\n  '-locationName': {\n    defaultMessage: 'Name Z-A',\n    description: 'Sort option for event instance name',\n  },\n})\n\nexport const ListActions: FC<ListActionsProps> = ({\n  searchTerm,\n  onSearch,\n  onSort,\n  sort,\n}) => {\n  const { formatMessage } = useIntl()\n  const toFilterFormat = (sortOrder: SortOrder) => ({\n    id: sortOrder,\n    label: formatMessage(messages[sortOrder]),\n  })\n\n  return (\n    <ListActionsContainer>\n      <SortFilter\n        label={`${formatMessage(messages.sort)} ${formatMessage(\n          messages[sort]\n        )}`}\n        onChange={newSort => onSort(newSort[0].id as SortType)}\n        options={sortOrders.map(toFilterFormat)}\n        overrides={sortOverrides}\n        value={[sort].map(toFilterFormat)}\n      />\n\n      <Input\n        type=\"search\"\n        IconAfter={Search}\n        placeholder={formatMessage(messages.searchLocations)}\n        value={searchTerm}\n        onChange={onSearch}\n      />\n    </ListActionsContainer>\n  )\n}\n","import { VFC } from 'react'\nimport { DateTime } from 'luxon'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  CityFilter,\n  FilterOptionFormat,\n  filterOverrides,\n  dateFilterOverrides,\n  statusOptions,\n  modeOptions,\n  FiltersContainer,\n  FilterItem,\n} from 'components/Events'\nimport { DateRangeFilter, TextFilter } from '@jifflenow/brightui/filter'\nimport { filterOptionLabel } from 'ui-components/common/messages'\nimport { EventTypeFilter } from '../../Common/CampaignFilter'\nimport { FilterProps, EventStatusFilter, EventMode } from './types'\nimport { ActionText } from './styled-components'\n\nconst messages = defineMessages({\n  eventStatus: {\n    defaultMessage: 'Status',\n    description: 'Filter Label for status of the event instance',\n  },\n  eventMode: {\n    defaultMessage: 'Mode',\n    description: 'Filter Label for mode of the event instance',\n  },\n  dateRange: {\n    defaultMessage: 'Date Range',\n    description: 'Filter Label',\n  },\n  hostingType: {\n    defaultMessage: 'Hosting Type',\n    description: 'Filter Label',\n  },\n  actionText: {\n    defaultMessage: 'Filter by',\n    description: 'Filter Label',\n  },\n})\n\nconst toFilterFormat = (option: string) => ({ id: option, label: option })\n\nexport const Filters: VFC<FilterProps> = ({ filters, onChange, eventType }) => {\n  const { formatMessage } = useIntl()\n\n  const toFilterOptionFormat = (option: EventMode | EventStatusFilter) => ({\n    id: option,\n    label: formatMessage(filterOptionLabel[option]),\n  })\n\n  const {\n    types = [],\n    statuses = [],\n    modes = [],\n    cities = [],\n    dateInterval = '',\n  } = filters ?? {}\n\n  const handleDateChange = (dateRange: Date[]) => {\n    dateRange =\n      dateRange?.length === 1 ? [dateRange[0], dateRange[0]] : dateRange\n    onChange({\n      dateInterval:\n        dateRange\n          ?.map((date: Date) => DateTime.fromJSDate(date).toISODate())\n          .join('--') ?? '',\n    })\n  }\n\n  return (\n    <FiltersContainer>\n      <ActionText>{formatMessage(messages.actionText)}</ActionText>\n      {eventType !== 'Emeet' && (\n        <FilterItem>\n          <EventTypeFilter\n            types={types}\n            onChange={eventTypes =>\n              onChange({\n                types: eventTypes,\n              })\n            }\n          />\n        </FilterItem>\n      )}\n      <FilterItem>\n        <TextFilter\n          label={formatMessage(messages.eventStatus)}\n          onChange={newStatuses => {\n            onChange({\n              statuses: newStatuses.map(({ id }) => id as EventStatusFilter),\n            })\n          }}\n          options={statusOptions.map(toFilterOptionFormat)}\n          overrides={filterOverrides}\n          value={statuses.map(toFilterOptionFormat)}\n        />\n      </FilterItem>\n      <FilterItem>\n        <TextFilter\n          label={formatMessage(messages.eventMode)}\n          onChange={newModes => {\n            onChange({\n              modes: newModes.map(({ id }) => id as EventMode),\n            })\n          }}\n          options={modeOptions.map(toFilterOptionFormat)}\n          overrides={filterOverrides}\n          value={modes.map(toFilterOptionFormat)}\n        />\n      </FilterItem>\n      <FilterItem>\n        <DateRangeFilter\n          label={formatMessage(messages.dateRange)}\n          onChange={handleDateChange}\n          value={\n            dateInterval\n              ? dateInterval.split('--').map(date => new Date(date))\n              : []\n          }\n          overrides={dateFilterOverrides}\n        />\n      </FilterItem>\n      {/* <FilterItem>\n        <TextFilter\n          label={formatMessage(messages.hostingType)}\n          onChange={newHostingType =>\n            setFilters(prevFilters => ({\n              ...prevFilters,\n              categories: newHostingType.map(({ id }) => id as EventCategory),\n            }))\n          }\n          options={categoryOptions.map(toFilterFormat)}\n          overrides={dateFilterOverrides}\n          value={categories.map(toFilterFormat)}\n        />\n      </FilterItem> */}\n      <FilterItem>\n        <CityFilter\n          onChange={(newCities: [FilterOptionFormat]) => {\n            onChange({\n              cities: newCities.map(({ id }) => id!),\n            })\n          }}\n          value={cities.map(toFilterFormat)}\n        />\n      </FilterItem>\n    </FiltersContainer>\n  )\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { Title as MainTitle } from '../Common/styled-components'\n\nexport const TitleActionsContainer = styled('div', {\n  display: 'flex',\n  justifyContent: 'space-between',\n  flexWrap: 'wrap',\n})\n\nexport const FiltersContainer = styled('div', {\n  marginTop: '20px',\n})\n\nexport const Title = withStyle(MainTitle, {\n  marginBottom: 0,\n})\n\nexport const GridContainer = styled('div', {\n  marginTop: '20px',\n})\n\nexport const GridWrapper = styled<{ $isFullMode?: boolean }, 'div'>(\n  'div',\n  ({ $isFullMode }) => ({\n    display: $isFullMode ? 'block' : 'flex',\n    justifyContent: 'center',\n    width: '1176px',\n    overflowY: 'hidden',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    '@media screen and (max-width: 1660px)': {\n      width: $isFullMode ? '100%' : '882px',\n    },\n    '@media screen and (max-width: 1365px)': {\n      width: $isFullMode ? '100%' : '588px',\n    },\n    '@media screen and (max-width: 1040px)': {\n      width: $isFullMode ? '100%' : '294px',\n    },\n  })\n)\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { FlexGrid, FlexGridItem } from '@jifflenow/brightui/flex-grid'\nimport { Card } from '@jifflenow/brightui/card'\nimport {\n  AspectRatioBox,\n  AspectRatioBoxBody,\n} from '@jifflenow/brightui/aspect-ratio-box/index'\nimport {\n  flexGridOverridesForNoItems,\n  cardOverrides,\n  aspectRatioBoxOverrides,\n  aspectRatioBoxBodyOverrides,\n} from 'components/Events'\n\nconst messages = defineMessages({\n  noCampaigns: {\n    defaultMessage: 'There are no Events.',\n    description: 'Message for empty events list',\n  },\n  noInstance: {\n    defaultMessage: 'There are no Instances.',\n    description: 'Message for empty events list',\n  },\n})\n\nexport const NoItem: VFC<{ eventType?: string }> = ({ eventType }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <FlexGrid\n      flexGridColumnCount={[1, 2, 3, 5]}\n      flexGridColumnGap=\"9px\"\n      flexGridRowGap=\"8px\"\n      overrides={flexGridOverridesForNoItems}\n    >\n      <FlexGridItem>\n        <Card overrides={cardOverrides(false)}>\n          <AspectRatioBox\n            overrides={aspectRatioBoxOverrides}\n            aspectRatio={2.5 / 1}\n          >\n            <AspectRatioBoxBody overrides={aspectRatioBoxBodyOverrides}>\n              {formatMessage(\n                eventType === 'Emeet'\n                  ? messages.noInstance\n                  : messages.noCampaigns\n              )}\n            </AspectRatioBoxBody>\n          </AspectRatioBox>\n        </Card>\n      </FlexGridItem>\n    </FlexGrid>\n  )\n}\n","import { Anchor as StyledAnchor } from 'ui-components/Anchor'\nimport { styled } from '@jifflenow/brightui'\n\nexport const Anchor = styled(\n  StyledAnchor,\n  ({ $theme: { colors, sizing } }) => ({\n    backgroundColor: colors.white,\n    borderTopLeftRadius: sizing.scale100,\n    borderTopRightRadius: sizing.scale100,\n    borderBottomLeftRadius: sizing.scale100,\n    borderBottomRightRadius: sizing.scale100,\n    ':focus': {\n      boxShadow: '0px 10px 20px rgba(216, 216, 216, 0.4)',\n      outline: 'none',\n    },\n  })\n)\n\nexport const ImageAnchor = styled(\n  StyledAnchor,\n  ({ $theme: { colors, sizing } }) => ({\n    backgroundColor: colors.white,\n    borderTopLeftRadius: sizing.scale100,\n    borderTopRightRadius: sizing.scale100,\n    borderBottomLeftRadius: sizing.scale100,\n    borderBottomRightRadius: sizing.scale100,\n    margin: 0,\n    padding: 0,\n    width: '100%',\n  })\n)\n\nexport const Body = styled<{ $isFullMode?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { colors, typography, sizing }, $isFullMode }) => ({\n    ...($isFullMode ? typography.HeadingXSmall : typography.Paragraph1),\n    marginTop: sizing.scale300,\n    fontWeight: 'normal',\n    color: colors.mono700,\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  })\n)\n\nexport const CardTitle = styled<{ $isFullMode?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { typography }, $isFullMode }) => ({\n    ...($isFullMode ? typography.HeadingXSmall : typography.Subtitle3),\n    lineHeight: $isFullMode ? '30px' : '24px',\n    minHeight: $isFullMode ? '60px' : '48px',\n    maxHeight: $isFullMode ? '60px' : '48px',\n    overflow: 'hidden',\n    display: '-webkit-box',\n    '-webkit-box-orient': 'vertical',\n    '-webkit-line-clamp': 2,\n  })\n)\n\nexport const EventActionsContainer = styled<{ $isFullMode?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    paddingLeft: sizing.scale600,\n    paddingRight: sizing.scale600,\n    marginTop: sizing.scale600,\n    marginBottom: sizing.scale600,\n    minHeight: sizing.scale900,\n  })\n)\n\nexport const Wrapper = styled('div', ({ $theme: { sizing, colors } }) => ({\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  right: 0,\n  left: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  paddingLeft: sizing.scale600,\n  paddingRight: sizing.scale600,\n  backgroundColor: colors.white,\n  borderBottomLeftRadius: sizing.scale100,\n  borderBottomRightRadius: sizing.scale100,\n}))\n\nexport const EventStatusWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginTop: sizing.scale600,\n  marginBottom: sizing.scale600,\n}))\n","import { useState, VFC } from 'react'\nimport {\n  addUserToLocation,\n  removeUserFromLocation,\n  usePortalV2Client,\n} from 'rest'\nimport { useMe } from 'providers/MeProvider'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Button, KIND } from '@jifflenow/brightui/button'\nimport { fullWidthButtonOverrides } from 'components/Events'\nimport {\n  useProfileUser,\n  useRefetchUser,\n} from '../../providers/ProfileUserProvider'\nimport { UserActionProps } from './types'\n\nconst messages = defineMessages({\n  add: {\n    defaultMessage: 'Add yourself',\n    description: 'User map status for campaign',\n  },\n  remove: {\n    defaultMessage: 'Remove yourself',\n    description: 'User map status for campaign',\n  },\n  addOnBehalf: {\n    defaultMessage: 'Add',\n    description: 'User map status for campaign',\n  },\n  removeOnBehalf: {\n    defaultMessage: 'Remove',\n    description: 'User map status for campaign',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  successAdded: {\n    defaultMessage: 'User added to instance.',\n    description: 'Success message',\n  },\n  successRemoved: {\n    defaultMessage: 'User removed from instance.',\n    description: 'Success message',\n  },\n})\n\nexport const UserActions: VFC<UserActionProps> = props => {\n  const { formatMessage } = useIntl()\n  const [isUserMapped, setIsUserMapped] = useState<boolean>(props.isUserMapped)\n  const [showLoader, setShowLoader] = useState<boolean>(false)\n  const userId = useProfileUser().id\n  const client = usePortalV2Client()\n  const refetch = useRefetchUser()\n  const { locationId } = props\n\n  const handleClick = async () => {\n    setShowLoader(true)\n    try {\n      await (!isUserMapped\n        ? removeUserFromLocation(client, userId, locationId)\n        : addUserToLocation(client, userId, [locationId]))\n      setShowLoader(false)\n      showSuccessToast(\n        isUserMapped\n          ? formatMessage(messages.successAdded)\n          : formatMessage(messages.successRemoved)\n      )\n      await refetch()\n      setIsUserMapped(!isUserMapped)\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n    }\n  }\n  const selectedUserId = useProfileUser().id\n  const loggedInUserId = useMe().data.id\n  const isViewingMyOwnOrAssumedProfile = loggedInUserId === selectedUserId\n\n  return (\n    <Button\n      overrides={fullWidthButtonOverrides}\n      kind={KIND.secondary}\n      onClick={handleClick}\n      isLoading={showLoader}\n    >\n      {isUserMapped\n        ? isViewingMyOwnOrAssumedProfile\n          ? formatMessage(messages.add)\n          : formatMessage(messages.addOnBehalf)\n        : isViewingMyOwnOrAssumedProfile\n        ? formatMessage(messages.remove)\n        : formatMessage(messages.removeOnBehalf)}\n    </Button>\n  )\n}\n","import { FC, useState, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  AspectRatioBox,\n  AspectRatioBoxBody,\n} from '@jifflenow/brightui/aspect-ratio-box/index'\nimport { Card } from '@jifflenow/brightui/card'\nimport { PLACEMENT } from '@jifflenow/brightui/tooltip'\nimport { formatDateRange, formatToStartOfTheDay } from 'utils/dates'\nimport {\n  EventStatus,\n  EventProps,\n  cardOverrides,\n  noBannerAspectRatioBoxBody,\n  imageBoxAspectRatioBoxBody,\n  imageAspectRatioBoxBody,\n} from 'components/Events'\nimport { AutoTooltip } from 'ui-components/AutoTooltip'\nimport { getCardLink } from 'components/Events/Items/commons'\nimport { useWindowSize } from 'utils/useWindowSize'\nimport {\n  Body,\n  CardTitle,\n  EventActionsContainer,\n  ImageAnchor,\n  Anchor,\n  EventStatusWrapper,\n  Wrapper,\n} from './styled-components'\nimport { UserActions } from './UserActions'\n\nconst messages = defineMessages({\n  bannerAltText: {\n    defaultMessage: 'Instance banner appears here',\n    description: 'Event banner image alt text',\n  },\n})\n\nexport const EventCard: FC<EventProps & { eventCount: number }> = props => {\n  const { formatMessage } = useIntl()\n  const [location, setLocation] = useState(props.location)\n  const { windowWidth } = useWindowSize()\n\n  const {\n    id,\n    attributes: {\n      image,\n      displayName,\n      address,\n      startDate,\n      endDate,\n      filterStatus,\n      mode,\n      category,\n    },\n    standardFields,\n  } = location\n\n  const userActionType =\n    location.relationships?.actions?.userProfileAction ?? 'viewOnly'\n\n  useEffect(() => {\n    setLocation(props.location)\n  }, [props.location])\n\n  const isFullMode = props.eventCount < 4 && windowWidth > 1660\n\n  const cardLink = getCardLink(location)\n\n  return (\n    <Card overrides={cardOverrides(isFullMode)}>\n      <AspectRatioBox\n        overrides={imageBoxAspectRatioBoxBody}\n        aspectRatio={2 / 1}\n      >\n        <ImageAnchor href={cardLink}>\n          {image && (\n            <AspectRatioBoxBody\n              overrides={imageAspectRatioBoxBody(isFullMode)}\n              as=\"img\"\n              src={image}\n            />\n          )}\n          {!image && (\n            <AspectRatioBoxBody overrides={noBannerAspectRatioBoxBody}>\n              {formatMessage(messages.bannerAltText)}\n            </AspectRatioBoxBody>\n          )}\n        </ImageAnchor>\n      </AspectRatioBox>\n      <AspectRatioBox aspectRatio={isFullMode ? 15 / 12.4 : 15 / 15}>\n        <Wrapper>\n          <Anchor href={cardLink}>\n            <EventStatusWrapper>\n              <EventStatus\n                status={filterStatus}\n                mode={mode}\n                category={category}\n              />\n            </EventStatusWrapper>\n            <AutoTooltip\n              content={displayName}\n              showArrow\n              placement={PLACEMENT.top}\n            >\n              <CardTitle $isFullMode={isFullMode}>{displayName}</CardTitle>\n            </AutoTooltip>\n            <AutoTooltip content={address} showArrow>\n              <Body $isFullMode={isFullMode}>{address}</Body>\n            </AutoTooltip>\n            {startDate && endDate && location.attributes.subType !== 'Emeet' && (\n              <AutoTooltip\n                content={formatDateRange(\n                  formatToStartOfTheDay(startDate),\n                  formatToStartOfTheDay(endDate)\n                )}\n                showArrow\n              >\n                <Body $isFullMode={isFullMode}>\n                  {formatDateRange(\n                    formatToStartOfTheDay(startDate),\n                    formatToStartOfTheDay(endDate)\n                  )}\n                </Body>\n              </AutoTooltip>\n            )}\n\n            {standardFields &&\n              Object.keys(standardFields).map(key => (\n                <AutoTooltip key={key} content={standardFields[key]} showArrow>\n                  <Body $isFullMode={isFullMode}>\n                    {`${key}: ${standardFields[key]}`}\n                  </Body>\n                </AutoTooltip>\n              ))}\n          </Anchor>\n          <EventActionsContainer>\n            {userActionType !== 'viewOnly' && (\n              <UserActions\n                isUserMapped={userActionType === 'add'}\n                locationId={id}\n              />\n            )}\n          </EventActionsContainer>\n        </Wrapper>\n      </AspectRatioBox>\n    </Card>\n  )\n}\n","import { FC } from 'react'\nimport { components } from 'types/openapi'\nimport { FlexGrid, FlexGridItem } from '@jifflenow/brightui/flex-grid'\nimport { flexGridOverrides } from 'components/Events'\nimport { useWindowSize } from 'utils/useWindowSize'\nimport { BlockProps } from '@jifflenow/brightui/block'\nimport { NoItem } from './NoItem'\nimport { EventCard } from './EventCard'\n\ntype Locations = components['schemas']['Locations'] & { eventType?: string }\n\nexport const ItemsGrid: FC<Locations> = ({\n  meta: { page },\n  data: locations,\n  eventType,\n}) => {\n  const { windowWidth } = useWindowSize()\n  const isFullMode = page.total < 4 && windowWidth > 1365\n  const getColumnCount = () => [\n    isFullMode\n      ? windowWidth > 1365\n        ? 3\n        : 1\n      : windowWidth <= 1040\n      ? 1\n      : windowWidth <= 1365\n      ? 2\n      : page.total < 4 || windowWidth <= 1660\n      ? 3\n      : 4,\n  ]\n\n  const itemProps: BlockProps = {\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    paddingBottom: '24px',\n  }\n\n  return locations.length ? (\n    <FlexGrid\n      flexGridColumnCount={getColumnCount()}\n      flexGridColumnGap=\"24px\"\n      overrides={flexGridOverrides}\n    >\n      {locations.map(location => (\n        <FlexGridItem {...itemProps} key={location.id}>\n          <EventCard location={location} eventCount={page.total} />\n        </FlexGridItem>\n      ))}\n    </FlexGrid>\n  ) : (\n    // TODO: get confirmation on empty screen for campaign listing\n    <NoItem eventType={eventType} />\n  )\n}\n","import { VFC, useState, useEffect } from 'react'\nimport { useLocations as useCampaigns } from 'rest'\nimport { KIND, Pagination } from '@jifflenow/brightui/pagination'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { AppSource, useAppSource } from 'providers/AppSourceProvider'\nimport { EventsLoader, LayoutStyle } from 'components/Events'\nimport { useDrawer } from 'ui-components/Drawer'\nimport { useWindowSize } from 'utils/useWindowSize'\nimport { sendMessage, Message } from 'utils/messageDispatcher'\nimport { Container, Footer, Header, PaginationWrapper } from '../Common'\nimport { Root, Body } from '../Common/styled-components'\nimport { useEventName } from '../providers/EventNameProvider'\nimport { useProfileUser } from '../providers/ProfileUserProvider'\nimport { ListActions, Filters } from './Actions'\nimport {\n  TitleActionsContainer,\n  Title,\n  FiltersContainer,\n  GridContainer,\n  GridWrapper,\n} from './styled-components'\nimport { ItemsGrid } from './Item'\nimport {\n  FilterTypes,\n  SortType,\n  CampaignsType,\n  CampaignsProps,\n  FilterType,\n} from './types'\n\nconst messages = defineMessages({\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n  campaignTitle: {\n    defaultMessage: 'Events',\n    description: 'Page title',\n  },\n})\n\nconst PAGE_SIZE = 8\n\nexport const Campaigns: VFC<CampaignsProps> = ({ onNavigate, isLastItem }) => {\n  const { formatMessage } = useIntl()\n  const { closeDrawer } = useDrawer()\n  const { app, platform } = useAppSource()\n  const isSourceOutlook = app === AppSource.Outlook\n\n  const [pageNumber, setPageNumber] = useState<number>(1)\n  const [totalItems, setTotalItems] = useState<number>(0)\n  const [searchTerm, setSearchTerm] = useState<string>('')\n  const [sort, setSort] = useState<SortType>('startDate')\n  const [filters, setFilters] = useState<FilterTypes>({\n    types: [],\n    statuses: ['Active'],\n    modes: ['Live'],\n    dateInterval: '',\n    cities: [],\n    categories: [],\n  })\n  const [campaignList, setCampaignList] = useState<CampaignsType>()\n\n  const eventType = useEventName().eventType\n  const user = useProfileUser()\n\n  useEffect(() => {\n    setPageNumber(1)\n  }, [eventType])\n\n  const state = useCampaigns({\n    userId: user.id,\n    eventType:\n      eventType === 'Emeet'\n        ? ['Emeet']\n        : filters.types.length\n        ? filters.types\n        : ['TradeShow', 'OngoingSales', 'StaffScheduling'],\n    onResolve: locationData => {\n      const { page } = locationData.meta\n\n      setTotalItems(page.total)\n      setCampaignList(locationData)\n    },\n  })\n  const { run: fetchCampaigns, isPending } = state\n\n  useEffect(() => {\n    fetchCampaigns(\n      {\n        ...filters,\n        // Omit archived events from the response by passing all statuses except Archived when no status filter is applied\n        ...(filters.statuses.length\n          ? {}\n          : { statuses: ['Active', 'Past', 'Requested'] }),\n\n        sort,\n      },\n      { pageNumber, pageSize: PAGE_SIZE, searchTerm: searchTerm.trim() }\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pageNumber, searchTerm, sort, JSON.stringify(filters)])\n\n  const { windowWidth } = useWindowSize()\n\n  const handleDone = () => {\n    isSourceOutlook ? sendMessage(Message.CLOSE_PROFILE) : closeDrawer()\n  }\n\n  const onChangeHandler = (filter: FilterType) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      ...filter,\n    }))\n    setPageNumber(1)\n  }\n\n  return (\n    <Root>\n      <Header />\n      <Body>\n        <Container>\n          <TitleActionsContainer>\n            <Title>\n              {eventType ? 'eMeet' : formatMessage(messages.campaignTitle)}\n            </Title>\n\n            <ListActions\n              onSearch={(e: any) => {\n                setSearchTerm(e.target.value)\n                setPageNumber(1)\n              }}\n              searchTerm={searchTerm}\n              onSort={(sortType: SortType) => {\n                setSort(sortType)\n                setPageNumber(1)\n              }}\n              sort={sort}\n            />\n          </TitleActionsContainer>\n          <FiltersContainer>\n            <Filters\n              filters={filters}\n              onChange={onChangeHandler}\n              eventType={eventType}\n            />\n          </FiltersContainer>\n\n          {isPending ? (\n            <EventsLoader layout={LayoutStyle.Grid} />\n          ) : (\n            campaignList && (\n              <GridContainer>\n                <GridWrapper $isFullMode={totalItems < 4 && windowWidth > 1660}>\n                  <ItemsGrid {...campaignList} eventType={eventType} />\n                </GridWrapper>\n              </GridContainer>\n            )\n          )}\n        </Container>\n        {totalItems && totalItems > PAGE_SIZE ? (\n          <PaginationWrapper>\n            <Pagination\n              currentPageNumber={pageNumber}\n              currentPageSize={PAGE_SIZE}\n              kind={KIND.light}\n              totalItems={totalItems}\n              onPageNumberChange={nextPage => {\n                setPageNumber(Math.min(Math.max(nextPage, 1), totalItems))\n              }}\n            />\n          </PaginationWrapper>\n        ) : null}\n        {isLastItem && platform === 'mobile' ? null : (\n          <Footer\n            hasOnlyNext\n            isLastItem={isLastItem}\n            onNext={onNavigate}\n            onDone={handleDone}\n            pendoPrefix=\"profile/campaigns\"\n          />\n        )}\n      </Body>\n    </Root>\n  )\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const Root = styled('div', ({ $theme: { mediaQuery } }) => ({\n  position: 'fixed',\n  top: '64px',\n  width: '100%',\n  zIndex: 1,\n  [mediaQuery.medium]: {\n    height: 'calc(100vh - 64px)',\n    width: 'auto',\n  },\n}))\n","import { useState, VFC, useMemo, useCallback, useEffect } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport {\n  Drawer,\n  MenuOptions as DrawerNavMenuOptions,\n} from 'ui-components/Drawer'\nimport { AppSource, useAppSource } from 'providers/AppSourceProvider'\nimport { useMe } from 'providers/MeProvider'\nimport { useLocation } from 'react-router-dom'\nimport { EventSubTypes, EventTypes as EventType } from 'gql/types/globalTypes'\nimport { EngagementTypes } from './EngagementTypes'\nimport { Profile } from './Profile'\nimport { Settings } from './Settings'\nimport { TopicsMapping } from './Topic'\nimport { Availability } from './Availability'\nimport { Integrations } from './Integrations'\nimport { Campaigns } from './Campaigns'\nimport { useProfileUser } from './providers/ProfileUserProvider'\nimport { EventNameProvider } from './providers/EventNameProvider'\nimport { useDirtyCheck } from './providers/ProfileSectionDirtyCheckProvider'\nimport { Root } from './styled-components'\nimport { useEventInfo } from './providers/EventInfoProvider'\nimport { useNavProvider } from './providers/NavProvider'\nimport { Keys, Role } from './types'\n\nconst menuItemLabels = defineMessages({\n  profile: {\n    defaultMessage: 'Profile',\n    description: 'Tab header',\n  },\n  topicMapped: {\n    defaultMessage: 'Topics',\n    description: 'Tab header',\n  },\n  engagementTypeMapped: {\n    defaultMessage: 'Engagement Types',\n    description: 'Tab header',\n  },\n  settings: {\n    defaultMessage: 'Settings',\n    description: 'Tab header',\n  },\n  availability: {\n    defaultMessage: 'Availability',\n    description: 'Tab header',\n  },\n  integrations: {\n    defaultMessage: 'Integrations',\n    description: 'Tab header',\n  },\n  events: {\n    defaultMessage: 'Event Instances',\n    description: 'Tab header',\n  },\n  campaignList: {\n    defaultMessage: 'Listing',\n    description: 'Tab header',\n  },\n  eMeet: {\n    defaultMessage: 'eMeet Instances',\n    description: 'Tab header',\n  },\n})\n\ninterface MenuItems {\n  labelKey: keyof typeof menuItemLabels\n  key: Keys\n  children?: MenuItems[]\n  eventType?: string\n}\n\ninterface MenuOptions extends DrawerNavMenuOptions {\n  children?: MenuOptions[]\n  key: Keys\n  eventType?: string\n}\n\nconst componentMapping: Record<Keys, VFC<any>> = {\n  profile: Profile,\n  integrations: Integrations,\n  availability: Availability,\n  campaigns: props => <Campaigns {...props} />,\n  campaignList: props => <Campaigns {...props} />,\n  engagementTypeMapped: props => <EngagementTypes {...props} />,\n  topic: props => <TopicsMapping {...props} />,\n  settings: props => <Settings {...props} />,\n  eMeet: props => <Campaigns {...props} />,\n  eMeetCampaignList: props => <Campaigns {...props} />,\n  eMeetEngagementTypeMapped: props => <EngagementTypes {...props} />,\n  eMeetTopicMapped: props => <TopicsMapping {...props} />,\n  eMeetSettings: props => <Settings {...props} />,\n}\n\nconst adminRoles: Set<Role> = new Set(['CSM', 'MM', 'JMM'])\n\nconst getMenuItems: (\n  isOutlook: boolean,\n  isExternal: boolean,\n  role: Role,\n  eventRole?: Role\n) => MenuItems[] = (isOutlook, isExternal, role, eventRole) => {\n  const location = new URLSearchParams(window.location.search).get('location')\n  const showInstanceList = role === 'CSM' || (role === 'MM' && !location)\n  const isNonAdmin = !adminRoles.has(eventRole || role)\n\n  return [\n    {\n      key: 'profile',\n      labelKey: 'profile',\n    },\n    ...(isExternal\n      ? []\n      : ([\n          {\n            key: 'integrations',\n            labelKey: 'integrations',\n          },\n          {\n            key: 'availability',\n            labelKey: 'availability',\n          },\n        ] as MenuItems[])),\n    {\n      key: 'campaigns',\n      labelKey: 'events',\n      ...(isOutlook\n        ? {}\n        : {\n            children: [\n              ...(showInstanceList\n                ? ([\n                    {\n                      key: 'campaignList',\n                      labelKey: 'campaignList',\n                    },\n                  ] as MenuItems[])\n                : []),\n              ...(isExternal || isNonAdmin\n                ? []\n                : ([\n                    {\n                      key: 'engagementTypeMapped',\n                      labelKey: 'engagementTypeMapped',\n                    },\n                    {\n                      key: 'topic',\n                      labelKey: 'topicMapped',\n                    },\n                  ] as MenuItems[])),\n\n              {\n                key: 'settings',\n                labelKey: 'settings',\n              },\n            ],\n          }),\n    },\n    {\n      key: 'eMeet',\n      labelKey: 'eMeet',\n      eventType: 'Emeet',\n      ...(isOutlook\n        ? {}\n        : {\n            children: [\n              ...(showInstanceList\n                ? ([\n                    {\n                      key: 'eMeetCampaignList',\n                      labelKey: 'campaignList',\n                      eventType: 'Emeet',\n                    },\n                  ] as MenuItems[])\n                : []),\n              ...(isExternal || isNonAdmin\n                ? []\n                : ([\n                    {\n                      key: 'eMeetEngagementTypeMapped',\n                      labelKey: 'engagementTypeMapped',\n                      eventType: 'Emeet',\n                    },\n                    {\n                      key: 'eMeetTopicMapped',\n                      labelKey: 'topicMapped',\n                      eventType: 'Emeet',\n                    },\n                  ] as MenuItems[])),\n              {\n                key: 'eMeetSettings',\n                labelKey: 'settings',\n                eventType: 'Emeet',\n              },\n            ],\n          }),\n    },\n  ]\n}\n\nexport const Nav: VFC = () => {\n  const { formatMessage } = useIntl()\n  const { data } = useEventInfo().eventTypes\n  const { app } = useAppSource()\n  const { isDirty, setShowConfirmation, onCloseConfirmation } = useDirtyCheck()\n  const isSourceOutlook = app === AppSource.Outlook\n  const {\n    attributes: { userType, canViewAvailability },\n  } = useProfileUser()\n  const { role, eventRole } = useMe().data.attributes\n\n  const setAvailabilityParam = new URLSearchParams(window.location.search).get(\n    'setAvailability'\n  )\n  const location = new URLSearchParams(useLocation().search).get('location')\n  const eventInfo = useEventInfo().location\n  const locationEventType = eventInfo?.subType\n  const hideInstanceType =\n    locationEventType === EventSubTypes.Emeet ? 'campaigns' : 'eMeet'\n\n  const showAvailability =\n    isSourceOutlook || (location && locationEventType) || canViewAvailability\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems(isSourceOutlook, userType === 'external', role, eventRole)\n        .filter(\n          item =>\n            isSourceOutlook ||\n            (location && locationEventType\n              ? item.key !== hideInstanceType\n              : (item.key !== 'eMeet' || data.includes(EventType.Emeet)) &&\n                (item.key !== 'campaigns' ||\n                  data.includes(EventType.TradeShow)))\n        )\n        .filter(item => item.key !== 'availability' || showAvailability),\n    [\n      data,\n      hideInstanceType,\n      role,\n      eventRole,\n      isSourceOutlook,\n      location,\n      locationEventType,\n      userType,\n      showAvailability,\n    ]\n  )\n\n  const getLandingMenu = () =>\n    showAvailability && setAvailabilityParam\n      ? 'availability'\n      : location && !isSourceOutlook\n      ? locationEventType === 'Emeet'\n        ? 'eMeetSettings'\n        : 'settings'\n      : menuItems[0].key\n\n  const {\n    state: { selectedKey = getLandingMenu() },\n    dispatch,\n  } = useNavProvider()\n\n  const setSelectedKey = (key: Keys) => {\n    dispatch({\n      type: 'setSelectedKey',\n      payload: key,\n    })\n  }\n\n  const [isLastItem, setIsLastItem] = useState(false)\n\n  const itemMapper = (isChild = false) => (item: MenuItems): MenuOptions => {\n    const { labelKey, children, key, ...rest } = item\n\n    return {\n      ...rest,\n      key,\n      label: formatMessage(menuItemLabels[labelKey]),\n      isActive: key === selectedKey,\n      ...(children ? { children: children.map(itemMapper(true)) } : {}),\n      ...(isChild ? { isChild } : {}),\n    }\n  }\n\n  const menuOptions = menuItems.map(itemMapper())\n\n  const findItem = useCallback(({ key }: MenuOptions) => key === selectedKey, [\n    selectedKey,\n  ])\n\n  const flattenedMenu = menuOptions.flatMap(\n    (item: MenuOptions) => item.children ?? [item]\n  )\n\n  useEffect(() => {\n    const currentIndex = flattenedMenu.findIndex(findItem)\n    setIsLastItem(currentIndex + 1 === flattenedMenu.length)\n  }, [findItem, flattenedMenu])\n\n  const navigateToNextItem = () => {\n    const currentIndex = flattenedMenu.findIndex(findItem)\n    currentIndex + 1 !== flattenedMenu.length &&\n      setSelectedKey(flattenedMenu[currentIndex + 1].key)\n  }\n\n  const eventType =\n    menuOptions.find(findItem)?.eventType ??\n    menuOptions\n      .filter(({ children }) => children)\n      .flatMap(({ children }) => children!)\n      .find(findItem)?.eventType\n\n  const SelectedItem =\n    componentMapping[\n      (\n        menuOptions.find(findItem) ??\n        menuOptions\n          .filter(({ children }) => children)\n          .flatMap(({ children }) => children!)\n          .find(findItem)\n      )?.key as Keys\n    ]\n\n  return (\n    <>\n      <Root>\n        <Drawer.Nav\n          options={menuOptions}\n          onOptionSelect={item => {\n            if (!item.isActive) {\n              if (isDirty) {\n                onCloseConfirmation(() => () => setSelectedKey(item.key))\n                setShowConfirmation(true)\n                if (selectedKey === 'availability') {\n                  dispatch({\n                    type: 'setTempSelectedKey',\n                    payload: item.key,\n                  })\n                }\n              } else {\n                setSelectedKey(item.key)\n              }\n            }\n          }}\n          selectedKey={selectedKey}\n        />\n      </Root>\n\n      <EventNameProvider eventType={eventType}>\n        <SelectedItem\n          key={selectedKey}\n          onNavigate={navigateToNextItem}\n          isLastItem={isLastItem}\n        />\n      </EventNameProvider>\n    </>\n  )\n}\n","import { ProfileUserProvider } from './providers/ProfileUserProvider'\nimport { EventInfoProvider } from './providers/EventInfoProvider'\nimport { ProfileSectionDirtyCheckProvider } from './providers/ProfileSectionDirtyCheckProvider'\nimport { ProfileDrawerWrapper } from './ProfileDrawerWrapper'\nimport { NavProvider } from './providers/NavProvider'\nimport { Nav } from './Nav'\n\nexport const ProfileDrawer = () => (\n  <NavProvider>\n    <ProfileSectionDirtyCheckProvider>\n      <ProfileUserProvider>\n        <ProfileDrawerWrapper>\n          {/* TODO: use Render Prop to drill data as prop */}\n          <EventInfoProvider>\n            <Nav />\n          </EventInfoProvider>\n        </ProfileDrawerWrapper>\n      </ProfileUserProvider>\n    </ProfileSectionDirtyCheckProvider>\n  </NavProvider>\n)\n\nexport default ProfileDrawer\n","import { SelectOverrides } from '@jifflenow/brightui/select'\nimport { TimePickerOverrides } from '@jifflenow/brightui/timepicker'\n\nconst selectOverrides: SelectOverrides = {\n  Root: {\n    style: ({ $theme: { typography } }) => ({\n      ...typography.Paragraph2,\n      minWidth: '98px',\n    }),\n  },\n  ControlContainer: {\n    style: ({ $theme: { colors }, $error }) => ({\n      borderLeftStyle: 'none',\n      borderRightStyle: 'none',\n      borderTopStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n      backgroundColor: $error ? colors.negative50 : colors.mono300,\n    }),\n  },\n  ValueContainer: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingTop: sizing.scale300,\n      paddingBottom: sizing.scale300,\n    }),\n  },\n  SingleValue: {\n    style: ({\n      $disabled,\n      $error,\n      $isFocused,\n      $isPseudoFocused,\n      $theme: { colors },\n    }) => {\n      const borderColor = $disabled\n        ? colors.inputBorder\n        : $error && $isFocused\n        ? colors.borderFocus\n        : $error\n        ? colors.inputBorderError\n        : $isFocused || $isPseudoFocused\n        ? colors.borderFocus\n        : ''\n\n      return {\n        display: 'flex',\n        alignItems: 'center',\n        ...(borderColor\n          ? {\n              backgroundColor: colors.primary50,\n              borderBottomColor: borderColor,\n              borderBottomStyle: 'solid',\n              borderBottomWidth: '1px',\n              display: 'flex',\n              alignItems: 'center',\n            }\n          : null),\n      }\n    },\n  },\n  Dropdown: {\n    style: ({ $theme: { colors } }) => ({\n      outline: 'none',\n      maxHeight: '144px',\n      border: `1px solid ${colors.mono600}`,\n    }),\n  },\n\n  DropdownContainer: {\n    style: {\n      outline: 'none',\n      width: '76px',\n    },\n  },\n  DropdownListItem: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: sizing.scale400,\n      paddingRight: sizing.scale300,\n    }),\n  },\n  Popover: {\n    props: {\n      overrides: {\n        Body: {\n          style: { zIndex: 1 },\n        },\n      },\n    },\n  },\n  InputContainer: {\n    style: ({ $theme: { sizing } }) => ({\n      display: 'flex',\n      flexBasis: sizing.scale0,\n      flexGrow: 1,\n    }),\n  },\n}\n\nexport const timePickerOverrides = ({\n  noResultsMsg,\n}: {\n  noResultsMsg: string\n}): TimePickerOverrides => ({\n  Select: {\n    props: {\n      overrides: selectOverrides,\n      noResultsMsg,\n    },\n  },\n})\n","import { styled } from '@jifflenow/brightui'\nimport { IconButton } from '@jifflenow/brightui/button'\n\nexport const Root = styled('div', {\n  display: 'flex',\n  flexDirection: 'row',\n})\n\nexport const Error = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.font300,\n    color: colors.negative,\n    marginTop: sizing.scale200,\n    width: '195px',\n  })\n)\n\nexport const StyledIconButton = styled(\n  IconButton,\n  ({ $theme: { sizing } }) => ({\n    marginLeft: sizing.scale0,\n    minWidth: '26px',\n  })\n)\n\nexport const ToText = styled<{ $hasError?: boolean }, 'div'>(\n  'div',\n  ({ $theme: { colors, typography, sizing }, $hasError }) => ({\n    ...typography.Paragraph2,\n    backgroundColor: $hasError ? colors.negative50 : colors.mono300,\n    paddingTop: sizing.scale300,\n    paddingBottom: sizing.scale300,\n  })\n)\n\nexport const MobileToText = styled('div', ({ $theme: { sizing } }) => ({\n  marginLeft: sizing.scale200,\n  marginRight: sizing.scale200,\n  display: 'flex',\n  alignItems: 'center',\n}))\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const getButtonOverrides = (\n  error: string | undefined\n): ButtonOverrides => ({\n  BaseButton: {\n    style: ({ $theme: { colors } }) => ({\n      backgroundColor: error ? colors.negative50 : colors.mono300,\n      borderLeftStyle: 'none',\n      borderTopStyle: 'none',\n      borderRightStyle: 'none',\n      borderBottomStyle: 'none',\n      borderTopRightRadius: 'none',\n      borderBottomRightRadius: 'none',\n      borderTopLeftRadius: 'none',\n      borderBottomLeftRadius: 'none',\n    }),\n  },\n})\n","import { VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { TimePicker } from '@jifflenow/brightui/timepicker'\nimport { Trash } from '@jifflenow/brightui/icon'\nimport { useMediaQuery } from 'utils/useMediaQuery'\nimport { RangeTimeSlotProps } from './types'\nimport { timePickerOverrides } from './timePickerOverrides'\nimport {\n  Root,\n  Error,\n  StyledIconButton,\n  ToText,\n  MobileToText,\n} from './styled-components'\nimport { getButtonOverrides } from './buttonOverrides'\n\nconst getJSDate = (date: string) => new Date(date)\n\nconst messages = defineMessages({\n  to: {\n    defaultMessage: 'to',\n    description: 'Separator text for start and end times',\n  },\n  noResultsMsg: {\n    defaultMessage: 'Invalid time',\n    description: 'Label text',\n  },\n})\n\nexport const RangeTimeSlot: VFC<RangeTimeSlotProps> = props => {\n  const { formatMessage } = useIntl()\n  const { start, end, error, onStartChange, onEndChange, onDelete } = props\n\n  const noResultsMsg = formatMessage(messages.noResultsMsg)\n\n  return (\n    <>\n      <Root>\n        <TimePicker\n          value={getJSDate(start)}\n          onChange={date => onStartChange(date)}\n          creatable\n          overrides={timePickerOverrides({ noResultsMsg })}\n          error={!!error}\n        />\n        {useMediaQuery('medium') ? (\n          <ToText $hasError={!!error}>{formatMessage(messages.to)}</ToText>\n        ) : (\n          <MobileToText>–</MobileToText>\n        )}\n\n        <TimePicker\n          value={getJSDate(end)}\n          onChange={date => onEndChange(date)}\n          creatable\n          overrides={timePickerOverrides({ noResultsMsg })}\n          error={!!error}\n        />\n        <StyledIconButton\n          size={18}\n          overrides={getButtonOverrides(error)}\n          onClick={() => onDelete()}\n        >\n          <Trash />\n        </StyledIconButton>\n      </Root>\n      {error ? <Error>{error}</Error> : null}\n    </>\n  )\n}\n","import { defineMessages } from 'react-intl'\nimport { RolesDisplayNames } from 'gql/types/globalTypes'\n\nexport const roles = defineMessages<RolesDisplayNames>({\n  CSM: {\n    defaultMessage: 'CSM',\n    description: 'Field label',\n  },\n  MM: {\n    defaultMessage: 'Meeting Manager',\n    description: 'Field label',\n  },\n  JMM: {\n    defaultMessage: 'Junior MM',\n    description: 'Field label',\n  },\n  EA: {\n    defaultMessage: 'Executive Admin',\n    description: 'Field label',\n  },\n  AM: { defaultMessage: 'Requestor', description: 'Field label' },\n  EX: { defaultMessage: 'Attendee', description: 'Field label' },\n  Partner: {\n    defaultMessage: 'Partner',\n    description: 'Field label',\n  },\n  EWSIntegration: {\n    defaultMessage: 'EWS Integration',\n    description: 'Field label',\n  },\n  Integration: {\n    defaultMessage: 'Integration',\n    description: 'Field label',\n  },\n  SfdcIntegration: {\n    defaultMessage: 'Salesforce Integration',\n    description: 'Field label',\n  },\n  ET: {\n    defaultMessage: 'External Attendee',\n    description: 'Field label',\n  },\n  SystemUser: {\n    defaultMessage: 'System User',\n    description: 'Field label',\n  },\n})\n\nexport const commonMessages = defineMessages({\n  allMyAttendees: {\n    defaultMessage: 'All Roles',\n    description: 'Option label',\n  },\n})\n\nexport const weekDays = defineMessages({\n  Monday: {\n    defaultMessage: 'Monday',\n    description: 'Week day name',\n  },\n  Tuesday: {\n    defaultMessage: 'Tuesday',\n    description: 'Week day name',\n  },\n  Wednesday: {\n    defaultMessage: 'Wednesday',\n    description: 'Week day name',\n  },\n  Thursday: {\n    defaultMessage: 'Thursday',\n    description: 'Week day name',\n  },\n  Friday: {\n    defaultMessage: 'Friday',\n    description: 'Week day name',\n  },\n  Saturday: {\n    defaultMessage: 'Saturday',\n    description: 'Week day name',\n  },\n  Sunday: {\n    defaultMessage: 'Sunday',\n    description: 'Week day name',\n  },\n})\n","import { useState, useEffect } from 'react'\n\nexport const useBeforeUnload = () => {\n  const [showBeforeUnloadPopup, setShowBeforeUnloadPopup] = useState(false)\n\n  useEffect(() => {\n    const handler = (event: BeforeUnloadEvent) => {\n      event.preventDefault()\n      event.returnValue = ''\n    }\n\n    if (showBeforeUnloadPopup) {\n      window.addEventListener('beforeunload', handler)\n    } else {\n      window.removeEventListener('beforeunload', handler)\n    }\n\n    return () => {\n      window.removeEventListener('beforeunload', handler)\n    }\n  }, [showBeforeUnloadPopup])\n\n  return setShowBeforeUnloadPopup\n}\n","import { useMemo } from 'react'\n\nexport const usePageSizes = (\n  totalItems: number,\n  PAGE_SIZES = [10, 20, 50, 100]\n) => {\n  const pageSizes = useMemo(() => {\n    const pageSizeIndex = PAGE_SIZES.findIndex(size => size >= totalItems)\n\n    return PAGE_SIZES.slice(\n      0,\n      (pageSizeIndex === -1 ? PAGE_SIZES.length - 1 : pageSizeIndex) + 1\n    )\n  }, [PAGE_SIZES, totalItems])\n\n  return pageSizes\n}\n","import { useEffect, useState } from 'react'\nimport {\n  useCKEditor as useCKEditorBase,\n  CKEditorEventAction,\n} from 'ckeditor4-react'\nimport merge from 'deepmerge'\nimport { useStyletron } from '@jifflenow/brightui'\n\nconst editorUrl = `${process.env.REACT_APP_CKEDITOR_URL}?t=MAUD`\n\nconst wordCountDefaults = {\n  showParagraphs: false,\n  showWordCount: false,\n  showCharCount: true,\n  countSpacesAsChars: true,\n  hardLimit: true,\n}\n\nconst config = {\n  toolbarGroups: [\n    { name: 'basicstyles', groups: ['basicstyles'] },\n    { name: 'styles', groups: ['styles'] },\n    { name: 'links', groups: ['links'] },\n    { name: 'clipboard', groups: ['undo'] },\n    { name: 'forms', groups: ['list'] },\n  ],\n  extraPlugins: 'editorplaceholder, wordcount',\n  removeButtons:\n    'Subscript,Superscript,Anchor,PasteFromWord,PasteText,Paste,Copy,Cut,Styles,Table',\n  format_tags: 'p;h1;h2;h3;pre',\n  removeDialogTabs: 'image:advanced;link:advanced',\n  linkShowTargetTab: false,\n  linkShowAdvancedTab: false,\n  dialog_backgroundCoverColor: 'black',\n  skin: 'bright',\n  delayIfDetached: true,\n}\n\nconst showTopBar = (editorId, isShowTopBar) => {\n  const editorTop = document.getElementById(editorId + '_top')\n  if (editorTop) {\n    editorTop.style.display = isShowTopBar ? 'block' : 'none'\n  }\n}\n\nexport const useCKEditor = props => {\n  const {\n    placeholder,\n    input: { value, onChange, onFocus, onBlur },\n    meta,\n    showTopBarOnFocus: isShowTopBarOnFocus,\n    config: customConfig,\n    maxLength,\n  } = props\n\n  const [, { colors }] = useStyletron()\n\n  const [element, setElement] = useState()\n  const [showLoader, setShowLoader] = useState(true)\n\n  const {\n    editor,\n    status: editorStatus,\n    error: ckeditorError,\n  } = useCKEditorBase({\n    editorUrl,\n    config: {\n      ...merge(config, customConfig),\n      editorplaceholder: placeholder,\n      wordcount: {\n        ...wordCountDefaults,\n        ...(maxLength ? { maxCharCount: maxLength } : null),\n      },\n    },\n    debug: process.env.NODE_ENV === 'development',\n    initContent: value,\n    dispatchEvent: ({ type, payload }) => {\n      const editorId = payload.editor.id\n      if (type === CKEditorEventAction.change) {\n        onChange(payload.editor.getData())\n      }\n      if (type === CKEditorEventAction.focus) {\n        onFocus()\n        isShowTopBarOnFocus && showTopBar(editorId, true)\n      }\n      if (type === CKEditorEventAction.blur) {\n        onBlur()\n        isShowTopBarOnFocus && showTopBar(editorId, false)\n      }\n    },\n    element,\n    subscribeTo: ['change', 'focus', 'blur'],\n  })\n\n  useEffect(() => {\n    const style = {\n      'border-color':\n        meta.touched && !!meta.error\n          ? colors.negative\n          : meta.active\n          ? colors.primary\n          : colors.mono600,\n      'border-style': 'solid',\n      'border-width': '1px',\n      'border-radius': '4px',\n      overflow: 'hidden',\n    }\n    const canSetStyles =\n      editor && (editorStatus === 'loaded' || editorStatus === 'ready')\n\n    if (canSetStyles) {\n      editor.container.setStyles(style)\n    }\n\n    return () => {\n      if (canSetStyles) {\n        Object.keys(style).forEach(styleName => {\n          editor.container.removeStyle(styleName)\n        })\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor, editorStatus, meta])\n\n  useEffect(() => {\n    if (editorStatus === 'ready' || editorStatus === 'loaded') {\n      setShowLoader(false)\n      editor.setData(value)\n      if (isShowTopBarOnFocus) {\n        showTopBar(editor.id, false)\n      }\n\n      const editorContainer = editor.container.$\n      editorContainer\n        .querySelector('.cke_bottom')\n        .setAttribute(\n          'style',\n          'border-top: none !important; background: none !important; padding: 0px 8px 2px 0px !important;'\n        )\n      editorContainer.querySelector(\n        '.cke_bottom .cke_wordcount'\n      ).style.display = 'none'\n\n      const ckeResizeElement = editorContainer.querySelector(\n        '.cke_bottom .cke_resizer'\n      )\n      if (ckeResizeElement) {\n        ckeResizeElement.setAttribute('style', 'margin-top: 0')\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editorStatus])\n\n  const editorStyle =\n    editorStatus !== 'ready' && editorStatus !== 'loaded'\n      ? { visibility: 'hidden' }\n      : undefined\n\n  return {\n    editor,\n    showLoader,\n    setElement,\n    editorStyle,\n    ckeditorError,\n  }\n}\n"],"names":["FormControl","styled","Control","marginBottom","$theme","sizing","scale700","StyledHeader","typography","breakpoints","$isHidden","marginTop","display","scale800","maxWidth","font350","fontWeight","medium","scale600","flexBasis","Hr","colors","borderBottomColor","mono400","borderBottomStyle","borderBottomWidth","StyledPageBreak","font650","font550","FieldTypes","Context","createContext","undefined","ProfileUserProvider","children","id","useParams","userId","useFetchUser","isPending","isLoading","error","refetch","data","value","useMemo","ErrorPage","onButtonClick","Spinner","Provider","useProfileUser","context","useContext","LocationFetcher","onCompleted","useEventTypes","loading","locationId","URLSearchParams","useLocation","search","get","useEventLocationQuery","variables","uuid","skip","locationLoading","location","roles","locationError","locationRefetch","useEffect","eventTypes","noBackground","EventInfoProvider","useState","setLocation","useEventInfo","initialState","selectedKey","tempSelectedKey","reducer","state","action","type","payload","dispatch","NavProvider","useReducer","useNavProvider","Error","messages","defineMessages","confirmationHeader","defaultMessage","confirmationMessage","cancelButtonLabel","successButtonLabel","isDirty","setIsDirty","setShowConfirmation","onCloseConfirmation","onSuccessConfirmation","ProfileSectionDirtyCheckProvider","formatMessage","useIntl","showConfirmation","onCancel","setOnCancel","onSuccess","setOnSuccess","handleSuccess","ConfirmationDialog","closeable","onClose","heading","message","cancelLabel","successLabel","useDirtyCheck","drawerOverrides","DrawerContainer","style","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","ProfileDrawerWrapper","history","useHistory","isWideScale","useAppSource","app","AppSource","Drawer","size","useMediaQuery","isOpen","length","replace","goBack","animate","overrides","Root","flexDirection","height","Body","mediaQuery","flex","overflowY","paddingLeft","Container","width","paddingRight","paddingTop","paddingBottom","scale900","scale850","HeaderContainer","withStyle","DrawerHeaderContainer","boxShadow","$hasMenu","flexShrink","FooterContainer","DrawerFooterContainer","justifyContent","PaginationWrapper","scale400","backgroundColor","mono100","HeaderTitle","HeadingSmall","minWidth","HeadingMedium","CheckboxControl","color","mono700","PopoverMenuItem","scale500","DesktopViewAction","alignItems","MobileViewAction","marginLeft","FooterButton","Button","marginRight","small","Title","Subtitle1","scale200","NoItemsRoot","flexGrow","NoItemsText","Paragraph1","mono800","EventSelectWrapper","$location","TitleContainer","FilterContainer","SearchContainer","StatusText","textTransform","EventSelectLabelWrapper","EventDatesLabelWrapper","Date","StatusWrapper","EventName","mono900","textOverflow","overflow","whiteSpace","StyledText","font400","EventDates","Option","CampaignProvider","campaign","setCampaign","useCampaign","campaignFilterOverride","DropdownContainer","Popover","props","placement","PLACEMENT","optionsMapper","label","displayName","mode","currentDate","DateTime","CampaignFilter","setDefaultValue","eventType","options","setOptions","defaultLocation","useUserMappedCampaigns","dateInterval","toISODate","plus","years","onResolve","campaigns","map","attributes","systemName","rest","eventName","find","fetchCampaigns","run","searchInput","clearable","onCloseResetsInput","onBlurResetsInput","placeholder","getOptionLabel","option","filterOptionLabel","onChange","toFilterTypeFormat","typeOptions","EventTypeFilter","types","newTypes","filterOverrides","filterOptions","filter","i","EventTypeAndLocationFilter","setEventTypes","modalLabels","modalHeader","modalMessage","Footer","isDisabled","hasOnlyNext","hasForm","isLastItem","onNext","onDone","onSave","onDiscard","onSaveAndNext","pendoPrefix","eMeetProfileSetupReminded","useMe","meta","disabled","onClick","kind","KIND","success","genericError","portalClient","usePortalV2Client","queryClient","useQueryClient","isActive","active","setLoading","showWarning","setShowWarning","handleClose","toggleActive","patchUserProfile","invalidateQueries","showSuccessToast","HttpError","response","status","errorMessage","errors","title","showErrorToast","checkmarkType","checked","ariaLabel","popoverOverrides","borders","white","borderWidth","radius100","borderStyle","borderColor","mono200","zIndex","Header","closeDrawer","useDrawer","loggedInUserId","canMarkUsersActive","privileges","profileUserId","firstName","lastName","myProfile","content","returnFocus","autoFocus","TableHeaderRoot","ColumnTitle","ParagraphMedium","ColumnCheckbox","intermediate","handleSelectAll","handleDeselectAll","showCheckbox","columnName","isIndeterminate","target","RowCheckbox","rowId","rowName","rowChecked","handleSelectItem","scale1400","position","bottom","left","scale300","LoadingListCard","useStyletron","theme","contentLoaderOptions","viewBox","speed","primaryColor","secondaryColor","mono300","y","rx","ry","ListLoader","forwardRef","_","ref","useImperativeHandle","getReactContainerStyle","alignSelf","flexGridColumnCount","Block","scale100","Array","from","EmptyMessageRoot","EmptyMessageText","ButtonWrapper","scale1000","EmptyMessage","onAddNew","emptyMessage","addNewButtonMessage","showAddButton","Search","onSearchChange","IconAfter","SearchIcon","e","EventNameProvider","useEventName","subTypeToEventTypeMapping","Emeet","Jem","Jfx","Jss","Jbc","CampaignFilterV2","locations","selectedLocations","optionsMapping","TradeShow","Ebc","OngoingSales","StaffScheduling","formatOption","name","EventTypesFilterV2","selectedEventTypes","values","TabsRoot","MappingsPageRoot","MappingsSettingContainer","right","PageContainer","BodyContainer","NoLocationsMessageRoot","NoLocationsMessage","BasePaginationWrapper","EventSelectLabel","filterStatus","startDate","endDate","AutoTooltip","showArrow","formatDateRange","formatToStartOfTheDay","useDirtyCheckDialog","saveSuccess","EngagementTypesFooter","user","onNavigate","selectedLocation","search_term","unload","useBeforeUnload","location_uuid","mapped","unmapped","modifiedMappings","Map","mappedItems","requestAll","participateAll","getPayload","mappings","mappingEntityUuid","canRequest","canParticipate","push","mappingAttributes","selectAll","useUserMappingsMutation","path","mappingType","query","mutateAsync","handleSave","resetQueries","handleSaveAndNext","tabsOverrides","TabList","TabHighlight","TabBorder","tabOverrides","TabPanel","Name","EmptyHeaderLabel","aria","requestMeeting","CanRequest","canEdit","participateInMeeting","CanParticipate","requestMeetingLabel","RequestAllCheckbox","modifiedRequestMappingCount","EmptyRequestAll","RequestAll","isEmpty","participateMeetingLabel","ParticipateAllCheckbox","modifiedParticipateMappingCount","EmptyParticipateAll","ParticipateAll","mappingTableOverrides","TableHeadCell","TableBodyCell","addButtonOverrides","BaseButton","emptyMessageWithoutAddMapped","emptyMessageWithoutAddUnmapped","addEngagementTypeLabel","isNoEngagementType","activeTab","loggedInRole","role","adminRoles","csmAndMmRoles","MappingTable","items","companyRole","eventRole","selectedUserId","profileUserRole","includes","isCsmOrMm","initialItems","mappedCount","unMappedCount","requestCount","participateCount","key","initialItem","item","row","header","handleCanRequestChange","handleCanParticipateChange","PaginationContainer","patch","useMutation","engagementMappingPreferencesMutationFn","mutate","pageSizes","usePageSizes","totalItems","currentPageNumber","pageNumber","currentPageSize","pageSize","onPageNumberChange","onPageSizeChange","transformOption","relationships","engagement","mapItem","MappingsPage","setPageNumber","setPageSize","useQuery","getEngagementPreferencesQueryFn","onError","useUserMappingsQuery","page","number","enabled","SettingsCount","ParagraphXSmall","primary","borderRadius","ArrowContainer","ContentContainer","border","mono600","SettingTypeContainer","SettingsLabel","SettingsHeader","names","defaultCanManage","defaultCanParticipate","defaultCanRequest","ToggleSettings","DefaultMappings","useUserMappingsSettingsQuery","setting","useUserMappingsSettingsMutation","isMutating","handleChange","Content","mappedTabLabel","unMappedTabLabel","noCampaignsListed","Set","Tabs","setActiveTab","activeKey","count","getTabOverrides","has","DEFAULT_VALUE","activeTabState","mappedItemsCopy","delete","set","initialValue","EngagementTypesView","setSelectedEventTypes","setSelectedLocations","setSearch","window","searchText","useDebounce","EngagementTypesLocationView","subSystem","useEventUser","isError","NoEngagements","EngagementTypes","subType","eventTypesLoading","eventTypesError","refetchEventTypes","useUserMappedCampaignsV2","locationsLoading","locationsError","refetchLocations","useEventTypeAndLocation","restProps","resolveFieldRules","rules","conditions","conditionResult","show","optionsToShow","forEach","condition","operator","valuesToCompare","valuesToDisplay","roleNamesToCheck","valueMatched","processRulesOnFieldsMount","fields","source","split","useRules","formFields","useFormState","initialFields","customFields","setFields","useForm","change","getFieldState","sourceBasedRulesObject","filteredFields","field","filterFieldsWithRules","reduce","prev","curr","handleRules","sourceName","rulesList","rulesActionObject","targetFieldsActionHash","Object","keys","flatMap","getNestedDependentFields","allFields","getRulesActionObject","fieldsToShow","findIndex","TextField","Field","validations","Validation","parse","render","input","touched","TextareaLoader","css","className","maxHeight","TextareaError","ErrorIcon","reload","ckeditorConfig","resize_enabled","language","TextArea","onFocus","onBlur","useCKEditor","config","readOnly","showLoader","setElement","editorStyle","ckeditorError","InputType","fieldTypesMappings","TEXTFIELD","NUMBERFIELD","DROPDOWN","creatable","helpText","format","caption","required","searchable","backspaceClearsInputValue","TEXTAREA","CHECKBOX","isChecked","setIsChecked","dangerouslySetInnerHTML","__html","MULTISELECT_DROPDOWN","val","multi","HEADER","hidden","PAGE_BREAK","CustomFormFields","acc","indexOf","standardFields","filteredCustomFields","index","FormField","fieldType","email","Boolean","Message","standardFieldsToDisplay","inputFieldTypes","textfield","TEXT","numberfield","NUMBER","EMAIL","getCustomFieldName","transformField","fieldName","fieldInfo","isACustomField","mandatory","rules_with_values","rulesWithValues","widget","values_to_display","values_to_check","role_names_to_check","ConfirmationMessage","Note","Paragraph2","black","buttonOverrides","modalOverrides","RoleChangeDialog","pendoName","showMessage","showNote","SIZE","useEventType","BaseBody","BaseContainer","TitleRoot","StyledFormControl","FieldLabel","ToggleRoot","$error","scale650","ToggleWrapper","LastSyncedTime","CISConfigContainer","LastSyncedTimeContainer","MOAFieldRoot","MOAFieldLabel","MOAFieldHelpText","Caption1","eventTypeMapping","EventRoleField","initial","dropdownOptions","setIsOpen","setShowMessage","mappedTo","RoleField","clientDisplayName","roleLabel","labelForEA","labelForEX","labelForEventLevelEA","labelForEventLevelEX","managedAttendeesHelpText","executiveAdminsHelpText","none","valueMapper","MappedUserField","setSearchText","isUserEA","useMappableUsers","searchUsersByRole","users","onReject","searchUsers","cancel","optionsList","trim","onInputChange","noResultsMsg","cisEnabled","irpEnabled","doubleBookingEnabled","showOnlyForMM","showInMeeting","endorsement","partialParticipationInMeeting","ToggleField","submitError","iconButtonOverrides","borderLeftStyle","borderTopStyle","borderRightStyle","moaOverrides","moaPlaceholder","MOASelect","fieldValue","restInput","in_person_attendance_custom_label","virtual_attendance_custom_label","setValue","handleOnChange","ModeOfAttendance","TagCloudField","tag_cloud_uuid","per_page","current_location_uuid","getTagsList","tagsList","isSuccess","tags","tagCloudUuid","tag","TagCloud","getTagCloudList","tagCloudList","tag_cloud_list","taskManager","ActivityManager","LoadingDropdownRow","LoadingToggleRow","SettingsLoader","MappedEngagementType","canRequestList","canParticiateList","mappedTopic","topic","MappedTopic","mappedTopicList","canManageSelfServeSettings","CanManageSettings","settings","canManageSettings","locationSpecificDetails","isSelfProfile","Checkbox","useCallback","RefetchIcon","fillRule","clipRule","d","fill","MappedCISUsersField","mappedCISUserEmails","fetchFreeBusy","fetchFreeBusyAriaLabel","CisSyncSetting","cisDetails","onHandleFetchFreeBusy","userMappedEmails","lastSyncTime","toFormat","fetchFreeBusySuccess","internalEditableRoles","externalEditableRoles","jmmEditableRoles","focusDecorator","createFocusDecorator","Form","handleSubmit","dirty","submitSucceeded","onSubmit","noValidate","subscription","submitting","validating","valid","form","reset","getFormInitialValues","arg","cisEmail","modeOfAttendance","tagClouds","SettingsForm","client","useHttpClient","isSourceWeb","userType","loggedInCompanyRole","userSettings","setUserSettings","showSpinner","setShowSpinner","eventConfig","setEventConfigs","formInitialValues","roleFiledDecorator","createDecorator","updates","allValues","prevValues","useRolesQuery","useUsersSettings","loggedInUserEventSettings","isLoggedInUserSettingsLoading","fetchLoggedInUserSettings","loggedInEventRole","isEventRoleAdmin","isRoleFieldDisabled","editableRoles","filterRoles","isSettingsLoading","fetchSettings","useEventConfigQuery","headers","notifyOnNetworkStatusChange","bulkFetchLocationConfigsByName","configName","configValue","isConfigLoading","refetchEventConfig","asArray","entries","filteredValue","ar","rm","userPayload","putUserSettings","FORM_ERROR","code","handleFetchFreeBusy","fetchFreeBusyCISConfig","args","result","canEditSsFields","decorators","initialValues","renderProps","enable_mode_of_attendance","UserSettings","Settings","ButtonsContainer","ConsentControl","ParagraphSmall","Consents","consent","optOut","FormControlForURL","EmailControl","RootContainer","InviteSentTime","VerifyButton","top","CustomFieldsWrapper","CanManageSettingsFormControl","ToggleHelpText","LabelSmall","contentSecondary","PicContainer","UploadRoot","HiddenInput","avatarOverrides","Initials","font1150","modalButtonOverrides","IconButtonOverrides","borderTopWidth","borderLeftWidth","borderRightWidth","borderLeftColor","borderRightColor","borderTopColor","changeButtonOverrides","Weekdays","sendMessage","Office","ui","messageParent","ImageDelete","ImageDeleteButton","DeleteAvatar","revertAvatar","deleteUserAvatar","useAvatarDelete","close","handleDelete","RELOAD_ME","ModalBody","BaseModalBody","CropperContainer","BaseFormControl","transformConsent","field_name","optionLabel","AvatarConsentField","UploadAvatar","consentName","image","x","croppedAreaPixels","setCroppedAreaPixels","isUploadingForSelf","useAvatarUpload","avatarUploadInProgress","consents","custom_consents","avatar_upload_consent_message","getCroppedImg","URL","createObjectURL","OutputType","avatar","contentType","fileName","consentField","console","imageUrl","Cropper","cropShape","onCropChange","EditAvatar","usePrivacyMessages","allowedExtensions","Avatar","setImage","userAvatar","setUserAvatar","fileInput","useRef","showInvalidImageError","src","accept","multiple","current","test","files","click","personalLinkLabel","userNameNotAvailableMessage","splitPersonalLink","link","str","lastIndexOf","slice","PersonalLinkEdit","personalLink","userUuid","validatePersonalLink","useValidatePersonalLinkFetcher","prefix","previousTokenValue","token","validateUrl","fn","lastArg","lastResult","simpleMemoize","personalLinkValid","validate","asyncValidatorReducer","autoComplete","getPrefixedInputOverride","CanCreateInstance","currentTarget","linkButtonOverrides","padding","scale0","outline","verify","resendVerificationLink","inviteSentTime","PrimaryEmail","usePortalV1Client","loggedInUsersId","setShowLoader","verified","inviteLastSent","isSomeoneElsesProfile","showVerifyButton","setShowVerifyButton","handleVerify","putVerifyUser","emails","dateTime","SecondaryEmail","newEmail","setNewEmail","useField","useValidateDomain","isAliasEmail","newValue","isCreatable","StandardFormFields","fieldsList","canManageHelpText","loggedInUserRole","isOwnProfile","EditForm","formRenderProps","isSourceOutlook","selfConsentMessage","optOutMessage","canRequestNewInstance","submit","mappedUsers","initialRole","isMyProfile","roleHelpText","EditProfile","currentUser","isViewingMyOwnOrAssumedProfile","useRolesLazyQuery","fetchRoles","isAdminRole","roleField","standardFormFields","personalUrlToken","roleFieldDecorator","prevRole","restValues","ProfileTitle","$colIndex","tableOverrides","scale750","TableHead","TableBodyRow","tagOverrides","Text","editButtonOverride","copyButtonOverrides","AvatarImg","AvatarRoot","flexWrap","PersonalLinkRoot","PersonalLinkLabel","PersonalLink","RichTextWrapper","CopyRoot","CopyButtonRoot","altAvatar","editButtonLabel","copiedLabel","createInstance","No","Yes","canManageSettingsLabel","customInputFields","EditButton","ViewProfile","onEditClick","relations","userInfo","isArray","variant","VARIANT","canCreateEvent","alt","CopyToClipboard","text","columns","horizontalScrollWidth","divider","DIVIDER","ProfileLoader","loaderOptions","cx","cy","r","stroke","strokeWidth","useTopicsMappedSelection","selectAllInfo","setSelectAllInfo","editedIDs","setEditedIDs","editedItems","setEditedItems","toggleSelectAll","all","editedItemsCopy","toggleSelectItem","selectionValueCopy","add","isAllSelected","isItemSelected","selections","isMappedUuidListEmpty","mappedUuidList","clearAll","MappedTopicsSelectionsProvider","useSelection","useUnMappedTopicsMappedSelection","isUnMappedUuidListEmpty","unMappedUuidList","UnMappedTopicsSelectionsProvider","InputControl","TitleSearchContainer","TopicDisableMessageRoot","DisableMessageText","font300","RowLabel","MappingTableOverrides","IsAnExpert","EmptyMessageMapped","EmptyMessageUnMapped","AddNewButtonMessage","mapToExpert","MappingsList","isSelectAll","hasSomeItemSelected","mappingsCount","listType","allSelectedIsAnExpert","isListEmpty","noMappingsInSystem","unMapped","isAdmin","href","mapTo","PAGE_SIZE","topicsPreferencesMutationFn","Mapped","setTotalCount","searchTerm","refresh","setDefaultSelections","mappingTable","setMappingsTable","setTotalItems","isMounted","clearAllUnMapped","useUnMappedSelection","instanceType","getTopicsPreferencesQueryFn","useUserEngagementsMapping","userEngagementsMapping","obj","fetchUserEngagementsMapping","locationUuid","providerSelections","selectionsWhenIsAllSelectedUndefined","some","selectionWhenIsAllSelectedPresent","UnMapped","clearAllMapped","useMappedSelection","Unmapped","disableMessageError","TopicsList","currentLocationUuid","itemsCount","setItemsCount","configs","setConfigs","eventConfigLoader","fetchPolicy","locationLoader","getEventLocation","TabsTitle","enable_topic","eventSubType","EventSubTypes","supportEmail","TopicsType","doRefresh","setShowLoading","defaultSelections","setMappedPageNumber","mappedAllSelected","mappedTopicSelections","setUnMappedPageNumber","unmappedAllSelected","unMappedTopicSelections","mappedSelectionData","selectionMapper","selection","unMappedSelectionData","putUserEngagementsMapping","TopicsMapping","SelectControl","TimeZoneWrapper","minHeight","font250","selectOverrides","popperOptions","modifiers","preventOverflow","boundariesElement","selectTimezone","SelectCity","city","setCity","useEventCities","searchCityName","description","placeId","useTimeZoneFromCity","cityTimeZone","setCityTimeZone","useEventCityTimeZone","timeZoneId","setZone","offsetNameShort","offsetNameLong","timeZoneName","fetchCityTimeZone","onCityChange","successTimeZoneChange","failureTimeZoneChange","SelectCityModal","timeZone","setTimeZone","modalProps","Promise","resolve","then","catch","TimeZoneChange","canChangeTimeZone","EventDatesLabel","referenceISODateString","referenceISODate","referenceDate","getJSDate","date","toJSDate","getUTCDateFromMinutes","toUTC","toISO","getFullMinutes","minute","hour","getUTCFullMinutes","getDateTimeInTimeZone","zone","keepLocalTime","getUTCDateTimeFromTimeZone","getUTCStartDate","getPlusDate","getPlusISOStringDate","getStartOfDate","startOf","getDateFromJSDate","getISODateStringFromJSDate","getFormattedTimeFromDate","diffInISODates","next","diff","getISOTimeFromDate","toISOTime","getISOTimeFromJSDate","getISODateFromWeekDayAndTime","weekDay","time","day","getEndDateOfDay","getEndDateOfDayInUTC","getRefISODateWithTime","baseAvailabilityHash","mergeContinuousTimeRanges","timeRanges","sort","a","b","start","prevRange","pop","end","getAvailabilityInTimeZone","availability","reducedAvailability","dayIndex","days","minutes","range","startDateTime","endDateTime","accRanges","weekday","Number","getAvailabilityInUTC","startInMinutes","endInMinutes","AvailabilityProvider","daysToIdMappings","setDaysToIdMappings","UTCAvailability","setUTCAvailability","setAvailability","defaultAvailability","setDefaultAvailability","shouldUpdateUTCAvailability","JSON","stringify","resetAvailability","useAvailabilities","useUserAvailability","getAvailabilityInTZ","useAvailability","scale1600","CancelButton","handleDiscard","SaveButton","clearTempActiveKey","deleteAllSlots","check","overlapError","endTimeLessThanStartTime","addNewSlot","getStartOfDay","getNextSlot","prevEndTime","newStartDate","newEndDate","checkForOverlaps","endOf","currentRangeIndex","endTimeToCompare","hasOverlap","rangeStart","rangeEnd","rangeEndToCompare","deleteSlot","indexToDelete","WeekDayRoot","$isEmpty","borderBottom","WeekDayTitle","WeekDayTitleMobile","TitleActionsContainer","ActionBar","ActionsContainer","SlotsRoot","TimeSlotWrapper","CopySlotsRoot","DaySlotWrapper","AvailabilityDay","dayAvailability","onCopySlots","lastSlotEndsAt12AM","getStartOfDateFromWeekDay","checkForOverlapsUtility","isSlotsEmpty","weekDays","RangeTimeSlot","onDelete","deleteSlotUtility","onStartChange","indexToUpdate","finalizeEndTime","toMillis","idx","editSlotStartTime","onEndChange","is12AM","toISOString","editSlotEndTime","addNewSlotUtitility","deleteAllSlotsUtility","CopySlotsModalBodyWrapper","CopyDaySlotsTo","setChecked","addCopyDestinationDays","CopyAvailability","sourceWeekDay","availabilityInTZ","setAvailabilityInTZ","targetWeekDays","setTargetWeekDays","weekDayNames","Availabilities","copySource","setCopySource","hasError","handleCopySlots","availabilityUTC","updateUserAvailability","NoException","SelectEventRoot","SelectEventWrapper","SelectEventLabel","clearButtonOverrides","borderLeft","StyledModalBody","borderTop","AddExceptionRoot","CalendarRoot","UnavailableText","HeadingXSmall","HeaderRoot","TitleBar","HintText","addSlots","unavailable","hintText","getZoneAdjustedJSDate","ExceptionModalBody","startDateISO","endDateISO","eventTimeZone","isEvent","calendarDates","timeSlots","setTimeSlots","setCalendarDates","isLiveEvent","Interval","contains","getZoneAdjustedEventDates","initialCalendarRange","calendarRange","setCalendarRange","timeSlot","dates","datesToExtract","currentTimeSlot","currentSlotIndex","curStart","curEnd","changeSlotEndTime","slot","slotIndex","getISODateString","selectRange","allowPartialRange","minDate","maxDate","exceptions","available","preferredStartTime","preferredStartDT","startEnhancer","PlusCircleOutlined","valueOf","changeSlotStartTime","addException","editException","addExceptionEvent","editExceptionEvent","selectDateLabel","clear","AddEditException","setExceptions","listedExceptionEditIndex","listedExceptions","isEditingException","unavailableSlots","exception","unavailableSlotsAcc","getAvailableSlots","isSlotEndingAt12AM","overlappedUnavailableSlot","getUnavailableSlots","unStart","unEnd","hasOverlapsWithUnavailability","AddExceptionButton","minutesMapper","getGroupedExceptionDates","accExceptions","last","lastAccumulatedException","poppedLastException","ListHeader","FilterWrapper","ListHeadingDesc","ListHeaderRoot","ExceptionList","listStyleType","ExceptionListItem","DateHeader","Subtitle3","HourHeader","ActionHeader","ExceptionDate","ExceptionTime","ExceptionActions","Unavailable","ListItemRoot","AddExceptionButtonRoot","EventDatesRoot","ListItem","formatDate","getTime","filterBy","noException","dateHeader","hourHeader","actionHeader","exceptionsFor","exceptionsNote","ListExceptions","exceptionEditIndex","setExceptionEditIndex","filteredExceptions","setFilteredExceptions","groupedExceptions","groupedFilteredExceptions","startDateInChosenTimezone","endDateInChosenTimezone","chunks","exceptionIndex","datesToDelete","getCombinedExceptions","inverted","getPartitionedExceptionsHash","AvailabilityTypes","getExceptionsInTimeZone","transformExceptionsInTimeZone","dateBasedTimeRanges","unavailableDate","getDateInTimeZone","dateKey","getExceptionsInUTC","transformExceptionsInUTC","transformInvertedAvailability","range1","range2","startTimeInUserTZ","endTimeInUserTZ","rangeStartsAt12AM","rangeEndsAt12AM","second","startTime","endTime","dayStart","dayEnd","inAvailabilityExceptions","nextRangeStartTime","Exceptions","UTCExceptions","setUTCExceptions","defaultExceptions","setDefaultExceptions","shouldUpdateUTCExceptions","exceptionsInChosenTimezone","partitionExceptionDates","exceptionsFromPresentDate","useUserAvailabilityException","fromAPI","todayInChosenTZ","upsert","postUserAvailabilityExceptions","AvailabilityTabs","Availability","ExceptionsTabKey","setActiveKey","tempActiveKey","setTempActiveKey","isAvailabilityDirty","tabTitle","getBaseAvailabitlityHash","FilterType","availabilityInUTC","getAvailability","availabilityWithDates","getEndDate","CombinedAvailability","CombinedAvailabilityProvider","dateRange","setDateRange","filterRange","clipOverFlowDates","useCombinedUserAvailability","availabilities","transformedAvailabilities","isFetching","useCombinedAvailability","DateFilterWrapper","WeekLabelRoot","WeekLabel","CopyToDateFilter","DateLabel","CombinedAvailabilityWrapper","getBorderWidth","getBorderColor","getBorderStyle","getBorderRadius","DateTitle","DateTitleMobile","Filter","getISODateTime","getDayFromDate","Info","getDateString","toLocaleString","CombinedAvailabilityDate","dateAvailability","combinedAvailability","slotDate","addNewSlotUtility","CopyDateSlotsTo","dateFilter","copyTo","DateRangeFilter","getDate","specificDays","specificDates","CopyCombinedAvailability","sourceDate","initialDateRange","DAYS","DATES","filterValue","setFilterValue","setTarget","match","matchPayloadToAPI","availabilityDate","availabilityDay","availableSlots","elem","CombinedAvailabilities","weekwise","userTimeZone","updateCombinedUserAvailability","eventStartDate","eventEndDate","setFilterRange","titleEEvent","note","IntegrationsContainer","Description","Logo","LogoContainer","scale1200","SSOLogo","RefetchContainer","AuthorizedContainer","AuthorizedText","SSOUser","NonSSOUser","SSOIntegration","ssoEnabled","IntegrationsListLoader","ConnectButton","integrationName","onFailure","childWindow","useOAuthMeta","conferenceName","open","redirectionUrl","interval","setInterval","closed","clearInterval","handler","event","origin","urlParts","shift","join","getCurrentDomain","addEventListener","removeEventListener","DisconnectButton","useDeAuthorize","handleDisconnect","calendarIntegrationConnectSuccess","calendarIntegrationDisconnectSuccess","vconIntegrationConnectSuccess","vconIntegrationDisconnectSuccess","calendarSettingsDescription","vconSettingsDescription","configurationMessage","connectError","adapterNames","Zoom","Webex","MicrosoftTeams","MicrosoftOutlook","GoogleCalendar","logoImages","Integration","adapter","adapterName","userAuthorized","lastCalendarSync","integrationType","userBasedAuth","isConnected","setIsConnected","setLastSyncTime","useConferenceDetail","userBasedAuthAttribs","profile","refetchConference","conferenceLoading","isRefetching","bulkUserRefetch","useBulkUserDownload","fetchFreeBusyIntegration","calendarIntegration","vConIntegration","IntegrationsContainerView","IntegrationsView","userSsoEnabled","ssoIntegration","calendarIntegrations","vconIntegrations","ListActionsContainer","ActionText","searchLocations","locationName","ListActions","onSearch","onSort","toFilterFormat","sortOrder","newSort","sortOrders","sortOverrides","eventStatus","eventMode","hostingType","actionText","Filters","filters","toFilterOptionFormat","statuses","modes","cities","newStatuses","statusOptions","newModes","modeOptions","dateFilterOverrides","newCities","FiltersContainer","MainTitle","GridContainer","GridWrapper","$isFullMode","noCampaigns","noInstance","NoItem","flexGridColumnGap","flexGridRowGap","flexGridOverridesForNoItems","cardOverrides","aspectRatioBoxOverrides","aspectRatio","aspectRatioBoxBodyOverrides","Anchor","StyledAnchor","ImageAnchor","margin","CardTitle","lineHeight","EventActionsContainer","Wrapper","EventStatusWrapper","remove","addOnBehalf","removeOnBehalf","successAdded","successRemoved","UserActions","isUserMapped","setIsUserMapped","handleClick","addUserToLocation","removeUserFromLocation","fullWidthButtonOverrides","bannerAltText","EventCard","windowWidth","useWindowSize","address","category","userActionType","actions","userProfileAction","isFullMode","eventCount","cardLink","getCardLink","imageBoxAspectRatioBoxBody","imageAspectRatioBoxBody","as","noBannerAspectRatioBoxBody","ItemsGrid","total","itemProps","alignContent","flexGridOverrides","campaignTitle","Campaigns","platform","setSearchTerm","setSort","categories","setFilters","campaignList","setCampaignList","useCampaigns","locationData","sortType","prevFilters","Events","layout","LayoutStyle","nextPage","Math","min","max","CLOSE_PROFILE","menuItemLabels","topicMapped","engagementTypeMapped","integrations","events","eMeet","componentMapping","isViewMode","setIsViewMode","useUserForms","formData","localStorage","getItem","removeItem","useUserIntegrations","prepareClientTimeZone","zoneName","startsWith","handleTimeZoneChange","timeZoneData","updateUserTimeZone","eMeetCampaignList","eMeetEngagementTypeMapped","eMeetTopicMapped","eMeetSettings","Nav","canViewAvailability","setAvailabilityParam","eventInfo","locationEventType","hideInstanceType","showAvailability","menuItems","isOutlook","isExternal","showInstanceList","isNonAdmin","labelKey","getMenuItems","EventType","setSelectedKey","setIsLastItem","menuOptions","itemMapper","isChild","findItem","flattenedMenu","currentIndex","SelectedItem","onOptionSelect","ProfileDrawer","ControlContainer","negative50","ValueContainer","SingleValue","$disabled","$isFocused","$isPseudoFocused","inputBorder","borderFocus","inputBorderError","primary50","Dropdown","DropdownListItem","InputContainer","timePickerOverrides","Select","negative","StyledIconButton","IconButton","ToText","$hasError","MobileToText","getButtonOverrides","to","CSM","MM","JMM","EA","AM","EX","Partner","EWSIntegration","SfdcIntegration","ET","SystemUser","commonMessages","allMyAttendees","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","showBeforeUnloadPopup","setShowBeforeUnloadPopup","preventDefault","returnValue","PAGE_SIZES","pageSizeIndex","editorUrl","process","REACT_APP_CKEDITOR_URL","wordCountDefaults","showParagraphs","showWordCount","showCharCount","countSpacesAsChars","hardLimit","toolbarGroups","groups","extraPlugins","removeButtons","format_tags","removeDialogTabs","linkShowTargetTab","linkShowAdvancedTab","dialog_backgroundCoverColor","skin","delayIfDetached","showTopBar","editorId","isShowTopBar","editorTop","document","getElementById","isShowTopBarOnFocus","showTopBarOnFocus","customConfig","maxLength","element","useCKEditorBase","merge","editorplaceholder","wordcount","maxCharCount","debug","initContent","dispatchEvent","editor","CKEditorEventAction","getData","subscribeTo","editorStatus","canSetStyles","container","setStyles","styleName","removeStyle","setData","editorContainer","$","querySelector","setAttribute","ckeResizeElement","visibility"],"sourceRoot":""}