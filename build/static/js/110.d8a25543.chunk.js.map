{"version":3,"file":"static/js/110.d8a25543.chunk.js","mappings":"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","sources":["components/EventMainHeader/styled-components.ts","components/EventMainHeader/EventMainHeader.tsx","components/InboundRequestPage/styled-components.ts","components/InboundRequestPage/overrides.ts","components/InboundRequestPage/IrpColorTheme.tsx","components/InboundRequestPage/useIrpTheme.tsx","components/InboundRequestPage/IrpViewPageLink.tsx","components/InboundRequestPage/Toggle.tsx","components/InboundRequestPage/IrpEditor.tsx","components/InboundRequestPage/util.ts","components/InboundRequestPage/IrpEmbedSourceCodeCopy.tsx","components/InboundRequestPage/IrpCtaEmbedSourceCodeCopy.tsx","components/InboundRequestPage/IrpEngagementTypes.tsx","components/InboundRequestPage/IrpInput.tsx","components/InboundRequestPage/MeetNowEmbedSourceCodeCopy.tsx","components/InboundRequestPage/MeetNowCtaEmbedSourceCodeCopy.tsx","components/InboundRequestPage/FormFields.tsx","components/InboundRequestPage/IrpContentLoader.tsx","components/InboundRequestPage/Footer.tsx","components/InboundRequestPage/InboundRequestPage.tsx","queries/hooks.ts","ui-components/CopyEmbedSourceCode/styled-components.ts","ui-components/CopyEmbedSourceCode/overrides.ts","ui-components/CopyEmbedSourceCode/CopyEmbedSourceCode.tsx","utils/useBeforeUnload.ts","../../../node_modules/ckeditor4-integrations-common/dist/index.esm.js","../../../node_modules/ckeditor4-react/dist/index.esm.js","../../../node_modules/ckeditor4-react/node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/ckeditor4-react/node_modules/prop-types/index.js","../../../node_modules/ckeditor4-react/node_modules/prop-types/lib/ReactPropTypesSecret.js","../../ckeditor/src/hooks/useCKEditor.js"],"sourcesContent":["import { styled, withStyle } from '@jifflenow/brightui'\n\nexport const Root = styled('div', ({ $theme: { sizing, mediaQuery } }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flexShrink: 0,\n  justifyContent: 'center',\n  marginBottom: sizing.scale100,\n  minHeight: '70px',\n  paddingLeft: sizing.scale1200,\n  paddingRight: sizing.scale600,\n  [mediaQuery.medium]: {\n    paddingLeft: sizing.scale700,\n    paddingRight: sizing.scale500,\n  },\n}))\n\nconst FlexContainer = styled('div', {\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport const Wrapper = styled('div', ({ $theme: { colors } }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderBottomWidth: '1px',\n  borderBottomStyle: 'solid',\n  borderBottomColor: colors.mono300,\n}))\n\nexport const EventDetails = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: sizing.scale600,\n}))\n\nexport const StatusWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale400,\n}))\n\nexport const EventName = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.HeadingSmall,\n    color: colors.mono900,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  })\n)\n\nexport const LocationDetails = withStyle(\n  FlexContainer,\n  ({ $theme: { sizing } }) => ({\n    justifyContent: 'space-between',\n    paddingBottom: sizing.scale0,\n  })\n)\n\nexport const EventInfo = withStyle(FlexContainer, {})\n\nconst StyledText = styled('div', ({ $theme: { typography, colors } }) => ({\n  ...typography.font400,\n  color: colors.mono700,\n}))\n\nexport const EventDates = withStyle(StyledText, ({ $theme: { sizing } }) => ({\n  marginRight: sizing.scale600,\n}))\n\nexport const TimeIconWrapper = withStyle(FlexContainer, {\n  marginRight: '7px',\n})\n\nexport const TimeZone = withStyle(StyledText, {})\n\nexport const LogoWrapper = styled('div', {\n  display: 'flex',\n})\n\nexport const SandboxWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale300,\n  marginRight: sizing.scale600,\n  marginTop: sizing.scale700,\n}))\n\nexport const SandboxText = styled(\n  'div',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.Caption2,\n    backgroundColor: colors.warning50,\n    borderColor: colors.warning,\n    borderRadius: sizing.scale100,\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    fontSize: sizing.scale400,\n    paddingBottom: sizing.scale100,\n    paddingLeft: sizing.scale300,\n    paddingRight: sizing.scale300,\n    paddingTop: sizing.scale100,\n  })\n)\n","import { VFC, useMemo } from 'react'\nimport { DateTime } from 'luxon'\nimport { FormattedMessage } from 'react-intl'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { EventStatus } from 'components/Events'\nimport { formatDateRange, formatToStartOfTheDay } from 'utils/dates'\nimport { TimeZoneOutlined } from '@jifflenow/brightui/icon'\nimport { Logo } from 'components/Common/Logo'\nimport {\n  Root,\n  EventDetails,\n  LocationDetails,\n  EventName,\n  StatusWrapper,\n  TimeZone,\n  EventDates,\n  TimeIconWrapper,\n  EventInfo,\n  Wrapper,\n  LogoWrapper,\n  SandboxText,\n  SandboxWrapper,\n} from './styled-components'\n\nexport const EventMainHeader: VFC = () => {\n  const {\n    attributes: {\n      displayName,\n      filterStatus,\n      mode,\n      timeZone,\n      startDate,\n      endDate,\n      address,\n    },\n  } = useEventLocation().location!\n\n  const eventTimeZone = useMemo(\n    () => (timeZone ? DateTime.local().setZone(timeZone).offsetNameLong : ''),\n    [timeZone]\n  )\n\n  const urlPath = window.location.pathname\n  const sandboxInstance =\n    urlPath.includes('sandbox-') || urlPath.includes('staging-')\n\n  return (\n    <Wrapper>\n      <Root>\n        <EventDetails>\n          <StatusWrapper>\n            <EventStatus status={filterStatus} mode={mode} />\n          </StatusWrapper>\n          <EventName>{displayName}</EventName>\n        </EventDetails>\n        <LocationDetails>\n          <EventInfo>\n            <EventDates>\n              {`${formatDateRange(\n                formatToStartOfTheDay(startDate),\n                formatToStartOfTheDay(endDate)\n              )} | ${address}`}\n            </EventDates>\n            <TimeIconWrapper>\n              <TimeZoneOutlined />\n            </TimeIconWrapper>\n            <TimeZone>{eventTimeZone}</TimeZone>\n          </EventInfo>\n        </LocationDetails>\n      </Root>\n      <LogoWrapper>\n        {sandboxInstance && (\n          <SandboxWrapper>\n            <SandboxText>\n              <FormattedMessage\n                defaultMessage=\"You are currently using the sandbox instance.{br}Intended for use with Test Data only.\"\n                description=\"Warning text\"\n                values={{\n                  br: <br />,\n                }}\n              />\n            </SandboxText>\n          </SandboxWrapper>\n        )}\n        <Logo />\n      </LogoWrapper>\n    </Wrapper>\n  )\n}\n","import { styled, withStyle } from '@jifflenow/brightui'\nimport { FormControl } from '@jifflenow/brightui/form-control'\nimport { FooterContainer as CommonFooterContainer } from 'ui-components/common/styled-components'\n\nexport const StyledForm = styled('form', {\n  display: 'flex',\n  flexDirection: 'column',\n  height: 'calc(100vh - 86px)',\n  overflow: 'auto',\n})\n\nexport const Container = styled('div', ({ $theme: { sizing } }) => ({\n  flex: '1',\n  paddingLeft: sizing.scale1400,\n  paddingRight: sizing.scale1400,\n  paddingTop: sizing.scale1000,\n  paddingBottom: sizing.scale1000,\n}))\n\nexport const Heading = styled(\n  'header',\n  ({ $theme: { typography, colors, sizing } }) => ({\n    ...typography.HeadingSmall,\n    color: colors.mono800,\n    marginBottom: sizing.scale950,\n  })\n)\n\nexport const Error = styled('div', ({ $theme: { colors, typography } }) => ({\n  ...typography.LabelSmall,\n  color: colors.negative700,\n}))\n\nexport const WidgetRoot = styled('div', ({ $theme: { sizing } }) => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  justifyContent: 'space-between',\n  marginBottom: sizing.scale750,\n}))\n\nexport const LabelContainer = styled('div', {\n  flex: 1,\n})\n\nexport const ToggleLabel = styled<{ $bold: boolean }, 'label'>(\n  'label',\n  ({ $theme: { typography, colors }, $bold }) => ({\n    ...($bold ? typography.LabelLarge : typography.Paragraph1),\n    color: colors.mono800,\n  })\n)\n\nexport const ViewPageLabel = styled(\n  'label',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.LabelLarge,\n    color: colors.mono800,\n  })\n)\n\nexport const ColorThemeLabel = styled(\n  'label',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Paragraph1,\n    color: colors.mono800,\n  })\n)\n\nexport const Link = styled<{ $disabled?: boolean }, 'a'>(\n  'a',\n  ({ $theme: { colors, typography }, $disabled }) => ({\n    ...typography.Paragraph1,\n    color: colors.primaryA,\n    ...($disabled && {\n      cursor: 'default',\n      pointerEvents: 'none',\n      opacity: 0.6,\n    }),\n  })\n)\n\nexport const ToggleDesc = styled(\n  'div',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Caption2,\n    color: colors.mono700,\n  })\n)\n\nexport const Divider = styled('div', ({ $theme: { colors, sizing } }) => ({\n  borderTopWidth: '1px',\n  borderTopStyle: 'solid',\n  borderTopColor: colors.mono300,\n  marginBottom: sizing.scale600,\n}))\n\nexport const Group = styled('div', {\n  width: '100%',\n  maxWidth: '620px',\n})\n\nexport const EditorContainer = styled('div', ({ $theme: { sizing } }) => ({\n  paddingRight: sizing.scale1000,\n  flex: '1 0 auto',\n  maxWidth: '500px',\n  minWidth: '500px',\n}))\n\nexport const PreviewContainer = styled('div', ({ $theme: { sizing } }) => ({\n  flex: '1 0 auto',\n  paddingTop: sizing.scale900,\n}))\n\nexport const IrpPreview = styled('img', {\n  width: '100%',\n  maxWidth: '500px',\n})\n\nexport const EditorRoot = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale600,\n  minWidth: '100%',\n}))\n\nexport const EditorLabelContainer = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale300,\n}))\n\nexport const EditorLabel = styled('label', ({ $theme: { typography } }) => ({\n  ...typography.LabelMedium,\n}))\n\nexport const NumberCircle = styled(\n  'div',\n  ({ $theme: { sizing, colors, typography } }) => ({\n    ...typography.LabelLarge,\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: sizing.scale600,\n    height: sizing.scale600,\n    color: colors.primary500,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor: colors.primary500,\n    borderRadius: '50%',\n    backgroundColor: colors.primary50,\n    marginLeft: sizing.scale800,\n  })\n)\n\nexport const IrpTextEditor = styled(\n  'div',\n  ({ $theme: { mediaQuery, sizing } }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: sizing.scale850,\n    [mediaQuery.large]: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginBottom: sizing.scale750,\n    },\n  })\n)\n\nexport const CopySourceCodeContainer = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale800,\n  })\n)\n\nexport const CtaButtonContainer = styled('div', ({ $theme: { sizing } }) => ({\n  marginBottom: sizing.scale500,\n}))\n\nexport const FooterContainer = withStyle(CommonFooterContainer, {\n  flexShrink: 0,\n})\n\nexport const FormControlStyled = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    maxWidth: '280px',\n    marginBottom: sizing.scale750,\n  })\n)\n\nexport const EngagementTypesFormControl = styled(\n  FormControl,\n  ({ $theme: { sizing } }) => ({\n    maxWidth: '280px',\n    marginBottom: sizing.scale100,\n  })\n)\n\nexport const IrpEngagementTypeRoot = styled(\n  'div',\n  ({ $theme: { sizing } }) => ({\n    marginBottom: sizing.scale750,\n  })\n)\n\nexport const IrpEngagementTypeHelpText = styled(\n  'span',\n  ({ $theme: { typography, colors } }) => ({\n    ...typography.Caption1,\n    color: colors.mono900,\n  })\n)\n","import { RadioOverrides } from '@jifflenow/brightui/radio'\nimport { CheckboxOverrides } from '@jifflenow/brightui/checkbox'\n\nexport const toggleOverride: CheckboxOverrides = {\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale400,\n    }),\n  },\n}\n\nexport const getColorThemeRadioOverride = (\n  color: string,\n  ariaLabel: string\n): RadioOverrides => ({\n  Input: {\n    props: { 'aria-label': ariaLabel },\n  },\n  RadioMarkOuter: {\n    style: ({ $theme: { sizing }, $checked }) => ({\n      height: sizing.scale800,\n      width: sizing.scale800,\n      borderTopLeftRadius: sizing.scale100,\n      borderTopRightRadius: sizing.scale100,\n      borderBottomRightRadius: sizing.scale100,\n      borderBottomLeftRadius: sizing.scale100,\n      borderColor: color,\n      ...($checked ? null : { backgroundColor: color }),\n    }),\n  },\n  RadioMarkInner: {\n    style: ({ $theme: { sizing, colors }, $checked }) => ({\n      height: sizing.scale700,\n      width: sizing.scale700,\n      borderTopLeftRadius: sizing.scale100,\n      borderTopRightRadius: sizing.scale100,\n      borderBottomRightRadius: sizing.scale100,\n      borderBottomLeftRadius: sizing.scale100,\n      backgroundColor: color,\n      ...($checked\n        ? {\n            borderStyle: 'solid',\n            borderWidth: '1px',\n            borderColor: colors.white,\n          }\n        : null),\n    }),\n  },\n  Label: {\n    style: {\n      paddingLeft: 0,\n    },\n  },\n  Root: {\n    style: ({ $theme: { sizing } }) => ({\n      marginLeft: sizing.scale600,\n      marginRight: 0,\n      marginTop: 0,\n      marginBottom: 0,\n    }),\n  },\n})\n","import { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { ALIGN, Radio, RadioGroup } from '@jifflenow/brightui/radio'\nimport { Field } from 'ui-components/Field'\nimport { getColorThemeRadioOverride } from './overrides'\nimport { ColorThemeLabel, Error, WidgetRoot } from './styled-components'\nimport { useIrpTheme } from './useIrpTheme'\n\nconst colors = defineMessages<string>({\n  '#0096FF': {\n    defaultMessage: 'Light blue',\n    description: 'Color label',\n  },\n  '#2B2826': {\n    defaultMessage: 'Dark gray',\n    description: 'Color label',\n  },\n  '#535353': {\n    defaultMessage: 'Gray',\n    description: 'Color label',\n  },\n})\n\nexport const IrpColorTheme = () => {\n  const { formatMessage } = useIntl()\n  const theme = useIrpTheme()\n\n  return (\n    <Field<string>\n      name=\"ext_widget_theme\"\n      format={(value: string) =>\n        value\n          ? JSON.stringify(JSON.parse(value).colors)\n          : JSON.stringify(theme[Object.keys(theme)[0]])\n      }\n      parse={value => JSON.stringify({ colors: JSON.parse(value) })}\n      render={({\n        input: { value, onChange },\n        meta: { error, submitError },\n      }) => (\n        <>\n          {(submitError || error) && <Error>{submitError || error}</Error>}\n          <WidgetRoot>\n            <ColorThemeLabel>\n              <FormattedMessage\n                defaultMessage=\"Select the color theme for your page\"\n                description=\"Color theme label text\"\n              />\n            </ColorThemeLabel>\n            <RadioGroup\n              name=\"colorTheme\"\n              value={value}\n              onChange={e => onChange(e.target.value)}\n              align={ALIGN.horizontal}\n            >\n              {Object.entries(theme).map(([name, value]) => (\n                <Radio\n                  key={name}\n                  value={JSON.stringify(value)}\n                  overrides={getColorThemeRadioOverride(\n                    name,\n                    formatMessage(colors[name])\n                  )}\n                />\n              ))}\n            </RadioGroup>\n          </WidgetRoot>\n        </>\n      )}\n    />\n  )\n}\n","import { useStyletron } from '@jifflenow/brightui'\n\nexport const useIrpTheme = () => {\n  const { colors } = useStyletron()[1]\n  const themes = {\n    [colors.primary]: {\n      primary: colors.primary,\n      primaryDark: colors.primary500,\n      primaryLight: colors.primary50,\n      shadowFocus: colors.primary50,\n    },\n    [colors.mono900]: {\n      primary: colors.mono900,\n      primaryDark: colors.mono700,\n      primaryLight: colors.mono400,\n      shadowFocus: 'rgba(0, 0, 0, 0.5)',\n    },\n    '#535353': {\n      primary: '#535353',\n      primaryDark: '#929292',\n      primaryLight: colors.mono400,\n      shadowFocus: colors.mono400,\n    },\n  }\n\n  return themes\n}\n","import { ReactNode, VFC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Field } from 'ui-components/Field'\nimport { Link, ViewPageLabel, WidgetRoot } from './styled-components'\nimport { IrpViewPageLinkProps } from './types'\n\nexport const IrpViewPageLink: VFC<IrpViewPageLinkProps> = ({\n  name,\n  label,\n  disabled,\n}) => (\n  <WidgetRoot>\n    <ViewPageLabel>{label}</ViewPageLabel>\n    <Field<string>\n      name={name}\n      render={({ input }) => (\n        <FormattedMessage\n          defaultMessage=\"<a>View Page</a>\"\n          description=\"Link label\"\n          values={{\n            a: (chunks: ReactNode) => (\n              <Link\n                href={input.value}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                $disabled={disabled}\n              >\n                {chunks}\n              </Link>\n            ),\n          }}\n        />\n      )}\n    />\n  </WidgetRoot>\n)\n","import { ChangeEvent, VFC } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { Field } from 'react-final-form'\nimport { Toggle as BaseToggle } from '@jifflenow/brightui/toggle'\nimport {\n  Error,\n  LabelContainer,\n  ToggleDesc,\n  ToggleLabel,\n  WidgetRoot,\n} from './styled-components'\nimport { toggleOverride } from './overrides'\n\nconst messages = defineMessages({\n  yesLabel: {\n    defaultMessage: 'Yes',\n    description: 'Toggle label',\n  },\n  noLabel: {\n    defaultMessage: 'No',\n    description: 'Toggle label',\n  },\n})\n\ntype ToggleProps = {\n  label: string\n  name: string\n  desc?: string\n  disabled?: boolean\n}\n\nexport const Toggle: VFC<ToggleProps> = ({ name, label, desc }) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    // TODO: Update the type of the field once the API is available\n    <Field<string>\n      name={name}\n      render={({\n        input: { value, onChange },\n        meta: { error, submitError },\n      }) => (\n        <>\n          {(submitError || error) && <Error>{submitError || error}</Error>}\n          <WidgetRoot>\n            <LabelContainer>\n              <ToggleLabel $bold={!!desc}>{label}</ToggleLabel>\n              <ToggleDesc>{desc}</ToggleDesc>\n            </LabelContainer>\n            <BaseToggle\n              name={name}\n              ariaLabel={label}\n              checked={value === 'true'}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                onChange(e.target.checked ? 'true' : 'false')\n              }\n              label={formatMessage(\n                messages[value === 'true' ? 'yesLabel' : 'noLabel']\n              )}\n              overrides={toggleOverride}\n            />\n          </WidgetRoot>\n        </>\n      )}\n    />\n  )\n}\n","import { FC, VFC } from 'react'\nimport merge from 'deepmerge'\nimport { FieldRenderProps } from 'react-final-form'\nimport { useCKEditor } from '@jifflenow/ckeditor'\nimport { Field } from 'ui-components/Field'\nimport {\n  EditorLabel,\n  EditorLabelContainer,\n  EditorRoot,\n  Error,\n} from './styled-components'\nimport { IrpEditorProps } from './types'\n\nconst defaultConfig = {\n  toolbarGroups: [{ name: 'paragraph', groups: ['align'] }],\n}\n\nconst RichText: FC<FieldRenderProps<string>> = ({\n  input,\n  meta,\n  config,\n  placeholder,\n}) => {\n  const { setElement, editorStyle } = useCKEditor({\n    placeholder,\n    input,\n    meta,\n    config: merge(defaultConfig, config),\n    showTopBarOnFocus: true,\n  })\n\n  return <div id={input.name} ref={setElement} style={editorStyle} />\n}\n\nexport const IrpEditor: VFC<IrpEditorProps> = ({\n  name,\n  label,\n  placeholder,\n  config,\n}) => (\n  <Field<string>\n    name={name}\n    parse={value => value ?? ''}\n    render={props => {\n      const {\n        meta: { submitError, error },\n      } = props\n\n      return (\n        <>\n          {(submitError || error) && <Error>{submitError || error}</Error>}\n          <EditorRoot>\n            <EditorLabelContainer>\n              <EditorLabel htmlFor={name}>{label}</EditorLabel>\n            </EditorLabelContainer>\n            <RichText {...props} placeholder={placeholder} config={config} />\n          </EditorRoot>\n        </>\n      )\n    }}\n  />\n)\n","export const getCallToActionButtonCode = (\n  href: string,\n  color: string,\n  buttonLabel: string\n) => `<table style=\"Margin:0;border-collapse:collapse;border-spacing:0;float:none;margin:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:center;vertical-align:top;width:auto\">\n    <tbody>\n        <tr style=\"padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n        <td style=\"-moz-hyphens:auto;-webkit-hyphens:auto;Margin:0;border-collapse:collapse!important;color:#0a0a0a;font-family:Helvetica,Arial,sans-serif;font-size:16px;font-weight:400;hyphens:auto;line-height:1.1;margin:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top;word-wrap:break-word\">\n            <table style=\"border-collapse:collapse;border-spacing:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n                <tbody>\n                    <tr style=\"padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n                    <td style=\"-moz-hyphens:auto;-webkit-hyphens:auto;Margin:0;background:${color};border:none;border-collapse:collapse!important;border-radius:4px;color:#fefefe;font-family:Helvetica,Arial,sans-serif;font-size:16px;font-weight:400;hyphens:auto;line-height:1.1;margin:0;padding-bottom:7px;padding-left:0;padding-right:0;padding-top:7px;text-align:left;vertical-align:top;word-wrap:break-word\">\n                        <a align=\"center\" href=\"${href}\" target=\"_blank\" style=\"border:0 solid ${color};border-radius:4px;color:#fefefe;display:inline-block;font-family:proxima-nova,'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;font-weight:700;height:30px;line-height:1.1;padding:0;text-align:left;text-decoration:none;word-break:break-all\">\n                            <table cellspacing=\"20\" cellpadding=\"10\" width=\"114\" style=\"border-collapse:collapse;border-spacing:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n                                <tr style=\"padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;vertical-align:top\">\n                                <td width=\"28\" style=\"-moz-hyphens:auto;-webkit-hyphens:auto;Margin:0;background:${color};border:none;border-collapse:collapse!important;border-radius:4px;color:#fefefe;font-family:Helvetica,Arial,sans-serif;font-size:16px;font-weight:400;hyphens:auto;line-height:1.1;margin:0;padding-bottom:0;padding-left:8px;padding-right:0;padding-top:2px;text-align:left;vertical-align:top;word-wrap:break-word\"><img width=\"28\" height=\"28\" src=\"https://jifflenow-public.s3-us-west-2.amazonaws.com/jifflenow-button.png\" alt style=\"-ms-interpolation-mode:bicubic;border:none;clear:both;display:block;float:left;height:28px;outline:0;text-decoration:none;width:28px\"></td>\n                                <td width=\"70\" style=\"-moz-hyphens:auto;-webkit-hyphens:auto;Margin:0;background:${color};border:none;border-collapse:collapse!important;border-radius:4px;color:#fefefe;font-family:Helvetica,Arial,sans-serif;font-size:16px;font-weight:400;hyphens:auto;line-height:1.1;margin:0;padding-bottom:0;padding-left:0;padding-right:12px;padding-top:0;text-align:left;vertical-align:top;word-wrap:break-word\">\n                                    <p style=\"Margin:0;Margin-bottom:10px;color:#f3f3f3;float:right;font-family:Helvetica,Arial,sans-serif;font-size:14px;font-style:normal;font-weight:600;line-height:16px;margin:0;margin-bottom:0;margin-left:6px;margin-right:0;margin-top:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;text-align:left;width:60px;word-break:break-word\">${buttonLabel}</p>\n                                </td>\n                                </tr>\n                            </table>\n                        </a>\n                    </td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        </tr>\n    </tbody>\n</table>`\n\nexport const getIframeCode = (url: string) =>\n  `<iframe src=\"${url}&embedded=true\" width=\"500px\" height=\"760px\" frameborder=\"0\" style=\"border:0px;\" marginheight=\"0\" marginwidth=\"0\">Loading…</iframe>`\n","import { useFormState } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { CopyEmbedSourceCode } from 'ui-components/CopyEmbedSourceCode'\nimport { Field } from 'ui-components/Field'\nimport { FormValues } from './types'\nimport { getIframeCode } from './util'\n\nconst messages = defineMessages({\n  irpSourceCodeEmbedLabel: {\n    defaultMessage: 'Source code to embed the inbound request page',\n    description: 'IRP source code embed label',\n  },\n  irpSourceCodeEmbedButtonLabel: {\n    defaultMessage: 'Copy iframe code to embed the IRP',\n    description: 'IRP source code copy button label',\n  },\n})\n\nexport const IrpEmbedSourceCodeCopy = () => {\n  const { formatMessage } = useIntl()\n  const {\n    enable_external_widget: enableExternalWidget,\n  } = useFormState<FormValues>().initialValues\n\n  return (\n    <Field<string>\n      name=\"external_widget_token\"\n      render={({ input: { value } }) => (\n        <CopyEmbedSourceCode\n          title={formatMessage(messages.irpSourceCodeEmbedLabel)}\n          buttonLabel={formatMessage(messages.irpSourceCodeEmbedButtonLabel)}\n          disabled={enableExternalWidget === 'false'}\n          link={getIframeCode(value)}\n        />\n      )}\n    />\n  )\n}\n","import { useFormState } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { CopyEmbedSourceCode } from 'ui-components/CopyEmbedSourceCode'\nimport { CtaButtonContainer } from './styled-components'\nimport { FormValues } from './types'\nimport { getCallToActionButtonCode } from './util'\n\nconst messages = defineMessages({\n  irpCallToActionSourceCodeEmbedLabel: {\n    defaultMessage: 'Source code to embed “Call to Action” button of IRP',\n    description: 'IRP call to action source code embed label',\n  },\n  irpCallToActionSourceCodeEmbedButtonLabel: {\n    defaultMessage: 'Copy source code to “Call to Action” button of the IRP',\n    description: 'IRP call to action source code copy button label',\n  },\n  requestMeetingLabel: {\n    defaultMessage: 'Request Meeting',\n    description: 'CTA button default label',\n  },\n})\n\nexport const IrpCtaEmbedSourceCodeCopy = () => {\n  const { formatMessage } = useIntl()\n  const {\n    values: { external_widget_token, ext_widget_theme },\n    initialValues: { enable_external_widget: enableExternalWidget },\n  } = useFormState<FormValues>()\n\n  const ctaEmbedCode = getCallToActionButtonCode(\n    external_widget_token,\n    JSON.parse(ext_widget_theme).colors.primary,\n    formatMessage(messages.requestMeetingLabel)\n  )\n\n  return (\n    <>\n      <CtaButtonContainer dangerouslySetInnerHTML={{ __html: ctaEmbedCode }} />\n      <CopyEmbedSourceCode\n        title={formatMessage(messages.irpCallToActionSourceCodeEmbedLabel)}\n        buttonLabel={formatMessage(\n          messages.irpCallToActionSourceCodeEmbedButtonLabel\n        )}\n        disabled={enableExternalWidget === 'false'}\n        link={ctaEmbedCode}\n      />\n    </>\n  )\n}\n","import { useMemo } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useForm } from 'react-final-form'\nimport { Option, Select, Value } from '@jifflenow/brightui/select'\nimport { Field } from 'ui-components/Field'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { useEngagementTypesQuery } from 'queries'\nimport {\n  EngagementTypesFormControl,\n  IrpEngagementTypeHelpText,\n  IrpEngagementTypeRoot,\n} from './styled-components'\nimport { FormValues } from './types'\n\nconst messages = defineMessages({\n  allLabel: {\n    defaultMessage: 'All',\n    description: 'Option label',\n  },\n  roleLabel: {\n    defaultMessage: 'Enable IRP for below engagement types',\n    description: 'Field label',\n  },\n  searchPlaceholder: {\n    defaultMessage: 'Search by engagement type',\n    description: 'Search placeholder',\n  },\n  helpText: {\n    defaultMessage:\n      'Select All to enable IRP for all current and future created engagement types',\n    description: 'Help text',\n  },\n})\n\nexport const IrpEngagementTypes = () => {\n  const { formatMessage } = useIntl()\n  const { initialize } = useForm()\n\n  const {\n    systemName: eventName,\n    version,\n  } = useEventLocation().location!.attributes\n\n  const { isLoading, data: fetchEngagementTypes } = useEngagementTypesQuery({\n    version,\n    eventName,\n    showIrpEnabled: true,\n    showOnlyNonConsecutiveEngagementTypes: true,\n  })\n\n  const options = useMemo(\n    () => [\n      {\n        display_name: formatMessage(messages.allLabel),\n        id: 'ALL',\n      },\n      ...(fetchEngagementTypes\n        ?.slice()\n        .sort((a, b) => a.displayOrder - b.displayOrder)\n        .map(({ id, name }) => ({\n          display_name: name,\n          id,\n        })) ?? []),\n    ],\n    [fetchEngagementTypes, formatMessage]\n  )\n\n  const initialValue = fetchEngagementTypes\n    ?.filter(({ irp_enabled }) => irp_enabled)\n    .map(({ name, id }) => ({ display_name: name, id }))\n\n  const fieldProps =\n    version === '1'\n      ? {\n          initialValue: JSON.stringify(initialValue),\n          afterSubmit() {\n            initialize((values: FormValues) => ({\n              ...values,\n              irp_enabled_engagement_types: JSON.stringify(initialValue),\n            }))\n          },\n        }\n      : {}\n\n  return (\n    <Field<string>\n      name=\"irp_enabled_engagement_types\"\n      format={(value: string) => (value ? JSON.parse(value) : [])}\n      parse={(value: Option[]) => JSON.stringify(value)}\n      {...fieldProps}\n      render={({ input, meta: { submitError } }) => (\n        <IrpEngagementTypeRoot>\n          <EngagementTypesFormControl\n            label={formatMessage(messages.roleLabel)}\n            error={submitError}\n          >\n            <Select\n              {...input}\n              multi\n              id=\"irp_enabled_engagement_types\"\n              isLoading={isLoading}\n              labelKey=\"display_name\"\n              options={options}\n              backspaceClearsInputValue\n              searchable\n              placeholder={formatMessage(messages.searchPlaceholder)}\n              onChange={({ value }: { value: Value[] }) =>\n                input.onChange(value)\n              }\n            />\n          </EngagementTypesFormControl>\n          <IrpEngagementTypeHelpText>\n            {formatMessage(messages.helpText)}\n          </IrpEngagementTypeHelpText>\n        </IrpEngagementTypeRoot>\n      )}\n    />\n  )\n}\n","import { VFC } from 'react'\nimport { Field, Validation } from 'ui-components/Field'\nimport { Input } from '@jifflenow/brightui/input'\nimport { FormControlStyled } from './styled-components'\nimport { IrpInputProps } from './types'\n\nexport const IrpInput: VFC<IrpInputProps> = ({\n  label,\n  name,\n  placeholder,\n  required = false,\n}) => (\n  <Field<string>\n    name={name}\n    parse={value => value}\n    validations={required ? [Validation.REQUIRED] : undefined}\n    render={({ input, meta: { error, submitError } }) => (\n      <FormControlStyled label={label} error={submitError || error}>\n        <Input {...input} type=\"text\" placeholder={placeholder} />\n      </FormControlStyled>\n    )}\n  />\n)\n","import { useFormState } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { CopyEmbedSourceCode } from 'ui-components/CopyEmbedSourceCode'\nimport { Field } from 'ui-components/Field'\nimport { FormValues } from './types'\nimport { getIframeCode } from './util'\n\nconst messages = defineMessages({\n  meetNowSourceCodeEmbedLabel: {\n    defaultMessage: 'Source code to embed the Meet Now',\n    description: 'Meet now source code embed label',\n  },\n  meetNowSourceCodeEmbedButtonLabel: {\n    defaultMessage: 'Copy iframe code to embed the Meet Now',\n    description: 'Meet now source code copy button label',\n  },\n})\n\nexport const MeetNowEmbedSourceCodeCopy = () => {\n  const { formatMessage } = useIntl()\n  const {\n    enable_irp_instant_meeting: enableIrpInstantMeeting,\n  } = useFormState<FormValues>().initialValues\n\n  return (\n    <Field<string>\n      name=\"irp_instant_meeting_url\"\n      render={({ input: { value } }) => (\n        <CopyEmbedSourceCode\n          title={formatMessage(messages.meetNowSourceCodeEmbedLabel)}\n          buttonLabel={formatMessage(\n            messages.meetNowSourceCodeEmbedButtonLabel\n          )}\n          disabled={enableIrpInstantMeeting === 'false'}\n          link={getIframeCode(value)}\n        />\n      )}\n    />\n  )\n}\n","import { useFormState } from 'react-final-form'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { CopyEmbedSourceCode } from 'ui-components/CopyEmbedSourceCode'\nimport { CtaButtonContainer } from './styled-components'\nimport { FormValues } from './types'\nimport { getCallToActionButtonCode } from './util'\n\nconst messages = defineMessages({\n  meetNowCTAEmbedLabel: {\n    defaultMessage: 'Source code to embed “Call to Action” button of Meet Now',\n    description: 'IRP call to action source code embed label',\n  },\n  meetNowCTACopyButtonLabel: {\n    defaultMessage:\n      'Copy source code to “Call to Action” button of the Meet Now',\n    description: 'IRP call to action source code copy button label',\n  },\n  requestMeetingLabel: {\n    defaultMessage: 'Request Meeting',\n    description: 'CTA button default label',\n  },\n})\n\nexport const MeetNowCtaEmbedSourceCodeCopy = () => {\n  const { formatMessage } = useIntl()\n  const {\n    values: {\n      irp_instant_meeting_url,\n      irp_instant_meeting_label,\n      ext_widget_theme,\n    },\n    initialValues: { enable_irp_instant_meeting: enableIrpInstantMeeting },\n  } = useFormState<FormValues>()\n\n  const ctaEmbedCode = getCallToActionButtonCode(\n    irp_instant_meeting_url,\n    JSON.parse(ext_widget_theme).colors.primary,\n    irp_instant_meeting_label || formatMessage(messages.requestMeetingLabel)\n  )\n\n  return (\n    <>\n      <CtaButtonContainer dangerouslySetInnerHTML={{ __html: ctaEmbedCode }} />\n      <CopyEmbedSourceCode\n        title={formatMessage(messages.meetNowCTAEmbedLabel)}\n        buttonLabel={formatMessage(messages.meetNowCTACopyButtonLabel)}\n        disabled={enableIrpInstantMeeting === 'false'}\n        link={ctaEmbedCode}\n      />\n    </>\n  )\n}\n","import { ReactNode } from 'react'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { useFormState } from 'react-final-form'\nimport { useMe } from 'providers/MeProvider'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { IrpColorTheme } from './IrpColorTheme'\nimport { IrpViewPageLink } from './IrpViewPageLink'\nimport {\n  CopySourceCodeContainer,\n  Divider,\n  EditorContainer,\n  Group,\n  IrpPreview,\n  IrpTextEditor,\n  NumberCircle,\n  PreviewContainer,\n} from './styled-components'\nimport { Toggle } from './Toggle'\nimport PreviewImage from './preview.png'\nimport { IrpEditor } from './IrpEditor'\nimport { IrpEmbedSourceCodeCopy } from './IrpEmbedSourceCodeCopy'\nimport { IrpCtaEmbedSourceCodeCopy } from './IrpCtaEmbedSourceCodeCopy'\nimport { IrpEngagementTypes } from './IrpEngagementTypes'\nimport { IrpInput } from './IrpInput'\nimport { MeetNowEmbedSourceCodeCopy } from './MeetNowEmbedSourceCodeCopy'\nimport { MeetNowCtaEmbedSourceCodeCopy } from './MeetNowCtaEmbedSourceCodeCopy'\n\nconst messages = defineMessages({\n  enableIrpLabel: {\n    defaultMessage: 'Enable Inbound Request Page Widget',\n    description: 'Enable IRP label',\n  },\n  enableIrpDesc: {\n    defaultMessage: 'Enable external widget for this instance',\n    description: 'Enable IRP desc',\n  },\n  viewIrpPageLabel: {\n    defaultMessage: 'Customize Inbound Request Page',\n    description: 'IRP view page label text',\n  },\n  companyLogoLabel: {\n    defaultMessage: 'Display company logo?',\n    description: 'Company logo label',\n  },\n  displayEventBannerLabel: {\n    defaultMessage: 'Display event banner on the page?',\n    description: 'Company logo label',\n  },\n  enableMeetNowLabel: {\n    defaultMessage: 'Enable Meet Now',\n    description: 'Enable meet now label',\n  },\n  viewMeetNowPageLabel: {\n    defaultMessage: 'Customize Meet Now',\n    description: 'Meet now view page label text',\n  },\n  meetNowCallToActionInputLabel: {\n    defaultMessage: 'Meet Now call to action button text',\n    description: 'Meet now call to action input label',\n  },\n  meetNowCallToActionInputPlaceholder: {\n    defaultMessage: 'Please enter text',\n    description: 'Meet now call to action input placeholder',\n  },\n  altPreviewImage: {\n    defaultMessage: 'IRP preview',\n    description: 'Alt-text',\n  },\n  irpHeaderLabel: {\n    defaultMessage: 'Inbound Request Page Header <number>1</number>',\n    description: 'IRP page header rich text label',\n  },\n  irpHeaderPlaceholder: {\n    defaultMessage: 'Enter the page header here',\n    description: 'IRP page header rich text placeholder',\n  },\n  irpContentLabel: {\n    defaultMessage: 'Inbound Request Page Content <number>2</number>',\n    description: 'IRP page content rich text label',\n  },\n  irpContentPlaceholder: {\n    defaultMessage: 'Enter the page content here',\n    description: 'IRP page content rich text placeholder',\n  },\n  irpFormHeaderLabel: {\n    defaultMessage: 'Inbound Request Page Form Header <number>3</number>',\n    description: 'IRP form header rich text label',\n  },\n  irpFormHeaderPlaceholder: {\n    defaultMessage: 'Enter the form header here',\n    description: 'IRP form header rich text placeholder',\n  },\n})\n\nexport const FormFields = () => {\n  const { formatMessage } = useIntl()\n  const { role, eventRole } = useMe().data.attributes\n  const { systemName: eventName } = useEventLocation().location!.attributes\n  const uploadImageUrl = `${window.location.protocol}//${window.location.host}/${eventName}/api/v1/upload-image`\n\n  const {\n    values: { enable_external_widget, enable_irp_instant_meeting },\n    initialValues: {\n      enable_external_widget: enableExternalWidget,\n      enable_irp_instant_meeting: enableIrpInstantMeeting,\n    },\n  } = useFormState()\n\n  return (\n    <>\n      <Group>\n        <Toggle\n          name=\"enable_external_widget\"\n          label={formatMessage(messages.enableIrpLabel)}\n          desc={formatMessage(messages.enableIrpDesc)}\n        />\n      </Group>\n      <Divider />\n      {enable_external_widget === 'true' && (\n        <>\n          <Group>\n            <IrpViewPageLink\n              name=\"external_widget_token\"\n              label={formatMessage(messages.viewIrpPageLabel)}\n              disabled={enableExternalWidget === 'false'}\n            />\n            <Toggle\n              name=\"enable_company_logo_in_ext_widget\"\n              label={formatMessage(messages.companyLogoLabel)}\n            />\n            <Toggle\n              name=\"enable_event_banner_in_ext_widget\"\n              label={formatMessage(messages.displayEventBannerLabel)}\n            />\n            {(eventRole ?? role) === 'CSM' && (\n              <>\n                <Toggle\n                  name=\"enable_irp_instant_meeting\"\n                  label={formatMessage(messages.enableMeetNowLabel)}\n                />\n                {enable_irp_instant_meeting === 'true' && (\n                  <>\n                    <IrpViewPageLink\n                      name=\"irp_instant_meeting_url\"\n                      label={formatMessage(messages.viewMeetNowPageLabel)}\n                      disabled={enableIrpInstantMeeting === 'false'}\n                    />\n                    <IrpInput\n                      name=\"irp_instant_meeting_label\"\n                      label={formatMessage(\n                        messages.meetNowCallToActionInputLabel\n                      )}\n                      placeholder={formatMessage(\n                        messages.meetNowCallToActionInputPlaceholder\n                      )}\n                    />\n                  </>\n                )}\n              </>\n            )}\n            <IrpColorTheme />\n            <IrpEngagementTypes />\n          </Group>\n          <IrpTextEditor>\n            <EditorContainer>\n              <IrpEditor\n                name=\"external_widget_header_text\"\n                placeholder={formatMessage(messages.irpHeaderPlaceholder)}\n                label={formatMessage(messages.irpHeaderLabel, {\n                  number: (chunks: ReactNode) => (\n                    <NumberCircle>{chunks}</NumberCircle>\n                  ),\n                })}\n                config={{\n                  toolbarGroups: [\n                    { name: 'colors' },\n                    { name: 'insert' },\n                    { name: 'mode' },\n                  ],\n                  height: 80,\n                  uploadImageUrl,\n                  extraPlugins: 'uploadimage,sourcearea',\n                }}\n              />\n              <IrpEditor\n                name=\"external_widget_help_text\"\n                placeholder={formatMessage(messages.irpContentPlaceholder)}\n                label={formatMessage(messages.irpContentLabel, {\n                  number: (chunks: ReactNode) => (\n                    <NumberCircle>{chunks}</NumberCircle>\n                  ),\n                })}\n                config={{\n                  toolbarGroups: [\n                    { name: 'colors' },\n                    { name: 'insert' },\n                    { name: 'mode' },\n                  ],\n                  height: 150,\n                  uploadImageUrl,\n                  extraPlugins: 'uploadimage,sourcearea',\n                }}\n              />\n              <IrpEditor\n                name=\"external_widget_form_header_text\"\n                placeholder={formatMessage(messages.irpFormHeaderPlaceholder)}\n                label={formatMessage(messages.irpFormHeaderLabel, {\n                  number: (chunks: ReactNode) => (\n                    <NumberCircle>{chunks}</NumberCircle>\n                  ),\n                })}\n                config={{\n                  toolbarGroups: [{ name: 'colors' }, { name: 'mode' }],\n                  height: 80,\n                  extraPlugins: 'sourcearea',\n                }}\n              />\n            </EditorContainer>\n            <PreviewContainer>\n              <IrpPreview\n                src={PreviewImage}\n                alt={formatMessage(messages.altPreviewImage)}\n              />\n            </PreviewContainer>\n          </IrpTextEditor>\n          <CopySourceCodeContainer>\n            <IrpEmbedSourceCodeCopy />\n          </CopySourceCodeContainer>\n          <CopySourceCodeContainer>\n            <IrpCtaEmbedSourceCodeCopy />\n          </CopySourceCodeContainer>\n          {(eventRole ?? role) === 'CSM' &&\n            enable_irp_instant_meeting === 'true' && (\n              <>\n                <CopySourceCodeContainer>\n                  <MeetNowEmbedSourceCodeCopy />\n                </CopySourceCodeContainer>\n                <CopySourceCodeContainer>\n                  <MeetNowCtaEmbedSourceCodeCopy />\n                </CopySourceCodeContainer>\n              </>\n            )}\n        </>\n      )}\n    </>\n  )\n}\n","import ContentLoader from 'react-content-loader'\nimport { useStyletron } from '@jifflenow/brightui'\n\nexport const IrpContentLoader = () => {\n  const [, theme] = useStyletron()\n  const loaderOptions = {\n    speed: 2,\n    primaryColor: theme.colors.mono200,\n    secondaryColor: theme.colors.mono300,\n  }\n\n  return (\n    <ContentLoader\n      width=\"1000\"\n      height=\"600\"\n      viewBox=\"0 0 1000 600\"\n      {...loaderOptions}\n    >\n      <rect y=\"5\" x=\"0\" width=\"200\" height=\"20\" />\n\n      <rect y=\"50\" x=\"0\" width=\"250\" height=\"10\" />\n      <rect y=\"66\" x=\"0\" width=\"120\" height=\"6\" />\n      <rect y=\"48\" x=\"380\" width=\"30\" height=\"15\" rx=\"10\" ry=\"10\" />\n      <rect y=\"90\" x=\"0\" width=\"1000\" height=\"1.5\" />\n\n      <rect y=\"105\" x=\"0\" width=\"250\" height=\"10\" />\n      <rect y=\"108\" x=\"390\" width=\"60\" height=\"8\" />\n\n      <rect y=\"140\" x=\"0\" width=\"130\" height=\"10\" />\n      <rect y=\"137\" x=\"390\" width=\"30\" height=\"15\" rx=\"10\" ry=\"10\" />\n\n      <rect y=\"165\" x=\"0\" width=\"130\" height=\"10\" />\n      <rect y=\"162\" x=\"390\" width=\"30\" height=\"15\" rx=\"10\" ry=\"10\" />\n\n      <rect y=\"192\" x=\"0\" width=\"130\" height=\"10\" />\n      <rect y=\"190\" x=\"340\" width=\"20\" height=\"15\" />\n      <rect y=\"190\" x=\"370\" width=\"20\" height=\"15\" />\n      <rect y=\"190\" x=\"400\" width=\"20\" height=\"15\" />\n\n      <rect y=\"240\" x=\"0\" width=\"220\" height=\"8\" />\n      <rect y=\"260\" x=\"0\" width=\"300\" height=\"20\" />\n\n      <rect y=\"330\" x=\"0\" width=\"170\" height=\"8\" />\n      <rect y=\"350\" x=\"0\" width=\"300\" height=\"60\" />\n\n      <rect y=\"430\" x=\"0\" width=\"170\" height=\"8\" />\n      <rect y=\"450\" x=\"0\" width=\"300\" height=\"80\" />\n\n      <rect y=\"550\" x=\"0\" width=\"170\" height=\"8\" />\n      <rect y=\"570\" x=\"0\" width=\"300\" height=\"60\" />\n\n      <rect y=\"350\" x=\"350\" width=\"500\" height=\"400\" />\n    </ContentLoader>\n  )\n}\n","import { useState } from 'react'\nimport { FormSpy, useForm } from 'react-final-form'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { KIND } from '@jifflenow/brightui/button'\nimport { ConfirmationDialog } from 'ui-components/ConfirmationDialog'\nimport { FooterButton } from 'ui-components/common/styled-components'\nimport { successButtonOverrides } from 'ui-components/common/overrides'\nimport { FooterContainer } from './styled-components'\n\nconst modalLabels = defineMessages({\n  modalHeader: {\n    defaultMessage: 'Your changes will be lost.',\n    description: 'Modal heading',\n  },\n  modalMessage: {\n    defaultMessage: 'Keep changes?',\n    description: 'Confirmation message',\n  },\n  cancelButtonLabel: {\n    defaultMessage: 'Discard',\n    description: 'Button label',\n  },\n  successButtonLabel: {\n    defaultMessage: 'Keep',\n    description: 'Button label',\n  },\n})\n\nexport const Footer = () => {\n  const { formatMessage } = useIntl()\n  const { reset } = useForm()\n\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const handleDiscard = () => setShowConfirmation(true)\n\n  const handleDialogClose = () => setShowConfirmation(false)\n\n  const handleFormReset = () => {\n    setShowConfirmation(false)\n    reset()\n  }\n\n  return (\n    <>\n      {showConfirmation && (\n        <ConfirmationDialog\n          heading={formatMessage(modalLabels.modalHeader)}\n          message={formatMessage(modalLabels.modalMessage)}\n          cancelLabel={formatMessage(modalLabels.cancelButtonLabel)}\n          successLabel={formatMessage(modalLabels.successButtonLabel)}\n          onClose={handleDialogClose}\n          onCancel={handleFormReset}\n          onSuccess={handleDialogClose}\n        />\n      )}\n      <FormSpy\n        subscription={{\n          validating: true,\n          submitting: true,\n          dirty: true,\n        }}\n      >\n        {({ validating, submitting, dirty }) =>\n          dirty && (\n            <FooterContainer>\n              <FooterButton\n                type=\"button\"\n                kind={KIND.tertiary}\n                onClick={() => handleDiscard()}\n                data-pendo=\"event-level-IRP-config/discard-changes\"\n              >\n                <FormattedMessage\n                  defaultMessage=\"Discard Changes\"\n                  description=\"Button label\"\n                />\n              </FooterButton>\n              <FooterButton\n                type=\"submit\"\n                disabled={submitting || validating}\n                overrides={successButtonOverrides}\n                data-pendo=\"event-level-IRP-config/save-changes\"\n              >\n                <FormattedMessage\n                  defaultMessage=\"Save Changes\"\n                  description=\"Button label\"\n                />\n              </FooterButton>\n            </FooterContainer>\n          )\n        }\n      </FormSpy>\n    </>\n  )\n}\n","import { VFC, useEffect, useMemo, useRef, useState } from 'react'\nimport { Config, FORM_ERROR } from 'final-form'\nimport { Form as FinalForm } from 'react-final-form'\nimport { Prompt } from 'react-router-dom'\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl'\nimport { ModalSpinner } from '@jifflenow/brightui/modal-spinner'\nimport { Option } from '@jifflenow/brightui/select'\nimport { useMe } from 'providers/MeProvider'\nimport { EventMainHeader } from 'components/EventMainHeader'\nimport {\n  mutateBulkUpsertEventConfigs,\n  useApolloClient,\n  useEventConfigQuery,\n} from 'gql'\nimport {\n  bulkFetchLocationConfigsByName_bulkFetchLocationConfigsByName as LocationConfigsByName,\n  bulkFetchLocationConfigsByName_bulkFetchLocationConfigsByName_configValue_CustomNameValue as CustomNameValue,\n  bulkFetchLocationConfigsByName_bulkFetchLocationConfigsByName_configValue_IrpEnabledEngagementTypes as IrpEnabledEngagementTypes,\n} from 'gql/types/bulkFetchLocationConfigsByName'\nimport { BulkLocationConfigUpdateInput } from 'gql/types/globalTypes'\nimport {\n  bulkUpsertLocationConfigsVariables,\n  bulkUpsertLocationConfigs_bulkUpsertLocationConfigs_locationConfigs_configValue_CustomNameValue as UpsertCustomNameValue,\n  bulkUpsertLocationConfigs_bulkUpsertLocationConfigs_locationConfigs_configValue_IrpEnabledEngagementTypes as UpsertIrpEnabledEngagementTypes,\n} from 'gql/types/bulkUpsertLocationConfigs'\nimport { useBeforeUnload } from 'utils/useBeforeUnload'\nimport { showErrorToast, showSuccessToast } from 'utils/toast'\nimport { useEventLocation } from 'providers/LocationProvider'\nimport { upsertSystemConfigurations, useQueryClient } from 'rest'\nimport { components } from 'types/openapi'\nimport { Container, Heading, StyledForm } from './styled-components'\nimport { FormFields } from './FormFields'\nimport { FormProps, FormValues } from './types'\nimport { IrpContentLoader } from './IrpContentLoader'\nimport { Footer } from './Footer'\n\ntype LocationConfigFormPayload = components['schemas']['LocationConfigForm']['configs']\n\nconst messages = defineMessages({\n  promptMessage: {\n    defaultMessage: 'Are you sure you want to leave?',\n    description: 'Prompt message',\n  },\n  updateError: {\n    defaultMessage:\n      '{failureCount, number} out of {totalCount, number} {totalCount, plural, one {config} other {configs}} failed to save',\n    description: 'Error message',\n  },\n  genericFieldErrorMessage: {\n    defaultMessage: 'Error saving changes',\n    description: 'Field error message',\n  },\n  successMessage: {\n    defaultMessage: 'Your changes have been saved successfully',\n    description: 'Success message',\n  },\n  genericError: {\n    defaultMessage: 'Something is not right. Please retry.',\n    description: 'Error message',\n  },\n})\n\nconst LoadingShimmer = () => (\n  <Container>\n    <IrpContentLoader />\n  </Container>\n)\n\nconst Form: VFC<FormProps> = ({\n  loading,\n  formRenderProps: { handleSubmit, dirty },\n}) => {\n  const { formatMessage } = useIntl()\n  const shimmerShown = useRef(false)\n  const unload = useBeforeUnload()\n\n  useEffect(() => {\n    unload(dirty)\n  }, [dirty, unload])\n\n  useEffect(() => {\n    if (!loading && !shimmerShown.current) {\n      shimmerShown.current = true\n    }\n  }, [loading])\n\n  return (\n    <StyledForm onSubmit={handleSubmit} noValidate>\n      <Prompt when={dirty} message={formatMessage(messages.promptMessage)} />\n      {loading && !shimmerShown.current ? (\n        <LoadingShimmer />\n      ) : (\n        <>\n          <Container>\n            <Heading>\n              <FormattedMessage\n                defaultMessage=\"Inbound Request Page\"\n                description=\"Page heading\"\n              />\n            </Heading>\n            <FormFields />\n          </Container>\n          <Footer />\n        </>\n      )}\n    </StyledForm>\n  )\n}\n\nconst filterLocationConfigs = (\n  response: LocationConfigsByName[],\n  fields: string[]\n) =>\n  response.filter(({ configName }) => !!fields.find(key => key === configName))\n\nconst commonSettingNames = [\n  'enable_external_widget',\n  'external_widget_token',\n  'enable_company_logo_in_ext_widget',\n  'enable_event_banner_in_ext_widget',\n  'external_widget_header_text',\n  'external_widget_help_text',\n  'external_widget_form_header_text',\n  'ext_widget_theme',\n]\nconst engagementSettingName = ['irp_enabled_engagement_types']\nconst meetNowSettingNames = [\n  'enable_irp_instant_meeting',\n  'irp_instant_meeting_url',\n  'irp_instant_meeting_label',\n]\n\nexport const InboundRequestPage = () => {\n  const { formatMessage } = useIntl()\n  const client = useApolloClient()\n  const queryClient = useQueryClient()\n  const { role, eventRole } = useMe().data.attributes\n  const [showLoader, setShowLoader] = useState(false)\n\n  const {\n    attributes: { systemName: eventName, version },\n  } = useEventLocation().location!\n\n  const settingNames = useMemo(\n    () => [\n      ...commonSettingNames,\n      ...((eventRole ?? role) === 'CSM' ? meetNowSettingNames : []),\n    ],\n    [eventRole, role]\n  )\n\n  const {\n    loading,\n    bulkFetchLocationConfigsByName = [],\n    refetch,\n  } = useEventConfigQuery({\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      names:\n        version === '1'\n          ? settingNames\n          : [...settingNames, ...engagementSettingName],\n    },\n    fetchPolicy: 'cache-and-network',\n    onError: () => {\n      showErrorToast(formatMessage(messages.genericError))\n    },\n  })\n\n  const settings = useMemo(\n    () => filterLocationConfigs(bulkFetchLocationConfigsByName, settingNames),\n    [bulkFetchLocationConfigsByName, settingNames]\n  )\n\n  const engagementSetting = useMemo(\n    () =>\n      filterLocationConfigs(\n        bulkFetchLocationConfigsByName,\n        engagementSettingName\n      ),\n    [bulkFetchLocationConfigsByName]\n  )\n\n  const initialValues: FormValues = useMemo(\n    () => ({\n      ...settings.reduce(\n        (acc, { configName, configValue }) => ({\n          ...acc,\n          [configName]: (configValue as CustomNameValue).value,\n        }),\n        {} as FormValues\n      ),\n      ...(version === '2' &&\n        engagementSetting.reduce(\n          (acc, { configName, configValue }) => ({\n            ...acc,\n            [configName]: JSON.stringify(\n              (configValue as IrpEnabledEngagementTypes).irpEnabledEngagementTypes.map(\n                ({ __typename, ...rest }) => rest\n              )\n            ),\n          }),\n          {} as FormValues\n        )),\n    }),\n    [engagementSetting, settings, version]\n  )\n\n  const handleSubmit: Config<FormValues>['onSubmit'] = async (\n    values,\n    { change, getFieldState }\n  ) => {\n    try {\n      let configsToUpdate = settings.reduce<BulkLocationConfigUpdateInput[]>(\n        (acc, { configName, configValue: previousValue }) => {\n          const { display_name, value } = previousValue as CustomNameValue\n\n          const data: BulkLocationConfigUpdateInput[] =\n            value !== values[configName as keyof FormValues]\n              ? [\n                  ...acc,\n                  {\n                    configName,\n                    configValue: {\n                      display_name,\n                      value: values[configName as keyof FormValues],\n                    },\n                  },\n                ]\n              : acc\n\n          return data\n        },\n        []\n      )\n\n      setShowLoader(true)\n\n      if (version === '1') {\n        const configs: LocationConfigFormPayload = configsToUpdate.reduce(\n          (acc, { configName, configValue }) => ({\n            ...acc,\n            [configName]:\n              configName === 'ext_widget_theme'\n                ? JSON.parse(values[configName as keyof FormValues])\n                : configValue?.value,\n          }),\n          {}\n        )\n        const engagementTypesField = getFieldState(\n          'irp_enabled_engagement_types'\n        )\n        if (engagementTypesField?.dirty) {\n          configs.irp_enabled_engagement_types = JSON.parse(\n            values['irp_enabled_engagement_types' as keyof FormValues]\n          ).map(({ id }: Option) => id)\n        }\n\n        const { failureCount, totalCount, locationConfigs, successCount } = (\n          await upsertSystemConfigurations({\n            path: { eventName },\n            payload: { configs },\n          })\n        ).data\n\n        setShowLoader(false)\n        if (failureCount) {\n          showErrorToast(\n            formatMessage(messages.updateError, { totalCount, failureCount })\n          )\n          locationConfigs.forEach(\n            ({ success, configName }) =>\n              !success &&\n              change(\n                configName as keyof FormValues,\n                initialValues[configName as keyof FormValues]\n              )\n          )\n          const errors = locationConfigs.reduce(\n            (acc, { success, configName }) =>\n              success\n                ? acc\n                : {\n                    ...acc,\n                    [configName]: formatMessage(\n                      messages.genericFieldErrorMessage\n                    ),\n                  },\n            {}\n          )\n          if (successCount) {\n            refetch()\n          }\n\n          return errors\n        }\n\n        if (engagementTypesField?.dirty) {\n          await queryClient.refetchQueries('getEngagementTypeSettings')\n        }\n\n        await client.refetchQueries({\n          include: ['bulkFetchLocationConfigsByName'],\n        })\n        client.refetchQueries({ include: ['getEventLocationInfo'] })\n      } else if (version === '2') {\n        configsToUpdate = engagementSetting.reduce<\n          BulkLocationConfigUpdateInput[]\n        >((acc, { configName, configValue: previousValue }) => {\n          const {\n            display_name,\n            irpEnabledEngagementTypes,\n          } = previousValue as IrpEnabledEngagementTypes\n\n          const parsedValue = JSON.parse(values[configName as keyof FormValues])\n\n          return JSON.stringify(\n            irpEnabledEngagementTypes.map(({ __typename, ...rest }) => rest)\n          ) !== values[configName as keyof FormValues]\n            ? [\n                ...acc,\n                {\n                  configName,\n                  irpEnabledEngagementTypes: {\n                    display_name,\n                    value: parsedValue.some(({ id }: Option) => id === 'ALL')\n                      ? [\n                          {\n                            display_name: 'All',\n                            id: 'ALL',\n                          },\n                        ]\n                      : parsedValue,\n                  },\n                },\n              ]\n            : acc\n        }, configsToUpdate)\n\n        const variables: bulkUpsertLocationConfigsVariables = {\n          configsToUpdate,\n        }\n\n        const { failureCount, totalCount, locationConfigs, successCount } = (\n          await mutateBulkUpsertEventConfigs(client, {\n            variables,\n            refetchQueries: ['bulkFetchLocationConfigsByName'],\n          })\n        ).data!.bulkUpsertLocationConfigs\n\n        setShowLoader(false)\n        if (failureCount) {\n          showErrorToast(\n            formatMessage(messages.updateError, { totalCount, failureCount })\n          )\n          locationConfigs.forEach(\n            ({ success, configName, configValue }) =>\n              !success &&\n              change(\n                configName as keyof FormValues,\n                configValue.__typename === 'CustomNameValue'\n                  ? (configValue as UpsertCustomNameValue).value\n                  : JSON.stringify(\n                      (configValue as UpsertIrpEnabledEngagementTypes).irpEnabledEngagementTypes.map(\n                        ({ __typename, ...rest }) => rest\n                      )\n                    )\n              )\n          )\n          const errors = locationConfigs.reduce(\n            (acc, { success, configName }) =>\n              success\n                ? acc\n                : {\n                    ...acc,\n                    [configName]: formatMessage(\n                      messages.genericFieldErrorMessage\n                    ),\n                  },\n            {}\n          )\n          if (successCount) {\n            refetch()\n          }\n\n          return errors\n        }\n\n        refetch()\n        client.refetchQueries({ include: ['getEventLocationInfo'] })\n      }\n      showSuccessToast(formatMessage(messages.successMessage))\n      return undefined\n    } catch (error) {\n      setShowLoader(false)\n      showErrorToast(formatMessage(messages.genericError))\n      return { [FORM_ERROR]: { code: 'GenericError' } }\n    }\n  }\n\n  return (\n    <>\n      {showLoader && <ModalSpinner />}\n      <EventMainHeader />\n      <FinalForm<FormValues>\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        render={props => <Form formRenderProps={props} loading={loading} />}\n      />\n    </>\n  )\n}\n","import { useCallback } from 'react'\nimport { QueryFunction, useQuery, UseQueryOptions } from 'react-query'\nimport { fetchEngagementTypes_fetchEngagementTypes } from 'gql/types/fetchEngagementTypes'\nimport { fetchEngagementTypesQuery, useApolloClient } from 'gql'\nimport { fetchEngagementTypes } from 'rest'\n\ntype ParamsType = {\n  eventName: string\n  version: string\n  showOnlyNonConsecutiveEngagementTypes?: boolean\n  showIrpEnabled?: boolean\n}\n\ntype QueryFuncResponseType = Omit<\n  fetchEngagementTypes_fetchEngagementTypes & {\n    irp_enabled?: boolean\n    uuid?: string\n  },\n  '__typename'\n>[]\n\nexport const useEngagementTypesQuery = (\n  params: ParamsType,\n  options?: Omit<\n    UseQueryOptions<\n      QueryFuncResponseType,\n      Error,\n      QueryFuncResponseType,\n      ['getEngagementTypeSettings', ParamsType]\n    >,\n    'queryKey' | 'queryFn'\n  >\n) => {\n  const client = useApolloClient()\n\n  const callback = useCallback<\n    QueryFunction<\n      QueryFuncResponseType,\n      ['getEngagementTypeSettings', ParamsType]\n    >\n  >(\n    async ({\n      queryKey: [\n        ,\n        {\n          version,\n          eventName,\n          showIrpEnabled,\n          showOnlyNonConsecutiveEngagementTypes,\n        },\n      ],\n    }) => {\n      if (version === '2') {\n        const {\n          data: { fetchEngagementTypes },\n        } = await fetchEngagementTypesQuery(client, {\n          variables: {\n            ...(showOnlyNonConsecutiveEngagementTypes && {\n              showOnlyNonConsecutiveEngagementTypes: true,\n            }),\n            showCompleted: true,\n          },\n          fetchPolicy: 'network-only',\n        })\n\n        return fetchEngagementTypes\n      } else {\n        const data = await fetchEngagementTypes({\n          path: { eventName },\n          query: {\n            ...(showIrpEnabled && { show_irp_enabled: 'true' }),\n            ...(showOnlyNonConsecutiveEngagementTypes && {\n              show_only_non_consecutive_engagement_types: 'true',\n            }),\n          },\n        })\n\n        return data.data\n      }\n    },\n    [client]\n  )\n\n  return useQuery(['getEngagementTypeSettings', params], callback, options)\n}\n","import { styled } from '@jifflenow/brightui'\n\nexport const CopyContentWrapper = styled('div', ({ $theme: { sizing } }) => ({\n  width: 'fit-content',\n  marginTop: sizing.scale500,\n}))\n","import { ButtonOverrides } from '@jifflenow/brightui/button'\n\nexport const copyButtonOverrides: ButtonOverrides = {\n  BaseButton: {\n    style: ({ $theme: { sizing } }) => ({\n      paddingLeft: sizing.scale0,\n    }),\n  },\n}\n","import { FC } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { defineMessages, useIntl } from 'react-intl'\nimport { CopyOutlined } from '@jifflenow/brightui/icon'\nimport { Paragraph1 } from '@jifflenow/brightui/typography'\nimport { Button } from '@jifflenow/brightui/button'\nimport {\n  PLACEMENT,\n  StatefulTooltip,\n  TRIGGER_TYPE,\n} from '@jifflenow/brightui/tooltip'\nimport { CopyEmbedSourceCodeProps } from './types'\nimport { CopyContentWrapper } from './styled-components'\nimport { copyButtonOverrides } from './overrides'\n\nconst messages = defineMessages({\n  copiedLabel: {\n    defaultMessage: 'Copied',\n    description: 'Field label',\n  },\n})\n\nexport const CopyEmbedSourceCode: FC<CopyEmbedSourceCodeProps> = ({\n  buttonLabel,\n  link,\n  title,\n  disabled,\n}) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Paragraph1>{title}</Paragraph1>\n      <StatefulTooltip\n        content={() => formatMessage(messages.copiedLabel)}\n        placement={PLACEMENT.bottom}\n        triggerType={TRIGGER_TYPE.click}\n        focusLock={false}\n        showArrow\n      >\n        <CopyContentWrapper>\n          <CopyToClipboard text={link}>\n            <Button\n              startEnhancer={CopyOutlined}\n              kind=\"minimal\"\n              type=\"button\"\n              overrides={copyButtonOverrides}\n              disabled={disabled}\n            >\n              {buttonLabel}\n            </Button>\n          </CopyToClipboard>\n        </CopyContentWrapper>\n      </StatefulTooltip>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nexport const useBeforeUnload = () => {\n  const [showBeforeUnloadPopup, setShowBeforeUnloadPopup] = useState(false)\n\n  useEffect(() => {\n    const handler = (event: BeforeUnloadEvent) => {\n      event.preventDefault()\n      event.returnValue = ''\n    }\n\n    if (showBeforeUnloadPopup) {\n      window.addEventListener('beforeunload', handler)\n    } else {\n      window.removeEventListener('beforeunload', handler)\n    }\n\n    return () => {\n      window.removeEventListener('beforeunload', handler)\n    }\n  }, [showBeforeUnloadPopup])\n\n  return setShowBeforeUnloadPopup\n}\n","/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nfunction loadScript (src, opts, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var script = document.createElement('script');\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  cb = cb || function () {};\n  script.type = opts.type || 'text/javascript';\n  script.charset = opts.charset || 'utf8';\n  script.async = 'async' in opts ? !!opts.async : true;\n  script.src = src;\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs);\n  }\n  if (opts.text) {\n    script.text = String(opts.text);\n  }\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd;\n  onend(script, cb);\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n  head.appendChild(script);\n}\nfunction setAttributes(script, attrs) {\n  for (var attr in attrs) {\n    script.setAttribute(attr, attrs[attr]);\n  }\n}\nfunction stdOnEnd(script, cb) {\n  script.onload = function () {\n    this.onerror = this.onload = null;\n    cb(null, script);\n  };\n  script.onerror = function () {\n    this.onerror = this.onload = null;\n    cb(new Error('Failed to load ' + this.src), script);\n  };\n}\nfunction ieOnEnd(script, cb) {\n  script.onreadystatechange = function () {\n    if (this.readyState != 'complete' && this.readyState != 'loaded') {\n      return;\n    }\n    this.onreadystatechange = null;\n    cb(null, script);\n  };\n}\n\nvar promise;\nfunction getEditorNamespace(editorURL, onNamespaceLoaded) {\n  if ('CKEDITOR' in window) {\n    return Promise.resolve(CKEDITOR);\n  }\n  if (typeof editorURL !== 'string' || editorURL.length < 1) {\n    return Promise.reject(new TypeError('CKEditor URL must be a non-empty string.'));\n  }\n  if (!promise) {\n    promise = getEditorNamespace.scriptLoader(editorURL).then(function (res) {\n      if (onNamespaceLoaded) {\n        onNamespaceLoaded(res);\n      }\n      return res;\n    });\n  }\n  return promise;\n}\ngetEditorNamespace.scriptLoader = function (editorURL) {\n  return new Promise(function (scriptResolve, scriptReject) {\n    loadScript(editorURL, function (err) {\n      promise = undefined;\n      if (err) {\n        return scriptReject(err);\n      } else if (!window.CKEDITOR) {\n        return scriptReject(new Error('Script loaded from editorUrl doesn\\'t provide CKEDITOR namespace.'));\n      }\n      scriptResolve(CKEDITOR);\n    });\n  });\n};\n\nfunction debounce(fn, delay) {\n  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var cancel;\n  return function () {\n    clearTimeout(cancel);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    cancel = setTimeout(fn.bind.apply(fn, [context].concat(args)), delay);\n  };\n}\n\nexport { debounce, getEditorNamespace };\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport * as React from 'react';\nimport { getEditorNamespace } from 'ckeditor4-integrations-common';\nimport * as PropTypes from 'prop-types';\n\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n}\nfunction __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nvar events = [\n    'activeEnterModeChange',\n    'activeFilterChange',\n    'afterCommandExec',\n    'afterInsertHtml',\n    'afterPaste',\n    'afterPasteFromWord',\n    'afterSetData',\n    'afterUndoImage',\n    'ariaEditorHelpLabel',\n    'ariaWidget',\n    'autogrow',\n    'beforeCommandExec',\n    'beforeDestroy',\n    'beforeGetData',\n    'beforeModeUnload',\n    'beforeSetMode',\n    'beforeUndoImage',\n    'blur',\n    'change',\n    'configLoaded',\n    'contentDirChanged',\n    'contentDom',\n    'contentDomInvalidated',\n    'contentDomUnload',\n    'contentPreview',\n    'customConfigLoaded',\n    'dataFiltered',\n    'dataReady',\n    'destroy',\n    'dialogHide',\n    'dialogShow',\n    'dirChanged',\n    'doubleclick',\n    'dragend',\n    'dragstart',\n    'drop',\n    'elementsPathUpdate',\n    'exportPdf',\n    'fileUploadRequest',\n    'fileUploadResponse',\n    'floatingSpaceLayout',\n    'focus',\n    'getData',\n    'getSnapshot',\n    'insertElement',\n    'insertHtml',\n    'insertText',\n    'instanceReady',\n    'key',\n    'langLoaded',\n    'loadSnapshot',\n    'loaded',\n    'lockSnapshot',\n    'maximize',\n    'menuShow',\n    'mode',\n    'notificationHide',\n    'notificationShow',\n    'notificationUpdate',\n    'paste',\n    'pasteFromWord',\n    'pluginsLoaded',\n    'readOnly',\n    'removeFormatCleanup',\n    'required',\n    'resize',\n    'save',\n    'saveSnapshot',\n    'selectionChange',\n    'setData',\n    'stylesRemove',\n    'stylesSet',\n    'template',\n    'toDataFormat',\n    'toHtml',\n    'uiSpace',\n    'unlockSnapshot',\n    'updateSnapshot',\n    'widgetDefinition'\n];\nvar namespaceEvents = ['beforeLoad', 'namespaceLoaded'];\nvar defaultEvents = __spreadArray(__spreadArray([], events, true), namespaceEvents, true);\nvar EVENT_PREFIX = '__CKE__';\nfunction prefixEventName(evtName) {\n    return \"\".concat(EVENT_PREFIX).concat(evtName);\n}\nfunction stripPrefix(prefixedEventName) {\n    return prefixedEventName.substr(EVENT_PREFIX.length);\n}\nfunction eventNameToHandlerName(evtName) {\n    var cap = evtName.substr(0, 1).toUpperCase() + evtName.substr(1);\n    return \"on\".concat(cap);\n}\nfunction handlerNameToEventName(handlerName) {\n    return handlerName.substr(2, 1).toLowerCase() + handlerName.substr(3);\n}\nvar CKEditorEventAction = __spreadArray(__spreadArray([], events, true), namespaceEvents, true).reduce(function (acc, evtName) {\n    var _a;\n    return __assign(__assign({}, acc), (_a = {}, _a[evtName] = prefixEventName(evtName), _a));\n}, {});\n\nfunction camelToKebab(str) {\n    return str\n        .split(/(?=[A-Z])/)\n        .join('-')\n        .toLowerCase();\n}\nfunction uniqueName() {\n    return Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, '')\n        .substr(0, 5);\n}\nfunction getStyle(type, status, style) {\n    var hidden = { display: 'none', visibility: 'hidden' };\n    if (type === 'classic') {\n        return hidden;\n    }\n    return status === 'ready' ? style !== null && style !== void 0 ? style : undefined : hidden;\n}\n\nfunction registerEditorEventHandler(_a) {\n    var debug = _a.debug, editor = _a.editor, evtName = _a.evtName, handler = _a.handler, listenerData = _a.listenerData, priority = _a.priority;\n    var handlerId = debug && uniqueName();\n    var _handler = handler;\n    if (debug) {\n        _handler = function (args) {\n            console.log({\n                operation: 'invoke',\n                editor: editor.name,\n                evtName: evtName,\n                handlerId: handlerId,\n                data: args.data,\n                listenerData: args.listenerData\n            });\n            handler(args);\n        };\n    }\n    if (debug) {\n        console.log({\n            operation: 'register',\n            editor: editor.name,\n            evtName: evtName,\n            handlerId: handlerId\n        });\n    }\n    editor.on(evtName, _handler, null, listenerData, priority);\n    return function () {\n        if (debug) {\n            console.log({\n                operation: 'unregister',\n                editor: editor.name,\n                evtName: evtName,\n                handlerId: handlerId\n            });\n        }\n        editor.removeListener(evtName, _handler);\n    };\n}\n\nvar useEffect$1 = React.useEffect, useReducer = React.useReducer, useRef$1 = React.useRef;\nvar defEditorUrl = 'https://cdn.ckeditor.com/4.19.0/standard-all/ckeditor.js';\nvar defConfig = {};\nfunction useCKEditor(_a) {\n    var config = _a.config, debug = _a.debug, dispatchEvent = _a.dispatchEvent, _b = _a.subscribeTo, subscribeTo = _b === void 0 ? defaultEvents : _b, editorUrl = _a.editorUrl, element = _a.element, initContent = _a.initContent, _c = _a.type, type = _c === void 0 ? 'classic' : _c;\n    var editorUrlRef = useRef$1(editorUrl || defEditorUrl);\n    var subscribeToRef = useRef$1(subscribeTo !== null && subscribeTo !== void 0 ? subscribeTo : defaultEvents);\n    var debugRef = useRef$1(debug);\n    var dispatchEventRef = useRef$1(dispatchEvent);\n    var initContentRef = useRef$1(initContent);\n    var configRef = useRef$1(config || defConfig);\n    var typeRef = useRef$1(type);\n    var _d = useReducer(reducer, {\n        editor: undefined,\n        hookStatus: 'init'\n    }), _e = _d[0], editor = _e.editor, hookStatus = _e.hookStatus, dispatch = _d[1];\n    useEffect$1(function () {\n        if (element && !editor) {\n            dispatch({ type: 'loading' });\n            var onNamespaceLoaded = function (CKEDITOR) {\n                var _a;\n                if (subscribeToRef.current.indexOf('namespaceLoaded') !== -1) {\n                    (_a = dispatchEventRef.current) === null || _a === void 0 ? void 0 : _a.call(dispatchEventRef, {\n                        type: CKEditorEventAction.namespaceLoaded,\n                        payload: CKEDITOR\n                    });\n                }\n            };\n            var initEditor = function (CKEDITOR) {\n                var _a;\n                var isInline = typeRef.current === 'inline';\n                var isReadOnly = configRef.current.readOnly;\n                if (subscribeToRef.current.indexOf('beforeLoad') !== -1) {\n                    (_a = dispatchEventRef.current) === null || _a === void 0 ? void 0 : _a.call(dispatchEventRef, {\n                        type: CKEditorEventAction.beforeLoad,\n                        payload: CKEDITOR\n                    });\n                }\n                var editor = CKEDITOR[isInline ? 'inline' : 'replace'](element, configRef.current);\n                var subscribedEditorEvents = subscribeToRef.current.filter(function (evtName) { return namespaceEvents.indexOf(evtName) === -1; });\n                subscribedEditorEvents.forEach(function (evtName) {\n                    registerEditorEventHandler({\n                        debug: debugRef.current,\n                        editor: editor,\n                        evtName: evtName,\n                        handler: function (payload) {\n                            var _a;\n                            (_a = dispatchEventRef.current) === null || _a === void 0 ? void 0 : _a.call(dispatchEventRef, {\n                                type: \"\".concat(EVENT_PREFIX).concat(evtName),\n                                payload: payload\n                            });\n                        }\n                    });\n                });\n                registerEditorEventHandler({\n                    debug: debugRef.current,\n                    editor: editor,\n                    evtName: 'loaded',\n                    handler: function () {\n                        dispatch({ type: 'loaded' });\n                    },\n                    priority: -1\n                });\n                registerEditorEventHandler({\n                    debug: debugRef.current,\n                    editor: editor,\n                    evtName: 'instanceReady',\n                    handler: function (_a) {\n                        var editor = _a.editor;\n                        dispatch({ type: 'ready' });\n                        if (isInline && !isReadOnly) {\n                            editor.setReadOnly(false);\n                        }\n                        if (initContentRef.current) {\n                            editor.setData(initContentRef.current, {\n                                noSnapshot: true,\n                                callback: function () {\n                                    editor.resetUndo();\n                                }\n                            });\n                        }\n                    },\n                    priority: -1\n                });\n                registerEditorEventHandler({\n                    debug: debugRef.current,\n                    editor: editor,\n                    evtName: 'destroy',\n                    handler: function () {\n                        dispatch({ type: 'destroyed' });\n                    },\n                    priority: -1\n                });\n                dispatch({\n                    type: 'unloaded',\n                    payload: editor\n                });\n            };\n            getEditorNamespace(editorUrlRef.current, onNamespaceLoaded)\n                .then(initEditor)\n                .catch(function (error) {\n                if (process.env.NODE_ENV !== 'test') {\n                    console.error(error);\n                }\n                dispatch({ type: 'error' });\n            });\n        }\n        return function () {\n            if (editor) {\n                editor.destroy();\n            }\n        };\n    }, [editor, element]);\n    return {\n        editor: editor,\n        status: editor === null || editor === void 0 ? void 0 : editor.status,\n        error: hookStatus === 'error',\n        loading: hookStatus === 'loading'\n    };\n}\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'init':\n            return __assign(__assign({}, state), { hookStatus: 'init' });\n        case 'loading':\n            return __assign(__assign({}, state), { hookStatus: 'loading' });\n        case 'unloaded':\n            return {\n                editor: action.payload,\n                hookStatus: 'unloaded'\n            };\n        case 'loaded':\n            return __assign(__assign({}, state), { hookStatus: 'loaded' });\n        case 'ready':\n            return __assign(__assign({}, state), { hookStatus: 'ready' });\n        case 'destroyed':\n            return {\n                editor: undefined,\n                hookStatus: 'destroyed'\n            };\n        case 'error':\n            return {\n                editor: undefined,\n                hookStatus: 'error'\n            };\n        default:\n            return state;\n    }\n}\n\nvar useEffect = React.useEffect, useRef = React.useRef, useState = React.useState;\nfunction CKEditor(_a) {\n    var _b = _a.config, config = _b === void 0 ? {} : _b, debug = _a.debug, editorUrl = _a.editorUrl, initData = _a.initData, name = _a.name, readOnly = _a.readOnly, style = _a.style, type = _a.type,\n    handlers = __rest(_a, [\"config\", \"debug\", \"editorUrl\", \"initData\", \"name\", \"readOnly\", \"style\", \"type\"]);\n    var _c = useState(null), element = _c[0], setElement = _c[1];\n    var refs = useRef(handlers);\n    var dispatchEvent = function (_a) {\n        var type = _a.type, payload = _a.payload;\n        var handlerName = eventNameToHandlerName(stripPrefix(type));\n        var handler = refs.current[handlerName];\n        if (handler) {\n            handler(payload);\n        }\n    };\n    if (config && typeof readOnly === 'boolean') {\n        config.readOnly = readOnly;\n    }\n    var _d = useCKEditor({\n        config: config,\n        dispatchEvent: dispatchEvent,\n        debug: debug,\n        editorUrl: editorUrl,\n        element: element,\n        initContent: typeof initData === 'string' ? initData : undefined,\n        subscribeTo: Object.keys(handlers)\n            .filter(function (key) { return key.indexOf('on') === 0; })\n            .map(handlerNameToEventName),\n        type: type\n    }), editor = _d.editor, status = _d.status;\n    useEffect(function () {\n        var canSetStyles = type !== 'inline' &&\n            editor &&\n            (status === 'loaded' || status === 'ready');\n        if (style && canSetStyles) {\n            editor.container.setStyles(style);\n        }\n        return function () {\n            if (style && canSetStyles) {\n                Object.keys(style)\n                    .map(camelToKebab)\n                    .forEach(function (styleName) {\n                    editor.container.removeStyle(styleName);\n                });\n            }\n        };\n    }, [editor, status, style, type]);\n    useEffect(function () {\n        if (editor && status === 'ready' && typeof readOnly === 'boolean') {\n            editor.setReadOnly(readOnly);\n        }\n    }, [editor, status, readOnly]);\n    return (React.createElement(\"div\", { id: name !== null && name !== void 0 ? name : undefined, ref: setElement, style: getStyle(type !== null && type !== void 0 ? type : 'classic', status, style) }, typeof initData === 'string' ? null : initData));\n}\nvar propTypes = __assign({\n    config: PropTypes.object,\n    debug: PropTypes.bool,\n    editorUrl: PropTypes.string,\n    initData: PropTypes.node,\n    name: PropTypes.string,\n    readOnly: PropTypes.bool,\n    style: PropTypes.object,\n    type: PropTypes.oneOf(['classic', 'inline']) }, defaultEvents.reduce(function (acc, key) {\n    var _a;\n    return __assign(__assign({}, acc), (_a = {}, _a[eventNameToHandlerName(key)] = PropTypes.func, _a));\n}, {}));\nCKEditor.propTypes = propTypes;\n\nexport { CKEditor, CKEditorEventAction, prefixEventName, registerEditorEventHandler, stripPrefix, useCKEditor };\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import { useEffect, useState } from 'react'\nimport {\n  useCKEditor as useCKEditorBase,\n  CKEditorEventAction,\n} from 'ckeditor4-react'\nimport merge from 'deepmerge'\nimport { useStyletron } from '@jifflenow/brightui'\n\nconst editorUrl = `${process.env.REACT_APP_CKEDITOR_URL}?t=MAUD`\n\nconst wordCountDefaults = {\n  showParagraphs: false,\n  showWordCount: false,\n  showCharCount: true,\n  countSpacesAsChars: true,\n  hardLimit: true,\n}\n\nconst config = {\n  toolbarGroups: [\n    { name: 'basicstyles', groups: ['basicstyles'] },\n    { name: 'styles', groups: ['styles'] },\n    { name: 'links', groups: ['links'] },\n    { name: 'clipboard', groups: ['undo'] },\n    { name: 'forms', groups: ['list'] },\n  ],\n  extraPlugins: 'editorplaceholder, wordcount',\n  removeButtons:\n    'Subscript,Superscript,Anchor,PasteFromWord,PasteText,Paste,Copy,Cut,Styles,Table',\n  format_tags: 'p;h1;h2;h3;pre',\n  removeDialogTabs: 'image:advanced;link:advanced',\n  linkShowTargetTab: false,\n  linkShowAdvancedTab: false,\n  dialog_backgroundCoverColor: 'black',\n  skin: 'bright',\n  delayIfDetached: true,\n}\n\nconst showTopBar = (editorId, isShowTopBar) => {\n  const editorTop = document.getElementById(editorId + '_top')\n  if (editorTop) {\n    editorTop.style.display = isShowTopBar ? 'block' : 'none'\n  }\n}\n\nexport const useCKEditor = props => {\n  const {\n    placeholder,\n    input: { value, onChange, onFocus, onBlur },\n    meta,\n    showTopBarOnFocus: isShowTopBarOnFocus,\n    config: customConfig,\n    maxLength,\n  } = props\n\n  const [, { colors }] = useStyletron()\n\n  const [element, setElement] = useState()\n  const [showLoader, setShowLoader] = useState(true)\n\n  const {\n    editor,\n    status: editorStatus,\n    error: ckeditorError,\n  } = useCKEditorBase({\n    editorUrl,\n    config: {\n      ...merge(config, customConfig),\n      editorplaceholder: placeholder,\n      wordcount: {\n        ...wordCountDefaults,\n        ...(maxLength ? { maxCharCount: maxLength } : null),\n      },\n    },\n    debug: process.env.NODE_ENV === 'development',\n    initContent: value,\n    dispatchEvent: ({ type, payload }) => {\n      const editorId = payload.editor.id\n      if (type === CKEditorEventAction.change) {\n        onChange(payload.editor.getData())\n      }\n      if (type === CKEditorEventAction.focus) {\n        onFocus()\n        isShowTopBarOnFocus && showTopBar(editorId, true)\n      }\n      if (type === CKEditorEventAction.blur) {\n        onBlur()\n        isShowTopBarOnFocus && showTopBar(editorId, false)\n      }\n    },\n    element,\n    subscribeTo: ['change', 'focus', 'blur'],\n  })\n\n  useEffect(() => {\n    const style = {\n      'border-color':\n        meta.touched && !!meta.error\n          ? colors.negative\n          : meta.active\n          ? colors.primary\n          : colors.mono600,\n      'border-style': 'solid',\n      'border-width': '1px',\n      'border-radius': '4px',\n      overflow: 'hidden',\n    }\n    const canSetStyles =\n      editor && (editorStatus === 'loaded' || editorStatus === 'ready')\n\n    if (canSetStyles) {\n      editor.container.setStyles(style)\n    }\n\n    return () => {\n      if (canSetStyles) {\n        Object.keys(style).forEach(styleName => {\n          editor.container.removeStyle(styleName)\n        })\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor, editorStatus, meta])\n\n  useEffect(() => {\n    if (editorStatus === 'ready' || editorStatus === 'loaded') {\n      setShowLoader(false)\n      editor.setData(value)\n      if (isShowTopBarOnFocus) {\n        showTopBar(editor.id, false)\n      }\n\n      const editorContainer = editor.container.$\n      editorContainer\n        .querySelector('.cke_bottom')\n        .setAttribute(\n          'style',\n          'border-top: none !important; background: none !important; padding: 0px 8px 2px 0px !important;'\n        )\n      editorContainer.querySelector(\n        '.cke_bottom .cke_wordcount'\n      ).style.display = 'none'\n\n      const ckeResizeElement = editorContainer.querySelector(\n        '.cke_bottom .cke_resizer'\n      )\n      if (ckeResizeElement) {\n        ckeResizeElement.setAttribute('style', 'margin-top: 0')\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editorStatus])\n\n  const editorStyle =\n    editorStatus !== 'ready' && editorStatus !== 'loaded'\n      ? { visibility: 'hidden' }\n      : undefined\n\n  return {\n    editor,\n    showLoader,\n    setElement,\n    editorStyle,\n    ckeditorError,\n  }\n}\n"],"names":["Root","styled","$theme","sizing","mediaQuery","display","flexDirection","flexShrink","justifyContent","marginBottom","scale100","minHeight","paddingLeft","scale1200","paddingRight","scale600","medium","scale700","scale500","FlexContainer","alignItems","Wrapper","borderBottomWidth","borderBottomStyle","borderBottomColor","colors","mono300","EventDetails","marginTop","StatusWrapper","marginRight","scale400","EventName","typography","HeadingSmall","color","mono900","textOverflow","whiteSpace","LocationDetails","withStyle","paddingBottom","scale0","EventInfo","StyledText","font400","mono700","EventDates","TimeIconWrapper","TimeZone","LogoWrapper","SandboxWrapper","scale300","SandboxText","Caption2","backgroundColor","warning50","borderColor","warning","borderRadius","borderStyle","borderWidth","fontSize","paddingTop","EventMainHeader","useEventLocation","location","attributes","displayName","filterStatus","mode","timeZone","startDate","endDate","address","eventTimeZone","useMemo","DateTime","setZone","offsetNameLong","urlPath","window","pathname","sandboxInstance","includes","status","formatDateRange","formatToStartOfTheDay","defaultMessage","values","br","Logo","StyledForm","height","overflow","Container","flex","scale1400","scale1000","Heading","mono800","scale950","Error","LabelSmall","negative700","WidgetRoot","scale750","LabelContainer","ToggleLabel","$bold","LabelLarge","Paragraph1","ViewPageLabel","ColorThemeLabel","Link","$disabled","primaryA","cursor","pointerEvents","opacity","ToggleDesc","Divider","borderTopWidth","borderTopStyle","borderTopColor","Group","width","maxWidth","EditorContainer","minWidth","PreviewContainer","scale900","IrpPreview","EditorRoot","EditorLabelContainer","EditorLabel","LabelMedium","NumberCircle","primary500","primary50","marginLeft","scale800","IrpTextEditor","scale850","large","flexWrap","CopySourceCodeContainer","CtaButtonContainer","FooterContainer","CommonFooterContainer","FormControlStyled","FormControl","EngagementTypesFormControl","IrpEngagementTypeRoot","IrpEngagementTypeHelpText","Caption1","toggleOverride","style","defineMessages","IrpColorTheme","formatMessage","useIntl","theme","useStyletron","primary","primaryDark","primaryLight","shadowFocus","mono400","useIrpTheme","Field","name","format","value","JSON","stringify","parse","Object","keys","render","input","onChange","meta","error","submitError","e","target","align","ALIGN","entries","map","ariaLabel","overrides","Input","props","RadioMarkOuter","$checked","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","RadioMarkInner","white","Label","IrpViewPageLink","label","disabled","a","chunks","href","rel","messages","yesLabel","noLabel","Toggle","desc","checked","defaultConfig","toolbarGroups","groups","RichText","config","placeholder","useCKEditor","merge","showTopBarOnFocus","setElement","editorStyle","id","ref","IrpEditor","htmlFor","getCallToActionButtonCode","buttonLabel","getIframeCode","url","irpSourceCodeEmbedLabel","irpSourceCodeEmbedButtonLabel","IrpEmbedSourceCodeCopy","enableExternalWidget","useFormState","initialValues","enable_external_widget","CopyEmbedSourceCode","title","link","irpCallToActionSourceCodeEmbedLabel","irpCallToActionSourceCodeEmbedButtonLabel","requestMeetingLabel","IrpCtaEmbedSourceCodeCopy","external_widget_token","ext_widget_theme","ctaEmbedCode","dangerouslySetInnerHTML","__html","allLabel","roleLabel","searchPlaceholder","helpText","IrpEngagementTypes","initialize","useForm","eventName","systemName","version","useEngagementTypesQuery","showIrpEnabled","showOnlyNonConsecutiveEngagementTypes","isLoading","fetchEngagementTypes","data","options","display_name","slice","sort","b","displayOrder","initialValue","filter","irp_enabled","fieldProps","afterSubmit","irp_enabled_engagement_types","multi","labelKey","backspaceClearsInputValue","searchable","IrpInput","required","validations","Validation","undefined","type","meetNowSourceCodeEmbedLabel","meetNowSourceCodeEmbedButtonLabel","MeetNowEmbedSourceCodeCopy","enableIrpInstantMeeting","enable_irp_instant_meeting","meetNowCTAEmbedLabel","meetNowCTACopyButtonLabel","MeetNowCtaEmbedSourceCodeCopy","irp_instant_meeting_url","irp_instant_meeting_label","enableIrpLabel","enableIrpDesc","viewIrpPageLabel","companyLogoLabel","displayEventBannerLabel","enableMeetNowLabel","viewMeetNowPageLabel","meetNowCallToActionInputLabel","meetNowCallToActionInputPlaceholder","altPreviewImage","irpHeaderLabel","irpHeaderPlaceholder","irpContentLabel","irpContentPlaceholder","irpFormHeaderLabel","irpFormHeaderPlaceholder","FormFields","useMe","role","eventRole","uploadImageUrl","protocol","host","number","extraPlugins","src","PreviewImage","alt","IrpContentLoader","loaderOptions","speed","primaryColor","mono200","secondaryColor","viewBox","y","x","rx","ry","modalLabels","modalHeader","modalMessage","cancelButtonLabel","successButtonLabel","Footer","reset","useState","showConfirmation","setShowConfirmation","handleDialogClose","ConfirmationDialog","heading","message","cancelLabel","successLabel","onClose","onCancel","onSuccess","subscription","validating","submitting","dirty","kind","KIND","onClick","successButtonOverrides","promptMessage","updateError","genericFieldErrorMessage","successMessage","genericError","LoadingShimmer","Form","loading","formRenderProps","handleSubmit","shimmerShown","useRef","unload","useBeforeUnload","useEffect","current","onSubmit","noValidate","when","filterLocationConfigs","response","fields","configName","find","key","commonSettingNames","engagementSettingName","meetNowSettingNames","InboundRequestPage","client","useApolloClient","queryClient","useQueryClient","showLoader","setShowLoader","settingNames","useEventConfigQuery","notifyOnNetworkStatusChange","variables","names","fetchPolicy","onError","showErrorToast","bulkFetchLocationConfigsByName","refetch","settings","engagementSetting","reduce","acc","configValue","irpEnabledEngagementTypes","__typename","change","getFieldState","configsToUpdate","configs","engagementTypesField","upsertSystemConfigurations","path","payload","failureCount","totalCount","locationConfigs","successCount","forEach","success","errors","refetchQueries","include","parsedValue","some","mutateBulkUpsertEventConfigs","bulkUpsertLocationConfigs","showSuccessToast","FORM_ERROR","code","params","callback","useCallback","queryKey","fetchEngagementTypesQuery","showCompleted","query","show_irp_enabled","show_only_non_consecutive_engagement_types","useQuery","CopyContentWrapper","copyButtonOverrides","BaseButton","copiedLabel","content","placement","PLACEMENT","triggerType","TRIGGER_TYPE","focusLock","showArrow","CopyToClipboard","text","startEnhancer","CopyOutlined","showBeforeUnloadPopup","setShowBeforeUnloadPopup","handler","event","preventDefault","returnValue","addEventListener","removeEventListener","promise","stdOnEnd","script","cb","onload","this","onerror","ieOnEnd","onreadystatechange","readyState","getEditorNamespace","editorURL","onNamespaceLoaded","Promise","resolve","CKEDITOR","length","reject","TypeError","scriptLoader","then","res","scriptResolve","scriptReject","opts","head","document","getElementsByTagName","createElement","charset","async","attrs","attr","setAttribute","setAttributes","String","appendChild","loadScript","err","__assign","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","pack","ar","l","Array","concat","events","namespaceEvents","defaultEvents","EVENT_PREFIX","eventNameToHandlerName","evtName","cap","substr","toUpperCase","CKEditorEventAction","_a","prefixEventName","registerEditorEventHandler","debug","editor","listenerData","priority","handlerId","Math","random","toString","replace","_handler","args","console","log","operation","on","removeListener","useEffect$1","React","useReducer","useRef$1","defConfig","dispatchEvent","_b","subscribeTo","editorUrl","element","initContent","_c","editorUrlRef","subscribeToRef","debugRef","dispatchEventRef","initContentRef","configRef","typeRef","_d","reducer","hookStatus","_e","dispatch","indexOf","namespaceLoaded","isInline","isReadOnly","readOnly","beforeLoad","setReadOnly","setData","noSnapshot","resetUndo","catch","destroy","state","action","PropTypes","initData","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","process","REACT_APP_CKEDITOR_URL","wordCountDefaults","showParagraphs","showWordCount","showCharCount","countSpacesAsChars","hardLimit","removeButtons","format_tags","removeDialogTabs","linkShowTargetTab","linkShowAdvancedTab","dialog_backgroundCoverColor","skin","delayIfDetached","showTopBar","editorId","isShowTopBar","editorTop","getElementById","onFocus","onBlur","isShowTopBarOnFocus","customConfig","maxLength","useCKEditorBase","editorplaceholder","wordcount","maxCharCount","getData","editorStatus","ckeditorError","touched","negative","active","mono600","canSetStyles","container","setStyles","styleName","removeStyle","editorContainer","$","querySelector","ckeResizeElement","visibility"],"sourceRoot":""}